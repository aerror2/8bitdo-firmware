; ---------------------------------------------------------------------------

mach_header_64  struc ; (sizeof=0x20, align=0x4, copyof_1)
magic           dd ?
cputype         dd ?
cpusubtype      dd ?
filetype        dd ?
ncmds           dd ?
sizeofcmds      dd ?
flags           dd ?
reserved        dd ?
mach_header_64  ends

; ---------------------------------------------------------------------------

__CFString      struc ; (sizeof=0x20, align=0x8, copyof_6)
                                        ; XREF: __cfstring:stru_10003A8B8/r
                                        ; __cfstring:cfstr_ProController/r ...
isa             dq ?                    ; offset
info            dq ?
data            dq ?                    ; offset
length          dq ?
__CFString      ends

; ---------------------------------------------------------------------------

segment_command_64 struc ; (sizeof=0x48, align=0x8, mappedto_7)
                                        ; XREF: HEADER:0000000100000020/r
                                        ; HEADER:0000000100000068/r ...
cmd             dd ?
cmdsize         dd ?
segname         db 16 dup(?)            ; string(C)
vmaddr          dq ?
vmsize          dq ?
fileoff         dq ?
filesize        dq ?
maxprot         dd ?
initprot        dd ?
nsects          dd ?
flags           dd ?
segment_command_64 ends

; ---------------------------------------------------------------------------

section_64      struc ; (sizeof=0x50, align=0x8, mappedto_10)
                                        ; XREF: HEADER:00000001000000B0/r
                                        ; HEADER:0000000100000100/r ...
sectname        db 16 dup(?)            ; string(C)
segname         db 16 dup(?)            ; string(C)
addr            dq ?
size            dq ?
offset          dd ?
align           dd ?
reloff          dd ?
nreloc          dd ?
flags           dd ?
reserved1       dd ?
reserved2       dd ?
reserved3       dd ?
section_64      ends

; ---------------------------------------------------------------------------

dyld_info_command struc ; (sizeof=0x30, align=0x4, copyof_11)
                                        ; XREF: HEADER:0000000100000AF0/r
cmd             dd ?
cmdsize         dd ?
rebase_off      dd ?
rebase_size     dd ?
bind_off        dd ?
bind_size       dd ?
weak_bind_off   dd ?
weak_bind_size  dd ?
lazy_bind_off   dd ?
lazy_bind_size  dd ?
export_off      dd ?
export_size     dd ?
dyld_info_command ends

; ---------------------------------------------------------------------------

symtab_command  struc ; (sizeof=0x18, align=0x4, copyof_12)
                                        ; XREF: HEADER:0000000100000B20/r
cmd             dd ?
cmdsize         dd ?
symoff          dd ?
nsyms           dd ?
stroff          dd ?
strsize         dd ?
symtab_command  ends

; ---------------------------------------------------------------------------

dysymtab_command struc ; (sizeof=0x50, align=0x4, copyof_13)
                                        ; XREF: HEADER:0000000100000B38/r
cmd             dd ?
cmdsize         dd ?
ilocalsym       dd ?
nlocalsym       dd ?
iextdefsym      dd ?
nextdefsym      dd ?
iundefsym       dd ?
nundefsym       dd ?
tocoff          dd ?
ntoc            dd ?
modtaboff       dd ?
nmodtab         dd ?
extrefsymoff    dd ?
nextrefsyms     dd ?
indirectsymoff  dd ?
nindirectsyms   dd ?
extreloff       dd ?
nextrel         dd ?
locreloff       dd ?
nlocrel         dd ?
dysymtab_command ends

; ---------------------------------------------------------------------------

dylinker_command struc ; (sizeof=0xC, align=0x4, copyof_14)
                                        ; XREF: HEADER:0000000100000B88/r
cmd             dd ?
cmdsize         dd ?
name            lc_str ?
dylinker_command ends

; ---------------------------------------------------------------------------

lc_str          union ; (sizeof=0x4, align=0x4, copyof_15)
                                        ; XREF: dylinker_command/r
                                        ; dylib/r ...
offset          dd ?
lc_str          ends

; ---------------------------------------------------------------------------

uuid_command    struc ; (sizeof=0x18, align=0x4, copyof_16)
                                        ; XREF: HEADER:0000000100000BA8/r
cmd             dd ?
cmdsize         dd ?
uuid            db 16 dup(?)
uuid_command    ends

; ---------------------------------------------------------------------------

version_min_command struc ; (sizeof=0x10, align=0x4, copyof_18)
                                        ; XREF: HEADER:0000000100000BC0/r
cmd             dd ?
cmdsize         dd ?
version         dd ?
reserved        dd ?
version_min_command ends

; ---------------------------------------------------------------------------

linkedit_data_command struc ; (sizeof=0x10, align=0x4, copyof_20)
                                        ; XREF: HEADER:0000000100000BD0/r
                                        ; HEADER:0000000100000BE0/r ...
cmd             dd ?
cmdsize         dd ?
dataoff         dd ?
datasize        dd ?
linkedit_data_command ends

; ---------------------------------------------------------------------------

dylib_command   struc ; (sizeof=0x18, align=0x4, copyof_22)
                                        ; XREF: HEADER:0000000100000BF8/r
                                        ; HEADER:0000000100000C40/r ...
cmd             dd ?
cmdsize         dd ?
dylib           dylib ?
dylib_command   ends

; ---------------------------------------------------------------------------

dylib           struc ; (sizeof=0x10, align=0x4, copyof_23)
                                        ; XREF: dylib_command/r
name            lc_str ?
timestamp       dd ?
current_version dd ?
compatibility_version dd ?
dylib           ends

; ---------------------------------------------------------------------------

rpath_command   struc ; (sizeof=0xC, align=0x4, copyof_24)
                                        ; XREF: HEADER:0000000100000EF0/r
                                        ; HEADER:0000000100000F20/r ...
cmd             dd ?
cmdsize         dd ?
path            lc_str ?
rpath_command   ends

; ---------------------------------------------------------------------------

source_version_command struc ; (sizeof=0x10, align=0x8, copyof_19)
                                        ; XREF: HEADER:0000000100000F80/r
cmd             dd ?
cmdsize         dd ?
version         dq ?
source_version_command ends

; ---------------------------------------------------------------------------

__objc2_prop    struc ; (sizeof=0x10, align=0x8, copyof_36)
                                        ; XREF: __objc_const:000000010003D7B0/r
                                        ; __objc_const:000000010003D7C0/r ...
name            dq ?                    ; offset
attr            dq ?                    ; offset
__objc2_prop    ends

; ---------------------------------------------------------------------------

__objc2_prop_list struc ; (sizeof=0x8, align=0x4, copyof_37)
                                        ; XREF: __objc_const:S8BitdoDevice_$properties/r
                                        ; __objc_const:NSObject_$properties/r ...
entrysize       dd ?
count           dd ?
__objc2_prop_list ends

; ---------------------------------------------------------------------------

__objc2_meth    struc ; (sizeof=0x18, align=0x8, copyof_38)
                                        ; XREF: __objc_const:000000010003D398/r
                                        ; __objc_const:000000010003D400/r ...
name            dq ?                    ; offset
types           dq ?                    ; offset
imp             dq ?                    ; offset
__objc2_meth    ends

; ---------------------------------------------------------------------------

__objc2_meth_list struc ; (sizeof=0x8, align=0x4, copyof_39)
                                        ; XREF: __objc_const:_OBJC_CLASS_METHODS_S8BitdoDevice/r
                                        ; __objc_const:_OBJC_INSTANCE_METHODS_S8BitdoDevice/r ...
entrysize       dd ?
count           dd ?
__objc2_meth_list ends

; ---------------------------------------------------------------------------

__objc2_ivar    struc ; (sizeof=0x20, align=0x8, copyof_40)
                                        ; XREF: __objc_const:000000010003D648/r
                                        ; __objc_const:000000010003D668/r ...
offs            dq ?                    ; offset
name            dq ?                    ; offset
type            dq ?                    ; offset
align           dd ?
size            dd ?
__objc2_ivar    ends

; ---------------------------------------------------------------------------

__objc2_ivar_list struc ; (sizeof=0x8, align=0x4, copyof_41)
                                        ; XREF: __objc_const:_OBJC_INSTANCE_VARIABLES_S8BitdoDevice/r
                                        ; __objc_const:_OBJC_INSTANCE_VARIABLES_ViewController/r ...
entrysize       dd ?
count           dd ?
__objc2_ivar_list ends

; ---------------------------------------------------------------------------

__objc2_prot_list struc ; (sizeof=0x8, align=0x8, copyof_42)
                                        ; XREF: __objc_const:DeviceDelegate_$prots/r
                                        ; __objc_const:HomeViewDelegate_$prots/r ...
count           dq ?
__objc2_prot_list ends

; ---------------------------------------------------------------------------

__objc2_prot    struc ; (sizeof=0x48, align=0x8, copyof_43)
                                        ; XREF: __data:_OBJC_PROTOCOL_$_NSObject/r
                                        ; __data:_OBJC_PROTOCOL_$_DeviceDelegate/r ...
isa             dq ?                    ; offset
name            dq ?                    ; offset
prots           dq ?                    ; offset
inst_meths      dq ?                    ; offset
class_meths     dq ?                    ; offset
opt_inst_meths  dq ?                    ; offset
opt_class_meths dq ?                    ; offset
inst_props      dq ?                    ; offset
cb              dd ?
flags           dd ?
__objc2_prot    ends

; ---------------------------------------------------------------------------

__objc2_class_ro struc ; (sizeof=0x48, align=0x8, copyof_44)
                                        ; XREF: __objc_const:S8BitdoDevice_$metaData/r
                                        ; __objc_const:S8BitdoDevice_$classData/r ...
flags           dd ?
ivar_base_start dd ?
ivar_base_size  dd ?
reserved        dd ?
ivar_lyt        dq ?                    ; offset
name            dq ?                    ; offset
base_meths      dq ?                    ; offset
base_prots      dq ?                    ; offset
ivars           dq ?                    ; offset
weak_ivar_lyt   dq ?                    ; offset
base_props      dq ?                    ; offset
__objc2_class_ro ends

; ---------------------------------------------------------------------------

__objc2_category struc ; (sizeof=0x30, align=0x8, copyof_46)
                                        ; XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValue/r
                                        ; __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValueDeprecated_v_2_5_16/r ...
name            dq ?                    ; offset
_class          dq ?                    ; offset
inst_meths      dq ?                    ; offset
class_meths     dq ?                    ; offset
prots           dq ?                    ; offset
props           dq ?                    ; offset
__objc2_category ends

; ---------------------------------------------------------------------------

__objc2_class   struc ; (sizeof=0x28, align=0x8, copyof_45)
                                        ; XREF: __objc_data:_OBJC_METACLASS_$_S8BitdoDevice/r
                                        ; __objc_data:_OBJC_CLASS_$_S8BitdoDevice/r ...
isa             dq ?                    ; offset
superclass      dq ?                    ; offset
cache           dq ?                    ; offset
vtable          dq ?                    ; offset
info            dq ?                    ; offset
__objc2_class   ends

; ---------------------------------------------------------------------------

__objc2_class_rw struc ; (sizeof=0x40, align=0x8, copyof_47)
flags           dd ?
version         dd ?
ro              dq ?                    ; offset
methods         dq ?                    ; offset
properties      dq ?                    ; offset
protocols       dq ?                    ; offset
firstSubclass   dq ?                    ; offset
nextSiblingClass dq ?                   ; offset
demangledName   dq ?                    ; offset
__objc2_class_rw ends

; ---------------------------------------------------------------------------

CGRect          struc ; (sizeof=0x20, align=0x8, copyof_80)
                                        ; XREF: -[ViewController initView]/r
                                        ; -[SView drawRect:]/r ...
var0            CGPoint ?               ; XREF: -[SView drawRect:]+21/r
                                        ; -[SBackButton initWithFrame:]+28/r ...
var1            CGSize ?                ; XREF: -[SView drawRect:]+25/r
                                        ; -[SBackButton initWithFrame:]+2C/r ...
CGRect          ends

; ---------------------------------------------------------------------------

CGPoint         struc ; (sizeof=0x10, align=0x8, copyof_78)
                                        ; XREF: CGRect/r
var0            dq ?                    ; XREF: -[SView drawRect:]+21/r
                                        ; -[SBackButton initWithFrame:]+28/r ...
var1            dq ?
CGPoint         ends

; ---------------------------------------------------------------------------

CGSize          struc ; (sizeof=0x10, align=0x8, copyof_79)
                                        ; XREF: CGRect/r
var0            dq ?                    ; XREF: -[SView drawRect:]+25/r
                                        ; -[SBackButton initWithFrame:]+2C/r ...
var1            dq ?
CGSize          ends


;
; +-------------------------------------------------------------------------+
; |   This file has been generated by The Interactive Disassembler (IDA)    |
; |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
; |                      License info: 48-3FBD-7F04-2C                      |
; |                      Jiang Ying, Personal license                       |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : 4C7366AD6474C30DD5BECED7C423E4C27940209D72271947D37E62167DA8A7F7
; Input MD5    : 38F18FE7162574DFB9E26FF0D318A658
; Input CRC32  : B1C86BC1


                include uni.inc ; see unicode subdir of ida for info on unicode

                .686p
                .mmx
                .model flat
.intel_syntax noprefix

; ===========================================================================

; [00000FE0 BYTES: COLLAPSED SEGMENT HEADER. PRESS CTRL-NUMPAD+ TO EXPAND]
; ===========================================================================

; Segment type: Pure code
__text          segment para public 'CODE' use64
                assume cs:__text
                ;org 100000FE0h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[S8BitdoDevice getNameWithPid:](S8BitdoDevice_meta *self, SEL, int)
__S8BitdoDevice_getNameWithPid__ proc near
                                        ; CODE XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+99↓P
                                        ; -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+115↓P
                                        ; DATA XREF: ...

var_100         = xmmword ptr -100h
var_F0          = xmmword ptr -0F0h
anonymous_0     = xmmword ptr -0E0h
anonymous_1     = xmmword ptr -0D0h
var_BC          = dword ptr -0BCh
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0D8h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     [rbp+var_BC], edx
                test    edx, edx
                jz      loc_100001152
                mov     rdi, cs:classRef_S8BitdoDeviceDetailsTools ; void *
                mov     rsi, cs:selRef_get8BitdoDevicePIDVIDAndNAMEs ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; +[S8BitdoDeviceDetailsTools get8BitdoDevicePIDVIDAndNAMEs]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     r15, [rbp+var_100]
                movaps  xmmword ptr [r15], xmm0
                movaps  xmmword ptr [r15+10h], xmm0
                movaps  xmmword ptr [r15+20h], xmm0
                movaps  xmmword ptr [r15+30h], xmm0
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                lea     r15, stru_10003A8B8
                test    rax, rax
                jz      loc_100001138
                mov     r13, rax
                lea     rax, [rbp+var_100]
                mov     rax, [rax+10h]
                mov     r14, [rax]

loc_100001099:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+132↓j
                mov     r12, cs:selRef_pid
                xor     ebx, ebx

loc_1000010A2:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+102↓j
                mov     rax, qword ptr [rbp+var_F0]
                cmp     [rax], r14
                jz      short loc_1000010BA
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_1000010BA:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+CC↑j
                mov     rax, qword ptr [rbp+var_100+8]
                mov     r15, [rax+rbx*8]
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, [rbp+var_BC]
                jz      short loc_10000111D
                inc     rbx
                cmp     r13, rbx
                jnz     short loc_1000010A2
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_100]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                test    rax, rax
                jnz     short loc_100001099
                lea     r15, stru_10003A8B8
                jmp     short loc_100001138
; ---------------------------------------------------------------------------

loc_10000111D:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+FA↑j
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax

loc_100001138:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+A2↑j
                                        ; +[S8BitdoDevice getNameWithPid:]+13B↑j
                mov     rbx, cs:_objc_release_ptr
                mov     r14, [rbp+var_B8]
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                jmp     short loc_100001159
; ---------------------------------------------------------------------------

loc_100001152:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+2A↑j
                lea     r15, stru_10003A8B8

loc_100001159:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+170↑j
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100001182
                mov     rdi, r15
                add     rsp, 0D8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100001182:                          ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+187↑j
                call    ___stack_chk_fail
__S8BitdoDevice_getNameWithPid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; S8BitdoDataDetails *__cdecl -[S8BitdoDevice details](S8BitdoDevice *self, SEL)
__S8BitdoDevice_details_ proc near      ; CODE XREF: -[S8BitdoDevice setVersion:]+2F↓P
                                        ; -[S8BitdoDevice setVersion:]+90↓P ...

var_130         = xmmword ptr -130h
var_120         = xmmword ptr -120h
anonymous_0     = xmmword ptr -110h
anonymous_1     = xmmword ptr -100h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 108h
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                lea     r13, [rdi+30h]
                mov     rdi, [rdi+30h]
                test    rdi, rdi
                jnz     loc_1000014BC
                mov     [rbp+var_B8], rbx
                mov     [rbp+var_D0], r13
                mov     rdi, cs:classRef_S8BitdoDeviceDetailsTools ; void *
                mov     rsi, cs:selRef_get8BitdoDevicePIDVIDAndNAMEs ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; +[S8BitdoDeviceDetailsTools get8BitdoDevicePIDVIDAndNAMEs]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_130]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     [rbp+var_D8], rax
                test    rax, rax
                jz      loc_100001354
                lea     rax, [rbp+var_130]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_E8], rax

loc_100001256:                          ; CODE XREF: -[S8BitdoDevice details]+1B4↓j
                mov     rax, cs:selRef_pid
                mov     [rbp+var_C8], rax
                mov     rax, cs:selRef_vid
                mov     [rbp+var_E0], rax
                xor     r13d, r13d

loc_100001275:                          ; CODE XREF: -[S8BitdoDevice details]+17C↓j
                mov     rax, qword ptr [rbp+var_120]
                mov     rcx, [rbp+var_E8]
                cmp     [rax], rcx
                jz      short loc_100001294
                mov     rdi, [rbp+var_C0]
                call    _objc_enumerationMutation

loc_100001294:                          ; CODE XREF: -[S8BitdoDevice details]+FF↑j
                mov     rax, qword ptr [rbp+var_130+8]
                mov     r15, [rax+r13*8]
                mov     rdi, r15        ; void *
                mov     rbx, [rbp+var_C8]
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     r14d, eax
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                cmp     r14w, ax
                jnz     short loc_1000012F9
                mov     rdi, r15        ; void *
                mov     rbx, [rbp+var_E0]
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     r14d, eax
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                cmp     r14w, ax
                jz      short loc_100001343

loc_1000012F9:                          ; CODE XREF: -[S8BitdoDevice details]+143↑j
                inc     r13
                cmp     [rbp+var_D8], r13
                jnz     loc_100001275
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_130]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     [rbp+var_D8], rax
                test    rax, rax
                jnz     loc_100001256
                jmp     short loc_100001362
; ---------------------------------------------------------------------------

loc_100001343:                          ; CODE XREF: -[S8BitdoDevice details]+170↑j
                mov     rdi, [rbp+var_D0]
                mov     rsi, r15
                call    _objc_storeStrong
                jmp     short loc_100001362
; ---------------------------------------------------------------------------

loc_100001354:                          ; CODE XREF: -[S8BitdoDevice details]+B4↑j
                mov     rax, cs:selRef_pid
                mov     [rbp+var_C8], rax

loc_100001362:                          ; CODE XREF: -[S8BitdoDevice details]+1BA↑j
                                        ; -[S8BitdoDevice details]+1CB↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     rbx, [rbp+var_B8]
                mov     rdi, rbx        ; void *
                mov     rsi, [rbp+var_C8] ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 2009h
                mov     r13, [rbp+var_D0]
                jnz     short loc_100001414
                mov     rsi, cs:selRef_vid ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 57Eh
                jnz     short loc_100001414
                mov     rdi, cs:classRef_S8BitdoDataDetails
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rbx, [r13+0]
                mov     [r13+0], rax
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rbx, [rbp+var_B8]
                call    r15 ; _objc_release
                mov     rdi, [r13+0]    ; void *
                mov     rsi, cs:selRef_setName_ ; char *
                lea     rdx, cfstr_ProController ; "Pro Controller"
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release

loc_100001414:                          ; CODE XREF: -[S8BitdoDevice details]+20E↑j
                                        ; -[S8BitdoDevice details]+228↑j
                mov     rdi, rbx        ; void *
                mov     rsi, [rbp+var_C8] ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 5C4h
                jnz     short loc_1000014AB
                mov     rsi, cs:selRef_vid ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 54Ch
                jnz     short loc_1000014AB
                mov     rdi, cs:classRef_S8BitdoDataDetails
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rbx, [r13+0]
                mov     [r13+0], rax
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rbx, [rbp+var_B8]
                call    r15 ; _objc_release
                mov     rdi, [r13+0]    ; void *
                mov     rsi, cs:selRef_setName_ ; char *
                lea     rdx, cfstr_WirelessContro ; "Wireless Controller"
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release

loc_1000014AB:                          ; CODE XREF: -[S8BitdoDevice details]+2A5↑j
                                        ; -[S8BitdoDevice details]+2BF↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     rdi, [r13+0]    ; void *

loc_1000014BC:                          ; CODE XREF: -[S8BitdoDevice details]+30↑j
                mov     r15, cs:selRef_type
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[S8BitdoDataDetails type]
                cmp     eax, 2Bh
                jz      short loc_10000152B
                mov     rdi, [r13+0]    ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 29h
                jz      short loc_10000152B
                mov     rdi, [r13+0]    ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 30h
                jz      short loc_10000152B
                mov     rdi, [r13+0]    ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 33h
                jz      short loc_10000152B
                mov     rdi, [r13+0]    ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 39h
                jz      short loc_10000152B
                mov     rdi, [r13+0]    ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 22h
                jnz     short loc_100001540

loc_10000152B:                          ; CODE XREF: -[S8BitdoDevice details]+348↑j
                                        ; -[S8BitdoDevice details]+35A↑j ...
                mov     rsi, cs:selRef_setIsCarryRR_ ; char *
                mov     rdi, rbx        ; void *
                mov     edx, 1
                call    cs:_objc_msgSend_ptr

loc_100001540:                          ; CODE XREF: -[S8BitdoDevice details]+3A2↑j
                mov     rdi, [r13+0]
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_10000156A
                add     rsp, 108h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10000156A:                          ; CODE XREF: -[S8BitdoDevice details]+3CB↑j
                call    ___stack_chk_fail
__S8BitdoDevice_details_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setVersion:](S8BitdoDevice *self, SEL, float)
__S8BitdoDevice_setVersion__ proc near  ; DATA XREF: __objc_const:000000010003D418↓o

var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 78h
                movss   dword ptr [rbp+var_30], xmm0
                mov     rbx, rdi
                movss   dword ptr [rdi+18h], xmm0
                mov     r14, cs:selRef_details
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r15, cs:selRef_type
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     r12d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                xorps   xmm0, xmm0
                movss   xmm1, dword ptr [rbp+var_30]
                ucomiss xmm1, xmm0
                jnz     short loc_1000015D7
                jnp     short loc_1000015F2

loc_1000015D7:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+64↑j
                cmp     r12d, 15h
                jnz     short loc_1000015F2
                mov     rsi, cs:selRef_setIsChangeBoot_ ; char *
                mov     rdi, rbx        ; void *
                mov     edx, 1
                call    cs:_objc_msgSend_ptr ; -[S8BitdoDevice setIsChangeBoot:]

loc_1000015F2:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+66↑j
                                        ; -[S8BitdoDevice setVersion:]+6C↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                cmp     eax, 4
                jz      loc_100001853
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r15        ; char *
                mov     r15, rax
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                cmp     eax, 8
                jz      loc_100001843
                mov     [rbp+var_30], r12
                mov     [rbp+var_70], r15
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     r15, cs:selRef_type
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                cmp     eax, 9
                jz      loc_100001832
                mov     [rbp+var_68], r12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                cmp     eax, 0Ch
                jz      loc_100001825
                mov     [rbp+var_60], r12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                cmp     eax, 0Dh
                jz      loc_100001818
                mov     [rbp+var_58], r12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                cmp     eax, 0Eh
                jz      loc_10000180B
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r13
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, r15
                call    rcx
                cmp     eax, 0Fh
                jz      loc_100001802
                mov     [rbp+var_50], r13
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r13
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, r15
                call    rcx
                cmp     eax, 10h
                jz      short loc_1000017F5
                mov     [rbp+var_48], r13
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r13
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, r15
                call    rcx
                cmp     eax, 11h
                jz      short loc_1000017E8
                mov     [rbp+var_40], r13
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r13
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, r15
                call    rcx
                cmp     eax, 12h
                jnz     loc_1000019D9
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, [rbp+var_40]

loc_1000017E8:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+237↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, [rbp+var_48]

loc_1000017F5:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+208↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, [rbp+var_50]

loc_100001802:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+1D5↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr

loc_10000180B:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+1A6↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     r12, [rbp+var_58]

loc_100001818:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+175↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     r12, [rbp+var_60]

loc_100001825:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+144↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     r12, [rbp+var_68]

loc_100001832:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+113↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     r15, [rbp+var_70]
                mov     r12, [rbp+var_30]

loc_100001843:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+D7↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     r15, cs:selRef_type

loc_100001853:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+AA↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_10000185C:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+637↓j
                mov     rsi, cs:selRef_setIsChangeBoot_ ; char *
                mov     rdi, rbx        ; void *
                mov     edx, 1
                mov     rax, cs:_objc_msgSend_ptr
                mov     r12, r14
                mov     r14, r15
                mov     r15, rax
                call    rax ; _objc_msgSend ; -[S8BitdoDevice setIsChangeBoot:]
                mov     rdi, rbx
                mov     rsi, r12
                call    r15             ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     r12, r14
                mov     rsi, r14
                call    r15
                cmp     eax, 9
                jnz     short loc_1000018D7
                movss   xmm0, dword ptr [rbx+18h]
                movss   dword ptr [rbp+var_30], xmm0
                mov     rdi, r13
                call    cs:_objc_release_ptr
                movss   xmm0, cs:dword_10002EFD0
                ucomiss xmm0, dword ptr [rbp+var_30]
                jbe     short loc_1000018E0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_setIsChangeBoot_ ; char *
                xor     edx, edx
                call    cs:_objc_msgSend_ptr ; -[S8BitdoDevice setIsChangeBoot:]
                jmp     short loc_1000018E0
; ---------------------------------------------------------------------------

loc_1000018D7:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+331↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr

loc_1000018E0:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+352↑j
                                        ; -[S8BitdoDevice setVersion:]+366↑j
                mov     rdi, rbx        ; void *
                mov     r14, cs:selRef_details
                mov     rsi, r14        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend
                cmp     eax, 8
                jnz     short loc_100001945
                movss   xmm0, dword ptr [rbx+18h]
                movss   dword ptr [rbp+var_30], xmm0
                mov     rdi, r13
                call    cs:_objc_release_ptr
                movss   xmm0, cs:dword_10002EFD4
                ucomiss xmm0, dword ptr [rbp+var_30]
                jbe     short loc_10000194E
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_setIsChangeBoot_ ; char *
                xor     edx, edx
                call    cs:_objc_msgSend_ptr ; -[S8BitdoDevice setIsChangeBoot:]
                jmp     short loc_10000194E
; ---------------------------------------------------------------------------

loc_100001945:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+39F↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr

loc_10000194E:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+3C0↑j
                                        ; -[S8BitdoDevice setVersion:]+3D4↑j ...
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, rax        ; void *
                mov     r12, r15
                call    r15 ; _objc_msgSend
                movzx   r15d, ax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                cmp     r15d, 9029h
                jnz     short loc_1000019CA
                mov     rsi, cs:selRef_version
                mov     rdi, rbx
                call    r12
                cvtss2sd xmm0, xmm0
                xor     edx, edx
                ucomisd xmm0, cs:qword_10002EFD8
                setnbe  dl
                mov     rsi, cs:selRef_setIsChangeBoot_
                mov     rdi, rbx
                mov     rax, r12
                add     rsp, 78h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_1000019CA:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+41E↑j
                add     rsp, 78h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000019D9:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+266↑j
                mov     [rbp+var_A0], r13
                mov     [rbp+var_98], r12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_90], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     cl, 1
                cmp     eax, 14h
                mov     r13, [rbp+var_30]
                jz      loc_100001B43
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     r13b, 1
                cmp     eax, 16h
                jz      loc_100001B32
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     r13b, 1
                cmp     eax, 17h
                jz      loc_100001B29
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_88], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     r13b, 1
                cmp     eax, 18h
                jz      short loc_100001B1C
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_80], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     r13b, 1
                cmp     eax, 19h
                jz      short loc_100001B12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_78], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                cmp     eax, 1Ah
                setnl   r13b
                mov     rdi, [rbp+var_78]
                call    cs:_objc_release_ptr

loc_100001B12:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+56B↑j
                mov     rdi, [rbp+var_80]
                call    cs:_objc_release_ptr

loc_100001B1C:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+53E↑j
                mov     rdi, [rbp+var_88]
                call    cs:_objc_release_ptr

loc_100001B29:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+50A↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_100001B32:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+4DA↑j
                mov     rdi, [rbp+var_38]
                call    cs:_objc_release_ptr
                mov     ecx, r13d
                mov     r13, [rbp+var_30]

loc_100001B43:                          ; CODE XREF: -[S8BitdoDevice setVersion:]+4A9↑j
                mov     byte ptr [rbp+var_38], cl
                mov     r12, cs:_objc_release_ptr
                mov     rdi, [rbp+var_90]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_A0]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_98]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_58]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_60]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_68]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_70]
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                cmp     byte ptr [rbp+var_38], 0
                jnz     loc_10000185C
                jmp     loc_10000194E
__S8BitdoDevice_setVersion__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[S8BitdoDevice description](S8BitdoDevice *self, SEL)
__S8BitdoDevice_description_ proc near  ; DATA XREF: __objc_const:000000010003D430↓o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r15, rdi
                mov     rax, cs:classRef_NSString
                mov     [rbp+var_40], rax
                mov     rsi, cs:selRef_deviceName ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice deviceName]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice pid]
                movzx   eax, ax
                mov     [rbp+var_30], eax
                mov     rsi, cs:selRef_vid ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice vid]
                movzx   eax, ax
                mov     [rbp+var_2C], eax
                mov     rsi, cs:selRef_version ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice version]
                cvtss2sd xmm0, xmm0
                movsd   [rbp+var_38], xmm0
                mov     rsi, cs:selRef_beta ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice beta]
                movzx   r13d, ax
                mov     rsi, cs:selRef_deviceRef ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice deviceRef]
                mov     r14, rax
                mov     rsi, cs:selRef_isChangeBoot ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDevice isChangeBoot]
                movsx   r10d, al
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                sub     rsp, 8
                lea     rdx, cfstr_DevicePid0xXVi ; "device:%@ PID:0x%x VID:0x%x Version:%lf Beta:%hu Ref:%d ChangeBoot:%hhd"
                mov     rdi, [rbp+var_40] ; void *
                mov     rcx, rbx
                mov     r8d, [rbp+var_30]
                mov     r9d, [rbp+var_2C]
                movsd   xmm0, [rbp+var_38]
                mov     al, 1
                push    r10
                push    r14
                push    r13
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                add     rsp, 20h
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__S8BitdoDevice_description_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDevice pid](S8BitdoDevice *self, SEL)
__S8BitdoDevice_pid_ proc near          ; CODE XREF: -[S8BitdoDevice description]+45↑P
                                        ; DATA XREF: __objc_const:000000010003D448↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+0Ah]
                pop     rbp
                retn
__S8BitdoDevice_pid_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setPid:](S8BitdoDevice *self, SEL, unsigned __int16)
__S8BitdoDevice_setPid__ proc near      ; DATA XREF: __objc_const:000000010003D460↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+0Ah], dx
                pop     rbp
                retn
__S8BitdoDevice_setPid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDevice vid](S8BitdoDevice *self, SEL)
__S8BitdoDevice_vid_ proc near          ; CODE XREF: -[S8BitdoDevice description]+58↑P
                                        ; DATA XREF: __objc_const:000000010003D478↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+0Ch]
                pop     rbp
                retn
__S8BitdoDevice_vid_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setVid:](S8BitdoDevice *self, SEL, unsigned __int16)
__S8BitdoDevice_setVid__ proc near      ; DATA XREF: __objc_const:000000010003D490↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+0Ch], dx
                pop     rbp
                retn
__S8BitdoDevice_setVid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; float __cdecl -[S8BitdoDevice version](S8BitdoDevice *self, SEL)
__S8BitdoDevice_version_ proc near      ; CODE XREF: -[S8BitdoDevice description]+6B↑P
                                        ; DATA XREF: __objc_const:000000010003D4A8↓o
                push    rbp
                mov     rbp, rsp
                movss   xmm0, dword ptr [rdi+18h]
                pop     rbp
                retn
__S8BitdoDevice_version_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDevice beta](S8BitdoDevice *self, SEL)
__S8BitdoDevice_beta_ proc near         ; CODE XREF: -[S8BitdoDevice description]+81↑P
                                        ; DATA XREF: __objc_const:000000010003D4C0↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+0Eh]
                pop     rbp
                retn
__S8BitdoDevice_beta_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setBeta:](S8BitdoDevice *self, SEL, unsigned __int16)
__S8BitdoDevice_setBeta__ proc near     ; DATA XREF: __objc_const:000000010003D4D8↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+0Eh], dx
                pop     rbp
                retn
__S8BitdoDevice_setBeta__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[S8BitdoDevice deviceName](S8BitdoDevice *self, SEL)
__S8BitdoDevice_deviceName_ proc near   ; CODE XREF: -[S8BitdoDevice description]+2D↑P
                                        ; DATA XREF: __objc_const:000000010003D4F0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+20h]
                pop     rbp
                retn
__S8BitdoDevice_deviceName_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setDeviceName:](S8BitdoDevice *self, SEL, id)
__S8BitdoDevice_setDeviceName__ proc near
                                        ; DATA XREF: __objc_const:000000010003D508↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 20h
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__S8BitdoDevice_setDeviceName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __IOHIDDevice *__cdecl -[S8BitdoDevice deviceRef](S8BitdoDevice *self, SEL)
__S8BitdoDevice_deviceRef_ proc near    ; CODE XREF: -[S8BitdoDevice description]+92↑P
                                        ; DATA XREF: __objc_const:000000010003D520↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+28h]
                pop     rbp
                retn
__S8BitdoDevice_deviceRef_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setDeviceRef:](S8BitdoDevice *self, SEL, __IOHIDDevice *)
__S8BitdoDevice_setDeviceRef__ proc near
                                        ; DATA XREF: __objc_const:000000010003D538↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+28h], rdx
                pop     rbp
                retn
__S8BitdoDevice_setDeviceRef__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDevice bootVersion](S8BitdoDevice *self, SEL)
__S8BitdoDevice_bootVersion_ proc near  ; DATA XREF: __objc_const:000000010003D550↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+10h]
                pop     rbp
                retn
__S8BitdoDevice_bootVersion_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setBootVersion:](S8BitdoDevice *self, SEL, unsigned __int16)
__S8BitdoDevice_setBootVersion__ proc near
                                        ; DATA XREF: __objc_const:000000010003D568↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+10h], dx
                pop     rbp
                retn
__S8BitdoDevice_setBootVersion__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDevice isCarryRR](S8BitdoDevice *self, SEL)
__S8BitdoDevice_isCarryRR_ proc near    ; DATA XREF: __objc_const:000000010003D580↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+12h]
                pop     rbp
                retn
__S8BitdoDevice_isCarryRR_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setIsCarryRR:](S8BitdoDevice *self, SEL, unsigned __int16)
__S8BitdoDevice_setIsCarryRR__ proc near
                                        ; DATA XREF: __objc_const:000000010003D598↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+12h], dx
                pop     rbp
                retn
__S8BitdoDevice_setIsCarryRR__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDevice isManuanlViewRR](S8BitdoDevice *self, SEL)
__S8BitdoDevice_isManuanlViewRR_ proc near
                                        ; DATA XREF: __objc_const:000000010003D5B0↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+14h]
                pop     rbp
                retn
__S8BitdoDevice_isManuanlViewRR_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setIsManuanlViewRR:](S8BitdoDevice *self, SEL, unsigned __int16)
__S8BitdoDevice_setIsManuanlViewRR__ proc near
                                        ; DATA XREF: __objc_const:000000010003D5C8↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+14h], dx
                pop     rbp
                retn
__S8BitdoDevice_setIsManuanlViewRR__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setDetails:](S8BitdoDevice *self, SEL, id)
__S8BitdoDevice_setDetails__ proc near  ; DATA XREF: __objc_const:000000010003D5E0↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 30h
                pop     rbp
                jmp     _objc_setProperty_atomic
__S8BitdoDevice_setDetails__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[S8BitdoDevice isChangeBoot](S8BitdoDevice *self, SEL)
__S8BitdoDevice_isChangeBoot_ proc near ; CODE XREF: -[S8BitdoDevice description]+A2↑P
                                        ; DATA XREF: __objc_const:000000010003D5F8↓o
                push    rbp
                mov     rbp, rsp
                movsx   eax, byte ptr [rdi+8]
                pop     rbp
                retn
__S8BitdoDevice_isChangeBoot_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice setIsChangeBoot:](S8BitdoDevice *self, SEL, char)
__S8BitdoDevice_setIsChangeBoot__ proc near
                                        ; CODE XREF: -[S8BitdoDevice setVersion:]+7D↑P
                                        ; -[S8BitdoDevice setVersion:]+30C↑P ...
                push    rbp
                mov     rbp, rsp
                mov     [rdi+8], dl
                pop     rbp
                retn
__S8BitdoDevice_setIsChangeBoot__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDevice .cxx_destruct](S8BitdoDevice *self, SEL)
__S8BitdoDevice__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:000000010003D628↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 30h
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 20h
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__S8BitdoDevice__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHttp getUpdateFirmwaerWithType:success:failure:](SHttp_meta *self, SEL, int, id, id)
__SHttp_getUpdateFirmwaerWithType_success_failure__ proc near
                                        ; CODE XREF: -[UpdateView loadUpdateFirmwae]+187↓P
                                        ; -[UpdateView loadUpdateFirmwae:]+14A↓P
                                        ; DATA XREF: ...

anonymous_1     = ymmword ptr -80h
anonymous_3     = qword ptr -60h
anonymous_0     = xmmword ptr -58h
var_48          = qword ptr -48h
var_3C          = dword ptr -3Ch
var_38          = xmmword ptr -38h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 58h
                mov     rbx, r8
                mov     [rbp+var_3C], edx
                mov     r14, cs:_objc_retain_ptr
                mov     rdi, rcx
                call    r14 ; _objc_retain
                mov     qword ptr [rbp+var_38], rax
                mov     rdi, rbx
                call    r14 ; _objc_retain
                mov     qword ptr [rbp+var_38+8], rax
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; +[Language isCurrentChinaLanguage]
                mov     r13, rbx
                test    al, al
                lea     rax, cfstr_HttpDl8bitdoCo ; "http://dl.8bitdo.com:8080/"
                lea     r14, cfstr_HttpDl8bitdoCn ; "http://dl.8bitdo.cn:8080/"
                cmovz   r14, rax
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_boolForKey_
                lea     rdx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, rax
                call    r13
                mov     r15d, eax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r12 ; _objc_release
                test    r15b, r15b
                lea     rcx, cfstr_HttpBeta8bitdo ; "http://beta.8bitdo.com:8080/"
                cmovz   rcx, r14
                mov     rbx, cs:classRef_NSURL
                mov     rdi, cs:classRef_NSString
                mov     rsi, cs:selRef_stringWithFormat_
                lea     rdx, cfstr_FirmwareSelect ; "%@firmware/select"
                xor     eax, eax
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_URLWithString_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_48], rax
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     r14, r12
                mov     rdi, cs:classRef_NSMutableURLRequest
                mov     rsi, cs:selRef_requestWithURL_
                mov     rdx, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setHTTPMethod_
                lea     rdx, cfstr_Post ; "POST"
                mov     rdi, rax
                call    r13
                mov     rdi, cs:classRef_NSString
                lea     rdx, cfstr_D    ; "%d"
                mov     rsi, cs:selRef_stringWithFormat_
                mov     ecx, [rbp+var_3C]
                xor     eax, eax
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r15, cs:selRef_setValue_forHTTPHeaderField_
                lea     rcx, cfstr_Type ; "type"
                mov     rdi, r12
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, rbx
                call    r14
                lea     rdx, cfstr_1    ; "1"
                lea     rcx, cfstr_Beta ; "beta"
                mov     rdi, r12
                mov     rsi, r15
                call    r13
                mov     rdi, cs:classRef_NSURLSession
                mov     rsi, cs:selRef_sharedSession
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rbx, [rbp+anonymous_1+8]
                mov     [rbx], rax
                mov     eax, 0C2000000h
                mov     [rbx+8], rax
                lea     rax, sub_100002039
                mov     [rbx+10h], rax
                lea     rax, unk_10003A0C8
                mov     [rbx+18h], rax
                mov     r14, qword ptr [rbp+var_38]
                mov     [rbx+20h], r14
                mov     rdi, qword ptr [rbp+var_38+8]
                mov     [rbx+28h], rdi
                mov     r15, cs:_objc_retain_ptr
                call    r15 ; _objc_retain
                mov     qword ptr [rbp+var_38+8], rax
                mov     rdi, r14
                call    r15 ; _objc_retain
                mov     qword ptr [rbp+var_38], rax
                mov     r15, r13
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_dataTaskWithRequest_completionHandler_ ; char *
                mov     rdx, r12
                mov     rcx, rbx
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_resume ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]
                call    r14 ; _objc_release
                mov     rdi, qword ptr [rbp+var_38+8]
                call    r14 ; _objc_release
                mov     rdi, qword ptr [rbp+var_38]
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r14 ; _objc_release
                add     rsp, 58h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHttp_getUpdateFirmwaerWithType_success_failure__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002039   proc near               ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+1C6↑o

anonymous_5     = ymmword ptr -0A0h
anonymous_6     = qword ptr -80h
anonymous_8     = qword ptr -78h
anonymous_7     = qword ptr -70h
var_68          = qword ptr -68h
anonymous_0     = qword ptr -60h
anonymous_1     = qword ptr -58h
anonymous_2     = qword ptr -50h
anonymous_4     = qword ptr -48h
anonymous_3     = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 78h
                mov     r14, rcx
                mov     r15, rdx
                mov     r12, rdi
                mov     rbx, cs:_objc_retain_ptr
                mov     rdi, rsi
                call    rbx ; _objc_retain
                mov     r13, rax
                mov     rdi, r15
                call    rbx ; _objc_retain
                mov     [rbp+var_38], rax
                mov     rdi, r14
                call    rbx ; _objc_retain
                mov     r15, rax
                test    rax, rax
                jz      short loc_1000020EB
                cmp     qword ptr [r12+28h], 0
                jz      loc_100002243
                mov     [rbp+var_30], r13
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r14, [rbp+var_68]
                mov     [r14], rax
                mov     eax, 0C2000000h
                mov     [r14+8], rax
                lea     rax, sub_1000022D1
                mov     [r14+10h], rax
                lea     rax, unk_10003A098
                mov     [r14+18h], rax
                mov     rdi, [r12+28h]
                call    rbx ; _objc_retain
                mov     [r14+28h], rax
                mov     rdi, r15
                call    rbx ; _objc_retain
                mov     [r14+20h], rax
                mov     rdi, cs:__dispatch_main_q_ptr
                mov     rsi, r14
                call    _dispatch_async
                mov     rdi, [r14+20h]
                call    cs:_objc_release_ptr
                mov     r13, [r14+28h]
                jmp     loc_100002236
; ---------------------------------------------------------------------------

loc_1000020EB:                          ; CODE XREF: sub_100002039+3D↑j
                mov     rdi, cs:classRef_NSJSONSerialization ; void *
                mov     rsi, cs:selRef_JSONObjectWithData_options_error_ ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     ecx, 4
                mov     [rbp+var_30], r13
                mov     rdx, r13
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                lea     rdx, cfstr_Msgstate ; "msgState"
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_integerValue ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                cmp     rbx, 1
                jnz     loc_100002236
                mov     rbx, cs:classRef_Firmware
                lea     rdx, cfstr_List ; "list"
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r14
                mov     r14, rax
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_
                mov     rdi, rbx
                mov     rdx, rax
                call    rcx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                cmp     qword ptr [r12+20h], 0
                jz      short loc_10000222D
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r14, [rbp+anonymous_5+8]
                mov     [r14], rax
                mov     eax, 0C2000000h
                mov     [r14+8], rax
                lea     rax, sub_100002269
                mov     [r14+10h], rax
                lea     rax, unk_10003A098
                mov     [r14+18h], rax
                mov     rdi, [r12+20h]
                mov     rax, cs:_objc_retain_ptr
                mov     r12, rbx
                mov     rbx, rax
                call    rax ; _objc_retain
                mov     [r14+28h], rax
                mov     rdi, r12
                call    rbx
                mov     [r14+20h], rax
                mov     rdi, cs:__dispatch_main_q_ptr
                mov     rsi, r14
                call    _dispatch_async
                mov     rdi, [r14+20h]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [r14+28h]
                call    rbx ; _objc_release
                mov     rbx, r12

loc_10000222D:                          ; CODE XREF: sub_100002039+17C↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_100002236:                          ; CODE XREF: sub_100002039+AD↑j
                                        ; sub_100002039+11D↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, [rbp+var_30]

loc_100002243:                          ; CODE XREF: sub_100002039+45↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_38]
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                add     rsp, 78h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100002039   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002269   proc near               ; DATA XREF: sub_100002039+198↑o
                push    rbp
                mov     rbp, rsp
                mov     rsi, [rdi+20h]
                mov     rdi, [rdi+28h]
                mov     rax, [rdi+10h]
                pop     rbp
                jmp     rax
sub_100002269   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000227C   proc near               ; DATA XREF: __const:000000010003A0A8↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     r14, rdi
                mov     rdi, [rsi+20h]
                call    cs:_objc_retain_ptr
                add     r14, 28h
                mov     rsi, [rbx+28h]  ; void *
                mov     rdi, r14        ; void *
                mov     edx, 7          ; int
                pop     rbx
                pop     r14
                pop     rbp
                jmp     __Block_object_assign
sub_10000227C   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000022AC   proc near               ; DATA XREF: __const:000000010003A0B0↓o
                                        ; __const:000000010003A0E0↓o ...
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+28h]
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_1000022AC   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000022D1   proc near               ; DATA XREF: sub_100002039+66↑o
                push    rbp
                mov     rbp, rsp
                mov     rsi, [rdi+20h]
                mov     rdi, [rdi+28h]
                mov     rax, [rdi+10h]
                pop     rbp
                jmp     rax
sub_1000022D1   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000022E4   proc near               ; DATA XREF: __const:000000010003A0D8↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     r14, rdi
                add     rdi, 20h        ; void *
                mov     rsi, [rsi+20h]  ; void *
                mov     edx, 7          ; int
                call    __Block_object_assign
                add     r14, 28h
                mov     rsi, [rbx+28h]  ; void *
                mov     rdi, r14        ; void *
                mov     edx, 7          ; int
                pop     rbx
                pop     r14
                pop     rbp
                jmp     __Block_object_assign
sub_1000022E4   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:](SHttp_meta *self, SEL, id, id, id, int, int)
__SHttp_dowmFirmwaerFile_success_failure_downLoadID_maxSize__ proc near
                                        ; DATA XREF: __objc_const:000000010003D8C8↓o

var_C0          = ymmword ptr -0C0h
anonymous_5     = qword ptr -0A0h
anonymous_3     = qword ptr -98h
anonymous_8     = qword ptr -90h
anonymous_6     = qword ptr -88h
anonymous_4     = dword ptr -80h
anonymous_7     = dword ptr -7Ch
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = qword ptr -30h
arg_0           = dword ptr  10h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 98h
                mov     [rbp+var_3C], r9d
                mov     rbx, r8
                mov     r14, rdx
                mov     [rbp+var_60], rdi
                mov     r15, cs:_objc_retain_ptr
                mov     rdi, rcx
                call    r15 ; _objc_retain
                mov     [rbp+var_30], rax
                mov     rdi, rbx
                call    r15 ; _objc_retain
                mov     [rbp+var_50], rax
                mov     rsi, cs:selRef_lastPathComponent ; char *
                mov     rax, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     r14, rax
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSString
                mov     r12, cs:selRef_stringWithFormat_
                lea     rdx, stru_10003AAD8 ; "%@%@%@"
                lea     rcx, cfstr_HttpDl8bitdoCo ; "http://dl.8bitdo.com:8080/"
                lea     r8, cfstr_FirmwarefileUp ; "firmwareFile/upload/"
                mov     rsi, r12
                mov     r9, rax
                xor     eax, eax
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_Language
                mov     rsi, cs:selRef_isCurrentChinaLanguage
                call    r14             ; +[Language isCurrentChinaLanguage]
                test    al, al
                jz      short loc_100002409
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, stru_10003AAD8 ; "%@%@%@"
                lea     rcx, cfstr_HttpDl8bitdoCn ; "http://dl.8bitdo.cn:8080/"
                lea     r8, cfstr_FirmwarefileUp ; "firmwareFile/upload/"
                mov     rsi, r12        ; char *
                mov     r9, r13
                xor     eax, eax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     r15, rbx

loc_100002409:                          ; CODE XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+AA↑j
                mov     rdi, cs:classRef_NSUserDefaults
                mov     rsi, cs:selRef_standardUserDefaults
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_boolForKey_
                lea     rdx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, rax
                call    r14
                mov     r14d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                test    r14b, r14b
                jz      short loc_10000248E
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, stru_10003AAD8 ; "%@%@%@"
                lea     rcx, cfstr_HttpBeta8bitdo ; "http://beta.8bitdo.com:8080/"
                lea     r8, cfstr_FirmwarefileUp ; "firmwareFile/upload/"
                mov     rsi, r12        ; char *
                mov     r9, r13
                xor     eax, eax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     [rbp+var_38], rbx
                jmp     short loc_100002492
; ---------------------------------------------------------------------------

loc_10000248E:                          ; CODE XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+12C↑j
                mov     [rbp+var_38], r15

loc_100002492:                          ; CODE XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+170↑j
                mov     r15, r12
                mov     edi, 0Fh
                mov     esi, 1
                mov     edx, 1
                call    _NSSearchPathForDirectoriesInDomains
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_lastObject ; char *
                mov     rdi, rax        ; void *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, stru_10003AB18 ; "%@/%@"
                lea     r8, cfstr_8bitdoFirmware ; "8Bitdo FirmwareUpdater"
                mov     rsi, r15        ; char *
                mov     [rbp+var_70], r12
                mov     rcx, r12
                xor     eax, eax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSFileManager ; void *
                mov     rsi, cs:selRef_defaultManager ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_createDirectoryAtPath_withIntermediateDirectories_attributes_error_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                mov     ecx, 1
                xor     r8d, r8d
                xor     r9d, r9d
                call    r14 ; _objc_msgSend
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, r15        ; char *
                lea     rdx, stru_10003AB18 ; "%@/%@"
                mov     rcx, r12
                mov     [rbp+var_78], r13
                mov     r8, r13
                xor     eax, eax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_fileExistsAtPath_ ; char *
                mov     [rbp+var_68], rbx
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                test    al, al
                jz      short loc_10000259F
                cmp     [rbp+var_30], 0
                jz      loc_1000026D1
                mov     rdi, [rbp+var_30]
                mov     rsi, r13
                call    qword ptr [rdi+10h]
                jmp     loc_1000026D1
; ---------------------------------------------------------------------------

loc_10000259F:                          ; CODE XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+267↑j
                mov     r15, cs:classRef_NSMutableURLRequest
                mov     rdi, cs:classRef_NSURL ; void *
                mov     rsi, cs:selRef_URLWithString_ ; char *
                mov     rdx, [rbp+var_38]
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_58], r12
                mov     r12, rax
                mov     rsi, cs:selRef_requestWithURL_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSURLSession ; void *
                mov     rsi, cs:selRef_sharedSession ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r15, [rbp+var_C0]
                mov     [r15], rax
                mov     eax, 0C2000000h
                mov     [r15+8], rax
                lea     rax, sub_100002720
                mov     [r15+10h], rax
                lea     rax, unk_10003A0F8
                mov     [r15+18h], rax
                mov     rdi, [rbp+var_50]
                mov     r12, cs:_objc_retain_ptr
                call    r12 ; _objc_retain
                mov     [r15+28h], rax
                mov     eax, [rbp+arg_0]
                mov     [r15+40h], eax
                mov     rdi, r13
                call    r12 ; _objc_retain
                mov     [r15+20h], rax
                mov     rax, [rbp+var_60]
                mov     [r15+38h], rax
                mov     eax, [rbp+var_3C]
                mov     [r15+44h], eax
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_retain
                mov     [r15+30h], rax
                mov     rsi, cs:selRef_downloadTaskWithRequest_completionHandler_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, [rbp+var_48]
                mov     rcx, r15
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rsi, cs:selRef_resume ; char *
                mov     rdi, r12        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                mov     r12, [rbp+var_58]
                call    rbx ; _objc_release
                mov     rdi, [r15+30h]
                call    rbx ; _objc_release
                mov     rdi, [r15+20h]
                call    rbx ; _objc_release
                mov     rdi, [r15+28h]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_48]
                call    rbx ; _objc_release

loc_1000026D1:                          ; CODE XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+26E↑j
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+27E↑j
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_68]
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_70]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_78]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r15 ; _objc_release
                add     rsp, 98h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHttp_dowmFirmwaerFile_success_failure_downLoadID_maxSize__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002720   proc near               ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+309↑o

anonymous_0     = ymmword ptr -0E0h
anonymous_2     = qword ptr -0C0h
anonymous_4     = qword ptr -0B8h
anonymous_3     = qword ptr -0B0h
var_A8          = qword ptr -0A8h
anonymous_9     = qword ptr -0A0h
anonymous_10    = qword ptr -98h
anonymous_11    = qword ptr -90h
anonymous_13    = qword ptr -88h
anonymous_12    = qword ptr -80h
var_78          = qword ptr -78h
anonymous_1     = qword ptr -70h
anonymous_5     = qword ptr -68h
anonymous_6     = qword ptr -60h
anonymous_8     = qword ptr -58h
anonymous_7     = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0B8h
                mov     r15, rcx
                mov     r14, rdx
                mov     r12, rdi
                mov     rbx, cs:_objc_retain_ptr
                mov     rdi, rsi
                call    rbx ; _objc_retain
                mov     [rbp+var_30], rax
                mov     rdi, r14
                call    rbx ; _objc_retain
                mov     r14, rax
                mov     rdi, r15
                call    rbx ; _objc_retain
                mov     r15, rax
                test    rax, rax
                mov     [rbp+var_48], r14
                jnz     short loc_100002785
                mov     r13, cs:selRef_expectedContentLength
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, 7CFh
                jg      loc_100002819

loc_100002785:                          ; CODE XREF: sub_100002720+44↑j
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r13, [rbp+anonymous_0+8]
                mov     [r13+0], rax
                mov     eax, 0C2000000h
                mov     [r13+8], rax
                lea     rax, sub_1000029DB
                mov     [r13+10h], rax
                lea     rax, unk_10003A098
                mov     [r13+18h], rax
                mov     rdi, [r12+28h]
                call    rbx ; _objc_retain
                mov     [r13+28h], rax
                mov     rdi, r15
                call    rbx ; _objc_retain
                mov     [r13+20h], rax
                mov     rdi, cs:__dispatch_main_q_ptr
                mov     rsi, r13
                call    _dispatch_sync
                mov     rdi, [r13+20h]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [r13+28h]

loc_1000027EA:                          ; CODE XREF: sub_100002720+2B6↓j
                call    rbx ; _objc_release
                mov     r14, [rbp+var_30]

loc_1000027F0:                          ; CODE XREF: sub_100002720+216↓j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_48]
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                add     rsp, 0B8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100002819:                          ; CODE XREF: sub_100002720+5F↑j
                mov     rdi, r14        ; void *
                movsxd  r14, dword ptr [r12+40h]
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, r14
                jnz     loc_10000293B
                mov     rdi, cs:classRef_NSURL ; void *
                mov     rdx, [r12+20h]
                mov     rsi, cs:selRef_fileURLWithPath_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSFileManager ; void *
                mov     rsi, cs:selRef_defaultManager ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_moveItemAtURL_toURL_error_ ; char *
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     r14, [rbp+var_30]
                mov     rdx, r14
                mov     [rbp+var_40], r13
                mov     rcx, r13
                xor     r8d, r8d
                call    cs:_objc_msgSend_ptr
                mov     rdi, [r12+38h]  ; void *
                mov     ecx, [r12+44h]
                mov     rsi, cs:selRef_StatistcsFirmware_ID_ ; char *
                mov     edx, 1
                call    cs:_objc_msgSend_ptr
                cmp     qword ptr [r12+30h], 0
                jz      short loc_100002923
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r13, [rbp+var_78]
                mov     [r13+0], rax
                mov     eax, 0C2000000h
                mov     [r13+8], rax
                lea     rax, sub_100002A0B
                mov     [r13+10h], rax
                lea     rax, unk_10003A098
                mov     [r13+18h], rax
                mov     rdi, [r12+30h]
                call    rbx ; _objc_retain
                mov     [r13+28h], rax
                mov     rdi, [r12+20h]
                call    rbx ; _objc_retain
                mov     [r13+20h], rax
                mov     rdi, cs:__dispatch_main_q_ptr
                mov     rsi, r13
                call    _dispatch_async
                mov     rdi, [r13+20h]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [r13+28h]
                call    rbx ; _objc_release

loc_100002923:                          ; CODE XREF: sub_100002720+19B↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_38]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_40]
                call    rbx ; _objc_release
                jmp     loc_1000027F0
; ---------------------------------------------------------------------------

loc_10000293B:                          ; CODE XREF: sub_100002720+10D↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_DownloadError ; "Download Error"
                mov     ecx, 3F2h
                xor     r8d, r8d
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r13, [rbp+var_A8]
                mov     [r13+0], rax
                mov     eax, 0C2000000h
                mov     [r13+8], rax
                lea     rax, sub_1000029F8
                mov     [r13+10h], rax
                lea     rax, unk_10003A098
                mov     [r13+18h], rax
                mov     rdi, [r12+28h]
                call    rbx ; _objc_retain
                mov     [r13+28h], rax
                mov     [r13+20h], r14
                mov     rdi, r14
                call    rbx ; _objc_retain
                mov     r12, rax
                mov     rdi, cs:__dispatch_main_q_ptr
                mov     rsi, r13
                call    _dispatch_async
                mov     rdi, [r13+20h]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [r13+28h]
                call    rbx ; _objc_release
                mov     rdi, r12
                jmp     loc_1000027EA
sub_100002720   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000029DB   proc near               ; DATA XREF: sub_100002720+80↑o
                push    rbp
                mov     rbp, rsp
                mov     rax, rdi
                mov     rdi, [rdi+28h]
                test    rdi, rdi
                jz      short loc_1000029F6
                mov     rsi, [rax+20h]
                mov     rax, [rdi+10h]
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_1000029F6:                          ; CODE XREF: sub_1000029DB+E↑j
                pop     rbp
                retn
sub_1000029DB   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000029F8   proc near               ; DATA XREF: sub_100002720+264↑o
                push    rbp
                mov     rbp, rsp
                mov     rsi, [rdi+20h]
                mov     rdi, [rdi+28h]
                mov     rax, [rdi+10h]
                pop     rbp
                jmp     rax
sub_1000029F8   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002A0B   proc near               ; DATA XREF: sub_100002720+1B5↑o
                push    rbp
                mov     rbp, rsp
                mov     rsi, [rdi+20h]
                mov     rdi, [rdi+28h]
                mov     rax, [rdi+10h]
                pop     rbp
                jmp     rax
sub_100002A0B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002A1E   proc near               ; DATA XREF: __const:000000010003A108↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     r14, rdi
                mov     rdi, [rsi+20h]
                call    cs:_objc_retain_ptr
                lea     rdi, [r14+28h]  ; void *
                mov     rsi, [rbx+28h]  ; void *
                mov     edx, 7          ; int
                call    __Block_object_assign
                add     r14, 30h
                mov     rsi, [rbx+30h]  ; void *
                mov     rdi, r14        ; void *
                mov     edx, 7          ; int
                pop     rbx
                pop     r14
                pop     rbp
                jmp     __Block_object_assign
sub_100002A1E   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002A60   proc near               ; DATA XREF: __const:000000010003A110↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+30h]
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_100002A60   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHttp getNewVersion:version:beta:success:failure:](SHttp_meta *self, SEL, int, float, int, id, id)
__SHttp_getNewVersion_version_beta_success_failure__ proc near
                                        ; CODE XREF: -[HomeView loadNewGameVersion:version:beta:]+AC↓P
                                        ; DATA XREF: __objc_const:000000010003D8E0↓o

var_70          = ymmword ptr -70h
anonymous_3     = qword ptr -50h
var_48          = qword ptr -48h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rdi, r8
                mov     [rbp+var_3C], ecx
                movss   [rbp+var_38], xmm0
                mov     [rbp+var_34], edx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[Language isCurrentChinaLanguage]
                test    al, al
                lea     rax, cfstr_HttpDl8bitdoCo ; "http://dl.8bitdo.com:8080/"
                lea     r15, cfstr_HttpDl8bitdoCn ; "http://dl.8bitdo.cn:8080/"
                cmovz   r15, rax
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_boolForKey_ ; char *
                lea     rdx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r14d, eax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r12 ; _objc_release
                test    r14b, r14b
                lea     rcx, cfstr_HttpBeta8bitdo ; "http://beta.8bitdo.com:8080/"
                cmovz   rcx, r15
                mov     rbx, cs:classRef_NSURL
                mov     rdi, cs:classRef_NSString ; void *
                mov     r14, cs:selRef_stringWithFormat_
                lea     rdx, cfstr_FirmwareLoadne ; "%@firmware/loadNewVersion"
                mov     rsi, r14        ; char *
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_URLWithString_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_48], rax
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSMutableURLRequest ; void *
                mov     rsi, cs:selRef_requestWithURL_ ; char *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHTTPMethod_ ; char *
                lea     rdx, cfstr_Post ; "POST"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, cfstr_D    ; "%d"
                mov     rsi, r14        ; char *
                mov     r12, r14
                mov     ecx, [rbp+var_34]
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setValue_forHTTPHeaderField_ ; char *
                lea     rcx, cfstr_Type ; "type"
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_NSString ; void *
                cvtss2sd xmm0, [rbp+var_38]
                lea     rdx, cfstr_Lf   ; "%lf"
                mov     rsi, r12        ; char *
                mov     al, 1
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rcx, cfstr_Version ; "version"
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setValue_forHTTPHeaderField_ ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, r12        ; char *
                lea     r12, cfstr_D    ; "%d"
                mov     rdx, r12
                mov     ecx, [rbp+var_3C]
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rcx, cfstr_Beta ; "beta"
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setValue_forHTTPHeaderField_ ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, rbx
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                mov     rdx, r12
                mov     ecx, 1
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rcx, cfstr_Isloadbeta ; "isLoadBeta"
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setValue_forHTTPHeaderField_ ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    r14
                mov     rdi, cs:classRef_NSURLSession ; void *
                mov     rsi, cs:selRef_sharedSession ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r12, [rbp+var_70]
                mov     [r12], rax
                mov     eax, 0C2000000h
                mov     [r12+8], rax
                lea     rax, sub_100002D97
                mov     [r12+10h], rax
                lea     rax, unk_10003A128
                mov     [r12+18h], rax
                mov     rdi, [rbp+var_30]
                mov     [r12+20h], rdi
                mov     r14, cs:selRef_dataTaskWithRequest_completionHandler_
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r15
                mov     rcx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_resume ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [r12+20h]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r14 ; _objc_release
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHttp_getNewVersion_version_beta_success_failure__ endp


; =============== S U B R O U T I N E =======================================


sub_100002D97   proc near               ; DATA XREF: +[SHttp getNewVersion:version:beta:success:failure:]+274↑o
                test    rcx, rcx
                jz      short loc_100002D9D
                retn
; ---------------------------------------------------------------------------

loc_100002D9D:                          ; CODE XREF: sub_100002D97+3↑j
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     rdx, rsi
                mov     r14, rdi
                mov     rdi, cs:classRef_NSJSONSerialization ; void *
                mov     rsi, cs:selRef_JSONObjectWithData_options_error_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     ecx, 4
                xor     r8d, r8d
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                lea     rdx, cfstr_Msgstate ; "msgState"
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_integerValue ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r13, rax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                cmp     r13, 1
                jnz     loc_100002F1D
                lea     rdx, cfstr_List ; "list"
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                test    rax, rax
                jz      loc_100002F14
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdi, r12        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp-30h], rax
                mov     rdi, cs:classRef_Firmware ; void *
                mov     rsi, cs:selRef_mj_objectWithKeyValues_ ; char *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, r12
                mov     r12, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r13, [rbp-60h]
                mov     [r13+0], rax
                mov     eax, 0C2000000h
                mov     [r13+8], rax
                lea     rax, sub_100002F35
                mov     [r13+10h], rax
                lea     rax, unk_10003A098
                mov     [r13+18h], rax
                mov     rdi, [r14+20h]
                mov     r14, cs:_objc_retain_ptr
                call    r14 ; _objc_retain
                mov     [r13+28h], rax
                mov     [r13+20h], r12
                mov     rdi, r12
                mov     r12, r15
                call    r14 ; _objc_retain
                mov     r14, rax
                mov     rdi, cs:__dispatch_main_q_ptr
                mov     rsi, r13
                call    _dispatch_async
                mov     rdi, [r13+20h]
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, [r13+28h]
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, [rbp-30h]
                call    r15 ; _objc_release

loc_100002F14:                          ; CODE XREF: sub_100002D97+B9↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_100002F1D:                          ; CODE XREF: sub_100002D97+84↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100002D97   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002F35   proc near               ; DATA XREF: sub_100002D97+114↑o
                push    rbp
                mov     rbp, rsp
                mov     rax, rdi
                mov     rdi, [rdi+28h]
                test    rdi, rdi
                jz      short loc_100002F50
                mov     rsi, [rax+20h]
                mov     rax, [rdi+10h]
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100002F50:                          ; CODE XREF: sub_100002F35+E↑j
                pop     rbp
                retn
sub_100002F35   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002F52   proc near               ; DATA XREF: __const:000000010003A138↓o
                                        ; __const:000000010003A1E8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 20h        ; void *
                mov     rsi, [rsi+20h]  ; void *
                mov     edx, 7          ; int
                pop     rbp
                jmp     __Block_object_assign
sub_100002F52   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100002F69   proc near               ; DATA XREF: __const:000000010003A140↓o
                                        ; __const:000000010003A1F0↓o ...
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100002F69   endp


; =============== S U B R O U T I N E =======================================


; void __cdecl +[SHttp StatistcsFirmware:ID:](SHttp_meta *self, SEL, char, int)
__SHttp_StatistcsFirmware_ID__ proc near
                                        ; DATA XREF: __objc_const:000000010003D8F8↓o
                test    dl, dl
                jz      locret_10000319E
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14d, ecx
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[Language isCurrentChinaLanguage]
                test    al, al
                lea     rax, cfstr_HttpDl8bitdoCo ; "http://dl.8bitdo.com:8080/"
                lea     r12, cfstr_HttpDl8bitdoCn ; "http://dl.8bitdo.cn:8080/"
                cmovz   r12, rax
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_boolForKey_ ; char *
                lea     rdx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                test    r15b, r15b
                lea     rcx, cfstr_HttpBeta8bitdo ; "http://beta.8bitdo.com:8080/"
                cmovz   rcx, r12
                mov     rbx, cs:classRef_NSURL
                mov     rdi, cs:classRef_NSString ; void *
                mov     r12, cs:selRef_stringWithFormat_
                lea     rdx, cfstr_FirmwareStatis ; "%@firmware/StatisticsFirmware"
                mov     rsi, r12        ; char *
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_URLWithString_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp-30h], rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSMutableURLRequest ; void *
                mov     rsi, cs:selRef_requestWithURL_ ; char *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHTTPMethod_ ; char *
                lea     rdx, cfstr_Get  ; "GET"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSString ; void *
                lea     rbx, cfstr_D    ; "%d"
                mov     rsi, r12        ; char *
                mov     rdx, rbx
                mov     ecx, r14d
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, cs:selRef_setValue_forHTTPHeaderField_
                lea     rcx, cfstr_Id   ; "id"
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                mov     rdx, rbx
                mov     ecx, 2
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rcx, cfstr_Type ; "type"
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSURLSession ; void *
                mov     rsi, cs:selRef_sharedSession ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_dataTaskWithRequest_completionHandler_ ; char *
                lea     rcx, off_10003A178
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_resume ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, [rbp-30h]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

locret_10000319E:                       ; CODE XREF: +[SHttp StatistcsFirmware:ID:]+2↑j
                retn
__SHttp_StatistcsFirmware_ID__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000319F   proc near               ; DATA XREF: __const:000000010003A188↓o
                push    rbp
                mov     rbp, rsp
                test    rcx, rcx
                jz      short loc_1000031AA
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000031AA:                          ; CODE XREF: sub_10000319F+7↑j
                mov     rdx, rsi
                mov     rdi, cs:classRef_NSJSONSerialization ; void *
                mov     rsi, cs:selRef_JSONObjectWithData_options_error_ ; char *
                mov     ecx, 4
                xor     r8d, r8d
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_10000319F   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHttp recordActivity:](SHttp_meta *self, SEL, int)
__SHttp_recordActivity__ proc near      ; CODE XREF: -[HomeView addS8BitdoDevice:]+5C↓P
                                        ; DATA XREF: __objc_const:000000010003D910↓o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     ebx, edx
                mov     [rbp+var_38], rdi
                mov     rdi, cs:classRef_NSDate ; void *
                mov     rsi, cs:selRef_date ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_timeIntervalSince1970 ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                movsd   [rbp+var_30], xmm0
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     r15, cs:selRef_standardUserDefaults
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_doubleForKey_ ; char *
                lea     rdx, cfstr_Localactivityt ; "localActivityTimer"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                movsd   [rbp+var_40], xmm0
                mov     rdi, r12
                call    r14 ; _objc_release
                movsd   xmm0, [rbp+var_30]
                subsd   xmm0, [rbp+var_40]
                movsd   [rbp+var_30], xmm0
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_stringForKey_ ; char *
                lea     rdx, cfstr_Localactivityc ; "localActivityController"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_D    ; "%d"
                mov     ecx, ebx
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                movsd   xmm0, [rbp+var_30]
                ucomisd xmm0, cs:qword_10002EFE0
                ja      short loc_10000330B
                mov     rsi, cs:selRef_containsString_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     short loc_10000331E

loc_10000330B:                          ; CODE XREF: +[SHttp recordActivity:]+117↑j
                mov     rsi, cs:selRef_sendRecordActivity_ ; char *
                mov     rdi, [rbp+var_38] ; void *
                mov     edx, ebx
                call    cs:_objc_msgSend_ptr

loc_10000331E:                          ; CODE XREF: +[SHttp recordActivity:]+12E↑j
                mov     rdi, r12
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                mov     rax, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SHttp_recordActivity__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHttp sendRecordActivity:](SHttp_meta *self, SEL, int)
__SHttp_sendRecordActivity__ proc near  ; DATA XREF: __objc_const:000000010003D928↓o

var_30          = qword ptr -30h
anonymous_0     = qword ptr -28h
anonymous_1     = qword ptr -20h
anonymous_2     = qword ptr -18h
anonymous_3     = qword ptr -10h
anonymous_4     = dword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rax, [rbp+var_30]
                mov     [rax], rcx
                mov     ecx, 0C0000000h
                mov     [rax+8], rcx
                lea     rcx, sub_10000339F
                mov     [rax+10h], rcx
                lea     rcx, unk_10003A198
                mov     [rax+18h], rcx
                mov     [rax+20h], rdi
                mov     [rax+28h], edx
                mov     rsi, cs:selRef_HttpGetPageHtml_URL_encoding_ ; char *
                lea     rcx, cfstr_HttpIp111Cn ; "http://ip111.cn/"
                mov     r8d, 4
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                add     rsp, 30h
                pop     rbp
                retn
__SHttp_sendRecordActivity__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000339F   proc near               ; DATA XREF: +[SHttp sendRecordActivity:]+1F↑o

anonymous_0     = ymmword ptr -50h
anonymous_2     = qword ptr -30h
anonymous_3     = qword ptr -28h
anonymous_4     = dword ptr -20h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 38h
                mov     r14, rdi
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r15, cs:selRef_isEqualToString_
                lea     rdx, cfstr_0000 ; "0.0.0.0"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_100003443

loc_1000033D9:                          ; CODE XREF: sub_10000339F+BA↓j
                                        ; sub_10000339F+C2↓j
                mov     rdi, [r14+20h]  ; void *
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+anonymous_0+8]
                mov     [rdx], rax
                mov     eax, 0C0000000h
                mov     [rdx+8], rax
                lea     rax, sub_100003481
                mov     [rdx+10h], rax
                lea     rax, unk_10003A198
                mov     [rdx+18h], rax
                mov     [rdx+20h], rdi
                mov     eax, [r14+28h]
                mov     [rdx+28h], eax
                mov     rsi, cs:selRef_HttpGetPageHtml_URL_encoding_ ; char *
                lea     rcx, cfstr_HttpWwwNetCnSt ; "http://www.net.cn/static/customercare/yourip.asp"
                mov     r8d, 1
                call    cs:_objc_msgSend_ptr

loc_10000342F:                          ; CODE XREF: sub_10000339F+E0↓j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                add     rsp, 38h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100003443:                          ; CODE XREF: sub_10000339F+38↑j
                lea     rdx, cfstr_0001 ; "0.0.0.1"
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                test    rbx, rbx
                jz      loc_1000033D9
                test    al, al
                jnz     loc_1000033D9
                mov     rdi, [r14+20h]  ; void *
                mov     edx, [r14+28h]
                mov     rsi, cs:selRef_sendRecordActivity_IP_ ; char *
                mov     rcx, rbx
                call    cs:_objc_msgSend_ptr
                jmp     short loc_10000342F
sub_10000339F   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100003481   proc near               ; DATA XREF: sub_10000339F+55↑o
                push    rbp
                mov     rbp, rsp
                mov     rcx, rsi
                mov     rax, [rdi+20h]
                mov     edx, [rdi+28h]
                mov     rsi, cs:selRef_sendRecordActivity_IP_
                mov     rdi, rax
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_100003481   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHttp sendRecordActivity:IP:](SHttp_meta *self, SEL, int, id)
__SHttp_sendRecordActivity_IP__ proc near
                                        ; DATA XREF: __objc_const:000000010003D940↓o

anonymous_0     = ymmword ptr -90h
anonymous_1     = qword ptr -70h
anonymous_2     = qword ptr -68h
anonymous_3     = dword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 68h
                mov     [rbp+var_2C], edx
                mov     rbx, rdi
                mov     r14, cs:classRef_NSDate
                mov     r15, cs:selRef_date
                mov     rdi, rcx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_50], rax
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_timeIntervalSince1970 ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                movsd   [rbp+var_58], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_getID ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     [rbp+var_40], rax
                mov     rsi, cs:selRef_getComputerName ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    r13 ; _objc_msgSend ; +[Language isCurrentChinaLanguage]
                test    al, al
                lea     rax, cfstr_HttpDl8bitdoCo ; "http://dl.8bitdo.com:8080/"
                lea     r15, cfstr_HttpDl8bitdoCn ; "http://dl.8bitdo.cn:8080/"
                cmovz   r15, rax
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_boolForKey_ ; char *
                lea     rdx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r14d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                test    r14b, r14b
                lea     rcx, cfstr_HttpBeta8bitdo ; "http://beta.8bitdo.com:8080/"
                cmovz   rcx, r15
                mov     rbx, cs:classRef_NSURL
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_FirmwareActivi ; "%@firmware/Activity"
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_URLWithString_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_48], rax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableURLRequest ; void *
                mov     rsi, cs:selRef_requestWithURL_ ; char *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setHTTPMethod_ ; char *
                lea     rdx, cfstr_Get  ; "GET"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, cs:selRef_setValue_forHTTPHeaderField_
                lea     rcx, cfstr_Mac  ; "mac"
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                lea     rcx, cfstr_Macname ; "macName"
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, [rbp+var_38]
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, cfstr_2    ; "2"
                mov     r14, cs:selRef_stringWithFormat_
                mov     rsi, r14        ; char *
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                lea     rcx, cfstr_Platform ; "platform"
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, cfstr_1    ; "1"
                mov     rsi, r14        ; char *
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                lea     rcx, cfstr_Type ; "type"
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_setValue_forHTTPHeaderField_ ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, cfstr_D    ; "%d"
                mov     rsi, r14        ; char *
                mov     r12d, [rbp+var_2C]
                mov     ecx, r12d
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rcx, cfstr_Controller ; "controller"
                mov     rdi, rbx        ; void *
                mov     r15, cs:selRef_setValue_forHTTPHeaderField_
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                lea     rcx, cfstr_Ip   ; "ip"
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     r15, [rbp+var_50]
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdx, cs:off_100049BF8
                lea     rcx, cfstr_Region ; "region"
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_setValue_forHTTPHeaderField_ ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSURLSession ; void *
                mov     rsi, cs:selRef_sharedSession ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+anonymous_0+8]
                mov     [rcx], rax
                mov     eax, 0C0000000h
                mov     [rcx+8], rax
                lea     rax, sub_100003831
                mov     [rcx+10h], rax
                lea     rax, unk_10003A1B8
                mov     [rcx+18h], rax
                movsd   xmm0, [rbp+var_58]
                movsd   qword ptr [rcx+20h], xmm0
                mov     [rcx+28h], r12d
                mov     rsi, cs:selRef_dataTaskWithRequest_completionHandler_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_resume ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r15 ; _objc_release
                add     rsp, 68h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHttp_sendRecordActivity_IP__ endp


; =============== S U B R O U T I N E =======================================


sub_100003831   proc near               ; DATA XREF: +[SHttp sendRecordActivity:IP:]+308↑o
                test    rcx, rcx
                jz      short loc_100003837
                retn
; ---------------------------------------------------------------------------

loc_100003837:                          ; CODE XREF: sub_100003831+3↑j
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rdx, rsi
                mov     r15, rdi
                mov     rdi, cs:classRef_NSJSONSerialization ; void *
                mov     rsi, cs:selRef_JSONObjectWithData_options_error_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     ecx, 4
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp-30h], rax
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rbx, cs:selRef_standardUserDefaults
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                movsd   xmm0, qword ptr [r15+20h]
                mov     rsi, cs:selRef_setDouble_forKey_ ; char *
                lea     rdx, cfstr_Localactivityt ; "localActivityTimer"
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_stringForKey_ ; char *
                lea     r12, cfstr_Localactivityc ; "localActivityController"
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSString ; void *
                mov     r8d, [r15+28h]
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_D_0  ; "%@%d,"
                mov     rcx, rbx
                xor     eax, eax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     r13, cs:selRef_standardUserDefaults
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                mov     rcx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_synchronize ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, [rbp-30h]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100003831   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHttp getID](SHttp_meta *self, SEL)
__SHttp_getID_  proc near               ; DATA XREF: __objc_const:000000010003D958↓o

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_ ; char *
                sub     rsp, 8
                lea     r10, cfstr_Model ; "model"
                lea     r11, cfstr_Grep ; "grep"
                lea     rdx, cfstr_Rd1  ; "-rd1"
                lea     rcx, cfstr_C    ; "-c"
                lea     r8, cfstr_Ioplatformexpe ; "IOPlatformExpertDevice"
                lea     r9, stru_10003AE98 ; "|"
                mov     r12, cs:_objc_msgSend_ptr
                xor     eax, eax
                push    0
                push    r10
                push    r11
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                add     rsp, 20h
                mov     r13, rax
                mov     rdi, cs:classRef_NSTask ; void *
                mov     rbx, cs:selRef_new
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setLaunchPath_ ; char *
                lea     rdx, cfstr_UsrSbinIoreg ; "/usr/sbin/ioreg"
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setArguments_ ; char *
                mov     rdi, r14        ; void *
                mov     [rbp+var_50], r13
                mov     rdx, r13
                call    r12 ; _objc_msgSend
                mov     rdi, cs:classRef_NSPipe ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_setStandardOutput_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_launch ; char *
                mov     [rbp+var_48], r14
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, cs:classRef_NSArray ; void *
                lea     rdx, cfstr_Ioplatformuuid ; "/IOPlatformUUID/ { split($0, line, \"\\\"\"); printf(\"%s\\n\", line[4]); }"
                mov     rsi, cs:selRef_arrayWithObjects_ ; char *
                xor     ecx, ecx
                xor     eax, eax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSTask ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     r13, rax
                lea     rdx, cfstr_UsrBinAwk ; "/usr/bin/awk"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setLaunchPath_ ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_setArguments_ ; char *
                mov     [rbp+var_38], r14
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, cs:classRef_NSPipe ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rbx, rax
                mov     rsi, cs:selRef_setStandardInput_ ; char *
                mov     rdi, r13        ; void *
                mov     [rbp+var_40], r15
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_setStandardOutput_ ; char *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_fileHandleForReading ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_launch ; char *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_readDataToEndOfFile ; char *
                mov     [rbp+var_30], r14
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSString
                call    _objc_alloc
                mov     rsi, cs:selRef_initWithData_encoding_ ; char *
                mov     ecx, 4
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_containsString_ ; char *
                lea     rdx, stru_10003AF58 ; "\n"
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_100003BE1
                mov     rsi, cs:selRef_stringByReplacingOccurrencesOfString_withString_ ; char *
                lea     rdx, stru_10003AF58 ; "\n"
                lea     rcx, stru_10003A8B8
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     r15, r12

loc_100003BE1:                          ; CODE XREF: +[SHttp getID]+1EC↑j
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r12 ; _objc_release
                mov     rdi, r15
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SHttp_getID_  endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHttp getComputerName](SHttp_meta *self, SEL)
__SHttp_getComputerName_ proc near      ; DATA XREF: __objc_const:000000010003D970↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_30], rdi
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     rsi, cs:selRef_dictionaryWithContentsOfFile_ ; char *
                lea     rdx, cfstr_LibraryPrefere ; "/Library/Preferences/SystemConfiguration/preferences.plist"
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_objectForKey_
                lea     rdx, cfstr_System ; "System"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, r15        ; char *
                lea     rdx, cfstr_System ; "System"
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13
                call    r12 ; _objc_release
                lea     rdx, cfstr_Computername ; "ComputerName"
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_utf8ToUnicode_ ; char *
                mov     rdi, [rbp+var_30] ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SHttp_getComputerName_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHttp utf8ToUnicode:](SHttp_meta *self, SEL, id)
__SHttp_utf8ToUnicode__ proc near       ; DATA XREF: __objc_const:000000010003D988↓o

var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_length ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     [rbp+var_30], rax
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_stringWithCapacity_ ; char *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_58], rax
                mov     [rbp+var_68], r15
                test    r15, r15
                jz      loc_100003F2B
                mov     rax, cs:selRef_characterAtIndex_
                mov     [rbp+var_60], rax
                mov     rax, cs:selRef_appendFormat_
                mov     [rbp+var_38], rax
                mov     rax, cs:selRef_insertString_atIndex_
                mov     [rbp+var_50], rax
                mov     rax, cs:selRef_substringWithRange_
                mov     [rbp+var_48], rax
                xor     r15d, r15d

loc_100003DA1:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+16A↓j
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_stringWithCapacity_ ; char *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_60] ; char *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                lea     ecx, [rax-30h]
                cmp     cx, 9
                mov     [rbp+var_40], r13
                ja      short loc_100003E01
                mov     ecx, 1
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_48] ; char *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13
                mov     r13, [rbp+var_38]
                mov     rsi, r13
                jmp     short loc_100003E3D
; ---------------------------------------------------------------------------

loc_100003E01:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+C3↑j
                lea     ecx, [rax-61h]
                cmp     cx, 19h
                mov     r12, [rbp+var_38]
                jbe     short loc_100003E17
                add     eax, 0FFFFFFBFh
                cmp     ax, 19h
                ja      short loc_100003E88

loc_100003E17:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+F9↑j
                mov     ecx, 1
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_48] ; char *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13        ; void *
                mov     rsi, r12        ; char *
                mov     r13, r12

loc_100003E3D:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+EC↑j
                lea     r12, stru_10003AFD8 ; "%@"
                mov     rdx, r12
                mov     rcx, rax
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release

loc_100003E5B:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+213↓j
                mov     rsi, r13        ; char *
                mov     r13, [rbp+var_40]

loc_100003E62:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+1D2↓j
                                        ; +[SHttp utf8ToUnicode:]+1F5↓j
                mov     rdi, [rbp+var_58] ; void *
                mov     rdx, r12
                mov     rcx, r13
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    r14 ; _objc_release
                inc     r15
                cmp     [rbp+var_68], r15
                jnz     loc_100003DA1
                jmp     loc_100003F2B
; ---------------------------------------------------------------------------

loc_100003E88:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+102↑j
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_60] ; char *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                movzx   ecx, ax
                mov     rdi, r13        ; void *
                mov     rsi, r12        ; char *
                lea     rdx, cfstr_UX   ; "\\u%x"
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     r14, cs:selRef_length
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                cmp     rax, 4
                jnz     short loc_100003EEA
                mov     ecx, 2
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_50] ; char *
                lea     rdx, cfstr_00   ; "00"
                call    rbx ; _objc_msgSend
                lea     r12, stru_10003AFD8 ; "%@"
                mov     rsi, [rbp+var_38]
                mov     r14, cs:_objc_release_ptr
                jmp     loc_100003E62
; ---------------------------------------------------------------------------

loc_100003EEA:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+1A9↑j
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                cmp     rax, 5
                lea     r12, stru_10003AFD8 ; "%@"
                mov     rsi, [rbp+var_38]
                mov     r14, cs:_objc_release_ptr
                jnz     loc_100003E62
                mov     ecx, 2
                mov     rdi, r13        ; void *
                mov     r13, rsi
                mov     rsi, [rbp+var_50] ; char *
                lea     rdx, cfstr_0    ; "0"
                call    rbx ; _objc_msgSend
                jmp     loc_100003E5B
; ---------------------------------------------------------------------------

loc_100003F2B:                          ; CODE XREF: +[SHttp utf8ToUnicode:]+59↑j
                                        ; +[SHttp utf8ToUnicode:]+170↑j
                mov     rdi, [rbp+var_30]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_58]
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SHttp_utf8ToUnicode__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHttp HttpGetPageHtml:URL:encoding:](SHttp_meta *self, SEL, id, id, unsigned __int64)
__SHttp_HttpGetPageHtml_URL_encoding__ proc near
                                        ; DATA XREF: __objc_const:000000010003D9A0↓o

var_80          = qword ptr -80h
anonymous_1     = qword ptr -78h
anonymous_2     = qword ptr -70h
anonymous_3     = qword ptr -68h
anonymous_0     = xmmword ptr -60h
anonymous_4     = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = xmmword ptr -38h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 58h
                mov     qword ptr [rbp+var_38+8], r8
                mov     rbx, rcx
                mov     [rbp+var_40], rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     qword ptr [rbp+var_38], rax
                mov     rdi, cs:classRef_NSURL ; void *
                mov     rsi, cs:selRef_URLWithString_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rdi, cs:classRef_NSMutableURLRequest ; void *
                mov     rsi, cs:selRef_requestWithURL_ ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHTTPMethod_ ; char *
                lea     rdx, cfstr_Get  ; "GET"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setTimeoutInterval_ ; char *
                movsd   xmm0, cs:qword_10002EFE8
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSURLSession ; void *
                mov     rsi, cs:selRef_sharedSession ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r12, [rbp+var_80]
                mov     [r12], rax
                mov     eax, 0C2000000h
                mov     [r12+8], rax
                lea     rax, sub_1000040C2
                mov     [r12+10h], rax
                lea     rax, unk_10003A1D8
                mov     [r12+18h], rax
                mov     rax, qword ptr [rbp+var_38+8]
                mov     [r12+28h], rax
                mov     rax, [rbp+var_40]
                mov     [r12+30h], rax
                mov     rdi, qword ptr [rbp+var_38]
                mov     [r12+20h], rdi
                mov     rbx, cs:selRef_dataTaskWithRequest_completionHandler_
                call    cs:_objc_retain_ptr
                mov     qword ptr [rbp+var_38+8], rax
                mov     rdi, r15        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r14
                mov     rcx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_resume ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, [r12+20h]
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_38+8]
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r13 ; _objc_release
                add     rsp, 58h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHttp_HttpGetPageHtml_URL_encoding__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000040C2   proc near               ; DATA XREF: +[SHttp HttpGetPageHtml:URL:encoding:]+CD↑o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r14, rcx
                mov     r15, rdx
                mov     r12, rdi
                mov     r13, cs:_objc_retain_ptr
                mov     rdi, rsi
                call    r13 ; _objc_retain
                mov     rbx, rax
                mov     rdi, r15
                call    r13 ; _objc_retain
                mov     [rbp+var_38], rax
                mov     rdi, r14
                call    r13 ; _objc_retain
                mov     r15, rax
                test    rax, rax
                setnz   al
                test    rbx, rbx
                setz    cl
                test    cl, al
                jnz     short loc_100004182
                mov     r14, cs:classRef_NSString
                mov     rdi, rbx
                call    _objc_retainAutorelease
                mov     rsi, cs:selRef_bytes ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rcx, [r12+28h]
                mov     rsi, cs:selRef_stringWithCString_encoding_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, [r12+30h]  ; void *
                mov     rsi, cs:selRef_getIPFormHtml_ ; char *
                mov     [rbp+var_30], rax
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_1000041AC
                mov     rdi, [r12+20h]
                mov     rsi, r14
                call    qword ptr [rdi+10h]
                jmp     short loc_1000041EA
; ---------------------------------------------------------------------------

loc_100004182:                          ; CODE XREF: sub_1000040C2+4B↑j
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    cs:_objc_msgSend_ptr ; +[Language isCurrentChinaLanguage]
                mov     rdi, [r12+20h]
                mov     rcx, [rdi+10h]
                test    al, al
                jz      short loc_1000041D6
                lea     rsi, cfstr_0000 ; "0.0.0.0"
                jmp     short loc_1000041DD
; ---------------------------------------------------------------------------

loc_1000041AC:                          ; CODE XREF: sub_1000040C2+B1↑j
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    cs:_objc_msgSend_ptr ; +[Language isCurrentChinaLanguage]
                mov     rdi, [r12+20h]
                mov     rcx, [rdi+10h]
                test    al, al
                jz      short loc_1000041E1
                lea     rsi, cfstr_0000 ; "0.0.0.0"
                jmp     short loc_1000041E8
; ---------------------------------------------------------------------------

loc_1000041D6:                          ; CODE XREF: sub_1000040C2+DF↑j
                lea     rsi, cfstr_0001 ; "0.0.0.1"

loc_1000041DD:                          ; CODE XREF: sub_1000040C2+E8↑j
                call    rcx
                jmp     short loc_1000041FE
; ---------------------------------------------------------------------------

loc_1000041E1:                          ; CODE XREF: sub_1000040C2+109↑j
                lea     rsi, cfstr_0001 ; "0.0.0.1"

loc_1000041E8:                          ; CODE XREF: sub_1000040C2+112↑j
                call    rcx

loc_1000041EA:                          ; CODE XREF: sub_1000040C2+BE↑j
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_release

loc_1000041FE:                          ; CODE XREF: sub_1000040C2+11D↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rdi, rbx
                mov     rax, r14
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_1000040C2   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHttp getIPFormHtml:](SHttp_meta *self, SEL, id)
__SHttp_getIPFormHtml__ proc near       ; DATA XREF: __objc_const:000000010003D9B8↓o

var_120         = xmmword ptr -120h
anonymous_0     = xmmword ptr -110h
anonymous_1     = xmmword ptr -100h
anonymous_2     = xmmword ptr -0F0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0F8h
                mov     r13, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                test    rax, rax
                jz      loc_10000439B
                mov     rdi, cs:classRef_NSRegularExpression
                call    _objc_alloc
                mov     rsi, cs:selRef_initWithPattern_options_error_ ; char *
                lea     rdx, cfstr_2505204D1D219D ; "(?:(?:(25[0-5])|(2[0-4]\\d)|((1\\d{2})|([1-9]?\\d)))\\.){3}(?:(25[0-5])|(2[0-4]\\d)|((1\\d{2})|([1-9]?\\d)))"
                mov     r14, cs:_objc_msgSend_ptr
                mov     ecx, 1
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_length ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_matchesInString_options_range_ ; char *
                mov     [rbp+var_D8], r15
                mov     rdi, r15        ; void *
                mov     rdx, rbx
                xor     ecx, ecx
                xor     r8d, r8d
                mov     r9, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rdx, [rbp+var_120]
                movaps  xmmword ptr [rdx], xmm0
                movaps  xmmword ptr [rdx+10h], xmm0
                movaps  xmmword ptr [rdx+20h], xmm0
                movaps  xmmword ptr [rdx+30h], xmm0
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_D0], rax
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                test    rax, rax
                jz      loc_1000043A3
                mov     rax, qword ptr [rbp+var_120+8]
                mov     r12, [rax]
                mov     [rbp+var_C8], r13
                mov     r13, cs:selRef_range
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rcx, rdx
                mov     rsi, cs:selRef_substringWithRange_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_C0], rax
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp+var_B8], rdx
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     r13, [rbp+var_C8]
                call    r14 ; _objc_msgSend
                lea     rcx, [rdx+32h]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_substringWithRange_ ; char *
                mov     rdx, r15
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                jmp     short loc_1000043C0
; ---------------------------------------------------------------------------

loc_10000439B:                          ; CODE XREF: +[SHttp getIPFormHtml:]+34↑j
                xor     r14d, r14d
                jmp     loc_100004471
; ---------------------------------------------------------------------------

loc_1000043A3:                          ; CODE XREF: +[SHttp getIPFormHtml:]+DD↑j
                mov     [rbp+var_C0], 0
                lea     r12, stru_10003A8B8
                mov     [rbp+var_B8], 0

loc_1000043C0:                          ; CODE XREF: +[SHttp getIPFormHtml:]+171↑j
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_length ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      short loc_100004410
                mov     rsi, cs:selRef_rangeOfString_ ; char *
                lea     rdx, stru_10003B078 ; "<"
                mov     rdi, r12        ; void *
                call    r14 ; _objc_msgSend
                mov     rdx, [rbp+var_B8]
                sub     rax, rdx
                mov     rsi, cs:selRef_substringWithRange_ ; char *
                mov     rdi, r12        ; void *
                mov     rcx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                jmp     short loc_100004417
; ---------------------------------------------------------------------------

loc_100004410:                          ; CODE XREF: +[SHttp getIPFormHtml:]+1AB↑j
                lea     r14, stru_10003A938 ; "未识别地区"

loc_100004417:                          ; CODE XREF: +[SHttp getIPFormHtml:]+1E6↑j
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_utf8ToUnicode_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:off_100049BF8
                mov     cs:off_100049BF8, rax
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_D0]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_D8]
                call    r15 ; _objc_release
                mov     r14, [rbp+var_C0]

loc_100004471:                          ; CODE XREF: +[SHttp getIPFormHtml:]+176↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_1000044A3
                mov     rdi, r14
                add     rsp, 0F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_1000044A3:                          ; CODE XREF: +[SHttp getIPFormHtml:]+260↑j
                call    ___stack_chk_fail
__SHttp_getIPFormHtml__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHttp md5HexDigest:](SHttp_meta *self, SEL, id)
__SHttp_md5HexDigest__ proc near        ; DATA XREF: __objc_const:000000010003D9D0↓o

var_40          = byte ptr -40h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rdi, rdx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                call    _objc_retainAutorelease
                mov     rsi, cs:selRef_UTF8String ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, rax        ; char *
                call    _strlen
                lea     rdx, [rbp+var_40]
                mov     rdi, rbx
                mov     esi, eax
                call    _CC_MD5
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_stringWithCapacity_ ; char *
                mov     edx, 10h
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r14, cs:selRef_appendFormat_
                lea     r15, cfstr_02x  ; "%02X"
                xor     r13d, r13d

loc_10000452E:                          ; CODE XREF: +[SHttp md5HexDigest:]+A1↓j
                movzx   ecx, [rbp+r13+var_40]
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r15
                xor     eax, eax
                call    r12 ; _objc_msgSend
                inc     r13
                cmp     r13, 10h
                jnz     short loc_10000452E
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100004571
                mov     rdi, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100004571:                          ; CODE XREF: +[SHttp md5HexDigest:]+B1↑j
                call    ___stack_chk_fail
__SHttp_md5HexDigest__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; UpdateView *__cdecl -[ViewController updateView](ViewController *self, SEL)
__ViewController_updateView_ proc near  ; CODE XREF: -[ViewController back]+9C↓P
                                        ; -[ViewController back]+145↓P ...

var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                mov     r13, cs:_OBJC_IVAR_$_ViewController__updateView ; UpdateView *_updateView;
                mov     rdi, [rdi+r13]
                test    rdi, rdi
                jnz     loc_1000046C7
                mov     rdi, cs:classRef_UpdateView
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, [rbx+r13]
                mov     [rbx+r13], rax
                call    cs:_objc_release_ptr
                mov     rax, cs:_OBJC_IVAR_$_ViewController_m_widht ; double m_widht;
                movsd   xmm0, qword ptr [rbx+rax]
                mov     rax, cs:_OBJC_IVAR_$_ViewController_m_height ; double m_height;
                movsd   xmm1, qword ptr [rbx+rax]
                mov     rdi, [rbx+r13]  ; void *
                xorps   xmm2, xmm2
                movaps  [rbp+var_50], xmm2
                movsd   qword ptr [rbp+var_40], xmm0
                movsd   qword ptr [rbp+var_40+8], xmm1
                mov     rsi, cs:selRef_setFrame_ ; char *
                movaps  xmm0, [rbp+var_50]
                movaps  xmm1, [rbp+var_40]
                movups  [rsp+70h+var_60], xmm1
                movups  [rsp+70h+var_70], xmm0
                call    r14 ; _objc_msgSend
                mov     rdi, [rbx+r13]  ; void *
                mov     rsi, cs:selRef_setDelegate_ ; char *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend ; -[UpdateView setDelegate:]
                mov     rdi, [rbx+r13]  ; void *
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     edx, 1
                call    r14 ; _objc_msgSend
                mov     r12, r14
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002EFF0
                movsd   xmm3, cs:qword_10002EFF8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor
                mov     rdi, rax
                call    r12
                mov     r15, rax
                mov     rdi, [rbx+r13]
                mov     rsi, cs:selRef_layer
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r12
                mov     r12, rax
                mov     rsi, cs:selRef_setBackgroundColor_
                mov     rdi, rax
                mov     rdx, r15
                call    rcx
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, [rbx+r13]

loc_1000046C7:                          ; CODE XREF: -[ViewController updateView]+22↑j
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__ViewController_updateView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; MoreView *__cdecl -[ViewController moreView](ViewController *self, SEL)
__ViewController_moreView_ proc near    ; CODE XREF: -[ViewController back]+1DF↓P
                                        ; -[ViewController back]+229↓P ...

var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                mov     r13, cs:_OBJC_IVAR_$_ViewController__moreView ; MoreView *_moreView;
                mov     rdi, [rdi+r13]
                test    rdi, rdi
                jnz     loc_10000482B
                mov     rdi, cs:classRef_MoreView
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r12, r14
                mov     rdi, [rbx+r13]
                mov     [rbx+r13], rax
                call    cs:_objc_release_ptr
                mov     rdi, [rbx+r13]  ; void *
                mov     rsi, cs:selRef_setDelegate_ ; char *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend ; -[MoreView setDelegate:]
                mov     rax, cs:_OBJC_IVAR_$_ViewController_m_widht ; double m_widht;
                movsd   xmm0, qword ptr [rbx+rax]
                mov     rax, cs:_OBJC_IVAR_$_ViewController_m_height ; double m_height;
                movsd   xmm1, qword ptr [rbx+rax]
                mov     rdi, [rbx+r13]  ; void *
                xorps   xmm2, xmm2
                movaps  [rbp+var_50], xmm2
                movsd   qword ptr [rbp+var_40], xmm0
                movsd   qword ptr [rbp+var_40+8], xmm1
                mov     rsi, cs:selRef_setFrame_ ; char *
                movaps  xmm0, [rbp+var_50]
                movaps  xmm1, [rbp+var_40]
                movups  [rsp+70h+var_60], xmm1
                movups  [rsp+70h+var_70], xmm0
                call    r14 ; _objc_msgSend
                mov     rdi, [rbx+r13]  ; void *
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     edx, 1
                call    r14 ; _objc_msgSend
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002EFF0
                movsd   xmm3, cs:qword_10002EFF8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor
                mov     rdi, rax
                call    r12
                mov     r15, rax
                mov     rdi, [rbx+r13]
                mov     rsi, cs:selRef_layer
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r12
                mov     r12, rax
                mov     rsi, cs:selRef_setBackgroundColor_
                mov     rdi, rax
                mov     rdx, r15
                call    rcx
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, [rbx+r13]

loc_10000482B:                          ; CODE XREF: -[ViewController moreView]+22↑j
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__ViewController_moreView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController viewDidLoad](ViewController *self, SEL)
__ViewController_viewDidLoad_ proc near ; DATA XREF: __objc_const:000000010003DF78↓o

var_B0          = qword ptr -0B0h
anonymous_0     = qword ptr -0A8h
var_A0          = xmmword ptr -0A0h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 88h
                mov     rbx, rdi
                lea     rdi, [rbp+var_B0]
                mov     [rdi], rbx
                mov     rax, cs:classRef_ViewController
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_viewDidLoad
                call    _objc_msgSendSuper2
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                mov     r13, rsi
                call    r15 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setViews_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[ViewController setViews:]
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     r12, cs:selRef_view
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_1000048F6
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_A0]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10000490A
; ---------------------------------------------------------------------------

loc_1000048F6:                          ; CODE XREF: -[ViewController viewDidLoad]+95↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_90], xmm0
                movaps  [rbp+var_A0], xmm0
                xorps   xmm0, xmm0

loc_10000490A:                          ; CODE XREF: -[ViewController viewDidLoad]+B6↑j
                mov     rax, cs:_OBJC_IVAR_$_ViewController_m_widht ; double m_widht;
                movsd   qword ptr [rbx+rax], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100004959
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_80]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                jmp     short loc_100004967
; ---------------------------------------------------------------------------

loc_100004959:                          ; CODE XREF: -[ViewController viewDidLoad]+FB↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_70], xmm0
                movaps  [rbp+var_80], xmm0
                xorps   xmm0, xmm0

loc_100004967:                          ; CODE XREF: -[ViewController viewDidLoad]+119↑j
                mov     rax, cs:_OBJC_IVAR_$_ViewController_m_height ; double m_height;
                movsd   qword ptr [rbx+rax], xmm0
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_SHIDDinput
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setDinput_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[ViewController setDinput:]
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     r14, r15
                mov     r13, cs:selRef_dinput
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController dinput]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setDelegate_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    r14
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController dinput]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r13, cs:selRef_open
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    r14
                mov     rdi, cs:classRef_SHIDXinput
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     r15, cs:selRef_init
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     r13, r12
                mov     rdi, cs:classRef_SHIDSwitchAndMac
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_setSwitchAndMac_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[ViewController setSwitchAndMac:]
                mov     rdi, r15
                call    r14
                mov     r15, cs:selRef_switchAndMac
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController switchAndMac]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setDelegate_
                mov     rdx, rbx
                call    r13
                mov     rdi, r12
                call    r14
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_open
                call    r13
                mov     rdi, r15
                call    r14
                mov     r12, r14
                mov     rdi, cs:classRef_SBackButton
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r13
                mov     r14, rax
                mov     rsi, cs:selRef_setBackButton_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r12
                mov     r14, cs:selRef_backButton
                mov     rdi, rbx
                mov     rsi, r14
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setTarget_
                mov     rdi, rax
                mov     rdx, rbx
                call    r13
                mov     rdi, r15
                call    r12
                mov     rdi, rbx
                mov     rsi, r14
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdx, cs:selRef_back
                mov     rsi, cs:selRef_setAction_
                mov     rdi, rax
                call    r13
                mov     rdi, r15
                call    r12
                mov     rdi, rbx
                mov     rsi, cs:selRef_view
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx
                mov     rsi, r14
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r13
                mov     r13, rax
                mov     rsi, cs:selRef_addSubview_
                mov     rdi, r15
                mov     rdx, rax
                call    r12
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rsi, r14
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rax, cs:_OBJC_IVAR_$_ViewController_m_height ; double m_height;
                movsd   xmm0, qword ptr [rbx+rax]
                movsd   [rbp+var_30], xmm0
                mov     rdi, rbx
                mov     rsi, r14
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100004C07
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_60]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                jmp     short loc_100004C19
; ---------------------------------------------------------------------------

loc_100004C07:                          ; CODE XREF: -[ViewController viewDidLoad]+3A9↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_50], xmm0
                movapd  [rbp+var_60], xmm0
                xorpd   xmm0, xmm0

loc_100004C19:                          ; CODE XREF: -[ViewController viewDidLoad]+3C7↑j
                movsd   xmm1, [rbp+var_30]
                subsd   xmm1, xmm0
                addsd   xmm1, cs:qword_10002F000
                mov     rsi, cs:selRef_setFrameOrigin_ ; char *
                movsd   xmm0, cs:qword_10002F008
                mov     rdi, r13        ; void *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_initView ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[ViewController initView]
                mov     rsi, cs:selRef_addCheckUpdat ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[ViewController addCheckUpdat]
                mov     rsi, cs:selRef_addMoreAction ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[ViewController addMoreAction]
                mov     rsi, cs:selRef_addBetaAction ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[ViewController addBetaAction]
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002EFF0
                movsd   xmm3, cs:qword_10002EFF8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     [rbp+var_30], rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_view ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, [rbp+var_30]
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     r13, r15
                mov     rdi, cs:classRef_NSNotificationCenter ; void *
                mov     r15, cs:selRef_defaultCenter
                mov     rsi, r15        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_addObserver_selector_name_object_ ; char *
                lea     r8, cfstr_Updateviewback ; "updateViewBack"
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                mov     rcx, cs:selRef_back
                xor     r9d, r9d
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    r13
                mov     rdi, cs:classRef_NSNotificationCenter ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rax, cs:_NSWindowWillCloseNotification_ptr
                mov     r13, [rax]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_view ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r14
                mov     r14, rax
                mov     rdi, r12
                mov     rsi, cs:selRef_addObserver_selector_name_object_
                mov     rdx, rbx
                mov     rcx, cs:selRef_closeWindow_
                mov     r8, r13
                mov     r9, rax
                call    r10
                mov     rdi, r14
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_38]
                call    rbx ; _objc_release
                add     rsp, 88h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__ViewController_viewDidLoad_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController initView](ViewController *self, SEL)
__ViewController_initView_ proc near    ; CODE XREF: -[ViewController viewDidLoad]+425↑P
                                        ; DATA XREF: __objc_const:000000010003DF90↓o

var_30          = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:classRef_SLoadXIB ; void *
                mov     rsi, cs:selRef_loadXibName_ ; char *
                lea     rdx, cfstr_Homeview ; "HomeView"
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; +[SLoadXIB loadXibName:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHomeView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[ViewController setHomeView:]
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     r14, cs:selRef_homeView
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setDelegate_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend ; -[SButton setDelegate:]
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_redColor ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r15, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     [rbp+var_30.var0.var0], rax
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, [rbp+var_30.var0.var0]
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_homeView ; char *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_S_AddView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[ViewController S_AddView:]
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_initView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController S_AddView:](ViewController *self, SEL, id)
__ViewController_S_AddView__ proc near  ; CODE XREF: -[ViewController initView]+13A↑P
                                        ; -[ViewController moreClick]+A7↓P ...

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r13, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_views ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_addObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_view ; char *
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_backButton ; char *
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend ; -[ViewController backButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_addSubview_positioned_relativeTo_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rbx
                mov     rcx, 0FFFFFFFFFFFFFFFFh
                mov     r8, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_showAndHideBackButton ; char *
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend ; -[ViewController showAndHideBackButton]
                mov     rsi, cs:selRef_homeView ; char *
                mov     [rbp+var_30], r13
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    r12 ; _objc_release
                cmp     r15, rbx
                jz      loc_10000510E
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     r15, cs:selRef_getMoreMenuItem
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend ; +[SMainMenu getMoreMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTarget_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                mov     r13, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; +[SMainMenu getMoreMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setAction_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                mov     r14, cs:_objc_msgSend_ptr
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend ; +[SMainMenu getMoreMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setEnabled_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rbx, r13

loc_10000510E:                          ; CODE XREF: -[ViewController S_AddView:]+E4↑j
                mov     r15, cs:selRef_updateView
                mov     r14, [rbp+var_30]
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                cmp     r12, rbx
                jnz     short loc_1000051A9
                mov     rdi, cs:classRef_NSNotificationCenter ; void *
                mov     rsi, cs:selRef_defaultCenter ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rcx, cs:selRef_updateingError
                mov     rsi, cs:selRef_addObserver_selector_name_object_ ; char *
                lea     r8, cfstr_Updateerrornot ; "updateErrorNotification"
                mov     rdi, r12        ; void *
                mov     rdx, rax
                xor     r9d, r9d
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release

loc_1000051A9:                          ; CODE XREF: -[ViewController S_AddView:]+1C3↑j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__ViewController_S_AddView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController S_RemoveView:](ViewController *self, SEL, id)
__ViewController_S_RemoveView__ proc near
                                        ; CODE XREF: -[ViewController back]+10C↓P
                                        ; -[ViewController back]+244↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r15, cs:selRef_views
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_removeObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_removeFromSuperview ; char *
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_showAndHideBackButton ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[ViewController showAndHideBackButton]
                mov     rsi, cs:selRef_homeView ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                cmp     r15, r14
                jz      short loc_10000527D
                mov     rsi, cs:selRef_addMoreAction
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[ViewController addMoreAction]
; ---------------------------------------------------------------------------

loc_10000527D:                          ; CODE XREF: -[ViewController S_RemoveView:]+9D↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__ViewController_S_RemoveView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController showAndHideBackButton](ViewController *self, SEL)
__ViewController_showAndHideBackButton_ proc near
                                        ; CODE XREF: -[ViewController S_AddView:]+BC↑P
                                        ; -[ViewController S_RemoveView:]+73↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_views ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                xor     r15d, r15d
                cmp     rax, 2
                setb    r15b
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_backButton ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[ViewController backButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, r15d
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_showAndHideBackButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController addCheckUpdat](ViewController *self, SEL)
__ViewController_addCheckUpdat_ proc near
                                        ; CODE XREF: -[ViewController viewDidLoad]+432↑P
                                        ; DATA XREF: __objc_const:000000010003DFF0↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_30], rdi
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, cs:selRef_getCheckUpdateMenuItem ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[SMainMenu getCheckUpdateMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Checkforupdate ; "Checkforupdate"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTitle_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_setTarget_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, [rbp+var_30]
                call    r13 ; _objc_msgSend
                mov     rdx, cs:selRef_updateClick
                mov     rsi, cs:selRef_setAction_ ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_addCheckUpdat_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController updateClick](ViewController *self, SEL)
__ViewController_updateClick_ proc near ; DATA XREF: __objc_const:000000010003E008↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rdi, cs:classRef_UpDaterManager ; void *
                mov     rsi, cs:selRef_shared ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; +[UpDaterManager shared]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_checkForUpdates ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__ViewController_updateClick_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController addMoreAction](ViewController *self, SEL)
__ViewController_addMoreAction_ proc near
                                        ; CODE XREF: -[ViewController viewDidLoad]+43F↑P
                                        ; -[ViewController S_RemoveView:]+B7↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, cs:selRef_getMoreMenuItem ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[SMainMenu getMoreMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_UpdateManually ; "Update Manually"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTitle_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setTarget_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     r15, cs:selRef_moreClick
                mov     rsi, cs:selRef_setAction_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, cs:selRef_setMoreMenuItemSelf_ ; char *
                mov     rdx, r14
                call    r13 ; _objc_msgSend ; +[SMainMenu setMoreMenuItemSelf:]
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, cs:selRef_setMoreMenuItemAction_ ; char *
                mov     rdx, r15
                call    r13 ; _objc_msgSend ; +[SMainMenu setMoreMenuItemAction:]
                mov     rdi, rbx
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_addMoreAction_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController addBetaAction](ViewController *self, SEL)
__ViewController_addBetaAction_ proc near
                                        ; CODE XREF: -[ViewController viewDidLoad]+44C↑P
                                        ; DATA XREF: __objc_const:000000010003E038↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r13, rdi
                mov     [rbp+var_38], rdi
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_boolForKey_ ; char *
                lea     rdx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r14d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_chengBeta_ ; char *
                movsx   r15d, r14b
                mov     rdi, r13        ; void *
                mov     edx, r15d
                call    r12 ; _objc_msgSend ; -[ViewController chengBeta:]
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, cs:selRef_getBetaMenuItem ; char *
                call    r12 ; _objc_msgSend ; +[SMainMenu getBetaMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, r12
                mov     r13, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Includebetabui ; "Includebetabuilds"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTitle_
                mov     rdi, r14
                mov     rdx, rax
                call    rbx
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_title
                mov     rdi, r14
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, cs:selRef_mainBundle
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rbx
                mov     rbx, rax
                test    r15b, r15b
                lea     rax, cfstr_Off  ; "off"
                lea     rdx, cfstr_On   ; "on"
                cmovz   rdx, rax
                mov     rdi, rbx
                mov     rsi, cs:selRef_localizedStringForKey_value_table_
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_stringByAppendingFormat_
                lea     rdx, stru_10003B178 ; "  :    %@"
                mov     rdi, r13
                mov     rcx, rax
                xor     eax, eax
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r12
                mov     r12, rax
                mov     rdi, r14
                mov     rsi, cs:selRef_setTitle_
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30]
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setTarget_
                mov     rdi, r14
                mov     rdx, [rbp+var_38]
                call    r13
                mov     rdx, cs:selRef_betaClick
                mov     rsi, cs:selRef_setAction_
                mov     rdi, r14
                call    r13
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_addBetaAction_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController dealloc](ViewController *self, SEL)
__ViewController_dealloc_ proc near     ; DATA XREF: __objc_const:000000010003E050↓o

anonymous_0     = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSNotificationCenter ; void *
                mov     rsi, cs:selRef_defaultCenter ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_removeObserver_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                lea     rdi, [rbp+anonymous_0.var0.var1]
                mov     [rdi], rbx
                mov     rax, cs:classRef_ViewController
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_dealloc
                call    _objc_msgSendSuper2
                add     rsp, 18h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
__ViewController_dealloc_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController back](ViewController *self, SEL)
__ViewController_back_ proc near        ; CODE XREF: -[ViewController goHome:]+C↓P
                                        ; DATA XREF: __objc_const:000000010003E068↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_views ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                cmp     r12, 2
                jnb     short loc_10000580B

loc_1000057FC:                          ; CODE XREF: -[ViewController back]+173↓j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000580B:                          ; CODE XREF: -[ViewController back]+4A↑j
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_views ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_lastObject ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_updateView ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, rax
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                cmp     r15, r14
                jz      short loc_1000058E1

loc_100005878:                          ; CODE XREF: -[ViewController back]+1AD↓j
                                        ; -[ViewController back]+216↓j ...
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_views ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_lastObject ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_S_RemoveView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[ViewController S_RemoveView:]
                mov     rdi, r15
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                mov     rax, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_1000058E1:                          ; CODE XREF: -[ViewController back]+C6↑j
                mov     rdi, rbx        ; void *
                mov     r12, cs:selRef_updateView
                mov     rsi, r12        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r13, cs:selRef_state
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                cmp     r15, 5
                jz      loc_1000057FC
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                cmp     r15, 6
                jnz     loc_100005878
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_views ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r13, cs:selRef_moreView
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController moreView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_containsObject_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     r12d, eax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                test    r12b, r12b
                jz      loc_100005878
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[ViewController moreView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_S_RemoveView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[ViewController S_RemoveView:]
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     loc_100005878
__ViewController_back_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController moreClick](ViewController *self, SEL)
__ViewController_moreClick_ proc near   ; CODE XREF: -[ViewController addBootDevice:]+C↓P
                                        ; DATA XREF: __objc_const:000000010003E080↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_views ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[ViewController views]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_lastObject ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_updateView ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, rax
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                cmp     r15, r12
                jz      short loc_100005AC6
                mov     rsi, cs:selRef_moreView ; char *
                mov     rdi, rbx        ; void *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[ViewController moreView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_S_AddView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[ViewController S_AddView:]
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
; ---------------------------------------------------------------------------

loc_100005AC6:                          ; CODE XREF: -[ViewController moreClick]+79↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__ViewController_moreClick_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController betaClick](ViewController *self, SEL)
__ViewController_betaClick_ proc near   ; DATA XREF: __objc_const:000000010003E098↓o

anonymous_0     = ymmword ptr -60h
anonymous_1     = qword ptr -40h
anonymous_2     = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     r12, rdi
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_boolForKey_ ; char *
                lea     rdx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      short loc_100005B4F
                mov     rsi, cs:selRef_chengBeta_
                mov     rdi, r12
                xor     edx, edx
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[ViewController chengBeta:]
; ---------------------------------------------------------------------------

loc_100005B4F:                          ; CODE XREF: -[ViewController betaClick]+58↑j
                mov     rdi, cs:classRef_NSAlert ; void *
                mov     rsi, cs:selRef_new ; char *
                call    rbx ; _objc_msgSend
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], r12
                mov     r12, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Sure ; "sure"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_addButtonWithTitle_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                lea     rdx, cfstr_Cancel ; "cancel"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_addButtonWithTitle_ ; char *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     r13, cs:selRef_mainBundle
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Includebetabui ; "Includebetabuilds"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setMessageText_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Isbeta ; "isBeta"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setInformativeText_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setAlertStyle_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_view ; char *
                mov     r13, [rbp+var_30]
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+anonymous_0+8]
                mov     [rcx], rax
                mov     eax, 0C2000000h
                mov     [rcx+8], rax
                lea     rax, sub_100005DA7
                mov     [rcx+10h], rax
                lea     rax, unk_10003A208
                mov     [rcx+18h], rax
                mov     [rcx+20h], r13
                mov     rsi, cs:selRef_beginSheetModalForWindow_completionHandler_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, r12
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__ViewController_betaClick_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100005DA7   proc near               ; DATA XREF: -[ViewController betaClick]+284↑o
                push    rbp
                mov     rbp, rsp
                cmp     rsi, 3E8h
                jnz     short loc_100005DCB
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_chengBeta_
                mov     edx, 1
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
; ---------------------------------------------------------------------------

loc_100005DCB:                          ; CODE XREF: sub_100005DA7+B↑j
                pop     rbp
                retn
sub_100005DA7   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController chengBeta:](ViewController *self, SEL, char)
__ViewController_chengBeta__ proc near  ; CODE XREF: -[ViewController addBetaAction]+6C↑P
                                        ; -[ViewController betaClick]+74↑P
                                        ; DATA XREF: ...

var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     r14d, edx
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rbx, cs:selRef_standardUserDefaults
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                xor     edx, edx
                test    r14b, r14b
                setnz   dl
                mov     rsi, cs:selRef_setBool_forKey_ ; char *
                lea     r15, cfstr_Off  ; "off"
                lea     rax, cfstr_On   ; "on"
                mov     r14, rax
                cmovnz  r14, r15
                cmovnz  r15, rax
                lea     rcx, cfstr_UserdefaultsIs ; "UserDefaults_isBeta"
                mov     rdi, r12        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_synchronize ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, cs:selRef_getBetaMenuItem ; char *
                call    r13 ; _objc_msgSend ; +[SMainMenu getBetaMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rsi, cs:selRef_title ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     [rbp+var_38], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rbx, cs:selRef_mainBundle
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rdx, r14
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                mov     rdx, r15
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_stringByReplacingOccurrencesOfString_withString_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, r14
                mov     rcx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_SMainMenu ; void *
                mov     rsi, cs:selRef_getBetaMenuItem ; char *
                call    r13 ; _objc_msgSend ; +[SMainMenu getBetaMenuItem]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTitle_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_40]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_38]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_48]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_chengBeta__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController closeWindow:](ViewController *self, SEL, id)
__ViewController_closeWindow__ proc near
                                        ; DATA XREF: __objc_const:000000010003E0C8↓o

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_29          = byte ptr -29h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     rbx, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rdi, cs:classRef_NSApplication ; void *
                mov     rsi, cs:selRef_sharedApplication ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_mainWindow ; char *
                mov     [rbp+var_40], rax
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_view ; char *
                mov     [rbp+var_48], rbx
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_38], r12
                cmp     r12, rax
                mov     [rbp+var_50], r14
                jz      short loc_10000609C
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r14 ; _objc_release
                jmp     loc_100006131
; ---------------------------------------------------------------------------

loc_10000609C:                          ; CODE XREF: -[ViewController closeWindow:]+9B↑j
                mov     rsi, cs:selRef_object ; char *
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_className ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_containsString_ ; char *
                lea     rdx, cfstr_Nswindow ; "NSWindow"
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     [rbp+var_29], al
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r15 ; _objc_release
                cmp     [rbp+var_29], 0
                jz      short loc_100006131
                mov     rax, cs:_NSApp_ptr
                mov     rdi, [rax]      ; void *
                mov     rsi, cs:selRef_terminate_ ; char *
                mov     rdx, [rbp+var_48]
                call    cs:_objc_msgSend_ptr

loc_100006131:                          ; CODE XREF: -[ViewController closeWindow:]+BE↑j
                                        ; -[ViewController closeWindow:]+13B↑j
                mov     rdi, [rbp+var_50]
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__ViewController_closeWindow__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController addS8BitdoDevice:](ViewController *self, SEL, id)
__ViewController_addS8BitdoDevice__ proc near
                                        ; DATA XREF: __objc_const:000000010003E0E0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     r14, cs:selRef_homeView
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_addS8BitdoDevice_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                mov     rax, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_addS8BitdoDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController removeS8BitdoDevice:](ViewController *self, SEL, id)
__ViewController_removeS8BitdoDevice__ proc near
                                        ; DATA XREF: __objc_const:000000010003E0F8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     r14, cs:selRef_homeView
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_removeS8BitdoDevice_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                mov     rax, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_removeS8BitdoDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController firmwaerUpdateClick:from:](ViewController *self, SEL, id, int)
__ViewController_firmwaerUpdateClick_from__ proc near
                                        ; CODE XREF: -[ViewController MoreViewClick:View:]+AF↓P
                                        ; -[ViewController MoreViewClick:View:]+DE↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r15d, ecx
                mov     rbx, rdi
                mov     r13, cs:selRef_updateView
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setDevice_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     r13, cs:selRef_updateView
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setminiImageposition_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, r15d
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setState_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_S_AddView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend ; -[ViewController S_AddView:]
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_loadViews ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__ViewController_firmwaerUpdateClick_from__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController hasNewFirmwaerVersion:firmwaer:](ViewController *self, SEL, id, id)
__ViewController_hasNewFirmwaerVersion_firmwaer__ proc near
                                        ; DATA XREF: __objc_const:000000010003E128↓o

var_120         = xmmword ptr -120h
var_110         = xmmword ptr -110h
anonymous_0     = xmmword ptr -100h
anonymous_1     = xmmword ptr -0F0h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0F8h
                mov     rbx, rcx
                mov     r15, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     r14, cs:_objc_retain_ptr
                mov     rdi, rdx
                call    r14 ; _objc_retain
                mov     r13, rax
                mov     rdi, rbx
                call    r14 ; _objc_retain
                mov     r12, rax
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_120]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     rsi, cs:selRef_view ; char *
                mov     rax, cs:_objc_msgSend_ptr
                mov     [rbp+var_D8], r15
                mov     rdi, r15        ; void *
                mov     r15, rax
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_subviews
                mov     rdi, rax
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, r14
                mov     r14, rax
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     rdi, r14
                mov     rdx, rbx
                call    r15
                mov     [rbp+var_D0], rax
                test    rax, rax
                jz      loc_100006507
                lea     rax, [rbp+var_120]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_E0], rax
                mov     [rbp+var_C0], r13
                mov     [rbp+var_B8], r12
                mov     [rbp+var_C8], r14

loc_100006441:                          ; CODE XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+1BA↓j
                mov     rbx, cs:selRef_class
                xor     r12d, r12d

loc_10000644B:                          ; CODE XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+17F↓j
                mov     rax, qword ptr [rbp+var_110]
                mov     rcx, [rbp+var_E0]
                cmp     [rax], rcx
                jz      short loc_100006466
                mov     rdi, r14
                call    _objc_enumerationMutation

loc_100006466:                          ; CODE XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+115↑j
                mov     rax, qword ptr [rbp+var_120+8]
                mov     r14, [rax+r12*8]
                mov     rdi, r14
                mov     rsi, rbx
                call    r15
                mov     r13, rax
                mov     rdi, cs:classRef_MoreView
                mov     rsi, rbx
                call    r15
                cmp     r13, rax
                jz      loc_100006609
                mov     rdi, r14
                mov     rsi, rbx
                call    r15
                mov     r14, rax
                mov     rdi, cs:classRef_UpdateView
                mov     rsi, rbx
                call    r15
                cmp     r14, rax
                jz      loc_100006609
                inc     r12
                cmp     [rbp+var_D0], r12
                mov     r14, [rbp+var_C8]
                jnz     short loc_10000644B
                mov     r8d, 10h
                mov     rdi, r14
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_
                lea     rdx, [rbp+var_120]
                lea     rcx, [rbp+var_B0]
                call    r15
                mov     [rbp+var_D0], rax
                test    rax, rax
                mov     r13, [rbp+var_C0]
                mov     r12, [rbp+var_B8]
                jnz     loc_100006441

loc_100006507:                          ; CODE XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+CA↑j
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_updateView
                mov     rbx, [rbp+var_D8]
                mov     rdi, rbx
                call    r15             ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setDevice_
                mov     rdi, rax
                mov     rdx, r13
                call    r15
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                call    rax ; _objc_release
                mov     rdi, rbx
                mov     rsi, cs:selRef_updateView
                call    r15             ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setminiImageposition_
                mov     rdi, rax
                xor     edx, edx
                call    r15
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, cs:selRef_updateView
                call    r15             ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setState_
                mov     edx, 1
                mov     rdi, rax
                call    r15
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, cs:selRef_updateView
                call    r15             ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_S_AddView_
                mov     rdi, rbx
                mov     rdx, rax
                call    r15             ; -[ViewController S_AddView:]
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, cs:selRef_updateView
                call    r15             ; -[ViewController updateView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setNewFirmwaer_
                mov     rdi, rax
                mov     rdx, r12
                call    r15
                jmp     short loc_10000661E
; ---------------------------------------------------------------------------

loc_100006609:                          ; CODE XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+146↑j
                                        ; -[ViewController hasNewFirmwaerVersion:firmwaer:]+168↑j
                mov     r13, [rbp+var_C0]
                mov     r12, [rbp+var_B8]
                mov     r14, [rbp+var_C8]

loc_10000661E:                          ; CODE XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+2C0↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100006656
                add     rsp, 0F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100006656:                          ; CODE XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+2FB↑j
                call    ___stack_chk_fail
__ViewController_hasNewFirmwaerVersion_firmwaer__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController MoreViewClick:View:](ViewController *self, SEL, id, id)
__ViewController_MoreViewClick_View__ proc near
                                        ; DATA XREF: __objc_const:000000010003E140↓o

var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_homeView ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_moreDevice ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, rax
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                test    rbx, rbx
                jz      short loc_10000671F
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_homeView ; char *
                call    r12 ; _objc_msgSend ; -[ViewController homeView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_moreDevice ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_firmwaerUpdateClick_from_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                xor     ecx, ecx
                call    r12 ; _objc_msgSend ; -[ViewController firmwaerUpdateClick:from:]
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     r14, [rbp+var_30]
                jmp     loc_100006876
; ---------------------------------------------------------------------------

loc_10000671F:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+6E↑j
                mov     rsi, cs:selRef_firmwaerUpdateClick_from_ ; char *
                mov     [rbp+var_40], r14
                mov     rdi, r14        ; void *
                mov     r14, [rbp+var_30]
                mov     rdx, r14
                mov     ecx, 1
                call    r12 ; _objc_msgSend ; -[ViewController firmwaerUpdateClick:from:]
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_type
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     ebx, eax
                cmp     ebx, 2
                mov     r13, r12
                jnz     short loc_1000067E9
                mov     [rbp+var_44], ebx
                mov     rdi, r14
                mov     rsi, cs:selRef_details
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_name
                mov     rdi, rax
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_containsString_
                lea     rdx, cfstr_N30  ; "N30"
                mov     rdi, rax
                call    r13
                test    al, al
                mov     rbx, cs:_objc_release_ptr
                jz      short loc_1000067D7
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_38]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_40]
                jmp     short loc_100006854
; ---------------------------------------------------------------------------

loc_1000067D7:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+164↑j
                mov     [rbp+var_50], r12
                mov     [rbp+var_58], r15
                mov     r15, cs:selRef_type
                mov     ebx, [rbp+var_44]

loc_1000067E9:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+112↑j
                mov     rdi, r14
                mov     rsi, cs:selRef_details
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, r15
                mov     r12, r13
                call    r13
                mov     r13d, eax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                cmp     ebx, 2
                jnz     short loc_100006839
                mov     rdi, [rbp+var_50]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_58]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_38]
                call    rbx ; _objc_release
                jmp     short loc_100006843
; ---------------------------------------------------------------------------

loc_100006839:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+1C1↑j
                mov     rdi, [rbp+var_38]
                call    cs:_objc_release_ptr

loc_100006843:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+1DC↑j
                cmp     r13d, 3
                mov     r14, [rbp+var_30]
                mov     r13, r12
                mov     rdi, [rbp+var_40]
                jnz     short loc_10000687F

loc_100006854:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+17A↑j
                mov     rsi, cs:selRef_updateView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_noV1AndV2
                mov     rdi, rax
                call    r13

loc_100006876:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+BF↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10000687F:                          ; CODE XREF: -[ViewController MoreViewClick:View:]+1F7↑j
                mov     rdi, r14
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__ViewController_MoreViewClick_View__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController addBootDevice:](ViewController *self, SEL, id)
__ViewController_addBootDevice__ proc near
                                        ; DATA XREF: __objc_const:000000010003E158↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_moreClick
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[ViewController moreClick]
__ViewController_addBootDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController goHome:](ViewController *self, SEL, id)
__ViewController_goHome__ proc near     ; DATA XREF: __objc_const:000000010003E170↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_back
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[ViewController back]
__ViewController_goHome__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDDinput *__cdecl -[ViewController dinput](ViewController *self, SEL)
__ViewController_dinput_ proc near      ; CODE XREF: -[ViewController viewDidLoad]+187↑P
                                        ; -[ViewController viewDidLoad]+1B1↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_ViewController__dinput ; SHIDDinput *_dinput;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__ViewController_dinput_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController setDinput:](ViewController *self, SEL, id)
__ViewController_setDinput__ proc near  ; CODE XREF: -[ViewController viewDidLoad]+16E↑P
                                        ; DATA XREF: __objc_const:000000010003E1A0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_ViewController__dinput ; SHIDDinput *_dinput;
                pop     rbp
                jmp     _objc_setProperty_atomic
__ViewController_setDinput__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDSwitchAndMac *__cdecl -[ViewController switchAndMac](ViewController *self, SEL)
__ViewController_switchAndMac_ proc near
                                        ; CODE XREF: -[ViewController viewDidLoad]+23C↑P
                                        ; DATA XREF: __objc_const:000000010003E1B8↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_ViewController__switchAndMac ; SHIDSwitchAndMac *_switchAndMac;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__ViewController_switchAndMac_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController setSwitchAndMac:](ViewController *self, SEL, id)
__ViewController_setSwitchAndMac__ proc near
                                        ; CODE XREF: -[ViewController viewDidLoad]+226↑P
                                        ; DATA XREF: __objc_const:000000010003E1D0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_ViewController__switchAndMac ; SHIDSwitchAndMac *_switchAndMac;
                pop     rbp
                jmp     _objc_setProperty_atomic
__ViewController_setSwitchAndMac__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; HomeView *__cdecl -[ViewController homeView](ViewController *self, SEL)
__ViewController_homeView_ proc near    ; CODE XREF: -[ViewController initView]+61↑P
                                        ; -[ViewController initView]+C3↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_ViewController__homeView ; HomeView *_homeView;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__ViewController_homeView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController setHomeView:](ViewController *self, SEL, id)
__ViewController_setHomeView__ proc near
                                        ; CODE XREF: -[ViewController initView]+48↑P
                                        ; DATA XREF: __objc_const:000000010003E200↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_ViewController__homeView ; HomeView *_homeView;
                pop     rbp
                jmp     _objc_setProperty_atomic
__ViewController_setHomeView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController setUpdateView:](ViewController *self, SEL, id)
__ViewController_setUpdateView__ proc near
                                        ; DATA XREF: __objc_const:000000010003E218↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_ViewController__updateView ; UpdateView *_updateView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__ViewController_setUpdateView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SBackButton *__cdecl -[ViewController backButton](ViewController *self, SEL)
__ViewController_backButton_ proc near  ; CODE XREF: -[ViewController S_AddView:]+77↑P
                                        ; -[ViewController showAndHideBackButton]+5C↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_ViewController__backButton ; SBackButton *_backButton;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__ViewController_backButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController setBackButton:](ViewController *self, SEL, id)
__ViewController_setBackButton__ proc near
                                        ; DATA XREF: __objc_const:000000010003E248↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_ViewController__backButton ; SBackButton *_backButton;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__ViewController_setBackButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController setMoreView:](ViewController *self, SEL, id)
__ViewController_setMoreView__ proc near
                                        ; DATA XREF: __objc_const:000000010003E260↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_ViewController__moreView ; MoreView *_moreView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__ViewController_setMoreView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableArray *__cdecl -[ViewController views](ViewController *self, SEL)
__ViewController_views_ proc near       ; CODE XREF: -[ViewController S_AddView:]+2E↑P
                                        ; -[ViewController S_RemoveView:]+31↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_ViewController__views ; NSMutableArray *_views;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__ViewController_views_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController setViews:](ViewController *self, SEL, id)
__ViewController_setViews__ proc near   ; CODE XREF: -[ViewController viewDidLoad]+6B↑P
                                        ; DATA XREF: __objc_const:000000010003E290↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_ViewController__views ; NSMutableArray *_views;
                pop     rbp
                jmp     _objc_setProperty_atomic
__ViewController_setViews__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[ViewController .cxx_destruct](ViewController *self, SEL)
__ViewController__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:000000010003E2A8↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_ViewController__views ; NSMutableArray *_views;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_ViewController__moreView ; MoreView *_moreView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_ViewController__backButton ; SBackButton *_backButton;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_ViewController__updateView ; UpdateView *_updateView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_ViewController__homeView ; HomeView *_homeView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_ViewController__switchAndMac ; SHIDSwitchAndMac *_switchAndMac;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, cs:_OBJC_IVAR_$_ViewController__dinput ; SHIDDinput *_dinput;
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__ViewController__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHIDBoot load](SHIDBoot_meta *self, SEL)
__SHIDBoot_load_ proc near              ; DATA XREF: __objc_const:000000010003E4F0↓o
                push    rbp
                mov     rbp, rsp
                xorps   xmm0, xmm0
                movups  cs:xmmword_10004A350, xmm0
                movups  cs:xmmword_10004A340, xmm0
                movups  cs:xmmword_10004A330, xmm0
                movups  cs:xmmword_10004A320, xmm0
                movups  cs:xmmword_10004A310, xmm0
                movups  cs:xmmword_10004A300, xmm0
                movups  cs:xmmword_10004A2F0, xmm0
                movups  cs:xmmword_10004A2E0, xmm0
                movups  cs:xmmword_10004A2D0, xmm0
                movups  cs:xmmword_10004A2C0, xmm0
                movups  cs:xmmword_10004A2B0, xmm0
                xor     eax, eax
                mov     cs:qword_10004A360, rax
                movaps  cs:xmmword_10004A370, xmm0
                movups  cs:xmmword_10004A370+0Ch, xmm0
                mov     cs:qword_10004A390, rax
                mov     cs:byte_10004A2AC, 1
                lea     rax, xmmword_100049E80
                mov     cs:qword_10004A398, rax
                lea     rax, dword_100049E40
                mov     cs:qword_10004A3A0, rax
                mov     cs:dword_10004A3A8, 3
                movaps  xmm0, cs:xmmword_10002F010
                movaps  cs:xmmword_100049E80, xmm0
                movaps  xmm0, cs:xmmword_10002F020
                movaps  cs:xmmword_100049E50, xmm0
                pop     rbp
                jmp     sub_100022C95
__SHIDBoot_load_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006AEA   proc near
                push    rbp
                mov     rbp, rsp
                mov     cs:byte_10004A2AC, 1
                pop     rbp
                retn
sub_100006AEA   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006AF7   proc near
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:qword_10004A398
                movaps  xmm0, cs:xmmword_10002F010
                movups  xmmword ptr [rax], xmm0
                mov     rax, cs:qword_10004A3A0
                movaps  xmm0, cs:xmmword_10002F020
                movups  xmmword ptr [rax+10h], xmm0
                pop     rbp
                retn
sub_100006AF7   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006B20   proc near               ; CODE XREF: sub_100006F09+438↓p

var_14          = qword ptr -14h
anonymous_0     = dword ptr -0Ch
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                mov     eax, dword ptr cs:xmmword_10004A340+4
                mov     ecx, eax
                and     ecx, 0Fh
                lea     rdx, dword_100049E40
                xor     eax, [rdx+rcx*4]
                lea     rcx, [rbp+var_14]
                mov     [rcx], eax
                mov     r8d, dword ptr cs:xmmword_10004A340+8
                mov     r9d, r8d
                and     r9d, 0Fh
                xor     r8d, [rdx+r9*4]
                mov     [rcx+4], r8d
                mov     r9d, dword ptr cs:xmmword_10004A340+0Ch
                mov     r10d, r9d
                and     r10d, 0Fh
                xor     r9d, [rdx+r10*4]
                mov     [rcx+8], r9d
                mov     dword ptr cs:xmmword_10004A330+8, eax
                mov     dword ptr cs:xmmword_10004A330+0Ch, r8d
                mov     dword ptr cs:xmmword_10004A340, r9d
                mov     edx, 6
                mov     r8d, 0Ch
                call    flashfirmware   ; rdi --buff
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_8]
                jnz     short loc_100006BB7
                add     rsp, 20h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100006BB7:                          ; CODE XREF: sub_100006B20+8F↑j
                call    ___stack_chk_fail
sub_100006B20   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006BBC   proc near               ; CODE XREF: sub_1000076C6+78↓p
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     eax, [rdi+8]
                mov     ecx, [rdi+24h]
                mov     rdx, [rdi]
                mov     qword ptr cs:xmmword_10004A340+4, rdx
                mov     dword ptr cs:xmmword_10004A340+0Ch, eax
                mov     eax, ecx
                shr     eax, 10h
                mov     cs:dword_10004A2A4, eax
                mov     eax, ecx
                shr     eax, 8
                mov     edx, 0FFh
                and     eax, edx
                mov     cs:dword_10004A2A8, eax
                and     ecx, edx
                mov     cs:dword_10004A3AC, ecx
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rbx, cs:selRef_bootDelegate
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r15 ; _objc_msgSend
                mov     r14, cs:selRef_SHIDBootGetFirmwaerType_hid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r15 ; _objc_msgSend
                test    al, al
                jz      short loc_100006C5A
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, rbx        ; char *
                call    r15 ; _objc_msgSend
                mov     edx, cs:dword_10004A3AC
                mov     rcx, cs:qword_100075DB0
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend

loc_100006C5A:                          ; CODE XREF: sub_100006BBC+79↑j
                mov     eax, 1
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100006BBC   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006C6A   proc near

var_1C          = dword ptr -1Ch
anonymous_0     = qword ptr -18h
arg_A0          = qword ptr  0B0h

                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     eax, dword ptr [rbp+arg_A0]
                lea     rcx, [rbp+var_1C]
                mov     [rcx], eax
                movq    xmm0, [rbp+arg_A0+4]
                pshufd  xmm0, xmm0, 0E1h
                movq    qword ptr [rcx+4], xmm0
                mov     edx, 1
                mov     r8d, 1Ch
                call    flashfirmware   ; rdi --buff
                add     rsp, 20h
                pop     rbp
                retn
sub_100006C6A   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006CA6   proc near

arg_0           = byte ptr  10h

                push    rbp
                mov     rbp, rsp
                lea     rcx, [rbp+arg_0]
                mov     edx, 1
                mov     r8d, 1Ch
                call    flashfirmware   ; rdi --buff
                pop     rbp
                retn
sub_100006CA6   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006CC0   proc near
                push    rbp
                mov     rbp, rsp
                mov     eax, edi
                bswap   eax
                pop     rbp
                retn
sub_100006CC0   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006CCA   proc near               ; CODE XREF: sub_1000076C6+E0↓p

var_40          = byte ptr -40h
anonymous_1     = qword ptr -3Ch
anonymous_0     = xmmword ptr -34h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 20h
                mov     rbx, rdi
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     r14, cs:selRef_filePath
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      loc_100006DCD
                mov     rdi, cs:classRef_NSInputStream
                call    _objc_alloc
                mov     r15, rax
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_initWithFileAtPath_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_100006DCD
                mov     r14, rax
                mov     rsi, cs:selRef_open ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_read_maxLength_ ; char *
                lea     rdx, xmmword_10004A370
                mov     ecx, 1Ch
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                cmp     rax, 1Ch
                jnz     short loc_100006DBD
                mov     eax, dword ptr cs:xmmword_10004A370
                mov     dword ptr cs:xmmword_10004A350, eax
                movq    xmm0, qword ptr cs:xmmword_10004A370+4
                pshufd  xmm0, xmm0, 0E1h
                movq    qword ptr cs:xmmword_10004A350+4, xmm0
                mov     dword ptr cs:xmmword_10004A350+0Ch, 0
                cmp     cs:dword_10004A2A4, 105h
                jnz     loc_100006E49
                movzx   ecx, ax
                mov     edx, cs:dword_10004A2A8
                cmp     edx, 1
                ja      short loc_100006DE1
                cmp     ecx, 88h
                jbe     short loc_100006DFD
                jmp     loc_100006E49
; ---------------------------------------------------------------------------

loc_100006DBD:                          ; CODE XREF: sub_100006CCA+9B↑j
                mov     rsi, cs:selRef_close ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr

loc_100006DCD:                          ; CODE XREF: sub_100006CCA+2C↑j
                                        ; sub_100006CCA+68↑j ...
                xor     r14d, r14d

loc_100006DD0:                          ; CODE XREF: sub_100006CCA+17D↓j
                                        ; sub_100006CCA+228↓j
                movzx   eax, r14b
                add     rsp, 20h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100006DE1:                          ; CODE XREF: sub_100006CCA+E4↑j
                cmp     edx, 2
                jnz     short loc_100006E49
                cmp     ecx, 1F6h
                jb      short loc_100006DFD
                setnz   cl
                cmp     eax, 10000h
                setb    al
                or      al, cl
                jnz     short loc_100006E49

loc_100006DFD:                          ; CODE XREF: sub_100006CCA+EC↑j
                                        ; sub_100006CCA+122↑j
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     r14, cs:selRef_bootDelegate
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rbx, cs:selRef_SHIDBootNotSupportFirmware_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_100006DCD
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                xor     r14d, r14d
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                jmp     short loc_100006DD0
; ---------------------------------------------------------------------------

loc_100006E49:                          ; CODE XREF: sub_100006CCA+D2↑j
                                        ; sub_100006CCA+EE↑j ...
                mov     rsi, cs:selRef_close ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     cs:dword_10004A3A8, 1
                mov     rdi, rbx
                call    sub_10002DB0C
                mov     r14, rax
                mov     rdi, rbx
                call    sub_10002DBB9
                movzx   eax, ax
                cmp     eax, 3206h
                jnz     short loc_100006EB9
                movzx   eax, r14w
                cmp     eax, 2DC8h
                jnz     short loc_100006EB9
                movdqa  xmm0, cs:xmmword_10004A370
                pshufb  xmm0, cs:xmmword_10002F030
                movdqa  cs:xmmword_10004A370, xmm0
                movups  xmm1, cs:xmmword_10004A370+0Ch
                lea     rcx, [rbp+var_40]
                movups  xmmword ptr [rcx+0Ch], xmm1
                movdqa  xmmword ptr [rcx], xmm0
                jmp     short loc_100006ED7
; ---------------------------------------------------------------------------

loc_100006EB9:                          ; CODE XREF: sub_100006CCA+1B4↑j
                                        ; sub_100006CCA+1BF↑j
                mov     eax, dword ptr cs:xmmword_10004A350
                lea     rcx, [rbp+var_40]
                mov     [rcx], eax
                movq    xmm0, qword ptr cs:xmmword_10004A350+4
                pshufd  xmm0, xmm0, 0E1h
                movq    qword ptr [rcx+4], xmm0

loc_100006ED7:                          ; CODE XREF: sub_100006CCA+1ED↑j
                mov     rdi, rbx
                mov     esi, 97h
                mov     edx, 1
                mov     r8d, 1Ch
                call    flashfirmware   ; rdi --buff
                mov     r14b, 1
                jmp     loc_100006DD0
sub_100006CCA   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006EF7   proc near
                push    rbp
                mov     rbp, rsp
                mov     r8d, ecx
                mov     rcx, rdx
                xor     edx, edx
                pop     rbp
                jmp     flashfirmware   ; rdi --buff
sub_100006EF7   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100006F09   proc near               ; CODE XREF: sub_1000076C6+C2↓p

var_B0          = ymmword ptr -0B0h
anonymous_1     = qword ptr -90h
anonymous_2     = byte ptr -88h
var_80          = byte ptr -80h
anonymous_0     = qword ptr -7Fh
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 88h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                movzx   eax, byte ptr [rdx]
                cmp     eax, 14h
                jg      loc_1000070AE
                mov     rbx, rdi
                cmp     eax, 4
                jz      loc_1000070E5
                cmp     eax, 14h
                jnz     loc_1000070BF
                mov     r14d, esi
                mov     eax, cs:dword_10004A3A8
                cmp     eax, 3
                jz      loc_100007355
                cmp     eax, 2
                jz      loc_1000071F8
                cmp     eax, 1
                jnz     loc_1000070BF
                mov     rdi, cs:classRef_NSInputStream
                call    _objc_alloc
                mov     r15, rax
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, cs:selRef_filePath ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_initWithFileAtPath_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     qword ptr cs:xmmword_10004A2B0, rax
                test    rax, rax
                jz      loc_1000070BF
                mov     rsi, cs:selRef_open ; char *
                mov     rdi, rax        ; void *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     cs:dword_10004A3A8, 2
                mov     rdi, qword ptr cs:xmmword_10004A2B0 ; void *
                mov     r12, cs:selRef_read_maxLength_
                lea     r15, xmmword_10004A2B0+8
                mov     ecx, 1Ch
                mov     rsi, r12        ; char *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                cmp     r14b, 87h
                mov     rdi, qword ptr cs:xmmword_10004A2B0 ; void *
                mov     eax, 80h
                mov     ecx, 20h
                cmovz   rcx, rax
                mov     rsi, r12        ; char *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     r12, rax
                movzx   esi, r14b
                mov     rdi, rbx
                xor     edx, edx
                mov     rcx, r15
                mov     r8d, r12d
                call    flashfirmware   ; rdi --buff
                add     dword ptr cs:xmmword_10004A350+0Ch, r12d
                mov     dword ptr cs:qword_10004A390, 1
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     r14, cs:selRef_bootDelegate
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                mov     rbx, cs:selRef_SHIDBootStartUpdate_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                test    al, al
                jz      short loc_1000070BF
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdx, cs:qword_100075DB0
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_30]
                jnz     loc_1000074F0
                mov     rdi, rax
                mov     rsi, rbx
                mov     rax, cs:_objc_msgSend_ptr
                jmp     loc_1000074DD
; ---------------------------------------------------------------------------

loc_1000070AE:                          ; CODE XREF: sub_100006F09+28↑j
                cmp     eax, 15h
                jz      short loc_1000070B8
                cmp     eax, 18h
                jnz     short loc_1000070BF

loc_1000070B8:                          ; CODE XREF: sub_100006F09+1A8↑j
                mov     cs:byte_10004A2AC, 1

loc_1000070BF:                          ; CODE XREF: sub_100006F09+3D↑j
                                        ; sub_100006F09+61↑j ...
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     loc_1000074F0
                add     rsp, 88h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000070E5:                          ; CODE XREF: sub_100006F09+34↑j
                mov     r15, rdx
                movzx   eax, word ptr [rdx+3]
                mov     word ptr cs:dword_10004A3B0, ax
                mov     r12d, cs:dword_10004A3B0
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                xorps   xmm0, xmm0
                cmp     r12d, 0FFFFFFFFh
                jz      short loc_100007146
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, r12
                divss   xmm0, cs:dword_10002F040

loc_100007146:                          ; CODE XREF: sub_100006F09+22B↑j
                mov     rsi, cs:selRef_setVersion_ ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend
                movzx   eax, byte ptr [r15+5]
                test    ax, ax
                jz      short loc_100007170
                mov     rsi, cs:selRef_setBeta_ ; char *
                movzx   edx, ax
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr

loc_100007170:                          ; CODE XREF: sub_100006F09+252↑j
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     r15, cs:selRef_bootDelegate
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     r12, cs:selRef_SHIDBootGetVersion_hid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                test    al, al
                jz      short loc_1000071BF
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rcx, cs:qword_100075DB0
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r14
                call    r13 ; _objc_msgSend

loc_1000071BF:                          ; CODE XREF: sub_100006F09+294↑j
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     loc_1000074F0
                mov     rdi, rbx
                mov     esi, 97h
                mov     edx, 1Ah
                xor     ecx, ecx
                add     rsp, 88h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     setReport3206
; ---------------------------------------------------------------------------

loc_1000071F8:                          ; CODE XREF: sub_100006F09+58↑j
                cmp     dword ptr cs:qword_10004A390, 1
                jz      short loc_10000720B
                mov     dword ptr cs:qword_10004A390, 1

loc_10000720B:                          ; CODE XREF: sub_100006F09+2F6↑j
                mov     dword ptr cs:qword_10004A390+4, 0
                cmp     r14b, 87h
                mov     rdi, qword ptr cs:xmmword_10004A2B0 ; void *
                mov     rsi, cs:selRef_read_maxLength_ ; char *
                mov     eax, 80h
                mov     ecx, 20h
                cmovz   rcx, rax
                lea     r15, xmmword_10004A2B0+8
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     r12, rax
                movzx   r14d, r14b
                mov     rdi, rbx
                mov     esi, r14d
                xor     edx, edx
                mov     rcx, r15
                mov     r8d, r12d
                call    flashfirmware   ; rdi --buff
                add     r12d, dword ptr cs:xmmword_10004A350+0Ch
                mov     dword ptr cs:xmmword_10004A350+0Ch, r12d
                imul    eax, r12d, 64h
                xor     edx, edx
                div     dword ptr cs:xmmword_10004A350+4
                mov     r15d, eax
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, cs:selRef_lastProgress ; char *
                call    r13 ; _objc_msgSend
                cmp     r15d, eax
                jz      short loc_1000072E6
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     r12, cs:selRef_bootDelegate
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdx, cs:selRef_SHIDBootStartUpdateing_shid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                test    al, al
                jz      short loc_1000072E6
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rcx, cs:qword_100075DB0
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootStartUpdateing_shid_ ; char *
                mov     edx, r15d
                call    r13 ; _objc_msgSend

loc_1000072E6:                          ; CODE XREF: sub_100006F09+38B↑j
                                        ; sub_100006F09+3B7↑j
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, cs:selRef_setLastProgress_ ; char *
                mov     edx, r15d
                call    cs:_objc_msgSend_ptr
                mov     eax, dword ptr cs:xmmword_10004A350+0Ch
                cmp     eax, dword ptr cs:xmmword_10004A350+4
                jb      loc_1000070BF
                mov     rdi, qword ptr cs:xmmword_10004A2B0 ; void *
                mov     rsi, cs:selRef_close ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, qword ptr cs:xmmword_10004A2B0
                call    cs:_objc_release_ptr
                mov     qword ptr cs:xmmword_10004A2B0, 0
                mov     rdi, rbx
                mov     esi, r14d
                call    sub_100006B20
                mov     cs:dword_10004A3A8, 3
                jmp     loc_1000070BF
; ---------------------------------------------------------------------------

loc_100007355:                          ; CODE XREF: sub_100006F09+4F↑j
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rsi, cs:selRef_isUSBRR_PS_classic ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10000744B
                lea     rax, xmmword_10004A3B8
                mov     cs:qword_10004A3E0, rax
                mov     cs:word_10004A3E8, 28h
                xor     eax, eax
                mov     cs:word_10004A3EA, ax
                mov     cs:word_10004A2A0, ax
                xorps   xmm0, xmm0
                movups  cs:xmmword_10004A3B8, xmm0
                movups  cs:xmmword_10004A3C8, xmm0
                mov     cs:qword_10004A3D8, 0
                mov     cs:word_10004A3EC, 1Bh
                lea     rsi, [rbp+var_80]
                mov     byte ptr [rsi], 8
                mov     rax, 8003000001B3100h
                mov     [rsi+1], rax
                mov     rdi, rbx
                mov     edx, 40h
                call    setReportOneFrame
                mov     cs:dword_10004A3B4, 31h
                mov     cs:dword_10004A3F0, 0
                mov     esi, 3B9ACA00h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_B0]
                mov     [rdx], rcx
                mov     ecx, 0C0000000h
                mov     [rdx+8], rcx
                lea     rcx, sub_1000075A5
                mov     [rdx+10h], rcx
                lea     rcx, unk_10003A238
                mov     [rdx+18h], rcx
                mov     [rdx+20h], rbx
                mov     [rdx+28h], r14b
                mov     rsi, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                call    _dispatch_after
                jmp     loc_1000070BF
; ---------------------------------------------------------------------------

loc_10000744B:                          ; CODE XREF: sub_100006F09+462↑j
                movzx   esi, r14b
                mov     rdi, rbx
                mov     edx, 2
                xor     ecx, ecx
                xor     r8d, r8d
                call    flashfirmware   ; rdi --buff
                mov     cs:qword_10004A390, 2
                mov     cs:byte_10004A2AC, 1
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     r14, cs:selRef_bootDelegate
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rbx, cs:selRef_SHIDBootStartUpdateed_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                mov     r15, r12
                call    r12 ; _objc_msgSend
                test    al, al
                jz      loc_1000070BF
                mov     rdi, cs:qword_100075DB0
                mov     rsi, r14
                call    r15
                mov     rdx, cs:qword_100075DB0
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_30]
                jnz     short loc_1000074F0
                mov     rdi, rax
                mov     rsi, rbx
                mov     rax, r15

loc_1000074DD:                          ; CODE XREF: sub_100006F09+1A0↑j
                add     rsp, 88h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_1000074F0:                          ; CODE XREF: sub_100006F09+18D↑j
                                        ; sub_100006F09+1C4↑j ...
                call    ___stack_chk_fail
sub_100006F09   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000074F5   proc near

var_50          = byte ptr -50h
anonymous_0     = qword ptr -4Fh
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                lea     rax, xmmword_10004A3B8
                mov     cs:qword_10004A3E0, rax
                mov     cs:word_10004A3E8, 28h
                xor     eax, eax
                mov     cs:word_10004A3EA, ax
                mov     cs:word_10004A2A0, ax
                xorps   xmm0, xmm0
                movups  cs:xmmword_10004A3B8, xmm0
                movups  cs:xmmword_10004A3C8, xmm0
                mov     cs:qword_10004A3D8, 0
                mov     cs:word_10004A3EC, 1Bh
                lea     rsi, [rbp+var_50]
                mov     byte ptr [rsi], 8
                mov     rax, 8003000001B3100h
                mov     [rsi+1], rax
                mov     edx, 40h
                call    setReportOneFrame
                mov     cs:dword_10004A3B4, 31h
                mov     cs:dword_10004A3F0, 0
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_8]
                jnz     short loc_1000075A0
                add     rsp, 50h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000075A0:                          ; CODE XREF: sub_1000074F5+A3↑j
                call    ___stack_chk_fail
sub_1000074F5   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000075A5   proc near               ; DATA XREF: sub_100006F09+510↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+20h]
                call    sub_10000764E
                mov     rdi, [rbx+20h]
                movzx   esi, byte ptr [rbx+28h]
                mov     edx, 2
                xor     ecx, ecx
                xor     r8d, r8d
                call    flashfirmware   ; rdi --buff
                mov     cs:qword_10004A390, 2
                mov     cs:byte_10004A2AC, 1
                mov     rdi, cs:qword_100075DB0 ; void *
                mov     rbx, cs:selRef_bootDelegate
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     r14, cs:selRef_SHIDBootStartUpdateed_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                mov     r15, r12
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_100007645
                mov     rdi, cs:qword_100075DB0
                mov     rsi, rbx
                call    r15
                mov     rdx, cs:qword_100075DB0
                mov     rdi, rax
                mov     rsi, r14
                mov     rax, r15
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100007645:                          ; CODE XREF: sub_1000075A5+77↑j
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_1000075A5   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000764E   proc near               ; CODE XREF: sub_1000075A5+12↑p
                push    rbp
                mov     rbp, rsp
                mov     r8, rdi
                mov     cs:dword_10004A3B4, 0
                mov     byte ptr cs:xmmword_10004A3B8+6, 4
                mov     cx, 0FFFFh
                xor     eax, eax
                lea     rdx, xmmword_10004A3B8

loc_100007673:                          ; CODE XREF: sub_10000764E+53↓j
                movzx   esi, byte ptr [rax+rdx]
                xor     ecx, esi
                mov     sil, 8

loc_10000767C:                          ; CODE XREF: sub_10000764E+4A↓j
                movzx   edi, cx
                shr     edi, 1
                mov     r9d, edi
                xor     r9d, 0FFFF8408h
                test    cl, 1
                cmovz   r9d, edi
                mov     ecx, r9d
                dec     sil
                jnz     short loc_10000767C
                inc     rax
                cmp     rax, 26h
                jnz     short loc_100007673
                mov     word ptr cs:qword_10004A3D8+6, cx
                lea     rdx, xmmword_10004A3B8
                mov     edi, 32h
                mov     esi, 8003000h
                mov     ecx, 28h
                pop     rbp
                jmp     sub_1000078ED
sub_10000764E   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000076C6   proc near               ; CODE XREF: sub_10000788F+13↓j
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdx
                mov     r15d, esi
                mov     r14, rdi
                call    sub_10002DB0C
                mov     r12, rax
                mov     rdi, r14
                call    sub_10002DBB9
                mov     ecx, 0FFFFh
                and     rax, rcx
                xor     rax, 3206h
                and     r12, rcx
                xor     r12, 2DC8h
                xor     ecx, ecx
                or      r12, rax
                setz    cl
                cmp     byte ptr [rbx+rcx], 0
                jz      short loc_100007723

loc_100007710:                          ; CODE XREF: sub_1000076C6+6A↓j
                                        ; sub_1000076C6+C7↓j ...
                mov     rdi, rbx
                mov     rsi, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     sub_1000077DE
; ---------------------------------------------------------------------------

loc_100007723:                          ; CODE XREF: sub_1000076C6+48↑j
                movzx   eax, byte ptr [rbx+rcx+1]
                cmp     eax, 16h
                jz      short loc_100007777
                cmp     eax, 19h
                jnz     short loc_100007710
                mov     eax, ecx
                lea     rdi, [rbx+rax]
                add     rdi, 4
                xor     esi, esi
                call    sub_100006BBC
                mov     rdi, r14
                call    sub_10002DB0C
                mov     r12, rax
                mov     rdi, r14
                call    sub_10002DBB9
                movzx   eax, ax
                cmp     eax, 3206h
                jnz     short loc_10000778F
                movzx   eax, r12w
                cmp     eax, 2DC8h
                jnz     short loc_10000778F
                mov     cs:dword_10004A3AC, 0C8h
                jmp     short loc_1000077A1
; ---------------------------------------------------------------------------

loc_100007777:                          ; CODE XREF: sub_1000076C6+65↑j
                mov     eax, ecx
                lea     rdx, [rbx+rax]
                add     rdx, 4
                movzx   esi, r15b
                mov     rdi, r14
                call    sub_100006F09
                jmp     short loc_100007710
; ---------------------------------------------------------------------------

loc_10000778F:                          ; CODE XREF: sub_1000076C6+98↑j
                                        ; sub_1000076C6+A3↑j
                mov     eax, cs:dword_10004A3AC
                cmp     eax, 0C8h
                jz      short loc_1000077A1
                cmp     eax, 1
                jnz     short loc_1000077D2

loc_1000077A1:                          ; CODE XREF: sub_1000076C6+AF↑j
                                        ; sub_1000076C6+D4↑j
                mov     rdi, r14
                xor     esi, esi
                call    sub_100006CCA
                test    al, al
                jz      short loc_1000077D2
                cmp     r15b, 87h
                jnz     loc_100007710
                mov     rdi, r14
                mov     esi, 87h
                mov     edx, 1Ch
                xor     ecx, ecx
                call    setReport3206
                jmp     loc_100007710
; ---------------------------------------------------------------------------

loc_1000077D2:                          ; CODE XREF: sub_1000076C6+D9↑j
                                        ; sub_1000076C6+E7↑j
                mov     cs:byte_10004A2AC, 1
                jmp     loc_100007710
sub_1000076C6   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000077DE   proc near               ; CODE XREF: sub_1000076C6+58↑j
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                movzx   eax, byte ptr [rdi]
                mov     cs:word_10004A3EA, ax
                cmp     byte ptr [rdi], 0
                jz      short loc_1000077FA

loc_1000077F3:                          ; CODE XREF: sub_1000077DE+26↓j
                                        ; sub_1000077DE+2F↓j ...
                add     rsp, 8
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000077FA:                          ; CODE XREF: sub_1000077DE+13↑j
                mov     rbx, rsi
                mov     rsi, rdi
                cmp     byte ptr [rdi+1], 14h
                jnz     short loc_1000077F3
                cmp     cs:dword_10004A3B4, 31h
                jnz     short loc_1000077F3
                movzx   eax, word ptr [rsi+2]
                add     eax, 0FFFFFFFCh
                mov     cs:word_10004A3EA, ax
                add     rsi, 4          ; void *
                movzx   edi, cs:word_10004A2A0
                add     rdi, cs:qword_10004A3E0 ; void *
                movzx   edx, ax         ; size_t
                call    _memcpy
                movzx   eax, cs:word_10004A2A0
                add     ax, cs:word_10004A3EA
                mov     cs:word_10004A2A0, ax
                movzx   ecx, cs:word_10004A3E8
                cmp     cx, ax
                jbe     short loc_1000077F3
                sub     ecx, eax
                cmp     cx, 1Bh
                mov     edx, 1Bh
                cmovb   edx, ecx
                mov     cs:word_10004A3EC, dx
                movzx   esi, ax
                add     esi, 8003000h
                add     edx, 4
                movzx   edx, dx
                mov     edi, 31h
                mov     rcx, rbx
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     sub_1000079BF
sub_1000077DE   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000788F   proc near               ; DATA XREF: sub_100007A60+F6↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, rdx
                lea     rdx, [r9+1]
                mov     esi, 97h
                xor     ecx, ecx
                pop     rbp
                jmp     sub_1000076C6
sub_10000788F   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000078A7   proc near
                push    rbp
                mov     rbp, rsp
                mov     ax, 0FFFFh
                test    esi, esi
                jz      short loc_1000078E8
                xor     ecx, ecx

loc_1000078B5:                          ; CODE XREF: sub_1000078A7+3F↓j
                movzx   edx, cl
                movzx   edx, byte ptr [rdi+rdx]
                xor     eax, edx
                mov     dl, 8

loc_1000078C0:                          ; CODE XREF: sub_1000078A7+35↓j
                movzx   r8d, ax
                shr     r8d, 1
                mov     r9d, r8d
                xor     r9d, 0FFFF8408h
                test    al, 1
                cmovz   r9d, r8d
                mov     eax, r9d
                dec     dl
                jnz     short loc_1000078C0
                inc     cl
                movzx   edx, cl
                cmp     dx, si
                jb      short loc_1000078B5

loc_1000078E8:                          ; CODE XREF: sub_1000078A7+A↑j
                movzx   eax, ax
                pop     rbp
                retn
sub_1000078A7   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000078ED   proc near               ; CODE XREF: sub_10000764E+73↑j

var_460         = byte ptr -460h
anonymous_2     = byte ptr -45Fh
anonymous_0     = word ptr -45Eh
anonymous_1     = word ptr -45Ch
anonymous_3     = byte ptr -45Ah
anonymous_4     = byte ptr -459h
var_458         = byte ptr -458h
var_60          = byte ptr -60h
var_5F          = byte ptr -5Fh
var_20          = qword ptr -20h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 448h
                mov     r15, r8
                mov     ebx, esi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_20], rax
                lea     rsi, [rbp+var_458]
                mov     byte ptr [rsi-8], 0
                mov     [rsi-7], dil
                lea     eax, [rcx+4]
                mov     [rsi-6], al
                mov     byte ptr [rbp+anonymous_0+1], ah
                mov     [rsi-4], bl
                mov     byte ptr [rbp+anonymous_1+1], bh
                mov     eax, ebx
                shr     eax, 10h
                mov     [rsi-2], al
                shr     ebx, 18h
                mov     [rsi-1], bl
                movsxd  r14, ecx
                mov     ecx, 3F8h
                mov     rdi, rsi
                mov     rsi, rdx
                mov     rdx, r14
                call    ___memcpy_chk
                lea     eax, [r14+8]
                cmp     r14d, 38h
                mov     ecx, 3Fh
                cmovl   ecx, eax
                lea     rdi, [rbp+var_5F]
                mov     [rdi-1], cl
                movsxd  rdx, ecx
                lea     rsi, [rbp+var_460]
                mov     ecx, 3Fh
                call    ___memcpy_chk
                lea     rsi, [rbp+var_60]
                mov     rdi, r15
                mov     edx, 40h
                call    setReportOneFrame
                mov     ecx, eax
                xor     eax, eax
                neg     ecx
                sbb     eax, eax
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_20]
                jnz     short loc_1000079BA
                add     rsp, 448h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000079BA:                          ; CODE XREF: sub_1000078ED+BD↑j
                call    ___stack_chk_fail
sub_1000078ED   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000079BF   proc near               ; CODE XREF: sub_1000077DE+AC↑j

var_50          = byte ptr -50h
anonymous_0     = qword ptr -4Fh
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                shl     edi, 8
                shl     edx, 10h
                mov     eax, edx
                and     eax, 0FF000000h
                and     edx, 0FF0000h
                or      edx, edi
                or      edx, eax
                mov     eax, 0FFh
                mov     edi, esi
                and     edi, eax
                shl     rdi, 20h
                or      rdi, rdx
                mov     edx, esi
                shr     edx, 8
                and     edx, eax
                shl     rdx, 28h
                or      rdx, rdi
                mov     edi, esi
                shr     edi, 10h
                and     edi, eax
                shl     rdi, 30h
                or      rdi, rdx
                shr     esi, 18h
                shl     rsi, 38h
                or      rsi, rdi
                lea     rax, [rbp+var_50]
                mov     byte ptr [rax], 8
                mov     [rax+1], rsi
                mov     rdi, rcx
                mov     rsi, rax
                mov     edx, 40h
                call    setReportOneFrame
                mov     ecx, eax
                xor     eax, eax
                neg     ecx
                sbb     eax, eax
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_8]
                jnz     short loc_100007A5B
                add     rsp, 50h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100007A5B:                          ; CODE XREF: sub_1000079BF+94↑j
                call    ___stack_chk_fail
sub_1000079BF   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100007A60   proc near               ; DATA XREF: -[SHIDBoot open]+317↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r15, rcx
                mov     rbx, rdi
                mov     rdi, rcx
                call    sub_10002DB0C
                mov     r12, rax
                mov     rdi, r15
                call    sub_10002DBB9
                mov     r13, rax
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rcx, r14
                mov     r14, rax
                mov     rsi, cs:selRef_setPid_
                mov     eax, 0FFFFh
                and     r13d, eax
                mov     rdi, r14
                mov     edx, r13d
                mov     r13, rcx
                call    rcx
                mov     rsi, cs:selRef_setVid_
                mov     eax, 0FFFFh
                and     r12d, eax
                mov     rdi, r14
                mov     edx, r12d
                call    r13
                lea     rsi, cfstr_Product ; "Product"
                mov     rdi, r15
                call    _IOHIDDeviceGetProperty
                mov     rsi, cs:selRef_setDeviceName_
                mov     rdi, r14
                mov     rdx, rax
                call    r13
                mov     rsi, cs:selRef_setDeviceRef_
                mov     rdi, r14
                mov     rdx, r15
                call    r13
                mov     rsi, cs:selRef_devices
                mov     rdi, rbx
                call    r13
                mov     rsi, cs:selRef_addObject_
                mov     rdi, rax
                mov     rdx, r14
                call    r13
                mov     r12, r13
                mov     rdi, r15
                xor     esi, esi
                call    _IOHIDDeviceOpen
                lea     rax, _OBJC_IVAR_$_SHIDManager_gpReportBufB ; unsigned __int8 gpReportBufB[64];
                mov     rsi, [rax]
                add     rsi, rbx
                lea     rax, _OBJC_IVAR_$_SHIDManager_reportSizeIn ; unsigned __int8 reportSizeIn;
                mov     rax, [rax]
                movzx   edx, byte ptr [rbx+rax]
                lea     rcx, sub_10000788F
                mov     rdi, r15
                mov     r8, rbx
                call    _IOHIDDeviceRegisterInputReportCallback
                mov     r15, cs:selRef_bootDelegate
                mov     r13, rbx
                mov     rdi, rbx
                mov     rsi, r15
                mov     rbx, r12
                call    r12
                mov     r12, cs:selRef_SHIDBootAddDevice_hid_
                mov     rsi, cs:selRef_respondsToSelector_
                mov     rdi, rax
                mov     rdx, r12
                call    rbx
                test    al, al
                jz      short loc_100007BC3
                mov     rdi, r13
                mov     rsi, r15
                call    rbx
                mov     rcx, cs:qword_100075DB0
                mov     rdi, rax
                mov     rsi, r12
                mov     rdx, r14
                mov     rax, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100007BC3:                          ; CODE XREF: sub_100007A60+136↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100007A60   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100007BD2   proc near               ; DATA XREF: -[SHIDBoot open]+331↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r15, rdi
                mov     rbx, cs:selRef_bootDelegate
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                mov     r14, cs:selRef_SHIDBootRemoveDevice_hid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                mov     r12, r13
                call    r13 ; _objc_msgSend
                test    al, al
                jz      short loc_100007C40
                mov     rdi, r15
                mov     rsi, rbx
                call    r12
                mov     rcx, cs:qword_100075DB0
                mov     rdi, rax
                mov     rsi, r14
                xor     edx, edx
                mov     rax, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100007C40:                          ; CODE XREF: sub_100007BD2+41↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100007BD2   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBoot open](SHIDBoot *self, SEL)
__SHIDBoot_open_ proc near              ; DATA XREF: __objc_const:000000010003E558↓o

var_50          = qword ptr -50h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     r14, rdi
                mov     cs:qword_100075DB0, rdi
                mov     [rbp+var_40], rdi
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                xor     esi, esi
                call    _IOHIDManagerCreate
                mov     rsi, cs:selRef_setHidManager_ ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend ; -[SHIDManager setHidManager:]
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                mov     edx, 5750h
                call    rbx ; _objc_msgSend
                mov     r14, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     r13, cs:selRef_stringWithUTF8String_
                lea     rdx, aProductid ; "ProductID"
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     r12, cs:selRef_setObject_forKey_
                mov     rdi, r15        ; void *
                mov     [rbp+var_38], r15
                mov     rsi, r12        ; char *
                mov     rdx, r14
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 2DC8h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     r14, rax
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, aVendorid  ; "VendorID"
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r14
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     r13, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 5750h
                mov     r14, cs:selRef_numberWithLong_
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aProductid ; "ProductID"
                call    rbx ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     [rbp+var_30], r13
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     r12, rsi
                mov     rdx, r15
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 483h
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     r14, cs:selRef_stringWithUTF8String_
                mov     rsi, r14        ; char *
                lea     rdx, aVendorid  ; "VendorID"
                call    rbx ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r15
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 5760h
                mov     r13, cs:selRef_numberWithLong_
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     r12, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, r14        ; char *
                lea     rdx, aProductid ; "ProductID"
                call    rbx ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     r14, rsi
                mov     rdx, r12
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 483h
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     r12, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aVendorid  ; "VendorID"
                call    rbx ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r12
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     r12, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 3206h
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     r13, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aProductid ; "ProductID"
                call    rbx ; _objc_msgSend
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r13
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 2DC8h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     r13, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aVendorid  ; "VendorID"
                call    rbx ; _objc_msgSend
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r13
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_ ; char *
                mov     [rsp+50h+var_50], 0
                mov     rdx, [rbp+var_38]
                mov     rcx, [rbp+var_30]
                mov     r8, r15
                mov     r9, r12
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     r14, cs:selRef_hidManager
                mov     r12, [rbp+var_40]
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     rdi, rax
                mov     rsi, r15
                call    _IOHIDManagerSetDeviceMatchingMultiple
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     r15, rax
                call    _CFRunLoopGetCurrent
                mov     rcx, cs:_kCFRunLoopDefaultMode_ptr
                mov     rdx, [rcx]
                mov     rdi, r15
                mov     rsi, rax
                call    _IOHIDManagerScheduleWithRunLoop
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     rdi, rax
                xor     esi, esi
                call    _IOHIDManagerOpen
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend ; -[SHIDManager hidManager]
                lea     rsi, sub_100007A60
                mov     rdi, rax
                mov     rdx, r12
                call    _IOHIDManagerRegisterDeviceMatchingCallback
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend ; -[SHIDManager hidManager]
                lea     rsi, sub_100007BD2
                mov     rdi, rax
                mov     rdx, r12
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _IOHIDManagerRegisterDeviceRemovalCallback
__SHIDBoot_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDBootDelegate *__cdecl -[SHIDBoot bootDelegate](SHIDBoot *self, SEL)
__SHIDBoot_bootDelegate_ proc near      ; DATA XREF: __objc_const:000000010003E570↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBoot__bootDelegate ; SHIDBootDelegate *_bootDelegate;
                pop     rbp
                jmp     _objc_loadWeak
__SHIDBoot_bootDelegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBoot setBootDelegate:](SHIDBoot *self, SEL, id)
__SHIDBoot_setBootDelegate__ proc near  ; DATA XREF: __objc_const:000000010003E588↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBoot__bootDelegate ; SHIDBootDelegate *_bootDelegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__SHIDBoot_setBootDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDBootDelegate *__cdecl -[SHIDBoot addDelegate](SHIDBoot *self, SEL)
__SHIDBoot_addDelegate_ proc near       ; DATA XREF: __objc_const:000000010003E5A0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBoot__addDelegate ; SHIDBootDelegate *_addDelegate;
                pop     rbp
                jmp     _objc_loadWeak
__SHIDBoot_addDelegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBoot setAddDelegate:](SHIDBoot *self, SEL, id)
__SHIDBoot_setAddDelegate__ proc near   ; DATA XREF: __objc_const:000000010003E5B8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBoot__addDelegate ; SHIDBootDelegate *_addDelegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__SHIDBoot_setAddDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[SHIDBoot filePath](SHIDBoot *self, SEL)
__SHIDBoot_filePath_ proc near          ; DATA XREF: __objc_const:000000010003E5D0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBoot__filePath ; NSString *_filePath;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDBoot_filePath_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBoot setFilePath:](SHIDBoot *self, SEL, id)
__SHIDBoot_setFilePath__ proc near      ; DATA XREF: __objc_const:000000010003E5E8↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_SHIDBoot__filePath ; NSString *_filePath;
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__SHIDBoot_setFilePath__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[SHIDBoot isUSBRR_PS_classic](SHIDBoot *self, SEL)
__SHIDBoot_isUSBRR_PS_classic_ proc near
                                        ; DATA XREF: __objc_const:000000010003E600↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBoot__isUSBRR_PS_classic ; char _isUSBRR_PS_classic;
                movsx   eax, byte ptr [rdi+rax]
                pop     rbp
                retn
__SHIDBoot_isUSBRR_PS_classic_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBoot setIsUSBRR_PS_classic:](SHIDBoot *self, SEL, char)
__SHIDBoot_setIsUSBRR_PS_classic__ proc near
                                        ; DATA XREF: __objc_const:000000010003E618↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBoot__isUSBRR_PS_classic ; char _isUSBRR_PS_classic;
                mov     [rdi+rax], dl
                pop     rbp
                retn
__SHIDBoot_setIsUSBRR_PS_classic__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[SHIDBoot lastProgress](SHIDBoot *self, SEL)
__SHIDBoot_lastProgress_ proc near      ; DATA XREF: __objc_const:000000010003E630↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBoot__lastProgress ; int _lastProgress;
                mov     eax, [rdi+rax]
                pop     rbp
                retn
__SHIDBoot_lastProgress_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBoot setLastProgress:](SHIDBoot *self, SEL, int)
__SHIDBoot_setLastProgress__ proc near  ; DATA XREF: __objc_const:000000010003E648↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBoot__lastProgress ; int _lastProgress;
                mov     [rdi+rax], edx
                pop     rbp
                retn
__SHIDBoot_setLastProgress__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBoot .cxx_destruct](SHIDBoot *self, SEL)
__SHIDBoot__cxx_destruct_ proc near     ; DATA XREF: __objc_const:000000010003E660↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SHIDBoot__addDelegate ; SHIDBootDelegate *_addDelegate;
                add     rdi, rbx
                call    _objc_destroyWeak
                add     rbx, cs:_OBJC_IVAR_$_SHIDBoot__bootDelegate ; SHIDBootDelegate *_bootDelegate;
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_destroyWeak
__SHIDBoot__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SView *__cdecl -[SView init](SView *self, SEL)
__SView_init_   proc near               ; DATA XREF: __objc_const:000000010003E810↓o

anonymous_0     = CGRect ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                lea     rax, [rbp+anonymous_0.var0.var1]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_init
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      loc_100008156
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002EFF0
                movsd   xmm3, cs:qword_10002EFF8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release

loc_100008156:                          ; CODE XREF: -[SView init]+38↑j
                mov     rax, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SView_init_   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SView drawRect:](SView *self, SEL, CGRect)
__SView_drawRect__ proc near            ; DATA XREF: __objc_const:000000010003E828↓o

var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
anonymous_0     = qword ptr -8
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                lea     rax, [rbp+var_10]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_drawRect_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+30h+var_20], xmm1
                movups  [rsp+30h+var_30], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                add     rsp, 30h
                pop     rbp
                retn
__SView_drawRect__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSColor *__cdecl -[SView sBackgroundColor](SView *self, SEL)
__SView_sBackgroundColor_ proc near     ; DATA XREF: __objc_const:000000010003E840↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_SView__sBackgroundColor ; NSColor *_sBackgroundColor;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__SView_sBackgroundColor_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SView setSBackgroundColor:](SView *self, SEL, id)
__SView_setSBackgroundColor__ proc near ; DATA XREF: __objc_const:000000010003E858↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_SView__sBackgroundColor ; NSColor *_sBackgroundColor;
                pop     rbp
                jmp     _objc_setProperty_atomic
__SView_setSBackgroundColor__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SView .cxx_destruct](SView *self, SEL)
__SView__cxx_destruct_ proc near        ; DATA XREF: __objc_const:000000010003E870↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SView__sBackgroundColor ; NSColor *_sBackgroundColor;
                xor     esi, esi
                pop     rbp
                jmp     _objc_storeStrong
__SView__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SBackButton *__cdecl -[SBackButton initWithFrame:](SBackButton *self, SEL, CGRect)
__SBackButton_initWithFrame__ proc near ; DATA XREF: __objc_const:000000010003E960↓o

var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = qword ptr -30h
anonymous_0     = qword ptr -28h
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                lea     rax, [rbp+var_30]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SBackButton_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_initWithFrame_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+50h+var_40], xmm1
                movups  [rsp+50h+var_50], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      loc_1000082FE
                mov     rdi, cs:classRef_NSImage ; void *
                mov     rsi, cs:selRef_imageNamed_ ; char *
                lea     rdx, cfstr_Back ; "back"
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setBezelStyle_ ; char *
                mov     edx, 3
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setAlignment_ ; char *
                mov     edx, 2
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setFrameSize_ ; char *
                movsd   xmm0, cs:qword_10002F048
                mov     rdi, rbx        ; void *
                movaps  xmm1, xmm0
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setBordered_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setBorderWidth_ ; char *
                xorps   xmm0, xmm0
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setImageScaling_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend

loc_1000082FE:                          ; CODE XREF: -[SBackButton initWithFrame:]+47↑j
                mov     rax, rbx
                add     rsp, 30h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SBackButton_initWithFrame__ endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[S8BitdoDataDetails description](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_description_ proc near
                                        ; DATA XREF: __objc_const:000000010003EA10↓o

var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r15, rdi
                mov     rax, cs:classRef_NSString
                mov     [rbp+var_38], rax
                mov     rsi, cs:selRef_name ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[S8BitdoDataDetails name]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDataDetails pid]
                movzx   eax, ax
                mov     [rbp+var_2C], eax
                mov     rsi, cs:selRef_vid ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDataDetails vid]
                movzx   r13d, ax
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDataDetails type]
                mov     r14d, eax
                mov     rsi, cs:selRef_order ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[S8BitdoDataDetails order]
                mov     r10, rax
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_NamePid02xVid0 ; "name:%@ pid:%02x vid:%02x type:%d order:%ld"
                mov     rdi, [rbp+var_38] ; void *
                mov     rcx, rbx
                mov     r8d, [rbp+var_2C]
                mov     r9d, r13d
                xor     eax, eax
                push    r10
                push    r14
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                add     rsp, 10h
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__S8BitdoDataDetails_description_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[S8BitdoDataDetails name](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_name_ proc near    ; CODE XREF: -[S8BitdoDataDetails description]+2D↑P
                                        ; DATA XREF: __objc_const:000000010003EA28↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    cs:_objc_msgSend_ptr ; +[Language isCurrentChinaLanguage]
                test    al, al
                jz      short loc_10000842C
                mov     rdi, cs:classRef_S8BitdoDeviceDetailsTools ; void *
                mov     edx, [rbx+0Ch]
                movzx   ecx, word ptr [rbx+8]
                mov     r8, [rbx+10h]
                mov     rsi, cs:selRef_getNameWith_pid_name_ ; char *
                call    cs:_objc_msgSend_ptr ; +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                jmp     short loc_100008436
; ---------------------------------------------------------------------------

loc_10000842C:                          ; CODE XREF: -[S8BitdoDataDetails name]+1F↑j
                mov     rdi, [rbx+10h]
                call    cs:_objc_retain_ptr

loc_100008436:                          ; CODE XREF: -[S8BitdoDataDetails name]+48↑j
                mov     rdi, rax
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__S8BitdoDataDetails_name_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setName:](S8BitdoDataDetails *self, SEL, id)
__S8BitdoDataDetails_setName__ proc near
                                        ; DATA XREF: __objc_const:000000010003EA40↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 10h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__S8BitdoDataDetails_setName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDataDetails pid](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_pid_ proc near     ; CODE XREF: -[S8BitdoDataDetails description]+45↑P
                                        ; DATA XREF: __objc_const:000000010003EA58↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+8]
                pop     rbp
                retn
__S8BitdoDataDetails_pid_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setPid:](S8BitdoDataDetails *self, SEL, unsigned __int16)
__S8BitdoDataDetails_setPid__ proc near ; DATA XREF: __objc_const:000000010003EA70↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+8], dx
                pop     rbp
                retn
__S8BitdoDataDetails_setPid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int16 __cdecl -[S8BitdoDataDetails vid](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_vid_ proc near     ; CODE XREF: -[S8BitdoDataDetails description]+58↑P
                                        ; DATA XREF: __objc_const:000000010003EA88↓o
                push    rbp
                mov     rbp, rsp
                movzx   eax, word ptr [rdi+0Ah]
                pop     rbp
                retn
__S8BitdoDataDetails_vid_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setVid:](S8BitdoDataDetails *self, SEL, unsigned __int16)
__S8BitdoDataDetails_setVid__ proc near ; DATA XREF: __objc_const:000000010003EAA0↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+0Ah], dx
                pop     rbp
                retn
__S8BitdoDataDetails_setVid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[S8BitdoDataDetails type](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_type_ proc near    ; CODE XREF: -[S8BitdoDevice details]+33F↑P
                                        ; -[S8BitdoDataDetails description]+69↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     eax, [rdi+0Ch]
                pop     rbp
                retn
__S8BitdoDataDetails_type_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setType:](S8BitdoDataDetails *self, SEL, int)
__S8BitdoDataDetails_setType__ proc near
                                        ; DATA XREF: __objc_const:000000010003EAD0↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+0Ch], edx
                pop     rbp
                retn
__S8BitdoDataDetails_setType__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[S8BitdoDataDetails miniImageName](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_miniImageName_ proc near
                                        ; DATA XREF: __objc_const:000000010003EAE8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+18h]
                pop     rbp
                retn
__S8BitdoDataDetails_miniImageName_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setMiniImageName:](S8BitdoDataDetails *self, SEL, id)
__S8BitdoDataDetails_setMiniImageName__ proc near
                                        ; DATA XREF: __objc_const:000000010003EB00↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 18h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__S8BitdoDataDetails_setMiniImageName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[S8BitdoDataDetails moreImagehighlight](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_moreImagehighlight_ proc near
                                        ; DATA XREF: __objc_const:000000010003EB18↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+20h]
                pop     rbp
                retn
__S8BitdoDataDetails_moreImagehighlight_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setMoreImagehighlight:](S8BitdoDataDetails *self, SEL, id)
__S8BitdoDataDetails_setMoreImagehighlight__ proc near
                                        ; DATA XREF: __objc_const:000000010003EB30↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 20h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__S8BitdoDataDetails_setMoreImagehighlight__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[S8BitdoDataDetails moreImage](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_moreImage_ proc near
                                        ; DATA XREF: __objc_const:000000010003EB48↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+28h]
                pop     rbp
                retn
__S8BitdoDataDetails_moreImage_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setMoreImage:](S8BitdoDataDetails *self, SEL, id)
__S8BitdoDataDetails_setMoreImage__ proc near
                                        ; DATA XREF: __objc_const:000000010003EB60↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 28h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__S8BitdoDataDetails_setMoreImage__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; signed __int64 __cdecl -[S8BitdoDataDetails order](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails_order_ proc near   ; CODE XREF: -[S8BitdoDataDetails description]+79↑P
                                        ; DATA XREF: __objc_const:000000010003EB78↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+30h]
                pop     rbp
                retn
__S8BitdoDataDetails_order_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails setOrder:](S8BitdoDataDetails *self, SEL, signed __int64)
__S8BitdoDataDetails_setOrder__ proc near
                                        ; DATA XREF: __objc_const:000000010003EB90↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+30h], rdx
                pop     rbp
                retn
__S8BitdoDataDetails_setOrder__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[S8BitdoDataDetails .cxx_destruct](S8BitdoDataDetails *self, SEL)
__S8BitdoDataDetails__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:000000010003EBA8↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 28h
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+20h]
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+18h]
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 10h
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__S8BitdoDataDetails__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[S8BitdoDeviceDetailsTools load](S8BitdoDeviceDetailsTools_meta *self, SEL)
__S8BitdoDeviceDetailsTools_load_ proc near
                                        ; DATA XREF: __objc_const:000000010003EDA0↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:classRef_S8BitdoDataDetails ; void *
                mov     rsi, cs:selRef_mj_objectArrayWithFilename_ ; char *
                lea     rdx, cfstr_S8bitdodeviceP ; "S8BitdoDevice.plist"
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075DB8
                mov     cs:qword_100075DB8, rax
                pop     rbp
                jmp     cs:_objc_release_ptr
__S8BitdoDeviceDetailsTools_load_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[S8BitdoDeviceDetailsTools get8BitdoDevicePIDVIDAndNAMEs](S8BitdoDeviceDetailsTools_meta *self, SEL)
__S8BitdoDeviceDetailsTools_get8BitdoDevicePIDVIDAndNAMEs_ proc near
                                        ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+45↑P
                                        ; -[S8BitdoDevice details]+59↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075DB8
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__S8BitdoDeviceDetailsTools_get8BitdoDevicePIDVIDAndNAMEs_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs](S8BitdoDeviceDetailsTools_meta *self, SEL)
__S8BitdoDeviceDetailsTools_getMore8BitdoDevicePIDVIDAndNAMEs_ proc near
                                        ; CODE XREF: -[MoreView addProduct]+2C↓P
                                        ; DATA XREF: __objc_const:000000010003EDD0↓o

var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     rsi, cs:selRef_get8BitdoDevicePIDVIDAndNAMEs ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r15, rax
                mov     r13, cs:selRef_count
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                test    rax, rax
                jz      loc_1000086C8
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_38], rax
                xor     r12d, r12d
                mov     [rbp+var_40], rbx

loc_1000085EB:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+14B↓j
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     [rbp+var_48], r12
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                test    rax, rax
                jz      short loc_100008693
                mov     rax, cs:selRef_order
                mov     [rbp+var_50], rax
                xor     r12d, r12d

loc_100008627:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+11A↓j
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rbx, [rbp+var_50]
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp+var_58], rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rbx, r15
                mov     r15, r14
                mov     r14, rax
                mov     rdi, r13
                mov     r13, cs:selRef_count
                call    cs:_objc_release_ptr
                cmp     [rbp+var_58], r14
                mov     r14, r15
                mov     r15, rbx
                jz      short loc_1000086A1
                inc     r12
                mov     rdi, r15
                mov     rsi, r13
                call    r14
                cmp     rax, r12
                ja      short loc_100008627

loc_100008693:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+A0↑j
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_38] ; char *
                mov     rdx, [rbp+var_30]
                call    r14 ; _objc_msgSend

loc_1000086A1:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+109↑j
                mov     rdi, [rbp+var_30]
                call    cs:_objc_release_ptr
                mov     r12, [rbp+var_48]
                inc     r12
                mov     rbx, [rbp+var_40]
                mov     rdi, rbx
                mov     rsi, r13
                call    r14
                cmp     rax, r12
                ja      loc_1000085EB

loc_1000086C8:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+5C↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r15
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__S8BitdoDeviceDetailsTools_getMore8BitdoDevicePIDVIDAndNAMEs_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[S8BitdoDeviceDetailsTools getNameWith:pid:name:](S8BitdoDeviceDetailsTools_meta *self, SEL, int, int, id)
__S8BitdoDeviceDetailsTools_getNameWith_pid_name__ proc near
                                        ; CODE XREF: -[S8BitdoDataDetails name]+3A↑P
                                        ; -[Firmware fileName]+1F↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rdi, r8
                mov     r15d, ecx
                mov     r14d, edx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    cs:_objc_msgSend_ptr ; +[Language isCurrentChinaLanguage]
                test    al, al
                jz      short loc_100008733
                cmp     r14d, 5
                jz      short loc_100008742
                cmp     r14d, 6
                jnz     short loc_10000874B
                lea     r14, cfstr_Classic ; "Classic 无线接收器"
                jmp     loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008733:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+32↑j
                cmp     r14d, 10h
                jnz     short loc_1000087AD ; jumptable 0000000100008793 cases 1-3,5-11,13-16,19-26,28,29,34,42,43

loc_100008739:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↓j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_8bitdoS30Modki ; jumptable 0000000100008793 case 12
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008742:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+38↑j
                lea     r14, cfstr_F30  ; "F30 街机摇杆"
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000874B:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+3E↑j
                mov     eax, r14d
                xor     eax, 7
                mov     ecx, r15d
                xor     ecx, 0A5A5h
                or      ecx, eax
                jnz     short loc_100008767
                lea     r14, cfstr_Nes  ; "NES 无线接收器"
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008767:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+75↑j
                xor     r15d, 2DC8h
                or      eax, r15d
                jnz     short loc_10000877C
                lea     r14, cfstr_Sfc  ; "SFC 无线接收器"
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000877C:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+8A↑j
                lea     eax, [r14-4]
                cmp     eax, 2Eh        ; switch 47 cases
                ja      short loc_10000879E ; jumptable 0000000100008793 default case
                lea     rcx, off_10000888C
                movsxd  rax, dword ptr [rcx+rax*4]
                add     rax, rcx
                jmp     rax             ; switch jump
; ---------------------------------------------------------------------------

loc_100008795:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_N30_0 ; jumptable 0000000100008793 case 0
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000879E:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+9C↑j
                cmp     r14d, 3Bh       ; jumptable 0000000100008793 default case
                jnz     short loc_1000087AD ; jumptable 0000000100008793 cases 1-3,5-11,13-16,19-26,28,29,34,42,43
                lea     r14, cfstr_Ps   ; "PS 接收器"
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_1000087AD:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+50↑j
                                        ; +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j ...
                mov     rdi, rbx        ; jumptable 0000000100008793 cases 1-3,5-11,13-16,19-26,28,29,34,42,43
                call    cs:_objc_retain_ptr
                mov     r14, rax

loc_1000087B9:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+47↑j
                                        ; +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+59↑j ...
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_1000087D4:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, stru_10003B5D8 ; jumptable 0000000100008793 case 46
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_1000087DD:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Pc_1 ; jumptable 0000000100008793 case 41
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_1000087E6:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_V3   ; jumptable 0000000100008793 case 30
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_1000087EF:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Md   ; jumptable 0000000100008793 case 18
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_1000087F8:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Pro2Xbox ; jumptable 0000000100008793 case 32
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008801:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Ns   ; jumptable 0000000100008793 case 37
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000880A:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, stru_10003B5B8 ; jumptable 0000000100008793 case 45
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008813:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_V3_0 ; jumptable 0000000100008793 case 31
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000881C:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_UsbPs ; jumptable 0000000100008793 case 17
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008825:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Pc   ; jumptable 0000000100008793 case 39
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000882E:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Usb_1 ; jumptable 0000000100008793 case 4
                jmp     short loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008837:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Xbox ; jumptable 0000000100008793 case 36
                jmp     loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008843:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Sn30Pro ; jumptable 0000000100008793 case 27
                jmp     loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000884F:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Pc_0 ; jumptable 0000000100008793 case 40
                jmp     loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000885B:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Usb2 ; jumptable 0000000100008793 case 35
                jmp     loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008867:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Pro2 ; jumptable 0000000100008793 case 33
                jmp     loc_1000087B9
; ---------------------------------------------------------------------------

loc_100008873:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, cfstr_Ns_0 ; jumptable 0000000100008793 case 38
                jmp     loc_1000087B9
; ---------------------------------------------------------------------------

loc_10000887F:                          ; CODE XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+AC↑j
                                        ; DATA XREF: __text:off_10000888C↓o
                lea     r14, stru_10003B598 ; jumptable 0000000100008793 case 44
                jmp     loc_1000087B9
__S8BitdoDeviceDetailsTools_getNameWith_pid_name__ endp

; ---------------------------------------------------------------------------
                align 4
off_10000888C   dd offset loc_100008795 - 10000888Ch
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+9E↑o
                dd offset loc_1000087AD - 10000888Ch ; jump table for switch statement
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_10000882E - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_100008739 - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_10000881C - 10000888Ch
                dd offset loc_1000087EF - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_100008843 - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087E6 - 10000888Ch
                dd offset loc_100008813 - 10000888Ch
                dd offset loc_1000087F8 - 10000888Ch
                dd offset loc_100008867 - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_10000885B - 10000888Ch
                dd offset loc_100008837 - 10000888Ch
                dd offset loc_100008801 - 10000888Ch
                dd offset loc_100008873 - 10000888Ch
                dd offset loc_100008825 - 10000888Ch
                dd offset loc_10000884F - 10000888Ch
                dd offset loc_1000087DD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_1000087AD - 10000888Ch
                dd offset loc_10000887F - 10000888Ch
                dd offset loc_10000880A - 10000888Ch
                dd offset loc_1000087D4 - 10000888Ch

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHIDBootPro2 allocWithZone:](SHIDBootPro2_meta *self, SEL, _NSZone *)
__SHIDBootPro2_allocWithZone__ proc near
                                        ; DATA XREF: __objc_const:000000010003EE98↓o

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                mov     [rbp+var_30], rax
                mov     eax, 0C0000000h
                mov     [rbp+var_28], rax
                lea     rax, sub_1000089B0
                mov     [rbp+var_20], rax
                lea     rax, unk_10003A258
                mov     [rbp+var_18], rax
                mov     [rbp+var_10], rdx
                mov     [rbp+var_8], rdi
                cmp     cs:qword_100075DC0, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10000899E

loc_10000898C:                          ; CODE XREF: +[SHIDBootPro2 allocWithZone:]+66↓j
                mov     rdi, cs:qword_100075DC8
                add     rsp, 30h
                pop     rbp
                jmp     cs:_objc_retain_ptr
; ---------------------------------------------------------------------------

loc_10000899E:                          ; CODE XREF: +[SHIDBootPro2 allocWithZone:]+42↑j
                lea     rdi, qword_100075DC0
                lea     rsi, [rbp+var_30]
                call    _dispatch_once
                jmp     short loc_10000898C
__SHIDBootPro2_allocWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000089B0   proc near               ; DATA XREF: +[SHIDBootPro2 allocWithZone:]+1C↑o

var_10          = qword ptr -10h
anonymous_0     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     rdx, [rdi+20h]
                mov     rax, [rdi+28h]
                lea     rdi, [rbp+var_10]
                mov     [rdi], rax
                mov     rax, cs:classRef_SHIDBootPro2_0
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_allocWithZone_
                call    _objc_msgSendSuper2
                mov     rdi, cs:qword_100075DC8
                mov     cs:qword_100075DC8, rax
                call    cs:_objc_release_ptr
                add     rsp, 10h
                pop     rbp
                retn
sub_1000089B0   endp


; =============== S U B R O U T I N E =======================================


; id __cdecl +[SHIDBootPro2 sharedInstance](SHIDBootPro2_meta *self, SEL)
__SHIDBootPro2_sharedInstance_ proc near
                                        ; CODE XREF: sub_100008B19+27↓P
                                        ; sub_100008B19+E4↓P ...
                mov     rdi, cs:qword_100075DC8
                test    rdi, rdi
                jnz     _objc_retainAutoreleaseReturnValue
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:classRef_SHIDBootPro2
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, cs:qword_100075DC8
                mov     cs:qword_100075DC8, rax
                call    cs:_objc_release_ptr
                mov     rdi, cs:qword_100075DC8
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__SHIDBootPro2_sharedInstance_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDBootPro2 copyWithZone:](SHIDBootPro2 *self, SEL, _NSZone *)
__SHIDBootPro2_copyWithZone__ proc near ; DATA XREF: __objc_const:000000010003EF18↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075DC8
                pop     rbp
                jmp     cs:_objc_retain_ptr
__SHIDBootPro2_copyWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDBootPro2 mutableCopyWithZone:](SHIDBootPro2 *self, SEL, _NSZone *)
__SHIDBootPro2_mutableCopyWithZone__ proc near
                                        ; DATA XREF: __objc_const:000000010003EF30↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075DC8
                pop     rbp
                jmp     cs:_objc_retain_ptr
__SHIDBootPro2_mutableCopyWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableArray *__cdecl -[SHIDBootPro2 blocks](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_blocks_ proc near        ; CODE XREF: -[SHIDBootPro2 addBlock:Cmd:]+34↓P
                                        ; -[SHIDBootPro2 addBlock:Cmd:]+F0↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     r14, cs:_OBJC_IVAR_$_SHIDBootPro2__blocks ; NSMutableArray *_blocks;
                mov     rdi, [rdi+r14]
                test    rdi, rdi
                jnz     short loc_100008AB5
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbx+r14]
                mov     [rbx+r14], rax
                call    cs:_objc_release_ptr
                mov     rdi, [rbx+r14]

loc_100008AB5:                          ; CODE XREF: -[SHIDBootPro2 blocks]+18↑j
                pop     rbx
                pop     r14
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__SHIDBootPro2_blocks_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100008ABE   proc near
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_100008ABE   endp


; =============== S U B R O U T I N E =======================================


sub_100008AC4   proc near               ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+A9↓p
                                        ; sub_1000095F5+137↓p
                test    esi, esi
                jle     short loc_100008B11
                push    rbp
                mov     rbp, rsp
                mov     ax, 0FFFFh
                lea     rcx, word_10002F050

loc_100008AD7:                          ; CODE XREF: sub_100008AC4+48↓j
                mov     dl, [rdi]
                mov     r8d, 8

loc_100008ADF:                          ; CODE XREF: sub_100008AC4+3B↓j
                movzx   r9d, ax
                shr     r9d, 1
                movzx   edx, dl
                xor     eax, edx
                mov     r10d, eax
                and     r10d, 1
                mov     eax, r9d
                xor     ax, [rcx+r10*2]
                shr     dl, 1
                dec     r8d
                jnz     short loc_100008ADF
                inc     rdi
                lea     edx, [rsi-1]
                cmp     esi, 1
                mov     esi, edx
                jg      short loc_100008AD7
                pop     rbp
                jmp     short loc_100008B15
; ---------------------------------------------------------------------------

loc_100008B11:                          ; CODE XREF: sub_100008AC4+2↑j
                mov     ax, 0FFFFh

loc_100008B15:                          ; CODE XREF: sub_100008AC4+4B↑j
                movzx   eax, ax
                retn
sub_100008AC4   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100008B19   proc near               ; DATA XREF: sub_100008C49+77↓o

var_30          = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_30.var0.var0], r9
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_blocks ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_lastObject ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                test    r14, r14
                jz      loc_100008C32
                mov     r13, cs:selRef_objectForKeyedSubscript_
                lea     rdx, cfstr_Cmd  ; "cmd"
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_intValue ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r12d, eax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                lea     rdx, cfstr_Block ; "block"
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      short loc_100008C29
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    rbx ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_readReadFlash_Cmd_Block_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, [rbp+var_30.var0.var0]
                mov     ecx, r12d
                mov     r8, r13
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_100008C29:                          ; CODE XREF: sub_100008B19+D4↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr

loc_100008C32:                          ; CODE XREF: sub_100008B19+78↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100008B19   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100008C49   proc near               ; DATA XREF: -[SHIDBootPro2 open]+29A↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r14, rcx
                mov     rbx, rdi
                mov     rdi, rcx
                call    sub_10002DB0C
                mov     [rbp+var_38], rax
                mov     rdi, r14
                call    sub_10002DBB9
                mov     [rbp+var_30], rax
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_setDevice_ ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                xor     esi, esi
                call    _IOHIDDeviceOpen
                lea     rax, _OBJC_IVAR_$_SHIDManager_gpReportBufB ; unsigned __int8 gpReportBufB[64];
                mov     rsi, [rax]
                add     rsi, rbx
                lea     rax, _OBJC_IVAR_$_SHIDManager_reportSizeIn ; unsigned __int8 reportSizeIn;
                mov     rax, [rax]
                movzx   edx, byte ptr [rbx+rax]
                lea     rcx, sub_100008B19
                mov     rdi, r14
                mov     r8, rbx
                call    _IOHIDDeviceRegisterInputReportCallback
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_SHIDBootAddDevice_hid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      loc_100008DC9
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r13, rax
                mov     rsi, cs:selRef_setPid_ ; char *
                mov     r15d, 0FFFFh
                mov     rdx, [rbp+var_30]
                and     edx, r15d
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setVid_ ; char *
                mov     rdx, [rbp+var_38]
                and     edx, r15d
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                lea     rsi, cfstr_Product ; "Product"
                mov     rdi, r14
                call    _IOHIDDeviceGetProperty
                mov     rsi, cs:selRef_setDeviceName_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootAddDevice_hid_ ; char *
                mov     rdx, r13
                xor     ecx, ecx
                call    r12 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release

loc_100008DC9:                          ; CODE XREF: sub_100008C49+C4↑j
                mov     rdi, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100008C49   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100008DE0   proc near               ; DATA XREF: -[SHIDBootPro2 open]+2B4↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rcx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_setDevice_ ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_SHIDBootRemoveDevice_hid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      loc_100008ED9
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r13, rax
                lea     rsi, cfstr_Product ; "Product"
                mov     rdi, r14
                call    _IOHIDDeviceGetProperty
                mov     rsi, cs:selRef_setDeviceName_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootRemoveDevice_hid_ ; char *
                mov     rdx, r13
                xor     ecx, ecx
                call    r12 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release

loc_100008ED9:                          ; CODE XREF: sub_100008DE0+6B↑j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100008DE0   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 open](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_open_ proc near          ; DATA XREF: __objc_const:000000010003EF60↓o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r14, rdi
                mov     [rbp+var_40], rdi
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                xor     esi, esi
                call    _IOHIDManagerCreate
                mov     rsi, cs:selRef_setHidManager_ ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend ; -[SHIDManager setHidManager:]
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                mov     edx, 3208h
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     r14, cs:selRef_stringWithUTF8String_
                lea     rdx, aProductid ; "ProductID"
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, r15
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 2DC8h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, aVendorid  ; "VendorID"
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r12        ; void *
                mov     r14, r12
                mov     [rbp+var_38], r12
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r15
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 3002h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aProductid ; "ProductID"
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r13
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 2DC8h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aVendorid  ; "VendorID"
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r15        ; void *
                mov     [rbp+var_30], r15
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r12
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_ ; char *
                mov     rdx, r14
                mov     rcx, r15
                xor     r8d, r8d
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:selRef_hidManager
                mov     r15, [rbp+var_40]
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                mov     rsi, r12
                call    _IOHIDManagerSetDeviceMatchingMultiple
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     r14, rax
                call    _CFRunLoopGetCurrent
                mov     rcx, cs:_kCFRunLoopDefaultMode_ptr
                mov     rdx, [rcx]
                mov     rdi, r14
                mov     rsi, rax
                call    _IOHIDManagerScheduleWithRunLoop
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                xor     esi, esi
                call    _IOHIDManagerOpen
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                lea     rsi, sub_100008C49
                mov     rdi, rax
                mov     rdx, r15
                call    _IOHIDManagerRegisterDeviceMatchingCallback
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                lea     rsi, sub_100008DE0
                mov     rdi, rax
                mov     rdx, r15
                call    _IOHIDManagerRegisterDeviceRemovalCallback
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_38]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SHIDBootPro2_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:](SHIDBootPro2 *self, SEL, char *, unsigned int, unsigned int, unsigned int, int, unsigned __int16)
__SHIDBootPro2_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params__ proc near
                                        ; CODE XREF: -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]+55↓P
                                        ; DATA XREF: __objc_const:000000010003EF78↓o

var_60          = ymmword ptr -60h
var_40          = xmmword ptr -40h
var_30          = xmmword ptr -30h
var_20          = qword ptr -20h
arg_0           = dword ptr  10h
arg_8           = word ptr  18h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                movzx   eax, [rbp+arg_8]
                movzx   esi, word ptr [rbp+arg_0]
                mov     rdi, cs:___stack_chk_guard_ptr
                mov     rdi, [rdi]
                mov     [rbp+var_20], rdi
                xorps   xmm0, xmm0
                movaps  xmmword ptr [rbp+var_60+10h], xmm0
                movaps  [rbp+var_30], xmm0
                movaps  [rbp+var_40], xmm0
                mov     byte ptr [rbp+var_60], 5
                cmp     ecx, 2Eh
                mov     r14d, 2Eh
                cmovb   r14d, ecx
                mov     word ptr [rbp+var_60+1], si
                mov     word ptr [rbp+var_60+3], ax
                mov     [rbp-53h], r8d
                mov     dword ptr [rbp+var_60+5], r14d
                mov     dword ptr [rbp+var_60+9], r9d
                test    rdx, rdx
                jz      short loc_10000925A
                lea     rdi, [rbp+var_60+11h]
                mov     eax, r14d
                mov     ecx, 2Fh
                mov     rsi, rdx
                mov     rdx, rax
                call    ___memcpy_chk

loc_10000925A:                          ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+5D↑j
                mov     rsi, cs:selRef_bootType ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                mov     ecx, eax
                and     ecx, 0FFFFFFFAh
                cmp     ecx, 0Ah
                jz      short loc_100009283
                cmp     eax, 16h
                ja      short loc_1000092D6
                mov     ecx, 570186h
                bt      ecx, eax
                jnb     short loc_1000092D6

loc_100009283:                          ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+8E↑j
                                        ; -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+10B↓j ...
                lea     r15, [rbp+var_60+11h]
                mov     rdi, r15
                mov     esi, r14d
                call    sub_100008AC4
                mov     [r15-0Ah], ax

loc_100009297:                          ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+114↓j
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 device]
                add     r14b, 11h
                movzx   edx, r14b
                lea     rsi, [rbp+var_60]
                mov     rdi, rax
                call    setReportOneFrame
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_20]
                jnz     short loc_1000092FA
                add     rsp, 48h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000092D6:                          ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+93↑j
                                        ; -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+9D↑j
                mov     rsi, cs:selRef_bootType_PID ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType_PID]
                lea     ecx, [rax-3012h]
                cmp     ecx, 2
                jb      short loc_100009283
                cmp     eax, 6008h
                jz      short loc_100009283
                jmp     short loc_100009297
; ---------------------------------------------------------------------------

loc_1000092FA:                          ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+E5↑j
                call    ___stack_chk_fail
__SHIDBootPro2_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000092FF   proc near
                push    rbp
                mov     rbp, rsp
                lea     eax, [rdi-1]
                cmp     eax, 2
                setb    al
                lea     ecx, [rdi-7]
                cmp     ecx, 2
                setb    cl
                or      cl, al
                mov     eax, edi
                and     eax, 0FFFFFFFAh
                cmp     eax, 0Ah
                setz    al
                lea     edx, [rdi-10h]
                cmp     edx, 3
                setb    dl
                or      dl, al
                or      dl, cl
                and     edi, 0FFFFFFFDh
                cmp     edi, 14h
                setz    al
                or      al, dl
                pop     rbp
                retn
sub_1000092FF   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000933C   proc near
                push    rbp
                mov     rbp, rsp
                mov     eax, edi
                and     eax, 0FFFFFFFEh
                cmp     eax, 3012h
                setz    cl
                cmp     edi, 6008h
                setz    al
                or      al, cl
                pop     rbp
                retn
sub_10000933C   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 readReadFlash:Cmd:Block:](SHIDBootPro2 *self, SEL, char *, int, id)
__SHIDBootPro2_readReadFlash_Cmd_Block__ proc near
                                        ; DATA XREF: __objc_const:000000010003EF90↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rdi, r8
                mov     r15d, ecx
                mov     rbx, rdx
                call    cs:_objc_retain_ptr
                mov     r14, rax
                cmp     byte ptr [rbx], 0
                jnz     short loc_10000939B
                cmp     byte ptr [rbx+1], 5
                jnz     short loc_10000939B
                cmp     word ptr [rbx+2], 0
                jnz     short loc_10000939B
                movzx   eax, word ptr [rbx+4]
                cmp     eax, r15d
                jnz     short loc_10000939B
                mov     rdi, r14
                mov     rsi, rbx
                call    qword ptr [r14+10h]

loc_10000939B:                          ; CODE XREF: -[SHIDBootPro2 readReadFlash:Cmd:Block:]+1F↑j
                                        ; -[SHIDBootPro2 readReadFlash:Cmd:Block:]+25↑j ...
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__SHIDBootPro2_readReadFlash_Cmd_Block__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 addBlock:Cmd:](SHIDBootPro2 *self, SEL, id, unsigned __int8)
__SHIDBootPro2_addBlock_Cmd__ proc near ; CODE XREF: -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]+36↓P
                                        ; DATA XREF: __objc_const:000000010003EFA8↓o

var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_2C], ecx
                mov     rbx, rdi
                mov     r14, cs:selRef_blocks
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r13, rax
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[SHIDBootPro2 blocks]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_removeAllObjects ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSMutableDictionary
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, r13
                call    _objc_retainBlock
                mov     r14, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, cs:selRef_setObject_forKeyedSubscript_
                lea     rcx, cfstr_Block ; "block"
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, r14
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithUnsignedChar_ ; char *
                mov     edx, [rbp+var_2C]
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rcx, cfstr_Cmd  ; "cmd"
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_blocks ; char *
                call    r15 ; _objc_msgSend ; -[SHIDBootPro2 blocks]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_addObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r12
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SHIDBootPro2_addBlock_Cmd__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:](SHIDBootPro2 *self, SEL, char *, unsigned int, unsigned int, unsigned int, int, id)
__SHIDBootPro2_BootReadFlash_Len_Address_Total_Len_Cmd_Block__ proc near
                                        ; CODE XREF: -[SHIDBootPro2 flashCRC]+77↓P
                                        ; -[SHIDBootPro2 writeSave_Head_4K]+51↓P ...

var_2C          = dword ptr -2Ch
arg_0           = dword ptr  10h
arg_8           = qword ptr  18h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_2C], r9d
                mov     r14d, r8d
                mov     r15d, ecx
                mov     r12, rdx
                mov     r13, rdi
                mov     rdx, [rbp+arg_8]
                mov     eax, [rbp+arg_0]
                mov     rsi, cs:selRef_addBlock_Cmd_ ; char *
                movzx   ecx, al
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[SHIDBootPro2 addBlock:Cmd:]
                mov     rsi, cs:selRef_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r12
                mov     ecx, r15d
                mov     r8d, r14d
                mov     r9d, [rbp+var_2C]
                push    0
                mov     eax, [rbp+arg_0]
                push    rax
                call    rbx ; _objc_msgSend ; -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_BootReadFlash_Len_Address_Total_Len_Cmd_Block__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[SHIDBootPro2 isUltmateWired:](SHIDBootPro2 *self, SEL, unsigned int)
__SHIDBootPro2_isUltmateWired__ proc near
                                        ; DATA XREF: __objc_const:000000010003EFD8↓o
                push    rbp
                mov     rbp, rsp
                lea     ecx, ds:0FFFFFFFFFFFEFFF0h[rdx*8]
                mov     rax, 100000101h
                shr     rax, cl
                mov     ecx, edx
                add     ecx, 0FFFFDFFEh
                xor     edx, edx
                cmp     ecx, 5
                cmovnb  eax, edx
                movzx   eax, al
                pop     rbp
                retn
__SHIDBootPro2_isUltmateWired__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 flashCRC](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_flashCRC_ proc near      ; DATA XREF: __objc_const:000000010003EFF0↓o

var_48          = qword ptr -48h
anonymous_1     = qword ptr -40h
anonymous_2     = qword ptr -38h
anonymous_3     = qword ptr -30h
anonymous_4     = qword ptr -28h
anonymous_6     = qword ptr -20h
anonymous_5     = dword ptr -18h
var_10          = qword ptr -10h
anonymous_0     = dword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                xor     eax, eax
                lea     rdx, [rbp+var_10]
                mov     [rdx+8], eax
                mov     qword ptr [rdx], 0
                mov     dword ptr [rdx+4], 1000h
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_48]
                mov     [r10], rcx
                mov     ecx, 0C2000000h
                mov     [r10+8], rcx
                lea     rcx, sub_1000095F5
                mov     [r10+10h], rcx
                lea     rcx, unk_10003A278
                mov     [r10+18h], rcx
                mov     [r10+20h], rdi
                mov     [r10+30h], eax
                mov     rax, [rdx]
                mov     [r10+28h], rax
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     ecx, 0Ch
                xor     r8d, r8d
                mov     r9d, 0Ch
                push    r10
                push    0C3h
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 60h
                pop     rbp
                retn
__SHIDBootPro2_flashCRC_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000095F5   proc near               ; DATA XREF: -[SHIDBootPro2 flashCRC]+36↑o

var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     [rbp+var_30], rsi
                mov     [rbp+var_38], rdi
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     r13, cs:selRef_sharedInstance
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pfile ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_close ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rbx, cs:classRef_NSFileHandle
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_filePath ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_fileHandleForReadingAtPath_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     r12, [rbp+var_38]
                mov     rdi, [r12+20h]  ; void *
                mov     rsi, cs:selRef_appZoneAddr ; char *
                call    r15 ; _objc_msgSend
                lea     edx, [rax+1Ch]
                mov     rsi, cs:selRef_seekToFileOffset_ ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     edx, [r12+2Ch]
                mov     rsi, cs:selRef_readDataOfLength_ ; char *
                mov     [rbp+var_48], rbx
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     rsi, cs:selRef_bytes ; char *
                mov     [rbp+var_40], rax
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     esi, [r12+2Ch]
                mov     rdi, rax
                call    sub_100008AC4
                mov     r13d, eax
                mov     rax, [rbp+var_30]
                movzx   r14d, word ptr [rax+12h]
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     dword ptr [rbp+var_30], r14d
                cmp     r13w, r14w
                jnz     loc_100009825
                mov     r14, cs:selRef_SHIDBootStartUpdateed_
                mov     rdi, rbx        ; void *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     r13d, eax
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                test    r13b, r13b
                jz      short loc_10000980B
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release

loc_10000980B:                          ; CODE XREF: sub_1000095F5+1BB↑j
                mov     rax, [rbp+var_38]
                mov     rdi, [rax+20h]  ; void *
                mov     rsi, cs:selRef_resetGamepad ; char *
                call    cs:_objc_msgSend_ptr
                jmp     loc_1000098E6
; ---------------------------------------------------------------------------

loc_100009825:                          ; CODE XREF: sub_1000095F5+18B↑j
                mov     r15, cs:selRef_SHIDBootErrorString_msg_
                mov     rdi, rbx        ; void *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     r14d, eax
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                test    r14b, r14b
                jz      loc_1000098E6
                movzx   ebx, r13w
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r14, r15
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_CrcErrorCrcXFi ; "CRC Error: \n crc : %x file_crc: %x "
                mov     ecx, dword ptr [rbp+var_30]
                mov     r8d, ebx
                xor     eax, eax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                xor     edx, edx
                mov     rcx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release

loc_1000098E6:                          ; CODE XREF: sub_1000095F5+22B↑j
                                        ; sub_1000095F5+25A↑j
                mov     rdi, [rbp+var_40]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_48]
                mov     rax, rbx
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_1000095F5   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000990A   proc near               ; DATA XREF: __const:000000010003A218↓o
                                        ; __const:000000010003A288↓o ...
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rsi+20h]
                pop     rbp
                jmp     cs:_objc_retain_ptr
sub_10000990A   endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 writeSave_Head_4K](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_writeSave_Head_4K_ proc near
                                        ; DATA XREF: __objc_const:000000010003F008↓o

var_28          = qword ptr -28h
anonymous_0     = qword ptr -20h
anonymous_1     = qword ptr -18h
anonymous_2     = qword ptr -10h
anonymous_3     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_28]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_100009979
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rdi
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                xor     edx, edx
                xor     ecx, ecx
                xor     r8d, r8d
                xor     r9d, r9d
                push    r10
                push    0C2h
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbp
                retn
__SHIDBootPro2_writeSave_Head_4K_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100009979   proc near               ; DATA XREF: -[SHIDBootPro2 writeSave_Head_4K]+1F↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_flashCRC
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_100009979   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 writeFirmwareJL](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_writeFirmwareJL_ proc near
                                        ; DATA XREF: __objc_const:000000010003F020↓o

anonymous_0     = ymmword ptr -70h
anonymous_1     = qword ptr -50h
anonymous_2     = qword ptr -48h
anonymous_3     = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     [rbp+var_38], rdi
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdx, cs:selRef_SHIDBootStartUpdate_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                test    r15b, r15b
                mov     r15, cs:selRef_sharedInstance
                jz      short loc_100009A60
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootStartUpdate_ ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release

loc_100009A60:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareJL]+84↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdx, cs:selRef_SHIDBootStartUpdateing_shid_
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                test    r15b, r15b
                mov     r14, r13
                jz      short loc_100009B36
                lea     rcx, xmmword_10004A2B0
                imul    eax, [rcx+0ACh], 64h
                lea     rdx, dword_10004A4B0
                mov     esi, [rdx+8]
                add     esi, [rcx+0A4h]
                xor     edx, edx
                div     esi
                mov     ebx, eax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r14
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootStartUpdateing_shid_ ; char *
                mov     edx, ebx
                xor     ecx, ecx
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    r13
                mov     rdi, r14
                mov     r14, r13
                call    r13

loc_100009B36:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareJL]+12A↑j
                mov     rsi, cs:selRef_offset ; char *
                mov     r13, [rbp+var_38]
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr
                lea     rcx, xmmword_10004A2B0
                cmp     eax, [rcx+0A4h]
                jnb     loc_100009CCE
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pfile ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    r14
                mov     rdi, rbx
                call    r14
                test    r15, r15
                jz      loc_100009CBF
                mov     rdi, r13        ; void *
                mov     r15, cs:selRef_offset
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                add     eax, 2Eh
                lea     rcx, xmmword_10004A2B0
                mov     ebx, [rcx+0A4h]
                mov     r14, r13
                mov     r13d, 2Eh
                cmp     eax, ebx
                jbe     short loc_100009BE7
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                sub     ebx, eax
                movsxd  r13, ebx

loc_100009BE7:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareJL]+245↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pfile ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_read_maxLength_ ; char *
                lea     rax, xmmword_10004A2B0
                lea     rdx, [rax+8]
                mov     [rbp+var_30], rdx
                mov     rdi, r15        ; void *
                mov     rcx, r13
                call    r12 ; _objc_msgSend
                mov     r13, rax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_offset ; char *
                call    r12 ; _objc_msgSend
                lea     rcx, xmmword_10004A2B0
                mov     r9d, [rcx+0A4h]
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+anonymous_0+8]
                mov     [r10], rcx
                mov     ecx, 0C2000000h
                mov     [r10+8], rcx
                lea     rcx, sub_100009CEC
                mov     [r10+10h], rcx
                lea     rcx, unk_10003A2D8
                mov     [r10+18h], rcx
                mov     [r10+20h], r14
                mov     [r10+28h], r13
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, [rbp+var_30]
                mov     ecx, r13d
                mov     r8d, eax
                push    r10
                push    3
                call    r12 ; _objc_msgSend
                add     rsp, 10h

loc_100009CBF:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareJL]+211↑j
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100009CCE:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareJL]+1C8↑j
                mov     rsi, cs:selRef_writeSave_Head_4K
                mov     rdi, r13
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__SHIDBootPro2_writeFirmwareJL_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100009CEC   proc near               ; DATA XREF: -[SHIDBootPro2 writeFirmwareJL]+2F3↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     r14, [rdi+20h]
                mov     r15d, [rdi+28h]
                mov     rsi, cs:selRef_offset ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                add     r15d, eax
                mov     rsi, cs:selRef_setOffset_ ; char *
                mov     rdi, r14        ; void *
                mov     edx, r15d
                call    r12 ; _objc_msgSend
                mov     eax, [rbx+28h]
                lea     rcx, xmmword_10004A2B0
                add     [rcx+0ACh], eax
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_writeFirmwareJL
                mov     rax, r12
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100009CEC   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 eraseFlashJL:len:TotalEraseLen:](SHIDBootPro2 *self, SEL, unsigned int, unsigned int, unsigned int)
__SHIDBootPro2_eraseFlashJL_len_TotalEraseLen__ proc near
                                        ; CODE XREF: -[SHIDBootPro2 eraseFlashJL:eraseUnitSize:blockCount:]+10↓P
                                        ; DATA XREF: __objc_const:000000010003F038↓o

var_38          = qword ptr -38h
anonymous_0     = qword ptr -30h
anonymous_1     = qword ptr -28h
anonymous_2     = qword ptr -20h
anonymous_5     = qword ptr -18h
anonymous_3     = dword ptr -10h
anonymous_4     = dword ptr -0Ch
anonymous_6     = dword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 40h
                mov     r9d, ecx
                mov     eax, edx
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_38]
                mov     [r10], rcx
                mov     ecx, 0C2000000h
                mov     [r10+8], rcx
                lea     rcx, sub_100009DB9
                mov     [r10+10h], rcx
                lea     rcx, unk_10003A278
                mov     [r10+18h], rcx
                mov     [r10+28h], edx
                mov     [r10+2Ch], r8d
                mov     [r10+20h], rdi
                mov     [r10+30h], r9d
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                xor     edx, edx
                xor     ecx, ecx
                mov     r8d, eax
                push    r10
                push    4
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 50h
                pop     rbp
                retn
__SHIDBootPro2_eraseFlashJL_len_TotalEraseLen__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100009DB9   proc near               ; DATA XREF: -[SHIDBootPro2 eraseFlashJL:len:TotalEraseLen:]+24↑o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     edx, [rdi+28h]
                mov     r8d, [rdi+2Ch]
                cmp     edx, r8d
                jnb     short loc_100009E15
                mov     ecx, [rbx+30h]
                mov     rdi, [rbx+20h]
                cmp     rax, [rbp+var_30]
                jnz     loc_100009ED9
                add     edx, ecx
                mov     rsi, cs:selRef_eraseFlashJL_len_TotalEraseLen_
                lea     rsp, [rbp-28h]
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
; ---------------------------------------------------------------------------

loc_100009E15:                          ; CODE XREF: sub_100009DB9+2C↑j
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_appZoneAddr ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     [rbp+var_38], rsp
                mov     eax, eax
                add     rax, 0Fh
                and     rax, 0FFFFFFFFFFFFFFF0h
                mov     r15, rsp
                sub     r15, rax
                mov     rsp, r15
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_pfile ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_appZoneAddr ; char *
                call    r14 ; _objc_msgSend
                mov     ecx, eax
                mov     rsi, cs:selRef_read_maxLength_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r15
                call    r14 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_writeFirmwareJL ; char *
                call    r14 ; _objc_msgSend
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100009ED9
                mov     rsp, [rbp+var_38]
                lea     rsp, [rbp-28h]
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100009ED9:                          ; CODE XREF: sub_100009DB9+39↑j
                                        ; sub_100009DB9+10B↑j
                call    ___stack_chk_fail
sub_100009DB9   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 eraseFlashJL:eraseUnitSize:blockCount:](SHIDBootPro2 *self, SEL, unsigned int, unsigned int, unsigned int)
__SHIDBootPro2_eraseFlashJL_eraseUnitSize_blockCount__ proc near
                                        ; DATA XREF: __objc_const:000000010003F050↓o
                push    rbp
                mov     rbp, rsp
                imul    r8d, ecx
                mov     rsi, cs:selRef_eraseFlashJL_len_TotalEraseLen_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[SHIDBootPro2 eraseFlashJL:len:TotalEraseLen:]
__SHIDBootPro2_eraseFlashJL_eraseUnitSize_blockCount__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 updateJL:](SHIDBootPro2 *self, SEL, unsigned int)
__SHIDBootPro2_updateJL__ proc near     ; DATA XREF: __objc_const:000000010003F068↓o

var_30          = qword ptr -30h
anonymous_0     = qword ptr -28h
anonymous_1     = qword ptr -20h
anonymous_2     = qword ptr -18h
anonymous_3     = qword ptr -10h
anonymous_4     = dword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_30]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_100009F55
                mov     [r10+10h], rax
                lea     rax, unk_10003A308
                mov     [r10+18h], rax
                mov     [r10+20h], rdi
                mov     [r10+28h], edx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                xor     edx, edx
                xor     ecx, ecx
                xor     r8d, r8d
                xor     r9d, r9d
                push    r10
                push    0C1h
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbp
                retn
__SHIDBootPro2_updateJL__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100009F55   proc near               ; DATA XREF: -[SHIDBootPro2 updateJL:]+1F↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r15d, [rsi+12h]
                mov     r14d, [rsi+1Eh]
                call    sub_10000C5C1
                test    al, al
                jz      loc_10000A0FC
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setAppZoneAddr_ ; char *
                mov     edx, r15d
                call    cs:_objc_msgSend_ptr
                mov     eax, [rbx+28h]
                lea     rsi, xmmword_10004A370
                cmp     eax, [rsi+0Ch]
                jnz     short loc_100009FE7
                mov     ecx, [rsi+8]
                sub     ecx, r15d
                lea     eax, [r14+rcx]
                dec     eax
                xor     edx, edx
                div     r14d
                mov     [rsi+8], ecx
                lea     rdx, xmmword_10004A2B0
                mov     [rdx+0A4h], ecx
                mov     rdi, [rbx+20h]
                lea     r8d, [rax-1]
                mov     rsi, cs:selRef_eraseFlashJL_eraseUnitSize_blockCount_
                xor     edx, edx
                mov     ecx, r14d
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
; ---------------------------------------------------------------------------

loc_100009FE7:                          ; CODE XREF: sub_100009F55+47↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdx, cs:selRef_SHIDBootErrorString_msg_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r15d, eax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                test    r15b, r15b
                jz      loc_10000A0FC
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     ecx, [rbx+28h]
                lea     rax, xmmword_10004A370
                mov     r8d, [rax+0Ch]
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_FirmwareErrorP ; "Firmware Error: \n pid : %x m_firmwareHeader.pid: %x "
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_SHIDBootErrorString_msg_ ; char *
                xor     edx, edx
                mov     rcx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r15
                mov     rax, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_10000A0FC:                          ; CODE XREF: sub_100009F55+20↑j
                                        ; sub_100009F55+FA↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100009F55   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 readPID](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_readPID_ proc near       ; DATA XREF: __objc_const:000000010003F080↓o

var_38          = qword ptr -38h
anonymous_0     = qword ptr -30h
anonymous_1     = qword ptr -28h
anonymous_2     = qword ptr -20h
anonymous_3     = qword ptr -18h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 30h
                mov     rbx, rdi
                xorps   xmm0, xmm0
                movups  cs:xmmword_10004A4E8+0Ch, xmm0
                movups  cs:xmmword_10004A4E8, xmm0
                movups  cs:xmmword_10004A4D8, xmm0
                mov     rsi, cs:selRef_setBootType_PID_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                xor     edx, edx
                call    r14 ; _objc_msgSend ; -[SHIDBootPro2 setBootType_PID:]
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_38]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000A19F
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                mov     ecx, 2
                xor     r8d, r8d
                mov     r9d, 2
                push    r10
                push    8
                call    r14 ; _objc_msgSend ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbx
                pop     r14
                pop     rbp
                retn
__SHIDBootPro2_readPID_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000A19F   proc near               ; DATA XREF: -[SHIDBootPro2 readPID]+50↑o

var_48          = byte ptr -48h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                mov     rbx, rdi
                movzx   r14d, word ptr [rsi+12h]
                cmp     r14d, 5110h
                jg      short loc_10000A1F6
                cmp     r14d, 3102h
                jg      loc_10000A25C
                lea     eax, [r14-3010h]
                cmp     eax, 8          ; switch 9 cases
                ja      loc_10000A2BD   ; jumptable 000000010000A1EA default case
                lea     rcx, off_10000A4D4
                movsxd  rax, dword ptr [rcx+rax*4]
                add     rax, rcx
                jmp     rax             ; switch jump
; ---------------------------------------------------------------------------

loc_10000A1EC:                          ; CODE XREF: sub_10000A19F+4B↑j
                                        ; DATA XREF: __text:off_10000A4D4↓o
                mov     edx, 0Eh        ; jumptable 000000010000A1EA cases 5-7
                jmp     loc_10000A344
; ---------------------------------------------------------------------------

loc_10000A1F6:                          ; CODE XREF: sub_10000A19F+1E↑j
                cmp     r14d, 9017h
                jg      short loc_10000A22C
                lea     eax, [r14-6003h]
                cmp     eax, 5          ; switch 6 cases
                ja      loc_10000A293   ; jumptable 000000010000A21D default case
                lea     rcx, off_10000A4F8
                movsxd  rax, dword ptr [rcx+rax*4]
                add     rax, rcx
                jmp     rax             ; switch jump
; ---------------------------------------------------------------------------

loc_10000A21F:                          ; CODE XREF: sub_10000A19F+7E↑j
                                        ; DATA XREF: __text:off_10000A4F8↓o
                mov     r15d, 6003h     ; jumptable 000000010000A21D case 0
                xor     edx, edx
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A22C:                          ; CODE XREF: sub_10000A19F+5E↑j
                lea     eax, [r14-9020h]
                cmp     eax, 9          ; switch 10 cases
                ja      loc_10000A2D7   ; jumptable 000000010000A24A default case
                lea     rcx, off_10000A510
                movsxd  rax, dword ptr [rcx+rax*4]
                add     rax, rcx
                jmp     rax             ; switch jump
; ---------------------------------------------------------------------------

loc_10000A24C:                          ; CODE XREF: sub_10000A19F+AB↑j
                                        ; DATA XREF: __text:off_10000A510↓o
                mov     r15d, 9020h     ; jumptable 000000010000A24A case 0
                mov     edx, 11h
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A25C:                          ; CODE XREF: sub_10000A19F+27↑j
                cmp     r14d, 3103h
                jz      loc_10000A4A1
                cmp     r14d, 3105h
                jz      loc_10000A4B1
                cmp     r14d, 5006h
                jnz     loc_10000A36D   ; jumptable 000000010000A1EA case 4
                                        ; jumptable 000000010000A21D cases 1,2
                                        ; jumptable 000000010000A24A cases 1-4,7,8
                mov     r15d, 5006h
                mov     edx, 12h
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A293:                          ; CODE XREF: sub_10000A19F+6A↑j
                cmp     r14d, 5111h     ; jumptable 000000010000A21D default case
                jz      loc_10000A4C1
                cmp     r14d, 5112h
                jnz     loc_10000A36D   ; jumptable 000000010000A1EA case 4
                                        ; jumptable 000000010000A21D cases 1,2
                                        ; jumptable 000000010000A24A cases 1-4,7,8
                mov     r15d, 5112h
                mov     edx, 7
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A2BD:                          ; CODE XREF: sub_10000A19F+37↑j
                cmp     r14d, 2000h     ; jumptable 000000010000A1EA default case
                jnz     loc_10000A36D   ; jumptable 000000010000A1EA case 4
                                        ; jumptable 000000010000A21D cases 1,2
                                        ; jumptable 000000010000A24A cases 1-4,7,8
                mov     r15d, 2000h
                mov     edx, 3
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A2D7:                          ; CODE XREF: sub_10000A19F+97↑j
                cmp     r14d, 9018h     ; jumptable 000000010000A24A default case
                jnz     loc_10000A36D   ; jumptable 000000010000A1EA case 4
                                        ; jumptable 000000010000A21D cases 1,2
                                        ; jumptable 000000010000A24A cases 1-4,7,8
                mov     r15d, 9018h
                mov     edx, 14h
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A2F1:                          ; CODE XREF: sub_10000A19F+AB↑j
                                        ; DATA XREF: __text:off_10000A510↓o
                mov     r15d, 9025h     ; jumptable 000000010000A24A case 5
                mov     edx, 0Fh
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A2FE:                          ; CODE XREF: sub_10000A19F+AB↑j
                                        ; DATA XREF: __text:off_10000A510↓o
                mov     r15d, 9026h     ; jumptable 000000010000A24A case 6
                mov     edx, 10h
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A30B:                          ; CODE XREF: sub_10000A19F+AB↑j
                                        ; DATA XREF: __text:off_10000A510↓o
                mov     r15d, 9029h     ; jumptable 000000010000A24A case 9
                mov     edx, 13h
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A318:                          ; CODE XREF: sub_10000A19F+7E↑j
                                        ; DATA XREF: __text:off_10000A4F8↓o
                mov     r15d, 6006h     ; jumptable 000000010000A21D case 3
                mov     edx, 2
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A325:                          ; CODE XREF: sub_10000A19F+7E↑j
                                        ; DATA XREF: __text:off_10000A4F8↓o
                mov     r15d, 6007h     ; jumptable 000000010000A21D case 4
                mov     edx, 0Ah
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A332:                          ; CODE XREF: sub_10000A19F+7E↑j
                                        ; DATA XREF: __text:off_10000A4F8↓o
                mov     r15d, 6008h     ; jumptable 000000010000A21D case 5
                mov     edx, 0Dh
                jmp     short loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A33F:                          ; CODE XREF: sub_10000A19F+4B↑j
                                        ; DATA XREF: __text:off_10000A4D4↓o
                mov     edx, 1          ; jumptable 000000010000A1EA case 0

loc_10000A344:                          ; CODE XREF: sub_10000A19F+52↑j
                mov     r15d, r14d

loc_10000A347:                          ; CODE XREF: sub_10000A19F+88↑j
                                        ; sub_10000A19F+B8↑j ...
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setBootType_ ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setBootType_PID_ ; char *
                mov     edx, r15d
                call    r12 ; _objc_msgSend

loc_10000A36D:                          ; CODE XREF: sub_10000A19F+4B↑j
                                        ; sub_10000A19F+7E↑j ...
                mov     rdi, [rbx+20h]  ; jumptable 000000010000A1EA case 4
                                        ; jumptable 000000010000A21D cases 1,2
                                        ; jumptable 000000010000A24A cases 1-4,7,8
                mov     rsi, cs:selRef_bootType_PID ; char *
                call    cs:_objc_msgSend_ptr
                lea     ecx, [rax-3012h]
                cmp     ecx, 2
                jb      short loc_10000A390
                cmp     eax, 6008h
                jnz     short loc_10000A3B0

loc_10000A390:                          ; CODE XREF: sub_10000A19F+1E8↑j
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_updateJL_
                mov     edx, r14d
                add     rsp, 30h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
; ---------------------------------------------------------------------------

loc_10000A3B0:                          ; CODE XREF: sub_10000A19F+1EF↑j
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_isUltmateWired_ ; char *
                mov     edx, r14d
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10000A3F3
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setBootType_PID_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     edx, r14d
                call    r15 ; _objc_msgSend
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setBootType_ ; char *
                mov     edx, 6
                call    r15 ; _objc_msgSend

loc_10000A3F3:                          ; CODE XREF: sub_10000A19F+227↑j
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_getPro2Version ; char *
                call    cs:_objc_msgSend_ptr
                mov     esi, 1DCD6500h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_48]
                mov     [rdx], rcx
                mov     ecx, 0C2000000h
                mov     [rdx+8], rcx
                lea     rcx, sub_10000A538
                mov     [rdx+10h], rcx
                lea     rcx, unk_10003A338
                mov     [rdx+18h], rcx
                mov     rcx, [rbx+20h]
                mov     [rdx+20h], rcx
                mov     rsi, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                call    _dispatch_after
                add     rsp, 30h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000A461:                          ; CODE XREF: sub_10000A19F+4B↑j
                                        ; DATA XREF: __text:off_10000A4D4↓o
                mov     r15d, 3011h     ; jumptable 000000010000A1EA case 1
                mov     edx, 0Bh
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A471:                          ; CODE XREF: sub_10000A19F+4B↑j
                                        ; DATA XREF: __text:off_10000A4D4↓o
                mov     r15d, 3012h     ; jumptable 000000010000A1EA case 2
                mov     edx, 9
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A481:                          ; CODE XREF: sub_10000A19F+4B↑j
                                        ; DATA XREF: __text:off_10000A4D4↓o
                mov     r15d, 3013h     ; jumptable 000000010000A1EA case 3
                mov     edx, 0Ch
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A491:                          ; CODE XREF: sub_10000A19F+4B↑j
                                        ; DATA XREF: __text:off_10000A4D4↓o
                mov     r15d, 3018h     ; jumptable 000000010000A1EA case 8
                mov     edx, 16h
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A4A1:                          ; CODE XREF: sub_10000A19F+C4↑j
                mov     r15d, 3103h
                mov     edx, 15h
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A4B1:                          ; CODE XREF: sub_10000A19F+D1↑j
                mov     r15d, 3105h
                mov     edx, 5
                jmp     loc_10000A347
; ---------------------------------------------------------------------------

loc_10000A4C1:                          ; CODE XREF: sub_10000A19F+FB↑j
                mov     r15d, 5111h
                mov     edx, 8
                jmp     loc_10000A347
sub_10000A19F   endp

; ---------------------------------------------------------------------------
                align 4
off_10000A4D4   dd offset loc_10000A33F - 10000A4D4h
                                        ; DATA XREF: sub_10000A19F+3D↑o
                dd offset loc_10000A461 - 10000A4D4h ; jump table for switch statement
                dd offset loc_10000A471 - 10000A4D4h
                dd offset loc_10000A481 - 10000A4D4h
                dd offset loc_10000A36D - 10000A4D4h
                dd offset loc_10000A1EC - 10000A4D4h
                dd offset loc_10000A1EC - 10000A4D4h
                dd offset loc_10000A1EC - 10000A4D4h
                dd offset loc_10000A491 - 10000A4D4h
off_10000A4F8   dd offset loc_10000A21F - 10000A4F8h
                                        ; DATA XREF: sub_10000A19F+70↑o
                dd offset loc_10000A36D - 10000A4F8h ; jump table for switch statement
                dd offset loc_10000A36D - 10000A4F8h
                dd offset loc_10000A318 - 10000A4F8h
                dd offset loc_10000A325 - 10000A4F8h
                dd offset loc_10000A332 - 10000A4F8h
off_10000A510   dd offset loc_10000A24C - 10000A510h
                                        ; DATA XREF: sub_10000A19F+9D↑o
                dd offset loc_10000A36D - 10000A510h ; jump table for switch statement
                dd offset loc_10000A36D - 10000A510h
                dd offset loc_10000A36D - 10000A510h
                dd offset loc_10000A36D - 10000A510h
                dd offset loc_10000A2F1 - 10000A510h
                dd offset loc_10000A2FE - 10000A510h
                dd offset loc_10000A36D - 10000A510h
                dd offset loc_10000A36D - 10000A510h
                dd offset loc_10000A30B - 10000A510h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000A538   proc near               ; DATA XREF: sub_10000A19F+288↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_readBoot_Serial
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000A538   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 readBoot_Serial](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_readBoot_Serial_ proc near
                                        ; DATA XREF: __objc_const:000000010003F098↓o

var_48          = qword ptr -48h
anonymous_0     = qword ptr -40h
anonymous_1     = qword ptr -38h
anonymous_2     = qword ptr -30h
anonymous_3     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                mov     rbx, rdi
                mov     rsi, cs:selRef_Get_key_data ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 Get_key_data]
                mov     r15, cs:selRef_bootType
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                mov     r14d, eax
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                cmp     eax, 3
                jz      short loc_10000A5EA
                mov     eax, r14d
                and     eax, 0FFFFFFFDh
                lea     ecx, [r14-10h]
                mov     edx, r14d
                and     edx, 0FFFFFFFAh
                lea     esi, [r14-1]
                add     r14d, 0FFFFFFF9h
                cmp     r14d, 2
                mov     edi, 1017000h
                mov     r14d, 800001Ch
                cmovb   r14d, edi
                cmp     esi, 2
                cmovb   r14d, edi
                cmp     edx, 0Ah
                cmovz   r14d, edi
                cmp     ecx, 3
                cmovb   r14d, edi
                cmp     eax, 14h
                cmovz   r14d, edi
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 6
                jnz     short loc_10000A5F1

loc_10000A5EA:                          ; CODE XREF: -[SHIDBootPro2 readBoot_Serial]+42↑j
                mov     r14d, cs:dword_10004A4F8

loc_10000A5F1:                          ; CODE XREF: -[SHIDBootPro2 readBoot_Serial]+9A↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 5
                jz      short loc_10000A624
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                jz      short loc_10000A624
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 15h
                jnz     short loc_10000A62B

loc_10000A624:                          ; CODE XREF: -[SHIDBootPro2 readBoot_Serial]+B2↑j
                                        ; -[SHIDBootPro2 readBoot_Serial]+C3↑j
                mov     r14d, cs:dword_10004A4F8

loc_10000A62B:                          ; CODE XREF: -[SHIDBootPro2 readBoot_Serial]+D4↑j
                test    r14d, r14d
                jz      short loc_10000A692
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_48]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000A6B3
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                mov     ecx, 0Ch
                mov     r8d, r14d
                mov     r9d, 0Ch
                push    r10
                push    5
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000A692:                          ; CODE XREF: -[SHIDBootPro2 readBoot_Serial]+E0↑j
                mov     rsi, cs:selRef_readGamepadInfo_
                mov     rdi, rbx
                mov     edx, 1
                add     rsp, 30h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[SHIDBootPro2 readGamepadInfo:]
__SHIDBootPro2_readBoot_Serial_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000A6B3   proc near               ; DATA XREF: -[SHIDBootPro2 readBoot_Serial]+F9↑o
                push    rbp
                mov     rbp, rsp
                mov     eax, [rsi+1Ah]
                mov     cs:dword_10004A50C, eax
                mov     rax, [rsi+12h]
                mov     cs:qword_10004A504, rax
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_readDevice_serial
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000A6B3   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 readDevice_serial](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_readDevice_serial_ proc near
                                        ; DATA XREF: __objc_const:000000010003F0B0↓o

var_48          = qword ptr -48h
anonymous_0     = qword ptr -40h
anonymous_1     = qword ptr -38h
anonymous_2     = qword ptr -30h
anonymous_3     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                mov     rbx, rdi
                mov     r14, cs:selRef_bootType
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 2
                jz      short loc_10000A72C
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 1
                jz      short loc_10000A72C
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                mov     r15d, 1FFFF7E8h
                cmp     eax, 12h
                jnz     short loc_10000A732

loc_10000A72C:                          ; CODE XREF: -[SHIDBootPro2 readDevice_serial]+25↑j
                                        ; -[SHIDBootPro2 readDevice_serial]+36↑j
                mov     r15d, 80000002h

loc_10000A732:                          ; CODE XREF: -[SHIDBootPro2 readDevice_serial]+4D↑j
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                lea     ecx, [rax-1]
                lea     edx, [rax-7]
                mov     esi, eax
                and     esi, 0FFFFFFFAh
                lea     edi, [rax-10h]
                and     eax, 0FFFFFFFDh
                cmp     edx, 2
                mov     edx, 80000002h
                cmovb   r15d, edx
                cmp     ecx, 2
                cmovb   r15d, edx
                cmp     esi, 0Ah
                cmovz   r15d, edx
                cmp     edi, 3
                cmovb   r15d, edx
                cmp     eax, 14h
                cmovz   r15d, edx
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                cmp     eax, 5
                jz      short loc_10000A7AB
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                jz      short loc_10000A7AB
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 15h
                jnz     short loc_10000A7D0

loc_10000A7AB:                          ; CODE XREF: -[SHIDBootPro2 readDevice_serial]+AA↑j
                                        ; -[SHIDBootPro2 readDevice_serial]+BB↑j
                call    sub_10000C5C1
                test    al, al
                jz      short loc_10000A829
                mov     rsi, cs:selRef_earseFlash
                mov     rdi, rbx
                add     rsp, 30h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[SHIDBootPro2 earseFlash]
; ---------------------------------------------------------------------------

loc_10000A7D0:                          ; CODE XREF: -[SHIDBootPro2 readDevice_serial]+CC↑j
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_48]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000A836
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                mov     ecx, 0Ch
                mov     r8d, r15d
                mov     r9d, 0Ch
                push    r10
                push    5
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 10h

loc_10000A829:                          ; CODE XREF: -[SHIDBootPro2 readDevice_serial]+D5↑j
                add     rsp, 30h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_readDevice_serial_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000A836   proc near               ; DATA XREF: -[SHIDBootPro2 readDevice_serial]+10A↑o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     eax, [rsi+1Ah]
                mov     cs:dword_10004A518, eax
                mov     rax, [rsi+12h]
                mov     cs:qword_10004A510, rax
                call    sub_10000C5C1
                test    al, al
                jz      short loc_10000A873
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_earseFlash
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
; ---------------------------------------------------------------------------

loc_10000A873:                          ; CODE XREF: sub_10000A836+24↑j
                add     rsp, 8
                pop     rbx
                pop     rbp
                retn
sub_10000A836   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 earseFlash](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_earseFlash_ proc near    ; CODE XREF: -[SHIDBootPro2 readDevice_serial]+ED↑P
                                        ; DATA XREF: __objc_const:000000010003F0C8↓o

var_48          = qword ptr -48h
anonymous_0     = qword ptr -40h
anonymous_1     = qword ptr -38h
anonymous_2     = qword ptr -30h
anonymous_3     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                mov     r14, rdi
                lea     r12, xmmword_10004A2B0
                mov     ebx, [r12+0A4h]
                mov     r15, cs:selRef_bootType
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 5
                jz      short loc_10000A8D2
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                jz      short loc_10000A8D2
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 15h
                jnz     short loc_10000A8DE

loc_10000A8D2:                          ; CODE XREF: -[SHIDBootPro2 earseFlash]+34↑j
                                        ; -[SHIDBootPro2 earseFlash]+45↑j
                add     ebx, 7FFFh
                and     ebx, 0FFFF8000h

loc_10000A8DE:                          ; CODE XREF: -[SHIDBootPro2 earseFlash]+56↑j
                mov     r8d, [r12+0A8h]
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_48]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000A93F
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], r14
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                xor     ecx, ecx
                mov     r9d, ebx
                push    r10
                push    4
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_earseFlash_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000A93F   proc near               ; DATA XREF: -[SHIDBootPro2 earseFlash]+83↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     r14, cs:selRef_bootType
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                mov     edx, eax
                and     edx, 0FFFFFFFAh
                lea     rcx, selRef_earseFlashPro2Version
                cmp     edx, 0Ah
                jz      loc_10000AADF
                dec     eax
                cmp     eax, 16h
                jnb     short loc_10000A98B
                mov     edx, 2B80C3h
                bt      edx, eax
                jb      loc_10000AADF

loc_10000A98B:                          ; CODE XREF: sub_10000A93F+3C↑j
                xorps   xmm0, xmm0
                lea     r12, dword_10004A4B0
                movups  xmmword ptr [r12+0Ch], xmm0
                movups  xmmword ptr [r12], xmm0
                lea     r15, unk_10004A3F8
                movups  xmmword ptr [r15], xmm0
                movups  xmmword ptr [r15+10h], xmm0
                movups  xmmword ptr [r15+20h], xmm0
                movups  xmmword ptr [r15+30h], xmm0
                movups  xmmword ptr [r15+40h], xmm0
                movups  xmmword ptr [r15+50h], xmm0
                movups  xmmword ptr [r15+60h], xmm0
                movups  xmmword ptr [r15+70h], xmm0
                movups  xmmword ptr [r15+80h], xmm0
                movups  xmmword ptr [r15+90h], xmm0
                movups  xmmword ptr [r15+0A0h], xmm0
                mov     qword ptr [r15+0B0h], 0
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 3
                jz      short loc_10000AA39
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 6
                jz      short loc_10000AA39
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 15h
                jz      short loc_10000AA39
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 13h
                jnz     short loc_10000AA72

loc_10000AA39:                          ; CODE XREF: sub_10000A93F+C2↑j
                                        ; sub_10000A93F+D4↑j ...
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                xor     edi, edi
                cmp     eax, 15h
                setz    dil
                call    sub_10000AAF4
                test    eax, eax
                jle     short loc_10000AA7B
                add     eax, 1Ch
                mov     rdi, cs:qword_10004A4D0 ; void *
                movsxd  rdx, eax
                mov     rsi, cs:selRef_seekToFileOffset_ ; char *
                call    cs:_objc_msgSend_ptr

loc_10000AA72:                          ; CODE XREF: sub_10000A93F+F8↑j
                lea     rcx, selRef_writeFirmware
                jmp     short loc_10000AADF
; ---------------------------------------------------------------------------

loc_10000AA7B:                          ; CODE XREF: sub_10000A93F+117↑j
                lea     rcx, selRef_writeFirmware
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_10000AADF
                xorps   xmm0, xmm0
                movups  xmmword ptr [r12+0Ch], xmm0
                movups  xmmword ptr [r12], xmm0
                movups  xmmword ptr [r15], xmm0
                movups  xmmword ptr [r15+10h], xmm0
                movups  xmmword ptr [r15+20h], xmm0
                movups  xmmword ptr [r15+30h], xmm0
                movups  xmmword ptr [r15+40h], xmm0
                movups  xmmword ptr [r15+50h], xmm0
                movups  xmmword ptr [r15+60h], xmm0
                movups  xmmword ptr [r15+70h], xmm0
                movups  xmmword ptr [r15+80h], xmm0
                movups  xmmword ptr [r15+90h], xmm0
                movups  xmmword ptr [r15+0A0h], xmm0
                mov     qword ptr [r15+0B0h], 0

loc_10000AADF:                          ; CODE XREF: sub_10000A93F+31↑j
                                        ; sub_10000A93F+46↑j ...
                mov     rdi, [rbx+20h]
                mov     rsi, [rcx]
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000A93F   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000AAF4   proc near               ; CODE XREF: sub_10000A93F+110↑p

var_48          = qword ptr -48h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     [rbp+var_3C], edi
                mov     rbx, cs:classRef_NSFileHandle
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_filePath ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_fileHandleForReadingAtPath_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_10004A4D0
                mov     cs:qword_10004A4D0, rax
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, cs:qword_10004A4D0 ; void *
                mov     rsi, cs:selRef_seekToFileOffset_ ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, cs:classRef_NSFileManager ; void *
                mov     rsi, cs:selRef_defaultManager ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_filePath ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_fileExistsAtPath_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                test    r13b, r13b
                jz      loc_10000AD62
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_filePath ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_attributesOfItemAtPath_error_ ; char *
                xor     r15d, r15d
                mov     [rbp+var_30], r12
                mov     rdi, r12        ; void *
                mov     rdx, rax
                xor     ecx, ecx
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_fileSize ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, r13
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     [rbp+var_38], r12
                test    r12d, r12d
                jle     loc_10000AD5A
                mov     r13, cs:selRef_readDataOfLength_
                mov     rax, cs:selRef_bytes
                mov     [rbp+var_48], rax

loc_10000ACBE:                          ; CODE XREF: sub_10000AAF4+260↓j
                mov     rdi, cs:qword_10004A4D0 ; void *
                mov     edx, 1Ch
                mov     r12, r13
                mov     rsi, r13        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_48] ; char *
                call    r13 ; _objc_msgSend
                movups  xmm0, xmmword ptr [rax]
                movups  xmm1, xmmword ptr [rax+0Ch]
                lea     rcx, dword_10004A4B0
                movups  xmmword ptr [rcx+0Ch], xmm1
                movups  xmmword ptr [rcx], xmm0
                mov     eax, [rbp+var_3C]
                cmp     [rcx+0Ch], eax
                jz      short loc_10000AD6D
                mov     rdi, cs:qword_10004A4D0 ; void *
                lea     rax, dword_10004A4B0
                mov     edx, [rax+8]
                mov     r13, r12
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                lea     rax, dword_10004A4B0
                mov     eax, [rax+8]
                add     r15d, eax
                add     r15d, 1Ch
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     r15d, dword ptr [rbp+var_38]
                jl      loc_10000ACBE

loc_10000AD5A:                          ; CODE XREF: sub_10000AAF4+1B2↑j
                mov     r15d, 0FFFFFFFFh
                jmp     short loc_10000AD76
; ---------------------------------------------------------------------------

loc_10000AD62:                          ; CODE XREF: sub_10000AAF4+11B↑j
                mov     r15d, 0FFFFFFFFh
                mov     rdi, r12
                jmp     short loc_10000AD7A
; ---------------------------------------------------------------------------

loc_10000AD6D:                          ; CODE XREF: sub_10000AAF4+21E↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_10000AD76:                          ; CODE XREF: sub_10000AAF4+26C↑j
                mov     rdi, [rbp+var_30]

loc_10000AD7A:                          ; CODE XREF: sub_10000AAF4+277↑j
                call    cs:_objc_release_ptr
                mov     eax, r15d
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_10000AAF4   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 earseFlashBLE](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_earseFlashBLE_ proc near ; DATA XREF: __objc_const:000000010003F0E0↓o

var_48          = qword ptr -48h
anonymous_0     = qword ptr -40h
anonymous_1     = qword ptr -38h
anonymous_2     = qword ptr -30h
anonymous_3     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                mov     rbx, rdi
                lea     r15, dword_10004A4B0
                mov     r12d, [r15+8]
                mov     rsi, cs:selRef_bootType ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                lea     r9d, [r12+7FFFh]
                and     r9d, 0FFFF8000h
                cmp     eax, 15h
                cmovnz  r9d, r12d
                mov     r8d, 80000000h
                or      r8d, [r15+4]
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_48]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000AE33
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                xor     ecx, ecx
                push    r10
                push    4
                call    r14 ; _objc_msgSend ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_earseFlashBLE_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000AE33   proc near               ; DATA XREF: -[SHIDBootPro2 earseFlashBLE]+65↑o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_setOffset_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                xor     edx, edx
                call    r14 ; _objc_msgSend
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_writeFirmwareBLE
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_10000AE33   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 earseFlashPro2Version](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_earseFlashPro2Version_ proc near
                                        ; DATA XREF: __objc_const:000000010003F0F8↓o

var_28          = qword ptr -28h
anonymous_0     = qword ptr -20h
anonymous_1     = qword ptr -18h
anonymous_2     = qword ptr -10h
anonymous_3     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_28]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000AEC8
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rdi
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                xor     edx, edx
                xor     ecx, ecx
                mov     r8d, 1017040h
                mov     r9d, 20h
                push    r10
                push    4
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbp
                retn
__SHIDBootPro2_earseFlashPro2Version_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000AEC8   proc near               ; DATA XREF: -[SHIDBootPro2 earseFlashPro2Version]+1F↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_writeFirmware
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000AEC8   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 readGamepadInfo:](SHIDBootPro2 *self, SEL, char)
__SHIDBootPro2_readGamepadInfo__ proc near
                                        ; CODE XREF: -[SHIDBootPro2 readBoot_Serial]+15F↑P
                                        ; DATA XREF: __objc_const:000000010003F110↓o

var_30          = qword ptr -30h
anonymous_0     = qword ptr -28h
anonymous_1     = qword ptr -20h
anonymous_2     = qword ptr -18h
anonymous_3     = qword ptr -10h
anonymous_4     = byte ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                xorps   xmm0, xmm0
                movups  cs:xmmword_10004A4E8+0Ch, xmm0
                movups  cs:xmmword_10004A4E8, xmm0
                movups  cs:xmmword_10004A4D8, xmm0
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_30]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000AF5A
                mov     [r10+10h], rax
                lea     rax, unk_10003A368
                mov     [r10+18h], rax
                mov     [r10+20h], rdi
                mov     [r10+28h], dl
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                xor     edx, edx
                xor     ecx, ecx
                xor     r8d, r8d
                mov     r9d, 2Ch
                push    r10
                push    0C0h
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbp
                retn
__SHIDBootPro2_readGamepadInfo__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000AF5A   proc near               ; DATA XREF: -[SHIDBootPro2 readGamepadInfo:]+37↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                movups  xmm0, xmmword ptr [rsi+12h]
                movups  xmm1, xmmword ptr [rsi+22h]
                movups  xmm2, xmmword ptr [rsi+2Eh]
                movups  cs:xmmword_10004A4E8+0Ch, xmm2
                movups  cs:xmmword_10004A4E8, xmm1
                movups  cs:xmmword_10004A4D8, xmm0
                mov     rdi, [rdi+20h]  ; void *
                mov     r14, cs:selRef_bootDelegate
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdx, cs:selRef_SHIDBootGetVersion_hid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r13b, r13b
                jz      loc_10000B0A0
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                movzx   ecx, word ptr cs:xmmword_10004A4D8+4
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, ecx
                mov     r12, rax
                divss   xmm0, cs:dword_10002F040
                mov     rsi, cs:selRef_setVersion_ ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                movzx   edx, word ptr cs:xmmword_10004A4D8+6
                mov     rsi, cs:selRef_setBeta_ ; char *
                mov     rdi, r12        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootGetVersion_hid_ ; char *
                mov     rdx, r12
                xor     ecx, ecx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rax, qword ptr cs:xmmword_10004A4D8+8
                mov     cs:qword_10004A510, rax
                mov     eax, dword ptr cs:xmmword_10004A4E8
                mov     cs:dword_10004A518, eax
                mov     rdi, [rbx+20h]  ; void *
                movzx   edx, word ptr cs:xmmword_10004A4D8
                mov     rsi, cs:selRef_isUltmateWired_ ; char *
                call    r15 ; _objc_msgSend
                test    al, al
                jz      short loc_10000B097
                mov     word ptr cs:xmmword_10004A4D8, 2002h

loc_10000B097:                          ; CODE XREF: sub_10000AF5A+132↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_10000B0A0:                          ; CODE XREF: sub_10000AF5A+78↑j
                cmp     byte ptr [rbx+28h], 0
                jz      short loc_10000B0C5
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_readBoot_Serial
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
; ---------------------------------------------------------------------------

loc_10000B0C5:                          ; CODE XREF: sub_10000AF5A+14A↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_10000AF5A   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 writeFirmware](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_writeFirmware_ proc near ; DATA XREF: __objc_const:000000010003F128↓o

anonymous_0     = ymmword ptr -70h
anonymous_1     = qword ptr -50h
anonymous_2     = qword ptr -48h
anonymous_3     = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                mov     r12, cs:selRef_bootType
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                lea     ecx, [rax-1]
                lea     edx, [rax-7]
                mov     esi, eax
                and     esi, 0FFFFFFFAh
                lea     edi, [rax-10h]
                and     eax, 0FFFFFFFDh
                cmp     edx, 2
                mov     edx, 1018000h
                mov     r14d, 8014000h
                cmovb   r14d, edx
                cmp     ecx, 2
                cmovb   r14d, edx
                cmp     esi, 0Ah
                cmovz   r14d, edx
                cmp     edi, 3
                cmovb   r14d, edx
                cmp     eax, 14h
                cmovz   r14d, edx
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                cmp     eax, 3
                jz      short loc_10000B18D
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 5
                jz      short loc_10000B18D
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 6
                jz      short loc_10000B18D
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                jz      short loc_10000B18D
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 15h
                jnz     short loc_10000B19B

loc_10000B18D:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+73↑j
                                        ; -[SHIDBootPro2 writeFirmware]+84↑j ...
                lea     rax, xmmword_10004A2B0
                mov     r14d, [rax+0A8h]

loc_10000B19B:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+B7↑j
                mov     [rbp+var_38], rbx
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rax        ; void *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdx, cs:selRef_SHIDBootStartUpdate_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     ebx, eax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r13
                mov     r13, cs:_objc_msgSend_ptr
                call    r12 ; _objc_release
                test    bl, bl
                jz      short loc_10000B25F
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r13 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootStartUpdate_ ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release

loc_10000B25F:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+13A↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r13 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdx, cs:selRef_SHIDBootStartUpdateing_shid_
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                call    r13 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                test    r13b, r13b
                mov     r15, r12
                jz      loc_10000B348
                lea     rcx, xmmword_10004A2B0
                imul    eax, [rcx+0ACh], 64h
                lea     rdx, dword_10004A4B0
                mov     esi, [rdx+8]
                add     esi, [rcx+0A4h]
                xor     edx, edx
                div     esi
                mov     ebx, eax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootStartUpdateing_shid_ ; char *
                mov     edx, ebx
                xor     ecx, ecx
                call    r12 ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release

loc_10000B348:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+1E8↑j
                mov     rsi, cs:selRef_offset ; char *
                mov     r13, [rbp+var_38]
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr
                lea     rcx, xmmword_10004A2B0
                cmp     eax, [rcx+0A4h]
                jnb     loc_10000B4FB
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pfile ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                call    r15
                mov     rdi, rbx
                call    r15
                test    r12, r12
                jz      loc_10000B4EC
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_offset ; char *
                call    cs:_objc_msgSend_ptr
                add     eax, 2Eh
                lea     rcx, xmmword_10004A2B0
                mov     ebx, [rcx+0A4h]
                mov     r12d, 2Eh
                cmp     eax, ebx
                jbe     short loc_10000B3FE
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_offset ; char *
                call    cs:_objc_msgSend_ptr
                sub     ebx, eax
                movsxd  r12, ebx

loc_10000B3FE:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+313↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, rbx
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_pfile
                call    rcx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, r13
                mov     r13, rax
                mov     rsi, cs:selRef_read_maxLength_ ; char *
                lea     rax, xmmword_10004A2B0
                lea     rdx, [rax+8]
                mov     [rbp+var_30], rdx
                mov     rdi, r13        ; void *
                mov     rcx, r12
                call    cs:_objc_msgSend_ptr
                mov     r12, rax
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_offset ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                add     r14d, eax
                lea     rax, xmmword_10004A2B0
                mov     r9d, [rax+0A4h]
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+anonymous_0+8]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000B5A5
                mov     [r10+10h], rax
                lea     rax, unk_10003A2D8
                mov     [r10+18h], rax
                mov     [r10+20h], r15
                mov     [r10+28h], r12
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, [rbp+var_30]
                mov     ecx, r12d
                mov     r8d, r14d
                push    r10
                push    3
                call    rbx ; _objc_msgSend
                add     rsp, 10h

loc_10000B4EC:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+2E5↑j
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000B4FB:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+295↑j
                mov     rdi, r13        ; void *
                mov     rbx, cs:selRef_bootType
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 3
                jz      short loc_10000B546
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 6
                jz      short loc_10000B546
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 13h
                jz      short loc_10000B546
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 15h
                jnz     short loc_10000B55C

loc_10000B546:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+43D↑j
                                        ; -[SHIDBootPro2 writeFirmware]+44E↑j ...
                lea     rax, dword_10004A4B0
                cmp     dword ptr [rax+8], 0
                jz      short loc_10000B55C
                mov     rsi, cs:selRef_earseFlashBLE
                jmp     short loc_10000B58E
; ---------------------------------------------------------------------------

loc_10000B55C:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+470↑j
                                        ; -[SHIDBootPro2 writeFirmware]+47D↑j
                mov     rsi, cs:selRef_bootType_PID ; char *
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr
                lea     ecx, [rax-3012h]
                cmp     ecx, 2
                jb      short loc_10000B57E
                cmp     eax, 6008h
                jnz     short loc_10000B587

loc_10000B57E:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+4A1↑j
                mov     rsi, cs:selRef_writeSave_Head_4K
                jmp     short loc_10000B58E
; ---------------------------------------------------------------------------

loc_10000B587:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+4A8↑j
                mov     rsi, cs:selRef_setPro2ApplicationEncodeId

loc_10000B58E:                          ; CODE XREF: -[SHIDBootPro2 writeFirmware]+486↑j
                                        ; -[SHIDBootPro2 writeFirmware]+4B1↑j
                mov     rdi, r13
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__SHIDBootPro2_writeFirmware_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000B5A5   proc near               ; DATA XREF: -[SHIDBootPro2 writeFirmware]+3DC↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     r14, [rdi+20h]
                mov     r15d, [rdi+28h]
                mov     rsi, cs:selRef_offset ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                add     r15d, eax
                mov     rsi, cs:selRef_setOffset_ ; char *
                mov     rdi, r14        ; void *
                mov     edx, r15d
                call    r12 ; _objc_msgSend
                mov     eax, [rbx+28h]
                lea     rcx, xmmword_10004A2B0
                add     [rcx+0ACh], eax
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_writeFirmware
                mov     rax, r12
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_10000B5A5   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 writeFirmwareBLE](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_writeFirmwareBLE_ proc near
                                        ; DATA XREF: __objc_const:000000010003F140↓o

var_70          = ymmword ptr -70h
anonymous_0     = qword ptr -50h
anonymous_1     = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     [rbp+var_40], rdi
                lea     rcx, dword_10004A4B0
                mov     eax, 80000000h
                or      eax, [rcx+4]
                mov     [rbp+var_2C], eax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdx, cs:selRef_SHIDBootStartUpdateing_shid_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r13d, eax
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                test    r13b, r13b
                jz      short loc_10000B70E
                lea     rcx, xmmword_10004A2B0
                imul    eax, [rcx+0ACh], 64h
                lea     rdx, dword_10004A4B0
                mov     esi, [rdx+8]
                add     esi, [rcx+0A4h]
                xor     edx, edx
                div     esi
                mov     r15d, eax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootStartUpdateing_shid_ ; char *
                mov     edx, r15d
                xor     ecx, ecx
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release

loc_10000B70E:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareBLE]+8D↑j
                mov     r15, cs:selRef_offset
                mov     rbx, [rbp+var_40]
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                lea     rcx, dword_10004A4B0
                cmp     eax, [rcx+8]
                jnb     loc_10000B834
                mov     rdi, cs:qword_10004A4D0 ; void *
                test    rdi, rdi
                jz      loc_10000B825
                mov     rsi, cs:selRef_readDataOfLength_ ; char *
                mov     edx, 2Eh
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_length ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r13, rax
                mov     rdi, r12
                call    _objc_retainAutorelease
                mov     [rbp+var_38], rax
                mov     rsi, cs:selRef_bytes ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                movups  xmm0, xmmword ptr [rax]
                movups  xmm1, xmmword ptr [rax+10h]
                movups  xmm2, xmmword ptr [rax+1Eh]
                lea     r12, unk_10004A3F8
                movups  xmmword ptr [r12+8], xmm0
                movups  xmmword ptr [r12+18h], xmm1
                movups  xmmword ptr [r12+26h], xmm2
                add     r12, 8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     r8d, [rbp+var_2C]
                add     r8d, eax
                lea     rax, dword_10004A4B0
                mov     r9d, [rax+8]
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_70]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000B852
                mov     [r10+10h], rax
                lea     rax, unk_10003A2D8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     [r10+28h], r13
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r12
                mov     ecx, r13d
                push    r10
                push    3
                call    r14 ; _objc_msgSend
                add     rsp, 10h
                mov     rdi, [rbp+var_38]
                call    cs:_objc_release_ptr

loc_10000B825:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareBLE]+135↑j
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000B834:                          ; CODE XREF: -[SHIDBootPro2 writeFirmwareBLE]+125↑j
                mov     rsi, cs:selRef_setBLEApplicationEncodeId
                mov     rdi, rbx
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__SHIDBootPro2_writeFirmwareBLE_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000B852   proc near               ; DATA XREF: -[SHIDBootPro2 writeFirmwareBLE]+1D8↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     r14, [rdi+20h]
                mov     r15d, [rdi+28h]
                mov     rsi, cs:selRef_offset ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                add     r15d, eax
                mov     rsi, cs:selRef_setOffset_ ; char *
                mov     rdi, r14        ; void *
                mov     edx, r15d
                call    r12 ; _objc_msgSend
                mov     eax, [rbx+28h]
                lea     rcx, xmmword_10004A2B0
                add     [rcx+0ACh], eax
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_writeFirmwareBLE
                mov     rax, r12
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_10000B852   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setPro2ApplicationEncodeId](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_setPro2ApplicationEncodeId_ proc near
                                        ; DATA XREF: __objc_const:000000010003F158↓o

var_40          = qword ptr -40h
anonymous_0     = qword ptr -38h
anonymous_1     = qword ptr -30h
anonymous_2     = qword ptr -28h
anonymous_3     = qword ptr -20h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 28h
                mov     rbx, rdi
                mov     r15, cs:selRef_bootType
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 3
                jz      short loc_10000B926
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 5
                jz      short loc_10000B926
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 6
                jz      short loc_10000B926
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                jz      short loc_10000B926
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                mov     r14d, 801401Ch
                cmp     eax, 15h
                jnz     short loc_10000B92D

loc_10000B926:                          ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+23↑j
                                        ; -[SHIDBootPro2 setPro2ApplicationEncodeId]+34↑j ...
                mov     r14d, cs:dword_10004A4FC

loc_10000B92D:                          ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+6D↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                mov     ecx, eax
                and     ecx, 0FFFFFFFAh
                cmp     ecx, 0Ah
                jz      short loc_10000B95A
                cmp     eax, 16h
                ja      loc_10000B9E2
                mov     ecx, 570186h
                bt      ecx, eax
                jnb     loc_10000B9E2

loc_10000B95A:                          ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+8A↑j
                mov     r14, cs:selRef_bootType_PID
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType_PID]
                cmp     eax, 9026h
                jz      short loc_10000B9C4
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType_PID]
                cmp     eax, 9026h
                jz      short loc_10000B9C4
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType_PID]
                cmp     eax, 3017h
                jz      short loc_10000B9C4
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType_PID]
                cmp     eax, 3015h
                jz      short loc_10000B9C4
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType_PID]
                cmp     eax, 3016h
                jnz     loc_10000BA91

loc_10000B9C4:                          ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+BB↑j
                                        ; -[SHIDBootPro2 setPro2ApplicationEncodeId]+CE↑j ...
                mov     rsi, cs:selRef_Flash_CRC_crcIndex_
                mov     rdi, rbx
                xor     edx, edx
                xor     ecx, ecx
                add     rsp, 28h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[SHIDBootPro2 Flash_CRC:crcIndex:]
; ---------------------------------------------------------------------------

loc_10000B9E2:                          ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+8F↑j
                                        ; -[SHIDBootPro2 setPro2ApplicationEncodeId]+9D↑j
                mov     eax, dword ptr cs:qword_10004A510
                mov     ecx, eax
                and     ecx, 0Fh
                lea     rdx, dword_100049E40
                xor     eax, [rdx+rcx*4]
                mov     ecx, dword ptr cs:qword_10004A510+4
                mov     esi, ecx
                and     esi, 0Fh
                xor     ecx, [rdx+rsi*4]
                mov     esi, cs:dword_10004A518
                mov     edi, esi
                and     edi, 0Fh
                xor     esi, [rdx+rdi*4]
                lea     rdi, xmmword_10004A2B0
                mov     [rdi+88h], eax
                lea     rdx, [rdi+88h]
                mov     [rdi+8Ch], ecx
                mov     [rdi+90h], esi
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_40]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000BAAB
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                mov     ecx, 0Ch
                mov     r8d, r14d
                mov     r9d, 0Ch
                push    r10
                push    2
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 38h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000BA91:                          ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+107↑j
                mov     rsi, cs:selRef_setPro2Version
                mov     rdi, rbx
                add     rsp, 28h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[SHIDBootPro2 setPro2Version]
__SHIDBootPro2_setPro2ApplicationEncodeId_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000BAAB   proc near               ; DATA XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+193↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_setPro2Version
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000BAAB   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setBLEApplicationEncodeId](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_setBLEApplicationEncodeId_ proc near
                                        ; DATA XREF: __objc_const:000000010003F170↓o

var_30          = qword ptr -30h
anonymous_0     = qword ptr -28h
anonymous_1     = qword ptr -20h
anonymous_2     = qword ptr -18h
anonymous_3     = qword ptr -10h
var_2           = word ptr -2

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                lea     rdx, [rbp+var_2]
                mov     word ptr [rdx], 1234h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_30]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000BB2B
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rdi
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     ecx, 2
                mov     r8d, 80010006h
                mov     r9d, 2
                push    r10
                push    2
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbp
                retn
__SHIDBootPro2_setBLEApplicationEncodeId_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000BB2B   proc near               ; DATA XREF: -[SHIDBootPro2 setBLEApplicationEncodeId]+28↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_setBleVersion
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000BB2B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 getPro2Version](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_getPro2Version_ proc near
                                        ; DATA XREF: __objc_const:000000010003F188↓o

var_50          = qword ptr -50h
anonymous_0     = qword ptr -48h
anonymous_1     = qword ptr -40h
anonymous_2     = qword ptr -38h
anonymous_4     = qword ptr -30h
anonymous_3     = word ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                mov     rbx, rdi
                mov     r15, cs:selRef_bootType
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                lea     ecx, [rax-1]
                lea     edx, [rax-7]
                mov     esi, eax
                and     esi, 0FFFFFFFAh
                lea     edi, [rax-10h]
                and     eax, 0FFFFFFFDh
                cmp     edx, 2
                mov     edx, 1017040h
                mov     r14d, 8014034h
                cmovb   r14d, edx
                cmp     ecx, 2
                cmovb   r14d, edx
                cmp     esi, 0Ah
                cmovz   r14d, edx
                cmp     edi, 3
                cmovb   r14d, edx
                cmp     eax, 14h
                cmovz   r14d, edx
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                cmp     eax, 3
                jz      short loc_10000BBF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 5
                jz      short loc_10000BBF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 6
                jz      short loc_10000BBF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                jz      short loc_10000BBF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 15h
                jnz     short loc_10000BBFF

loc_10000BBF8:                          ; CODE XREF: -[SHIDBootPro2 getPro2Version]+71↑j
                                        ; -[SHIDBootPro2 getPro2Version]+82↑j ...
                mov     r14d, cs:dword_10004A500

loc_10000BBFF:                          ; CODE XREF: -[SHIDBootPro2 getPro2Version]+B5↑j
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_50]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000BC72
                mov     [r10+10h], rax
                lea     rax, unk_10003A398
                mov     [r10+18h], rax
                mov     word ptr [r10+28h], 4
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     edx, 0A0h
                add     rdx, cs:off_10003A000
                mov     rdi, rbx        ; void *
                mov     ecx, 4
                mov     r8d, r14d
                mov     r9d, 4
                push    r10
                push    5
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_getPro2Version_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000BC72   proc near               ; DATA XREF: -[SHIDBootPro2 getPro2Version]+D5↑o

anonymous_0     = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 10h
                mov     rbx, rdi
                lea     r14, [rbp+anonymous_0.var0.var1+4]
                mov     dword ptr [r14], 0
                add     rsi, 12h
                movzx   edx, word ptr [rdi+28h]
                mov     ecx, 4
                mov     rdi, r14
                call    ___memcpy_chk
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                movzx   ecx, word ptr [r14]
                cvtsi2ss xmm0, ecx
                mov     r15, rax
                divss   xmm0, cs:dword_10002F040
                mov     rsi, cs:selRef_setVersion_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                movzx   edx, word ptr [r14+2]
                mov     rsi, cs:selRef_setBeta_ ; char *
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_SHIDBootGetVersion_hid_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                xor     ecx, ecx
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                add     rsp, 10h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_10000BC72   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setPro2Version](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_setPro2Version_ proc near
                                        ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+1EE↑P
                                        ; DATA XREF: __objc_const:000000010003F1A0↓o

var_48          = qword ptr -48h
anonymous_0     = qword ptr -40h
anonymous_1     = qword ptr -38h
anonymous_2     = qword ptr -30h
anonymous_3     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                mov     rbx, rdi
                mov     r15, cs:selRef_bootType
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                lea     ecx, [rax-1]
                lea     edx, [rax-7]
                mov     esi, eax
                and     esi, 0FFFFFFFAh
                lea     edi, [rax-10h]
                and     eax, 0FFFFFFFDh
                cmp     edx, 2
                mov     edx, 1017040h
                mov     r14d, 8014034h
                cmovb   r14d, edx
                cmp     ecx, 2
                cmovb   r14d, edx
                cmp     esi, 0Ah
                cmovz   r14d, edx
                cmp     edi, 3
                cmovb   r14d, edx
                cmp     eax, 14h
                cmovz   r14d, edx
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                cmp     eax, 3
                jz      short loc_10000BDF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 5
                jz      short loc_10000BDF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 6
                jz      short loc_10000BDF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                jz      short loc_10000BDF8
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 bootType]
                cmp     eax, 15h
                jnz     short loc_10000BDFF

loc_10000BDF8:                          ; CODE XREF: -[SHIDBootPro2 setPro2Version]+71↑j
                                        ; -[SHIDBootPro2 setPro2Version]+82↑j ...
                mov     r14d, cs:dword_10004A500

loc_10000BDFF:                          ; CODE XREF: -[SHIDBootPro2 setPro2Version]+B5↑j
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_48]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000BE6B
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     edx, 0A0h
                add     rdx, cs:off_10003A000
                mov     rdi, rbx        ; void *
                mov     ecx, 4
                mov     r8d, r14d
                mov     r9d, 4
                push    r10
                push    2
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_setPro2Version_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000BE6B   proc near               ; DATA XREF: -[SHIDBootPro2 setPro2Version]+D5↑o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_30], rdi
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r12, cs:selRef_bootDelegate
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdx, cs:selRef_SHIDBootStartUpdateed_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r14d, eax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                test    r14b, r14b
                jz      short loc_10000BF3C
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootStartUpdateed_ ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release

loc_10000BF3C:                          ; CODE XREF: sub_10000BE6B+7D↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pfile ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_close ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rax, [rbp+var_30]
                mov     rdi, [rax+20h]
                mov     rsi, cs:selRef_resetGamepad
                mov     rax, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_10000BE6B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setBleVersion](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_setBleVersion_ proc near ; DATA XREF: __objc_const:000000010003F1B8↓o

var_48          = qword ptr -48h
anonymous_0     = qword ptr -40h
anonymous_1     = qword ptr -38h
anonymous_2     = qword ptr -30h
anonymous_3     = qword ptr -28h
var_1C          = dword ptr -1Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 38h
                mov     rbx, rdi
                lea     rax, dword_10004A4B0
                mov     eax, [rax]
                lea     r14, [rbp+var_1C]
                mov     [r14], eax
                mov     rsi, cs:selRef_bootType ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[SHIDBootPro2 bootType]
                cmp     eax, 13h
                mov     eax, 88004034h
                mov     r8d, 80010004h
                cmovz   r8d, eax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_48]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000C050
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rbx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r14
                mov     ecx, 4
                mov     r9d, 4
                push    r10
                push    2
                call    r15 ; _objc_msgSend ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 48h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_setBleVersion_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000C050   proc near               ; DATA XREF: -[SHIDBootPro2 setBleVersion]+5A↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_setPro2ApplicationEncodeId
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000C050   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 resetGamepad](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_resetGamepad_ proc near  ; DATA XREF: __objc_const:000000010003F1D0↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                lea     rax, off_10003A3E8
                xor     edx, edx
                xor     ecx, ecx
                xor     r8d, r8d
                xor     r9d, r9d
                push    rax
                push    7
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 10h
                pop     rbp
                retn
__SHIDBootPro2_resetGamepad_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000C091   proc near               ; DATA XREF: __const:000000010003A3F8↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_10000C091   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 Get_key_data](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_Get_key_data_ proc near  ; CODE XREF: -[SHIDBootPro2 readBoot_Serial]+20↑P
                                        ; DATA XREF: __objc_const:000000010003F1E8↓o
                push    rbp
                mov     rbp, rsp
                lea     rax, qword_10004A398
                mov     rax, [rax]
                movaps  xmm0, cs:xmmword_10002F010
                movups  xmmword ptr [rax], xmm0
                lea     rax, qword_10004A3A0
                mov     rax, [rax]
                movaps  xmm0, cs:xmmword_10002F020
                movups  xmmword ptr [rax+10h], xmm0
                pop     rbp
                retn
__SHIDBootPro2_Get_key_data_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000C0C6   proc near               ; CODE XREF: sub_10000C5C1+2BD↓p

var_186A4C      = dword ptr -186A4Ch
var_186A48      = qword ptr -186A48h
var_186A40      = qword ptr -186A40h
var_186A38      = qword ptr -186A38h
var_186A30      = byte ptr -186A30h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 186A28h
                mov     r14, rdx
                mov     [rbp+var_186A4C], esi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     r15, cs:_objc_retain_ptr
                call    r15 ; _objc_retain
                mov     rbx, rax
                mov     rdi, r14
                call    r15 ; _objc_retain
                mov     [rbp+var_186A40], rax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     r14, cs:selRef_sharedInstance
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:selRef_bootType
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                cmp     eax, 3
                jz      short loc_10000C179
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                cmp     eax, 6
                jnz     loc_10000C27E
                mov     rdi, r14
                call    cs:_objc_release_ptr

loc_10000C179:                          ; CODE XREF: sub_10000C0C6+7E↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     r13, [rbp+var_186A40]

loc_10000C189:                          ; CODE XREF: sub_10000C0C6+21A↓j
                mov     rdi, cs:classRef_NSFileManager ; void *
                mov     rsi, cs:selRef_defaultManager ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_fileExistsAtPath_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r13
                call    r15 ; _objc_msgSend
                mov     r12d, 0FFFFFFFFh
                test    al, al
                jz      loc_10000C30B
                mov     [rbp+var_186A38], rbx
                mov     rsi, cs:selRef_attributesOfItemAtPath_error_
                mov     rdi, r14
                mov     r14, r15
                xor     r15d, r15d
                mov     [rbp+var_186A48], rdi
                mov     rdx, r13
                xor     ecx, ecx
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_fileSize
                mov     rdi, rax
                mov     rbx, r14
                call    r14
                mov     r14, rax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r14d, r14d
                jle     loc_10000C2E8
                lea     r13, xmmword_10004A370
                mov     r12, [rbp+var_186A38]

loc_10000C227:                          ; CODE XREF: sub_10000C0C6+1AA↓j
                mov     ecx, 1Ch
                mov     rdi, r12
                mov     rsi, cs:selRef_read_maxLength_
                mov     rdx, r13
                call    rbx
                mov     eax, [rbp+var_186A4C]
                cmp     [r13+0Ch], eax
                jz      loc_10000C2F7
                mov     ecx, [r13+8]
                mov     rdi, r12
                mov     rsi, cs:selRef_read_maxLength_
                lea     rdx, [rbp+var_186A30]
                call    rbx
                mov     eax, [r13+8]
                add     r15d, eax
                add     r15d, 1Ch
                cmp     r15d, r14d
                jl      short loc_10000C227
                mov     r13, [rbp+var_186A40]
                mov     rbx, r12
                jmp     short loc_10000C2EF
; ---------------------------------------------------------------------------

loc_10000C27E:                          ; CODE XREF: sub_10000C0C6+A4↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                mov     dword ptr [rbp+var_186A38], eax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                mov     r15, cs:_objc_msgSend_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     r12d, 0FFFFFFFFh
                cmp     dword ptr [rbp+var_186A38], 13h
                mov     r13, [rbp+var_186A40]
                jz      loc_10000C189
                jmp     short loc_10000C314
; ---------------------------------------------------------------------------

loc_10000C2E8:                          ; CODE XREF: sub_10000C0C6+14D↑j
                mov     rbx, [rbp+var_186A38]

loc_10000C2EF:                          ; CODE XREF: sub_10000C0C6+1B6↑j
                mov     r12d, 0FFFFFFFFh
                jmp     short loc_10000C304
; ---------------------------------------------------------------------------

loc_10000C2F7:                          ; CODE XREF: sub_10000C0C6+17F↑j
                mov     r13, [rbp+var_186A40]
                mov     rbx, r12
                mov     r12d, r15d

loc_10000C304:                          ; CODE XREF: sub_10000C0C6+22F↑j
                mov     r14, [rbp+var_186A48]

loc_10000C30B:                          ; CODE XREF: sub_10000C0C6+F7↑j
                mov     rdi, r14
                call    cs:_objc_release_ptr

loc_10000C314:                          ; CODE XREF: sub_10000C0C6+220↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_10000C34C
                mov     eax, r12d
                add     rsp, 186A28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000C34C:                          ; CODE XREF: sub_10000C0C6+26F↑j
                call    ___stack_chk_fail
sub_10000C0C6   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int64 __cdecl -[SHIDBootPro2 sizeAtPath:](SHIDBootPro2 *self, SEL, id)
__SHIDBootPro2_sizeAtPath__ proc near   ; DATA XREF: __objc_const:000000010003F200↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, cs:classRef_NSFileManager ; void *
                mov     rsi, cs:selRef_defaultManager ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_fileExistsAtPath_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                test    al, al
                jz      short loc_10000C3D7
                mov     rsi, cs:selRef_attributesOfItemAtPath_error_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                xor     ecx, ecx
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_fileSize ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                jmp     short loc_10000C3DA
; ---------------------------------------------------------------------------

loc_10000C3D7:                          ; CODE XREF: -[SHIDBootPro2 sizeAtPath:]+4C↑j
                xor     r15d, r15d

loc_10000C3DA:                          ; CODE XREF: -[SHIDBootPro2 sizeAtPath:]+84↑j
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rax, r15
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_sizeAtPath__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000C3F9   proc near

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     r13, cs:selRef_sharedInstance
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_filePath ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rax
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                test    r12, r12
                jz      loc_10000C59D
                mov     rdi, cs:classRef_NSInputStream
                call    _objc_alloc
                mov     r15, rax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_filePath ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_initWithFileAtPath_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                test    r15, r15
                jz      loc_10000C5A2
                mov     rsi, cs:selRef_open ; char *
                mov     rdi, r15        ; void *
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_read_maxLength_ ; char *
                mov     rdi, r15        ; void *
                lea     r15, xmmword_10004A370
                mov     ecx, 1Ch
                mov     [rbp+var_30], rdi
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                xor     r12d, r12d
                cmp     rax, 1Ch
                mov     r13, rbx
                jnz     short loc_10000C52E
                mov     eax, [r15]
                lea     rcx, xmmword_10004A2B0
                mov     [rcx+0A0h], eax
                movq    xmm0, qword ptr [r15+4]
                pshufd  xmm0, xmm0, 0E1h
                movq    qword ptr [rcx+0A4h], xmm0
                mov     [rcx+0ACh], r12d
                mov     [rcx+0B4h], r12d
                mov     r12b, 1

loc_10000C52E:                          ; CODE XREF: sub_10000C3F9+FF↑j
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rbx, cs:selRef_sharedInstance
                mov     rsi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setOffset_
                mov     rdi, rax
                xor     edx, edx
                call    r13
                mov     rdi, r15
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rsi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setPfile_
                mov     rdi, rax
                mov     r15, [rbp+var_30]
                mov     rdx, r15
                call    r13
                mov     rdi, rbx
                call    r14 ; _objc_release
                jmp     short loc_10000C5A5
; ---------------------------------------------------------------------------

loc_10000C59D:                          ; CODE XREF: sub_10000C3F9+60↑j
                xor     r12d, r12d
                jmp     short loc_10000C5AE
; ---------------------------------------------------------------------------

loc_10000C5A2:                          ; CODE XREF: sub_10000C3F9+C4↑j
                xor     r12d, r12d

loc_10000C5A5:                          ; CODE XREF: sub_10000C3F9+1A2↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10000C5AE:                          ; CODE XREF: sub_10000C3F9+1A7↑j
                movzx   eax, r12b
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_10000C3F9   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000C5C1   proc near               ; CODE XREF: sub_100009F55+19↑p
                                        ; -[SHIDBootPro2 readDevice_serial]:loc_10000A7AB↑p ...

anonymous_0     = ymmword ptr -50h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r13, cs:selRef_filePath
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, rax
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                test    r15, r15
                jz      loc_10000C996
                mov     rdi, cs:classRef_NSInputStream
                call    _objc_alloc
                mov     rbx, rax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_initWithFileAtPath_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                test    rbx, rbx
                jz      loc_10000CAB1
                mov     rsi, cs:selRef_open ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r15, cs:selRef_bootType
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                cmp     eax, 2
                jz      short loc_10000C750
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                cmp     eax, 12h
                jz      short loc_10000C747
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r15        ; char *
                mov     r15, rax
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                cmp     eax, 15h
                jnz     loc_10000CB44
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10000C747:                          ; CODE XREF: sub_10000C5C1+14D↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_10000C750:                          ; CODE XREF: sub_10000C5C1+123↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr

loc_10000C759:                          ; CODE XREF: sub_10000C5C1+5DA↓j
                mov     r12, cs:selRef_read_maxLength_
                lea     r15, xmmword_10004A370
                mov     ecx, 1Ch
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r15
                call    r14 ; _objc_msgSend
                mov     r14, rsp
                mov     r13d, [r15+8]
                mov     rdx, rsp
                mov     rax, r13
                add     rax, 0Fh
                and     rax, 0FFFFFFFFFFFFFFF0h
                sub     rdx, rax
                mov     rsp, rdx
                movsxd  rcx, r13d
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsp, r14
                mov     r14, cs:_objc_msgSend_ptr

loc_10000C7AC:                          ; CODE XREF: sub_10000C5C1+5E0↓j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     r15, cs:selRef_bootType
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                cmp     eax, 3
                mov     qword ptr [rbp+anonymous_0+10h], rbx
                jz      short loc_10000C818
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r15        ; char *
                mov     r15, rax
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                cmp     eax, 6
                jnz     loc_10000CAB9
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10000C818:                          ; CODE XREF: sub_10000C5C1+21E↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_10000C821:                          ; CODE XREF: sub_10000C5C1+543↓j
                movzx   eax, word ptr cs:xmmword_10004A4D8
                movzx   r14d, byte ptr cs:xmmword_10004A4D8+2
                shl     r14d, 10h
                or      r14d, eax
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_filePath ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     esi, r14d
                mov     r14, r13
                mov     rdx, rax
                call    sub_10000C0C6
                mov     r13d, eax
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release

loc_10000C899:                          ; CODE XREF: sub_10000C5C1+575↓j
                lea     rax, xmmword_10004A370
                mov     ecx, [rax]
                lea     rdx, xmmword_10004A2B0
                mov     [rdx+0A0h], ecx
                movq    xmm0, qword ptr [rax+4]
                pshufd  xmm0, xmm0, 0E1h
                movq    qword ptr [rdx+0A4h], xmm0
                mov     dword ptr [rdx+0ACh], 0
                mov     [rdx+0B4h], r13d
                mov     r12b, 1

loc_10000C8D5:                          ; CODE XREF: sub_10000C5C1+57E↓j
                cmp     r13d, 0FFFFFFFFh
                jz      loc_10000CBFA

loc_10000C8DF:                          ; CODE XREF: sub_10000C5C1+634↓j
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     r15, cs:selRef_sharedInstance
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_bootType_PID ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     r13d, eax
                lea     rax, xmmword_10004A370
                movzx   ebx, word ptr [rax+0Ch]
                mov     rdi, r14
                mov     r14, cs:_objc_msgSend_ptr
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                cmp     r13d, ebx
                jnz     short loc_10000C99E
                mov     rsi, cs:selRef_setOffset_ ; char *
                mov     rdi, r15        ; void *
                xor     edx, edx
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setPfile_ ; char *
                mov     rdi, rax        ; void *
                mov     rbx, qword ptr [rbp+anonymous_0+10h]
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                jmp     loc_10000CCB1
; ---------------------------------------------------------------------------

loc_10000C996:                          ; CODE XREF: sub_10000C5C1+73↑j
                xor     r12d, r12d
                jmp     loc_10000CCC3
; ---------------------------------------------------------------------------

loc_10000C99E:                          ; CODE XREF: sub_10000C5C1+386↑j
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, r15        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r14
                mov     r14, rax
                mov     rdx, cs:selRef_SHIDBootErrorNOEqualPID_gamepadType_pid_
                mov     rsi, cs:selRef_respondsToSelector_
                mov     rdi, rax
                call    r12
                mov     r13d, eax
                mov     rdi, r14
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                test    r13b, r13b
                mov     rbx, qword ptr [rbp+anonymous_0+10h]
                jz      loc_10000CAB1
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     r14, r12
                mov     r12, cs:selRef_sharedInstance
                mov     rsi, r12
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_bootDelegate
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rsi, r12
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r14
                mov     r14, rax
                lea     rax, xmmword_10004A370
                mov     eax, [rax+0Ch]
                mov     dword ptr [rbp+anonymous_0+1Ch], eax
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rsi, r12
                call    rcx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootType_PID ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_SHIDBootErrorNOEqualPID_gamepadType_pid_ ; char *
                mov     rdx, r14
                mov     ecx, dword ptr [rbp+anonymous_0+1Ch]
                mov     r8d, eax
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                xor     r12d, r12d
                jmp     loc_10000CCB1
; ---------------------------------------------------------------------------

loc_10000CAB1:                          ; CODE XREF: sub_10000C5C1+E1↑j
                                        ; sub_10000C5C1+427↑j
                xor     r12d, r12d
                jmp     loc_10000CCBA
; ---------------------------------------------------------------------------

loc_10000CAB9:                          ; CODE XREF: sub_10000C5C1+248↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r14
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_bootType
                call    rcx
                mov     dword ptr [rbp+anonymous_0+1Ch], eax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                cmp     dword ptr [rbp+anonymous_0+1Ch], 13h
                jz      loc_10000C821
                mov     rsi, cs:selRef_read_maxLength_ ; char *
                lea     rdx, xmmword_10004A370
                mov     ecx, 1Ch
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      short loc_10000CBA6
                cmp     rax, 1Ch
                mov     r14, cs:_objc_msgSend_ptr
                jz      loc_10000C899
                xor     r12d, r12d
                jmp     loc_10000C8D5
; ---------------------------------------------------------------------------

loc_10000CB44:                          ; CODE XREF: sub_10000C5C1+177↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+anonymous_0+8], rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootType ; char *
                call    r14 ; _objc_msgSend
                mov     dword ptr [rbp+anonymous_0+1Ch], eax
                mov     rdi, qword ptr [rbp+anonymous_0+8]
                call    cs:_objc_release_ptr
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                xor     r13d, r13d
                cmp     dword ptr [rbp+anonymous_0+1Ch], 14h
                jz      loc_10000C759
                jmp     loc_10000C7AC
; ---------------------------------------------------------------------------

loc_10000CBA6:                          ; CODE XREF: sub_10000C5C1+568↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_bootType ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                cmp     eax, 2
                jnz     short loc_10000CBE6
                call    cs:_objc_release_ptr
                jmp     short loc_10000CBFA
; ---------------------------------------------------------------------------

loc_10000CBE6:                          ; CODE XREF: sub_10000C5C1+61B↑j
                call    cs:_objc_release_ptr
                cmp     r13d, 0FFFFFFFFh
                jz      short loc_10000CBFA
                xor     r12d, r12d
                jmp     loc_10000C8DF
; ---------------------------------------------------------------------------

loc_10000CBFA:                          ; CODE XREF: sub_10000C5C1+318↑j
                                        ; sub_10000C5C1+623↑j ...
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     r13, cs:selRef_sharedInstance
                mov     rsi, r13
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, r14
                mov     r14, rax
                mov     rsi, cs:selRef_bootDelegate
                mov     rdi, rax
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdx, cs:selRef_SHIDBootNotSupportFirmware_
                mov     rsi, cs:selRef_respondsToSelector_
                mov     rdi, rax
                call    rbx
                mov     r12d, eax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                test    r12b, r12b
                jz      loc_10000CCE6
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rsi, r13
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_bootDelegate
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                xor     r12d, r12d
                mov     rdi, rax
                mov     rsi, cs:selRef_SHIDBootNotSupportFirmware_
                xor     edx, edx
                call    rbx
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rbx, qword ptr [rbp+anonymous_0+10h]

loc_10000CCB1:                          ; CODE XREF: sub_10000C5C1+3D0↑j
                                        ; sub_10000C5C1+4EB↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10000CCBA:                          ; CODE XREF: sub_10000C5C1+4F3↑j
                                        ; sub_10000C5C1+72C↓j
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_10000CCC3:                          ; CODE XREF: sub_10000C5C1+3D8↑j
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_10000CCEF
                movzx   eax, r12b
                lea     rsp, [rbp-28h]
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10000CCE6:                          ; CODE XREF: sub_10000C5C1+69E↑j
                xor     r12d, r12d
                mov     rbx, qword ptr [rbp+anonymous_0+10h]
                jmp     short loc_10000CCBA
; ---------------------------------------------------------------------------

loc_10000CCEF:                          ; CODE XREF: sub_10000C5C1+710↑j
                call    ___stack_chk_fail
sub_10000C5C1   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 readFlash](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_readFlash_ proc near     ; DATA XREF: __objc_const:000000010003F218↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_readFlash_
                xor     edx, edx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[SHIDBootPro2 readFlash:]
__SHIDBootPro2_readFlash_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 readFlash:](SHIDBootPro2 *self, SEL, int)
__SHIDBootPro2_readFlash__ proc near    ; CODE XREF: -[SHIDBootPro2 readFlash]+E↑P
                                        ; DATA XREF: __objc_const:000000010003F230↓o

var_28          = qword ptr -28h
anonymous_0     = qword ptr -20h
anonymous_1     = qword ptr -18h
anonymous_2     = qword ptr -10h
anonymous_3     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     r8d, cs:dword_100049EC0
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_28]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000CD6C
                mov     [r10+10h], rax
                lea     rax, unk_10003A2A8
                mov     [r10+18h], rax
                mov     [r10+20h], rdi
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                xor     edx, edx
                mov     ecx, 28h
                mov     r9d, 28h
                push    r10
                push    5
                call    cs:_objc_msgSend_ptr ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 40h
                pop     rbp
                retn
__SHIDBootPro2_readFlash__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000CD6C   proc near               ; DATA XREF: -[SHIDBootPro2 readFlash:]+26↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                movsxd  rax, cs:dword_10004A51C
                lea     r14, byte_10004A520
                movups  xmm0, xmmword ptr [rsi+12h]
                movups  xmm1, xmmword ptr [rsi+22h]
                movups  xmmword ptr [rax+r14], xmm0
                movups  xmmword ptr [rax+r14+10h], xmm1
                mov     rcx, [rsi+32h]
                mov     [rax+r14+20h], rcx
                add     eax, 28h
                mov     cs:dword_10004A51C, eax
                cmp     eax, cs:dword_100049EC4
                jle     short loc_10000CE19
                lea     rdi, asc_10002FBC0 ; "--- "
                call    _puts
                cmp     cs:dword_10004A51C, 0
                jle     short loc_10000CE03
                lea     rbx, a02x_0     ; "%02x "
                xor     r15d, r15d

loc_10000CDD1:                          ; CODE XREF: sub_10000CD6C+95↓j
                lea     r12d, [r15+1]
                movzx   esi, byte ptr [r15+r14]
                mov     rdi, rbx        ; char *
                xor     eax, eax
                call    _printf
                test    r12b, 0Fh
                jnz     short loc_10000CDF4
                mov     edi, 0Ah        ; int
                call    _putchar

loc_10000CDF4:                          ; CODE XREF: sub_10000CD6C+7C↑j
                inc     r15
                movsxd  rax, cs:dword_10004A51C
                cmp     r15, rax
                jl      short loc_10000CDD1

loc_10000CE03:                          ; CODE XREF: sub_10000CD6C+59↑j
                lea     rdi, asc_10002FBB9 ; "\n --- "
                xor     eax, eax
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _printf
; ---------------------------------------------------------------------------

loc_10000CE19:                          ; CODE XREF: sub_10000CD6C+44↑j
                add     cs:dword_100049EC0, 28h
                mov     rdi, [rdi+20h]
                mov     rsi, cs:selRef_readFlash_
                xor     edx, edx
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10000CD6C   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool __cdecl -[SHIDBootPro2 Flash_CRC:crcIndex:](SHIDBootPro2 *self, SEL, int, int)
__SHIDBootPro2_Flash_CRC_crcIndex__ proc near
                                        ; CODE XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]+125↑P
                                        ; DATA XREF: __objc_const:000000010003F248↓o

var_60          = qword ptr -60h
anonymous_1     = qword ptr -58h
anonymous_2     = qword ptr -50h
anonymous_3     = qword ptr -48h
anonymous_6     = qword ptr -40h
anonymous_4     = dword ptr -38h
anonymous_5     = dword ptr -34h
anonymous_7     = dword ptr -30h
var_2C          = dword ptr -2Ch
anonymous_0     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 40h
                mov     r14d, ecx
                mov     r15d, edx
                mov     rbx, rdi
                mov     rsi, cs:selRef_bootType_PID ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 bootType_PID]
                lea     rcx, xmmword_10004A2B0
                mov     ecx, [rcx+0ACh]
                add     ecx, 0FFFFFFE4h
                shr     ecx, 9
                mov     edx, r15d
                shl     edx, 9
                mov     esi, r14d
                shl     esi, 8
                cmp     eax, 9025h
                lea     eax, [rsi+rdx+10000h]
                lea     esi, [rsi+rdx+4000h]
                cmovz   esi, eax
                lea     rdx, [rbp+var_2C]
                mov     [rdx], esi
                mov     qword ptr [rdx+4], 100h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r10, [rbp+var_60]
                mov     [r10], rax
                mov     eax, 0C2000000h
                mov     [r10+8], rax
                lea     rax, sub_10000CF19
                mov     [r10+10h], rax
                lea     rax, unk_10003A278
                mov     [r10+18h], rax
                mov     [r10+28h], r15d
                mov     [r10+2Ch], r14d
                mov     [r10+20h], rbx
                mov     [r10+30h], ecx
                mov     rsi, cs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ ; char *
                mov     rdi, rbx        ; void *
                mov     ecx, 0Ch
                xor     r8d, r8d
                mov     r9d, 0Ch
                push    r10
                push    0C3h
                call    r12 ; _objc_msgSend ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]
                add     rsp, 10h
                xor     eax, eax
                add     rsp, 40h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDBootPro2_Flash_CRC_crcIndex__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10000CF19   proc near               ; DATA XREF: -[SHIDBootPro2 Flash_CRC:crcIndex:]+83↑o

var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     [rbp+var_30], rsi
                mov     [rbp+var_38], rdi
                mov     rbx, cs:classRef_NSFileHandle
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_filePath ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_fileHandleForReadingAtPath_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     r13, [rbp+var_38]
                mov     edx, [r13+28h]
                shl     edx, 9
                or      edx, 1Ch
                mov     rsi, cs:selRef_seekToFileOffset_ ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_readDataOfLength_ ; char *
                mov     edx, 200h
                mov     [rbp+var_48], rbx
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     rsi, cs:selRef_bytes ; char *
                mov     [rbp+var_40], rax
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15, rax
                mov     r14, rax
                mov     esi, [r13+28h]
                shl     esi, 9
                mov     rdi, rax
                mov     edx, 200h
                call    sub_100022BF5
                mov     r9, r13
                cmp     dword ptr [r13+28h], 0
                jnz     short loc_10000D020
                mov     dword ptr [r14+2], 0FFFFFFFFh

loc_10000D020:                          ; CODE XREF: sub_10000CF19+FD↑j
                mov     bx, 0FFFFh
                mov     ecx, 100h
                lea     rax, word_10002F050

loc_10000D030:                          ; CODE XREF: sub_10000CF19+148↓j
                mov     dl, [r14]
                mov     esi, 8

loc_10000D038:                          ; CODE XREF: sub_10000CF19+13B↓j
                movzx   edi, bx
                shr     edi, 1
                movzx   edx, dl
                xor     ebx, edx
                mov     r8d, ebx
                and     r8d, 1
                mov     ebx, edi
                xor     bx, [rax+r8*2]
                shr     dl, 1
                dec     esi
                jnz     short loc_10000D038
                inc     r14
                lea     edx, [rcx-1]
                cmp     ecx, 1
                mov     ecx, edx
                ja      short loc_10000D030
                add     r15, 100h
                mov     r13w, 0FFFFh
                mov     ecx, 100h
                mov     r14, cs:_objc_msgSend_ptr

loc_10000D07B:                          ; CODE XREF: sub_10000CF19+196↓j
                mov     dl, [r15]
                mov     esi, 8

loc_10000D083:                          ; CODE XREF: sub_10000CF19+189↓j
                movzx   edi, r13w
                shr     edi, 1
                movzx   edx, dl
                xor     r13d, edx
                mov     r8d, r13d
                and     r8d, 1
                mov     r13d, edi
                xor     r13w, [rax+r8*2]
                shr     dl, 1
                dec     esi
                jnz     short loc_10000D083
                inc     r15
                lea     edx, [rcx-1]
                cmp     ecx, 1
                mov     ecx, edx
                ja      short loc_10000D07B
                mov     rax, [rbp+var_30]
                movzx   eax, word ptr [rax+12h]
                cmp     dword ptr [r9+2Ch], 0
                jz      short loc_10000D0EC
                cmp     r13w, ax
                mov     rbx, cs:selRef_sharedInstance
                jnz     short loc_10000D11B
                mov     edx, [r9+28h]
                mov     rdi, [r9+20h]   ; void *
                cmp     edx, [r9+30h]
                jnb     loc_10000D306
                inc     edx
                mov     rsi, cs:selRef_Flash_CRC_crcIndex_
                xor     ecx, ecx
                jmp     short loc_10000D110
; ---------------------------------------------------------------------------

loc_10000D0EC:                          ; CODE XREF: sub_10000CF19+1A5↑j
                mov     rdi, [r9+20h]   ; void *
                cmp     bx, ax
                mov     r15, cs:selRef_sharedInstance
                jnz     loc_10000D206
                mov     edx, [r9+28h]
                mov     rsi, cs:selRef_Flash_CRC_crcIndex_ ; char *
                mov     ecx, 1

loc_10000D110:                          ; CODE XREF: sub_10000CF19+1D1↑j
                call    cs:_objc_msgSend_ptr
                jmp     loc_10000D313
; ---------------------------------------------------------------------------

loc_10000D11B:                          ; CODE XREF: sub_10000CF19+1B2↑j
                mov     dword ptr [rbp+var_30], eax
                mov     rdi, [r9+20h]   ; void *
                mov     rsi, cs:selRef_resetGamepad ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, r14
                mov     r14, rax
                mov     rsi, cs:selRef_bootDelegate
                mov     rdi, rax
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdx, cs:selRef_SHIDBootErrorString_msg_
                mov     rsi, cs:selRef_respondsToSelector_
                mov     rdi, rax
                call    rbx
                mov     r15d, eax
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                test    r15b, r15b
                jz      loc_10000D313
                movzx   r14d, r13w
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rsi, cs:selRef_sharedInstance
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_bootDelegate
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString
                mov     rsi, cs:selRef_stringWithFormat_
                lea     rdx, cfstr_CrcErrorCrcXFi ; "CRC Error: \n crc : %x file_crc: %x "
                mov     ecx, dword ptr [rbp+var_30]
                mov     r8d, r14d
                xor     eax, eax
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                mov     rsi, cs:selRef_SHIDBootErrorString_msg_
                xor     edx, edx
                mov     rcx, rax
                call    rbx
                jmp     loc_10000D2EE
; ---------------------------------------------------------------------------

loc_10000D206:                          ; CODE XREF: sub_10000CF19+1E1↑j
                mov     dword ptr [rbp+var_30], eax
                mov     rsi, cs:selRef_resetGamepad ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdx, cs:selRef_SHIDBootErrorString_msg_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r13, r14
                mov     r14d, eax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                test    r14b, r14b
                jz      loc_10000D313
                movzx   r14d, bx
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rsi, cs:selRef_sharedInstance
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_bootDelegate
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString
                mov     rsi, cs:selRef_stringWithFormat_
                lea     rdx, cfstr_CrcErrorCrcXFi ; "CRC Error: \n crc : %x file_crc: %x "
                mov     ecx, dword ptr [rbp+var_30]
                mov     r8d, r14d
                xor     eax, eax
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                mov     rsi, cs:selRef_SHIDBootErrorString_msg_
                xor     edx, edx
                mov     rcx, rax
                call    r13

loc_10000D2EE:                          ; CODE XREF: sub_10000CF19+2E8↑j
                mov     rdi, r14
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                jmp     short loc_10000D313
; ---------------------------------------------------------------------------

loc_10000D306:                          ; CODE XREF: sub_10000CF19+1C0↑j
                mov     rsi, cs:selRef_setPro2Version ; char *
                call    cs:_objc_msgSend_ptr

loc_10000D313:                          ; CODE XREF: sub_10000CF19+1FD↑j
                                        ; sub_10000CF19+271↑j ...
                mov     rdi, [rbp+var_40]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_48]
                mov     rax, rbx
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_10000CF19   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __IOHIDDevice *__cdecl -[SHIDBootPro2 device](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_device_ proc near        ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+BD↑P
                                        ; DATA XREF: __objc_const:000000010003F260↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__device ; __IOHIDDevice *_device;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootPro2_device_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setDevice:](SHIDBootPro2 *self, SEL, __IOHIDDevice *)
__SHIDBootPro2_setDevice__ proc near    ; DATA XREF: __objc_const:000000010003F278↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__device ; __IOHIDDevice *_device;
                mov     [rdi+rax], rdx
                pop     rbp
                retn
__SHIDBootPro2_setDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDBootDelegate *__cdecl -[SHIDBootPro2 bootDelegate](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_bootDelegate_ proc near  ; DATA XREF: __objc_const:000000010003F290↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootPro2__bootDelegate ; SHIDBootDelegate *_bootDelegate;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SHIDBootPro2_bootDelegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setBootDelegate:](SHIDBootPro2 *self, SEL, id)
__SHIDBootPro2_setBootDelegate__ proc near
                                        ; DATA XREF: __objc_const:000000010003F2A8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootPro2__bootDelegate ; SHIDBootDelegate *_bootDelegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__SHIDBootPro2_setBootDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[SHIDBootPro2 filePath](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_filePath_ proc near      ; DATA XREF: __objc_const:000000010003F2C0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__filePath ; NSString *_filePath;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootPro2_filePath_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setFilePath:](SHIDBootPro2 *self, SEL, id)
__SHIDBootPro2_setFilePath__ proc near  ; DATA XREF: __objc_const:000000010003F2D8↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_SHIDBootPro2__filePath ; NSString *_filePath;
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__SHIDBootPro2_setFilePath__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSInputStream *__cdecl -[SHIDBootPro2 pfile](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_pfile_ proc near         ; DATA XREF: __objc_const:000000010003F2F0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__pfile ; NSInputStream *_pfile;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootPro2_pfile_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setPfile:](SHIDBootPro2 *self, SEL, id)
__SHIDBootPro2_setPfile__ proc near     ; DATA XREF: __objc_const:000000010003F308↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootPro2__pfile ; NSInputStream *_pfile;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SHIDBootPro2_setPfile__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[SHIDBootPro2 bootType](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_bootType_ proc near      ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+80↑P
                                        ; -[SHIDBootPro2 readBoot_Serial]+30↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__bootType ; int _bootType;
                mov     eax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootPro2_bootType_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setBootType:](SHIDBootPro2 *self, SEL, int)
__SHIDBootPro2_setBootType__ proc near  ; DATA XREF: __objc_const:000000010003F338↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__bootType ; int _bootType;
                mov     [rdi+rax], edx
                pop     rbp
                retn
__SHIDBootPro2_setBootType__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned int __cdecl -[SHIDBootPro2 bootType_PID](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_bootType_PID_ proc near  ; CODE XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]+FC↑P
                                        ; -[SHIDBootPro2 setPro2ApplicationEncodeId]+B0↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__bootType_PID ; unsigned int _bootType_PID;
                mov     eax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootPro2_bootType_PID_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setBootType_PID:](SHIDBootPro2 *self, SEL, unsigned int)
__SHIDBootPro2_setBootType_PID__ proc near
                                        ; CODE XREF: -[SHIDBootPro2 readPID]+36↑P
                                        ; DATA XREF: __objc_const:000000010003F368↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__bootType_PID ; unsigned int _bootType_PID;
                mov     [rdi+rax], edx
                pop     rbp
                retn
__SHIDBootPro2_setBootType_PID__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned int __cdecl -[SHIDBootPro2 appZoneAddr](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_appZoneAddr_ proc near   ; DATA XREF: __objc_const:000000010003F380↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__appZoneAddr ; unsigned int _appZoneAddr;
                mov     eax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootPro2_appZoneAddr_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setAppZoneAddr:](SHIDBootPro2 *self, SEL, unsigned int)
__SHIDBootPro2_setAppZoneAddr__ proc near
                                        ; DATA XREF: __objc_const:000000010003F398↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__appZoneAddr ; unsigned int _appZoneAddr;
                mov     [rdi+rax], edx
                pop     rbp
                retn
__SHIDBootPro2_setAppZoneAddr__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned int __cdecl -[SHIDBootPro2 offset](SHIDBootPro2 *self, SEL)
__SHIDBootPro2_offset_ proc near        ; DATA XREF: __objc_const:000000010003F3B0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__offset ; unsigned int _offset;
                mov     eax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootPro2_offset_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setOffset:](SHIDBootPro2 *self, SEL, unsigned int)
__SHIDBootPro2_setOffset__ proc near    ; DATA XREF: __objc_const:000000010003F3C8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootPro2__offset ; unsigned int _offset;
                mov     [rdi+rax], edx
                pop     rbp
                retn
__SHIDBootPro2_setOffset__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 setBlocks:](SHIDBootPro2 *self, SEL, id)
__SHIDBootPro2_setBlocks__ proc near    ; DATA XREF: __objc_const:000000010003F3E0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootPro2__blocks ; NSMutableArray *_blocks;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SHIDBootPro2_setBlocks__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootPro2 .cxx_destruct](SHIDBootPro2 *self, SEL)
__SHIDBootPro2__cxx_destruct_ proc near ; DATA XREF: __objc_const:000000010003F3F8↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SHIDBootPro2__blocks ; NSMutableArray *_blocks;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SHIDBootPro2__pfile ; NSInputStream *_pfile;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SHIDBootPro2__filePath ; NSString *_filePath;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, cs:_OBJC_IVAR_$_SHIDBootPro2__bootDelegate ; SHIDBootDelegate *_bootDelegate;
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_destroyWeak
__SHIDBootPro2__cxx_destruct_ endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setState:](UpdateView *self, SEL, unsigned __int64)
__UpdateView_setState__ proc near       ; CODE XREF: -[UpdateView loadViews]+141B↓P
                                        ; -[UpdateView removeFromSuperview]+33↓P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__state ; unsigned __int64 _state;
                mov     [rdi+rax], rdx
                mov     rsi, cs:selRef_changeUIWithState_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[UpdateView changeUIWithState:]
__UpdateView_setState__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setDevice:](UpdateView *self, SEL, id)
__UpdateView_setDevice__ proc near      ; DATA XREF: __objc_const:00000001000400E0↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_38], rax
                mov     r13, cs:classRef_NSImage
                mov     rsi, cs:selRef_details ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend ; -[S8BitdoDevice details]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_miniImageName ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_imageNamed_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r13
                call    r15 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r15 ; _objc_release
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__device ; S8BitdoDevice *_device;
                mov     rdi, [rbx+rax]
                mov     rcx, [rbp+var_38]
                mov     [rbx+rax], rcx
                mov     rax, r15
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__UpdateView_setDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setminiImageposition:](UpdateView *self, SEL, int)
__UpdateView_setminiImageposition__ proc near
                                        ; DATA XREF: __objc_const:00000001000400F8↓o

var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_2C], edx
                mov     rbx, rdi
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:selRef_setIsSelect_
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_miniRRImageView ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                call    r14 ; _objc_release
                cmp     [rbp+var_2C], 1
                jnz     loc_10000D717
                mov     r14, cs:selRef_miniImageView
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_isCarryRR ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setIsShowMiniRRImage_ ; char *
                mov     rdi, rbx        ; void *
                test    r13w, r13w
                jz      loc_10000D732
                mov     edx, 1
                call    r15 ; _objc_msgSend ; -[UpdateView setIsShowMiniRRImage:]
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setIsSelect_ ; char *
                mov     edx, 1
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, cs:selRef_setIsClick_
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                mov     edx, 1
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_miniRRImageView ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, r12
                mov     edx, 1
                jmp     short loc_10000D783
; ---------------------------------------------------------------------------

loc_10000D717:                          ; CODE XREF: -[UpdateView setminiImageposition:]+7C↑j
                mov     rsi, cs:selRef_setIsShowMiniRRImage_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend ; -[UpdateView setIsShowMiniRRImage:]
                mov     rdi, rbx
                mov     r14, cs:selRef_miniImageView
                jmp     short loc_10000D73A
; ---------------------------------------------------------------------------

loc_10000D732:                          ; CODE XREF: -[UpdateView setminiImageposition:]+C8↑j
                xor     edx, edx
                call    r15 ; _objc_msgSend ; -[UpdateView setIsShowMiniRRImage:]
                mov     rdi, rbx        ; void *

loc_10000D73A:                          ; CODE XREF: -[UpdateView setminiImageposition:]+176↑j
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setIsSelect_ ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setIsClick_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx

loc_10000D783:                          ; CODE XREF: -[UpdateView setminiImageposition:]+15B↑j
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__UpdateView_setminiImageposition__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setNewFirmwaer:](UpdateView *self, SEL, id)
__UpdateView_setNewFirmwaer__ proc near ; DATA XREF: __objc_const:0000000100040110↓o

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_addObject_ ; char *
                mov     [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rdx, r12
                mov     [rbp+var_48], r12
                call    rbx ; _objc_msgSend
                mov     r15, cs:classRef_NSString
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Newversion ; "newversion"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_version ; char *
                mov     rdi, r12        ; void *
                call    rbx ; _objc_msgSend
                cvtss2sd xmm0, xmm0
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_V2f  ; "%@ v%.2f"
                mov     rdi, r15        ; void *
                mov     rcx, r13
                mov     al, 1
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_findNewVersionLabel ; char *
                mov     [rbp+var_38], r14
                mov     rdi, r14        ; void *
                call    rbx ; _objc_msgSend ; -[UpdateView findNewVersionLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_beta ; char *
                mov     rdi, [rbp+var_48] ; void *
                mov     r13, rdi
                call    rbx ; _objc_msgSend
                test    eax, eax
                jz      loc_10000D9B1
                mov     r15, cs:classRef_NSString
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Newversion ; "newversion"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_version ; char *
                call    rbx ; _objc_msgSend
                cvtss2sd xmm0, xmm0
                movsd   [rbp+var_40], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_beta ; char *
                call    rbx ; _objc_msgSend
                lea     rdx, cfstr_V2fBetaD ; "%@ v%.2f beta %d"
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                mov     rcx, r12
                movsd   xmm0, [rbp+var_40]
                mov     r8d, eax
                mov     al, 1
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, [rbp+var_38] ; void *
                mov     rsi, cs:selRef_findNewVersionLabel ; char *
                call    rbx ; _objc_msgSend ; -[UpdateView findNewVersionLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r15 ; _objc_release

loc_10000D9B1:                          ; CODE XREF: -[UpdateView setNewFirmwaer:]+130↑j
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    rbx ; _objc_msgSend ; +[Language isCurrentChinaLanguage]
                test    al, al
                lea     rax, selRef_readme_en
                lea     rcx, selRef_readme
                cmovz   rcx, rax
                mov     rsi, [rcx]      ; char *
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_findNewVersionLogTextView ; char *
                mov     r15, [rbp+var_38]
                mov     rdi, r15        ; void *
                call    rbx ; _objc_msgSend ; -[UpdateView findNewVersionLogTextView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setString_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     rdi, r15        ; void *
                mov     r12, [rbp+var_50]
                mov     rdx, r12
                call    rbx ; _objc_msgSend ; -[UpdateView setUpdateFirmwaers:]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_findNewVersionLogTextView ; char *
                call    rbx ; _objc_msgSend ; -[UpdateView findNewVersionLogTextView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_sizeToFit ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_version ; char *
                call    rbx ; _objc_msgSend
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_targerVersion ; float m_targerVersion;
                movss   dword ptr [r15+rax], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_beta ; char *
                call    rbx ; _objc_msgSend
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_targetBeta ; int m_targetBeta;
                mov     [r15+rcx], eax
                mov     rsi, cs:selRef_setIsSetNewFirmware_ ; char *
                mov     rdi, r15        ; void *
                mov     edx, 1
                call    rbx ; _objc_msgSend ; -[UpdateView setIsSetNewFirmware:]
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r13
                mov     rax, cs:_objc_release_ptr
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__UpdateView_setNewFirmwaer__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; DeviceManualView *__cdecl -[UpdateView manualView](UpdateView *self, SEL)
__UpdateView_manualView_ proc near      ; CODE XREF: -[UpdateView removeFromSuperview]+A1↓P
                                        ; -[UpdateView noChangeBoot]+34↓P ...

var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
anonymous_1     = qword ptr -38h
anonymous_0     = qword ptr -30h
anonymous_2     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 40h
                mov     rbx, rdi
                mov     r15, cs:_OBJC_IVAR_$_UpdateView__manualView ; DeviceManualView *_manualView;
                mov     rdi, [rdi+r15]
                test    rdi, rdi
                jnz     short loc_10000DB51
                mov     rdi, cs:classRef_DeviceManualView
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, [rbx+r15]
                mov     [rbx+r15], rax
                call    cs:_objc_release_ptr
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_40]
                mov     rdi, r14
                mov     rsi, rbx
                call    _objc_msgSend_stret
                mov     rdi, [rbx+r15]  ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                movups  xmm0, xmmword ptr [r14]
                movups  xmm1, xmmword ptr [r14+10h]
                movups  [rsp+60h+var_50], xmm1
                movups  [rsp+60h+var_60], xmm0
                call    r12 ; _objc_msgSend
                mov     rdi, [rbx+r15]

loc_10000DB51:                          ; CODE XREF: -[UpdateView manualView]+20↑j
                add     rsp, 40h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__UpdateView_manualView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; UpdateView *__cdecl -[UpdateView initWithFrame:](UpdateView *self, SEL, CGRect)
__UpdateView_initWithFrame__ proc near  ; DATA XREF: __objc_const:0000000100040140↓o

var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_38          = qword ptr -38h
anonymous_0     = qword ptr -30h
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                lea     rax, [rbp+var_38]
                mov     [rax], rdi
                mov     rcx, cs:classRef_UpdateView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_initWithFrame_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+60h+var_50], xmm1
                movups  [rsp+60h+var_60], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      loc_10000EA14
                mov     rdi, cs:classRef_SMiniImageView
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setMiniImageView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[UpdateView setMiniImageView:]
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     r12, cs:selRef_miniImageView
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setDelegate_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend ; -[SButton setDelegate:]
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     r12, r13
                mov     rdi, cs:classRef_SMiniImageView
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_init ; char *
                call    r15 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setMiniRRImageView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[UpdateView setMiniRRImageView:]
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     r13, cs:selRef_miniRRImageView
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setLineBreakMode_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setDelegate_ ; char *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r15
                mov     r13, rax
                mov     rdi, cs:classRef_NSImage ; void *
                mov     rsi, cs:selRef_imageNamed_ ; char *
                lea     r14, cfstr_F30Mini ; "f30_mini"
                mov     rdx, r14
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setImage_
                mov     rdi, r13
                mov     rdx, rax
                call    r12
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, rbx
                mov     rsi, cs:selRef_miniImageView
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSImage
                mov     rsi, cs:selRef_imageNamed_
                mov     rdx, r14
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                mov     rsi, cs:selRef_setImage_
                mov     rdx, rax
                call    r12
                mov     r13, r12
                mov     rdi, r14
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_SView
                call    _objc_alloc
                mov     rdi, rax
                mov     r15, cs:selRef_init
                mov     rsi, r15
                call    r13
                mov     r14, rax
                mov     rsi, cs:selRef_setFirmwaerListVist_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSScrollView
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, r15
                call    r13
                mov     r14, rax
                mov     rsi, cs:selRef_setScrollView_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_
                movsd   xmm0, cs:qword_10002EFF0
                movsd   xmm3, cs:qword_10002EFF8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_scrollView
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setBackgroundColor_
                mov     rdi, rax
                mov     rdx, r14
                call    r13
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     r15, r12
                mov     rdi, cs:classRef_SView
                call    _objc_alloc
                mov     rdi, rax
                mov     r12, cs:selRef_init
                mov     rsi, r12
                call    r13
                mov     r14, rax
                mov     rsi, cs:selRef_setFindNewVersionListView_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r15
                mov     rdi, cs:classRef_NSProgressIndicator
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, r12
                call    r13
                mov     r14, rax
                mov     rsi, cs:selRef_setProgress_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r15
                mov     r12, r15
                mov     r15, cs:selRef_progress
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setControlSize_
                mov     edx, 1
                mov     rdi, rax
                call    r13
                mov     rdi, r14
                call    r12
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setStyle_
                mov     edx, 1
                mov     rdi, rax
                call    r13
                mov     rdi, r14
                call    r12
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setIndeterminate_
                mov     rdi, rax
                mov     edx, 1
                call    r13
                mov     rdi, r14
                call    r12
                mov     rdi, cs:classRef_NSButton
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r13
                mov     r14, rax
                mov     rsi, cs:selRef_setReloadButton_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r12
                mov     r15, cs:selRef_reloadButton
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setBezelStyle_
                mov     edx, 3
                mov     rdi, rax
                call    r13
                mov     rdi, r14
                call    r12
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setAlignment_
                mov     edx, 2
                mov     rdi, rax
                call    r13
                mov     rdi, r14
                call    r12
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, cs:selRef_mainBundle
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Reload ; "reload"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax
                xor     r8d, r8d
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTitle_
                mov     rdi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, rbx
                mov     r15, cs:selRef_reloadButton
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setTarget_
                mov     rdi, rax
                mov     rdx, rbx
                call    r13
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdx, cs:selRef_reloadClic
                mov     rsi, cs:selRef_setAction_
                mov     rdi, rax
                call    r13
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r13
                mov     r14, rax
                mov     rsi, cs:selRef_setHintLabel_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_redColor
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_hintLabel
                mov     rdi, rbx
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r13
                mov     r13, rax
                mov     rsi, cs:selRef_setTextColor_
                mov     rdi, rax
                mov     rdx, r14
                call    r12
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rsi, r15
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHidden_
                mov     rdi, rax
                mov     edx, 1
                call    r12
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r12
                mov     r14, rax
                mov     rsi, cs:selRef_setNotFirmware_
                mov     rdi, rbx
                mov     rdx, rax
                call    r12
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_redColor
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r13, cs:selRef_notFirmware
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setTextColor_
                mov     rdx, r14
                call    r12
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setHidden_
                mov     edx, 1
                call    r12
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     r13, r15
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     r15, cs:selRef_init
                mov     rsi, r15
                call    r12
                mov     r14, rax
                mov     rsi, cs:selRef_setFirmwaerHintLabel_
                mov     rdi, rbx
                mov     rdx, rax
                call    r12
                mov     rdi, r14
                call    r13
                mov     rdi, cs:classRef_SButton
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, r15
                call    r12
                mov     r14, rax
                mov     rsi, cs:selRef_setUpdateButton_
                mov     rdi, rbx
                mov     rdx, rax
                call    r12
                mov     rdi, r14
                call    r13
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, cs:selRef_mainBundle
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Update ; "update"
                mov     rdi, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_updateButton
                mov     rdi, rbx
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setM_title_
                mov     rdi, rax
                mov     rdx, r14
                call    r12
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_whiteColor
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     r15, cs:selRef_updateButton
                mov     rsi, r15
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setM_titleHighlighColor_
                mov     rdi, rax
                mov     rdx, r14
                call    r12
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rsi, r15
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setDelegate_
                mov     rdx, rbx
                call    r12
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_SButton
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r12
                mov     r14, rax
                mov     rsi, cs:selRef_setLeftButton_
                mov     rdi, rbx
                mov     rdx, rax
                call    r12
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, cs:selRef_mainBundle
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_Other ; "other"
                mov     rdi, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, r12
                mov     r12, rax
                mov     rsi, cs:selRef_leftButton
                mov     rdi, rbx
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setM_title_
                mov     rdx, r12
                call    r15
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_whiteColor
                mov     r12, r15
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     r13, cs:selRef_leftButton
                mov     rsi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_highlightColor_
                mov     rdi, rax
                mov     rdx, r14
                call    r12
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_grayColor
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_backgroundColor_
                mov     rdi, rax
                mov     rdx, r14
                call    r12
                mov     rdi, r15
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rsi, cs:selRef_leftButton
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setDelegate_
                mov     rdx, rbx
                mov     r15, r12
                call    r12
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_SButton
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r12
                mov     r14, rax
                mov     rsi, cs:selRef_setRightButton_
                mov     rdi, rbx
                mov     rdx, rax
                call    r12
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, cs:selRef_mainBundle
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Update ; "update"
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_rightButton
                mov     rdi, rbx
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setM_title_
                mov     rdx, r12
                call    r15
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rsi, cs:selRef_rightButton
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setDelegate_
                mov     rdx, rbx
                call    r15
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rsi, cs:selRef_miniImageView
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, cs:selRef_addSubview_
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rsi, cs:selRef_miniRRImageView
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     r12, r13
                mov     r14, cs:selRef_firmwaerListVist
                mov     rdi, rbx
                mov     rsi, r14
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rbx
                mov     rsi, cs:selRef_addSubview_
                mov     rdx, rax
                call    r15
                mov     rdi, r13
                call    r12
                mov     rdi, rbx
                mov     rsi, r14
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, cs:selRef_scrollView
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r14
                mov     rsi, cs:selRef_addSubview_
                mov     rdx, rax
                call    r15
                mov     rdi, r13
                call    r12
                mov     rdi, r14
                call    r12
                mov     r13, r12
                mov     rsi, cs:selRef_findNewVersionListView
                mov     rdi, rbx
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     r12, cs:selRef_addSubview_
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rdi, rbx
                mov     rsi, cs:selRef_progress
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rdi, rbx
                mov     rsi, cs:selRef_reloadButton
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rdi, rbx
                mov     rsi, cs:selRef_hintLabel
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rdi, rbx
                mov     rsi, cs:selRef_notFirmware
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rsi, cs:selRef_firmwaerHintLabel
                mov     rdi, rbx
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rdi, rbx
                mov     rsi, cs:selRef_updateButton
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rdi, rbx
                mov     rsi, cs:selRef_leftButton
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rdi, rbx
                mov     rsi, cs:selRef_rightButton
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r12
                mov     rdx, rax
                call    r15
                mov     rdi, r14
                call    r13
                mov     rsi, cs:selRef_initFindNewVersion
                mov     rdi, rbx
                call    r15
                mov     rdi, cs:classRef_SHIDBoot
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r15
                mov     r14, rax
                mov     rsi, cs:selRef_setShidBoot_
                mov     rdi, rbx
                mov     rdx, rax
                call    r15
                mov     r12, r15
                mov     rdi, r14
                call    r13
                mov     r15, cs:selRef_shidBoot
                mov     rdi, rbx
                mov     rsi, r15
                mov     r14, r12
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setBootDelegate_
                mov     rdi, rax
                mov     rdx, rbx
                call    r14
                mov     rdi, r12
                call    r13
                mov     rdi, rbx
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_open
                mov     rdi, rax
                call    r14
                mov     rdi, r12
                call    r13
                mov     r12, r13
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     r15, cs:selRef_sharedInstance
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setBootDelegate_
                mov     rdx, rbx
                call    r14
                mov     rdi, r13
                call    r12
                mov     rdi, cs:classRef_SHIDBootPro2
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     r15, cs:selRef_open
                mov     rsi, r15
                call    r14
                mov     rdi, r13
                call    r12
                mov     rdi, cs:classRef_SHIDHJZ
                mov     rsi, cs:selRef_sharedInstance
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, r15
                call    r14
                mov     rdi, r13
                call    r12
                mov     rdi, cs:classRef_SHIDBootHJZ
                mov     rsi, cs:selRef_sharedInstance
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, r15
                call    r14
                mov     rdi, r13
                call    r12
                mov     rdi, cs:classRef_SHIDBootHJZ
                mov     rsi, cs:selRef_sharedInstance
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setBootDelegate_
                mov     rdx, rbx
                call    r14
                mov     rdi, r15
                call    r12

loc_10000EA14:                          ; CODE XREF: -[UpdateView initWithFrame:]+49↑j
                mov     rax, rbx
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_initWithFrame__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView handle_miniImageView](UpdateView *self, SEL)
__UpdateView_handle_miniImageView_ proc near
                                        ; DATA XREF: __objc_const:0000000100040158↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__UpdateView_handle_miniImageView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView loadViews](UpdateView *self, SEL)
__UpdateView_loadViews_ proc near       ; CODE XREF: -[UpdateView layout]+34↓P
                                        ; DATA XREF: __objc_const:0000000100040170↓o

var_320         = xmmword ptr -320h
var_310         = xmmword ptr -310h
var_300         = byte ptr -300h
anonymous_0     = qword ptr -2F0h
var_2E0         = byte ptr -2E0h
anonymous_1     = qword ptr -2C8h
var_2C0         = byte ptr -2C0h
anonymous_2     = qword ptr -2B0h
var_2A0         = byte ptr -2A0h
anonymous_3     = qword ptr -288h
var_280         = byte ptr -280h
anonymous_4     = qword ptr -270h
var_260         = xmmword ptr -260h
var_250         = xmmword ptr -250h
var_240         = xmmword ptr -240h
var_230         = xmmword ptr -230h
var_220         = xmmword ptr -220h
var_210         = xmmword ptr -210h
var_200         = xmmword ptr -200h
var_1F0         = xmmword ptr -1F0h
var_1E0         = xmmword ptr -1E0h
var_1D0         = xmmword ptr -1D0h
var_1C0         = xmmword ptr -1C0h
var_1B0         = xmmword ptr -1B0h
var_1A0         = xmmword ptr -1A0h
var_190         = xmmword ptr -190h
var_180         = xmmword ptr -180h
var_170         = xmmword ptr -170h
var_160         = xmmword ptr -160h
var_150         = xmmword ptr -150h
var_140         = xmmword ptr -140h
var_130         = xmmword ptr -130h
var_120         = xmmword ptr -120h
var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
var_F0          = xmmword ptr -0F0h
var_E0          = xmmword ptr -0E0h
var_D0          = xmmword ptr -0D0h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_98          = qword ptr -98h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 2F8h
                mov     rbx, rdi
                mov     rsi, cs:selRef_isloadData ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView isloadData]
                test    al, al
                jnz     loc_10000FEB0
                mov     rsi, cs:selRef_setIsloadData_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     edx, 1
                call    r13 ; _objc_msgSend ; -[UpdateView setIsloadData:]
                mov     r12, cs:selRef_frame
                lea     r14, [rbp+var_300]
                mov     rdi, r14
                mov     rsi, rbx
                mov     rdx, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                mov     r15, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   qword ptr [rbx+r15], xmm0
                lea     r14, [rbp+var_2E0]
                mov     rdi, r14
                mov     rsi, rbx
                mov     rdx, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_height ; double m_height;
                movsd   qword ptr [rbx+rax], xmm0
                movsd   xmm1, qword ptr [rbx+r15]
                unpcklpd xmm1, xmm0
                addpd   xmm1, cs:xmmword_10002F180
                movsd   xmm0, cs:qword_10002F058
                movapd  xmm2, xmm1
                addpd   xmm1, cs:xmmword_10002F190
                mulpd   xmm2, xmm0
                movapd  xmmword ptr [rbp+var_B0], xmm1
                movapd  xmm0, xmm1
                movapd  [rbp+var_50], xmm2
                movsd   xmm0, xmm2
                movapd  [rbp+var_40], xmm0
                mov     rsi, cs:selRef_isShowMiniRRImage ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView isShowMiniRRImage]
                test    al, al
                jz      loc_10000EDEB
                movapd  xmm0, [rbp+var_50]
                addsd   xmm0, cs:qword_10002F060
                movapd  [rbp+var_50], xmm0
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movaps  xmm0, [rbp+var_50]
                movsd   qword ptr [rbp+var_90], xmm0
                movaps  xmm0, xmmword ptr [rbp+var_B0]
                movhps  qword ptr [rbp+var_90+8], xmm0
                movhlps xmm0, xmm0
                movaps  xmmword ptr [rbp+var_B0], xmm0
                movaps  xmm0, cs:xmmword_10002F1A0
                movups  [rbp+var_80], xmm0
                mov     rsi, cs:selRef_setFrame_ ; char *
                movupd  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+320h+var_310], xmm1
                movupd  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     r15, cs:selRef_miniRRImageView
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                mov     [rbp+var_B8], rsi
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSImage ; void *
                mov     rsi, cs:selRef_imageNamed_ ; char *
                lea     rdx, cfstr_Ultimaterr ; "UltimateRR"
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     r14, r12
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    r14
                mov     rdi, r15
                call    r14
                cmp     r13d, 30h
                mov     r13, cs:_objc_msgSend_ptr
                jnz     short loc_10000ECED
                mov     rdi, cs:classRef_NSImage ; void *
                lea     rdx, cfstr_Ultimatecrr ; "UltimateCRR"
                mov     rsi, cs:selRef_imageNamed_ ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_miniRRImageView ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release

loc_10000ECED:                          ; CODE XREF: -[UpdateView loadViews]+261↑j
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_type ; char *
                call    r13 ; _objc_msgSend
                mov     r14d, eax
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                cmp     r14d, 39h
                jnz     short loc_10000EDA4
                mov     rdi, cs:classRef_NSImage ; void *
                lea     rdx, cfstr_UltimaterrBloc ; "UltimateRR_Block"
                mov     rsi, cs:selRef_imageNamed_ ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_miniRRImageView ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release

loc_10000EDA4:                          ; CODE XREF: -[UpdateView loadViews]+318↑j
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_miniImageView ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      loc_10000EE80
                lea     r14, [rbp+var_260]
                mov     rdi, r14
                mov     rsi, r12
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14]
                jmp     loc_10000EE98
; ---------------------------------------------------------------------------

loc_10000EDEB:                          ; CODE XREF: -[UpdateView loadViews]+EE↑j
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movaps  xmm0, [rbp+var_40]
                movaps  [rbp+var_90], xmm0
                movaps  xmm0, cs:xmmword_10002F1A0
                movaps  [rbp+var_80], xmm0
                mov     rsi, cs:selRef_setFrame_ ; char *
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     [rbp+var_B0], rsi
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_miniRRImageView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                mov     [rbp+var_B8], rsi
                mov     edx, 1
                call    r13 ; _objc_msgSend
                jmp     loc_10000EF15
; ---------------------------------------------------------------------------

loc_10000EE80:                          ; CODE XREF: -[UpdateView loadViews]+396↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_250], xmm0
                movapd  [rbp+var_260], xmm0
                xorpd   xmm0, xmm0

loc_10000EE98:                          ; CODE XREF: -[UpdateView loadViews]+3BA↑j
                addsd   xmm0, cs:qword_10002F068
                movsd   qword ptr [rbp+var_50], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_miniRRImageView ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_90], xmm0
                movaps  xmm0, xmmword ptr [rbp+var_B0]
                movsd   qword ptr [rbp+var_90+8], xmm0
                movaps  xmm0, cs:xmmword_10002F1A0
                movups  [rbp+var_80], xmm0
                movups  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                mov     [rbp+var_B0], rsi
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr

loc_10000EF15:                          ; CODE XREF: -[UpdateView loadViews]+44F↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movaps  xmm0, [rbp+var_40]
                movlps  xmm0, qword ptr [rbx+rax]
                movaps  [rbp+var_40], xmm0
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerListVist]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                movapd  xmm1, [rbp+var_40]
                addpd   xmm1, cs:xmmword_10002F1B0
                mov     r15, rax
                movsd   xmm0, cs:qword_10002F058
                mulpd   xmm0, xmm1
                addpd   xmm1, cs:xmmword_10002F190
                movsd   xmm1, xmm0
                movapd  [rbp+var_90], xmm1
                movaps  xmm0, cs:xmmword_10002F1C0
                movaps  [rbp+var_80], xmm0
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     r12, [rbp+var_B0]
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerListVist]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setNeedsDisplay_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_scrollView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView scrollView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                xorps   xmm0, xmm0
                movaps  [rbp+var_90], xmm0
                movaps  xmm0, cs:xmmword_10002F1C0
                movaps  [rbp+var_80], xmm0
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerListVist]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10000F064
                lea     rdi, [rbp+var_E0]
                mov     rsi, r14
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                jmp     short loc_10000F075
; ---------------------------------------------------------------------------

loc_10000F064:                          ; CODE XREF: -[UpdateView loadViews]+61E↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_D0], xmm0
                movaps  [rbp+var_E0], xmm0

loc_10000F075:                          ; CODE XREF: -[UpdateView loadViews]+636↑j
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                movapd  xmm0, [rbp+var_E0]
                movaps  xmm1, [rbp+var_D0]
                movups  [rsp+320h+var_310], xmm1
                movupd  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     r14, cs:selRef_findNewVersionLabel
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_sizeToFit ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000F121
                lea     rdi, [rbp+var_90]
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                jmp     short loc_10000F132
; ---------------------------------------------------------------------------

loc_10000F121:                          ; CODE XREF: -[UpdateView loadViews]+6DB↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_80], xmm0
                movapd  [rbp+var_90], xmm0

loc_10000F132:                          ; CODE XREF: -[UpdateView loadViews]+6F3↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000F17D
                lea     r12, [rbp+var_240]
                mov     rdi, r12
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r12+10h]
                jmp     short loc_10000F195
; ---------------------------------------------------------------------------

loc_10000F17D:                          ; CODE XREF: -[UpdateView loadViews]+72D↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_230], xmm0
                movapd  [rbp+var_240], xmm0
                xorpd   xmm0, xmm0

loc_10000F195:                          ; CODE XREF: -[UpdateView loadViews]+74F↑j
                subsd   xmm0, qword ptr [rbp+var_80]
                mulsd   xmm0, cs:qword_10002F058
                cvttpd2dq xmm0, xmm0
                cvtdq2pd xmm0, xmm0
                movlpd  qword ptr [rbp+var_90], xmm0
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000F206
                lea     r14, [rbp+var_220]
                mov     rdi, r14
                mov     rsi, r15
                mov     r12, cs:selRef_frame
                mov     rdx, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                mov     r14, cs:selRef_findNewVersionLabel
                jmp     short loc_10000F225
; ---------------------------------------------------------------------------

loc_10000F206:                          ; CODE XREF: -[UpdateView loadViews]+7AD↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_210], xmm0
                movapd  [rbp+var_220], xmm0
                xorpd   xmm0, xmm0
                mov     r12, cs:selRef_frame

loc_10000F225:                          ; CODE XREF: -[UpdateView loadViews]+7D8↑j
                subsd   xmm0, qword ptr [rbp+var_80+8]
                cvttpd2dq xmm0, xmm0
                cvtdq2pd xmm0, xmm0
                movlps  qword ptr [rbp+var_90+8], xmm0
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movaps  [rbp+var_F0], xmm1
                movaps  [rbp+var_100], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movaps  xmm0, [rbp+var_100]
                movaps  xmm1, [rbp+var_F0]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_B0] ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                lea     r14, [rbp+var_2C0]
                mov     rdi, r14
                mov     rsi, rbx
                mov     rdx, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                addsd   xmm0, cs:qword_10002F070
                movsd   qword ptr [rbp+var_40], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10000F2FF
                lea     r15, [rbp+var_200]
                mov     rdi, r15
                mov     rsi, r14
                mov     rdx, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                jmp     short loc_10000F317
; ---------------------------------------------------------------------------

loc_10000F2FF:                          ; CODE XREF: -[UpdateView loadViews]+8B4↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_1F0], xmm0
                movapd  [rbp+var_200], xmm0
                xorpd   xmm0, xmm0

loc_10000F317:                          ; CODE XREF: -[UpdateView loadViews]+8D1↑j
                subsd   xmm0, qword ptr [rbp+var_80+8]
                movsd   qword ptr [rbp+var_50], xmm0
                mov     rdi, r14
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     r15, r12
                mov     rsi, cs:selRef_findNewVersionLogTextView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionLogTextView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movaps  xmm0, cs:xmmword_10002F1D0
                movaps  [rbp+var_70], xmm0
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_60], xmm0
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_60+8], xmm0
                movaps  xmm0, [rbp+var_70]
                movaps  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     r12, [rbp+var_B0]
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15
                movsd   xmm1, cs:qword_10002F078
                mov     r15, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm2, qword ptr [rbx+r15]
                addsd   xmm2, xmm1
                movsd   xmm0, cs:qword_10002F058
                mulsd   xmm2, xmm0
                movsd   qword ptr [rbp+var_40], xmm2
                mov     r15, cs:_OBJC_IVAR_$_UpdateView_m_height ; double m_height;
                addsd   xmm1, qword ptr [rbx+r15]
                mulsd   xmm1, xmm0
                addsd   xmm1, cs:qword_10002F080
                movsd   qword ptr [rbp+var_50], xmm1
                mov     rsi, cs:selRef_progress ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView progress]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movaps  xmm0, cs:xmmword_10002F1E0
                movups  [rbp+var_60], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm1, qword ptr [rbx+rax]
                addsd   xmm1, cs:qword_10002F088
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_height ; double m_height;
                movsd   xmm2, qword ptr [rbx+rax]
                addsd   xmm2, cs:qword_10002F090
                movsd   xmm0, cs:qword_10002F058
                mulsd   xmm1, xmm0
                movsd   qword ptr [rbp+var_40], xmm1
                mulsd   xmm2, xmm0
                addsd   xmm2, cs:qword_10002F080
                movsd   qword ptr [rbp+var_50], xmm2
                mov     rsi, cs:selRef_reloadButton ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView reloadButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movaps  xmm0, cs:xmmword_10002F1F0
                movups  [rbp+var_60], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Emptyfirmwaer ; "emptyFirmwaer"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:selRef_hintLabel
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; -[UpdateView hintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r13
                mov     r13, cs:_objc_msgSend_ptr
                call    r14 ; _objc_release
                mov     r15, r14
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView hintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_sizeToFit ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView hintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000F5D9
                lea     r14, [rbp+var_1E0]
                mov     rdi, r14
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                jmp     short loc_10000F5ED
; ---------------------------------------------------------------------------

loc_10000F5D9:                          ; CODE XREF: -[UpdateView loadViews]+B8A↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_1D0], xmm0
                movaps  [rbp+var_1E0], xmm0
                xorps   xmm0, xmm0

loc_10000F5ED:                          ; CODE XREF: -[UpdateView loadViews]+BAB↑j
                movsd   qword ptr [rbp+var_40], xmm0
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView hintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000F638
                lea     r14, [rbp+var_1C0]
                mov     rdi, r14
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                jmp     short loc_10000F64C
; ---------------------------------------------------------------------------

loc_10000F638:                          ; CODE XREF: -[UpdateView loadViews]+BE9↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_1B0], xmm0
                movaps  [rbp+var_1C0], xmm0
                xorps   xmm0, xmm0

loc_10000F64C:                          ; CODE XREF: -[UpdateView loadViews]+C0A↑j
                movsd   qword ptr [rbp+var_50], xmm0
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm0, qword ptr [rbx+rax]
                subsd   xmm0, qword ptr [rbp+var_40]
                mulsd   xmm0, cs:qword_10002F058
                movsd   [rbp+var_98], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000F6BC
                lea     r14, [rbp+var_1A0]
                mov     rdi, r14
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+8]
                jmp     short loc_10000F6D4
; ---------------------------------------------------------------------------

loc_10000F6BC:                          ; CODE XREF: -[UpdateView loadViews]+C6D↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_190], xmm0
                movapd  [rbp+var_1A0], xmm0
                xorpd   xmm0, xmm0

loc_10000F6D4:                          ; CODE XREF: -[UpdateView loadViews]+C8E↑j
                subsd   xmm0, qword ptr [rbp+var_50]
                addsd   xmm0, cs:qword_10002F098
                movsd   [rbp+var_C0], xmm0
                mov     rdi, r15
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     r15, r14
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView hintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movsd   xmm0, [rbp+var_98]
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, [rbp+var_C0]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_60], xmm0
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_60+8], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_B0] ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15
                mov     r14, r15
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                lea     rdx, cfstr_Notfirmware ; "notFirmware"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_notFirmware ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView notFirmware]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     rdi, r13
                mov     r13, cs:_objc_msgSend_ptr
                call    r14
                mov     rdi, r15
                call    r14
                mov     rdi, r12
                call    r14
                mov     rdi, rbx        ; void *
                mov     r12, cs:selRef_notFirmware
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView notFirmware]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_sizeToFit ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r14
                mov     r14, r12
                lea     r15, [rbp+var_2A0]
                mov     rdi, r15
                mov     rsi, rbx
                mov     r12, cs:selRef_frame
                mov     rdx, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                addsd   xmm0, cs:qword_10002F0A0
                movsd   qword ptr [rbp+var_40], xmm0
                lea     r15, [rbp+var_280]
                mov     rdi, r15
                mov     rsi, rbx
                mov     rdx, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                movsd   qword ptr [rbp+var_50], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView notFirmware]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      short loc_10000F8A5
                lea     r15, [rbp+var_180]
                mov     rdi, r15
                mov     rsi, r12
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                jmp     short loc_10000F8B9
; ---------------------------------------------------------------------------

loc_10000F8A5:                          ; CODE XREF: -[UpdateView loadViews]+E56↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_170], xmm0
                movaps  [rbp+var_180], xmm0
                xorps   xmm0, xmm0

loc_10000F8B9:                          ; CODE XREF: -[UpdateView loadViews]+E77↑j
                movsd   [rbp+var_98], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView notFirmware]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     qword ptr [rbp+var_70], 0
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_60], xmm0
                movsd   xmm0, [rbp+var_98]
                movsd   qword ptr [rbp+var_60+8], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_B0] ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     r12, r14
                mov     r14, cs:selRef_device
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_version ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_version ; float m_version;
                movss   dword ptr [rbx+rax], xmm0
                mov     rdi, r15
                call    r12
                mov     r13, r12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r15, cs:selRef_beta
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, eax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_beta ; float m_beta;
                movss   dword ptr [rbx+rax], xmm0
                mov     rdi, r12
                call    r13
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_version ; char *
                call    cs:_objc_msgSend_ptr
                movss   dword ptr [rbp+var_40], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_targerVersion ; float m_targerVersion;
                movss   xmm1, dword ptr [rbx+rcx]
                mov     rsi, cs:selRef_getFirmwaerHintVersion_beta_targerVersion_ ; char *
                movzx   edx, ax
                mov     rdi, rbx        ; void *
                movss   xmm0, dword ptr [rbp+var_40]
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, rbx        ; void *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r13
                mov     r15, cs:_objc_msgSend_ptr
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     r12, r14
                mov     rdi, rbx        ; void *
                mov     r13, cs:selRef_firmwaerHintLabel
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_sizeToFit ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     rdi, rbx        ; void *
                mov     r12, r13
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000FB07
                lea     r14, [rbp+var_160]
                mov     rdi, r14
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                jmp     short loc_10000FB1B
; ---------------------------------------------------------------------------

loc_10000FB07:                          ; CODE XREF: -[UpdateView loadViews]+10B8↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_150], xmm0
                movaps  [rbp+var_160], xmm0
                xorps   xmm0, xmm0

loc_10000FB1B:                          ; CODE XREF: -[UpdateView loadViews]+10D9↑j
                movsd   qword ptr [rbp+var_40], xmm0
                mov     r14, cs:selRef_hintLabel
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm0, qword ptr [rbx+rax]
                addsd   xmm0, cs:qword_10002F0A8
                mulsd   xmm0, cs:qword_10002F058
                cvttpd2dq xmm0, xmm0
                cvtdq2pd xmm0, xmm0
                movapd  [rbp+var_50], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView hintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10000FB96
                lea     r14, [rbp+var_140]
                mov     rdi, r14
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+8]
                jmp     short loc_10000FBAE
; ---------------------------------------------------------------------------

loc_10000FB96:                          ; CODE XREF: -[UpdateView loadViews]+1147↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_130], xmm0
                movapd  [rbp+var_140], xmm0
                xorpd   xmm0, xmm0

loc_10000FBAE:                          ; CODE XREF: -[UpdateView loadViews]+1168↑j
                subsd   xmm0, qword ptr [rbp+var_40]
                addsd   xmm0, cs:qword_10002F000
                movsd   [rbp+var_98], xmm0
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movaps  xmm0, [rbp+var_50]
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, [rbp+var_98]
                movsd   qword ptr [rbp+var_70+8], xmm0
                mov     rax, 4075E00000000000h
                mov     qword ptr [rbp+var_60], rax
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_60+8], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, r14        ; void *
                mov     rsi, [rbp+var_B0] ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm0, qword ptr [rbx+rax]
                addsd   xmm0, cs:qword_10002F0B0
                mulsd   xmm0, cs:qword_10002F058
                movsd   qword ptr [rbp+var_50], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10000FCA8
                lea     r15, [rbp+var_120]
                mov     rdi, r15
                mov     rsi, r14
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+8]
                addsd   xmm0, cs:qword_10002F0B8
                addsd   xmm0, cs:qword_10002F090
                jmp     short loc_10000FCC4
; ---------------------------------------------------------------------------

loc_10000FCA8:                          ; CODE XREF: -[UpdateView loadViews]+1249↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_110], xmm0
                movapd  [rbp+var_120], xmm0
                movsd   xmm0, cs:qword_10002F0C0

loc_10000FCC4:                          ; CODE XREF: -[UpdateView loadViews]+127A↑j
                movsd   qword ptr [rbp+var_40], xmm0
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     r15, r14
                mov     rsi, cs:selRef_updateButton ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movaps  xmm0, cs:xmmword_10002F200
                movups  [rbp+var_60], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     r12, [rbp+var_B0]
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15
                mov     r15, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm1, qword ptr [rbx+r15]
                movsd   xmm0, cs:qword_10002F058
                mulsd   xmm1, xmm0
                addsd   xmm1, cs:qword_10002F0C8
                addsd   xmm1, cs:qword_10002F0D0
                movsd   qword ptr [rbp+var_50], xmm1
                mov     rsi, cs:selRef_leftButton ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movaps  xmm0, cs:xmmword_10002F210
                movups  [rbp+var_60], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                movsd   xmm0, cs:qword_10002F058
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                mulsd   xmm0, qword ptr [rbx+rax]
                addsd   xmm0, cs:qword_10002F008
                movsd   qword ptr [rbp+var_50], xmm0
                mov     rsi, cs:selRef_rightButton ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movsd   xmm0, qword ptr [rbp+var_50]
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, qword ptr [rbp+var_40]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movaps  xmm0, cs:xmmword_10002F210
                movups  [rbp+var_60], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+320h+var_310], xmm1
                movups  [rsp+320h+var_320], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_setState_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend ; -[UpdateView setState:]
                mov     rsi, cs:selRef_state ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView state]
                test    rax, rax
                jnz     short loc_10000FE6C
                mov     rsi, cs:selRef_loadUpdateFirmwae ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView loadUpdateFirmwae]

loc_10000FE6C:                          ; CODE XREF: -[UpdateView loadViews]+142E↑j
                mov     rsi, cs:selRef_isSetNewFirmware ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView isSetNewFirmware]
                test    al, al
                jz      short loc_10000FEB0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_B8] ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_10000FEB0:                          ; CODE XREF: -[UpdateView loadViews]+26↑j
                                        ; -[UpdateView loadViews]+1452↑j
                add     rsp, 2F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_loadViews_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView layout](UpdateView *self, SEL)
__UpdateView_layout_ proc near          ; DATA XREF: __objc_const:0000000100040188↓o

var_18          = qword ptr -18h
anonymous_0     = qword ptr -10h

                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdi
                lea     rdi, [rbp+var_18]
                mov     [rdi], rbx
                mov     rax, cs:classRef_UpdateView_0
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_layout
                call    _objc_msgSendSuper2
                mov     rsi, cs:selRef_loadViews ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView loadViews]
                add     rsp, 18h
                pop     rbx
                pop     rbp
                retn
__UpdateView_layout_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView mouseDown:](UpdateView *self, SEL, id)
__UpdateView_mouseDown__ proc near      ; DATA XREF: __objc_const:00000001000401A0↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__UpdateView_mouseDown__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView viewDidHide](UpdateView *self, SEL)
__UpdateView_viewDidHide_ proc near     ; DATA XREF: __objc_const:00000001000401B8↓o

var_10          = qword ptr -10h
anonymous_0     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                lea     rax, [rbp+var_10]
                mov     [rax], rdi
                mov     rcx, cs:classRef_UpdateView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_viewDidHide
                mov     rdi, rax
                call    _objc_msgSendSuper2
                add     rsp, 10h
                pop     rbp
                retn
__UpdateView_viewDidHide_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView viewDidUnhide](UpdateView *self, SEL)
__UpdateView_viewDidUnhide_ proc near   ; DATA XREF: __objc_const:00000001000401D0↓o

var_10          = qword ptr -10h
anonymous_0     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                lea     rax, [rbp+var_10]
                mov     [rax], rdi
                mov     rcx, cs:classRef_UpdateView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_viewDidUnhide
                mov     rdi, rax
                call    _objc_msgSendSuper2
                add     rsp, 10h
                pop     rbp
                retn
__UpdateView_viewDidUnhide_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView removeFromSuperview](UpdateView *self, SEL)
__UpdateView_removeFromSuperview_ proc near
                                        ; DATA XREF: __objc_const:00000001000401E8↓o

anonymous_0     = CGRect ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdi
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     r12, cs:_objc_msgSend_ptr
                xor     edx, edx
                call    r12 ; _objc_msgSend ; -[UpdateView setUpdateFirmwaers:]
                mov     rsi, cs:selRef_setState_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend ; -[UpdateView setState:]
                mov     rsi, cs:selRef_shidBoot ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView shidBoot]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setFilePath_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_setSelectButton_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend ; -[UpdateView setSelectButton:]
                mov     rsi, cs:selRef_setIsSetNewFirmware_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend ; -[UpdateView setIsSetNewFirmware:]
                mov     rsi, cs:selRef_setIsloadData_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend ; -[UpdateView setIsloadData:]
                mov     rsi, cs:selRef_manualView ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_removeFromSuperview
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                lea     rdi, [rbp+anonymous_0.var0.var1]
                mov     [rdi], rbx
                mov     rax, cs:classRef_UpdateView_0
                mov     [rdi+8], rax
                mov     rsi, r15
                call    _objc_msgSendSuper2
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_removeFromSuperview_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView initFindNewVersion](UpdateView *self, SEL)
__UpdateView_initFindNewVersion_ proc near
                                        ; DATA XREF: __objc_const:0000000100040200↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setFindNewVersionLabel_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[UpdateView setFindNewVersionLabel:]
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSFont ; void *
                mov     rsi, cs:selRef_systemFontOfSize_ ; char *
                movsd   xmm0, cs:qword_10002F0D8
                mov     r14, r15
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r15, cs:selRef_findNewVersionLabel
                mov     rdi, rbx
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setFont_
                mov     rdi, rax
                mov     rdx, r12
                call    r14
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_findNewVersionListView
                mov     rdi, rbx
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_addSubview_
                mov     rdi, r12
                mov     rdx, rax
                call    r14
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSTextView
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r14
                mov     r12, rax
                mov     rsi, cs:selRef_setFindNewVersionLogTextView_
                mov     rdi, rbx
                mov     rdx, rax
                call    r14
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSFont
                movsd   xmm0, cs:qword_10002F0E0
                mov     rsi, cs:selRef_systemFontOfSize_
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_findNewVersionLogTextView
                mov     rdi, rbx
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setFont_
                mov     rdx, r13
                call    r14
                mov     r12, r14
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     r13, cs:selRef_findNewVersionLogTextView
                mov     rsi, r13
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setAlignment_
                mov     rdi, rax
                xor     edx, edx
                call    r12
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setEditable_
                mov     rdi, rax
                xor     edx, edx
                call    r12
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setSelectable_
                mov     rdi, rax
                xor     edx, edx
                call    r12
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setDrawsBackground_
                mov     rdi, rax
                xor     edx, edx
                call    r12
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_controlColor
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setBackgroundColor_
                mov     rdi, r14
                mov     rdx, rax
                call    r12
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, cs:selRef_findNewVersionListView
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r14
                mov     rsi, cs:selRef_addSubview_
                mov     rdx, rax
                call    r12
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_blackColor
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setTextColor_
                mov     rdi, rbx
                mov     rdx, rax
                call    r12
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__UpdateView_initFindNewVersion_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView filterVersion:](UpdateView *self, SEL, float)
__UpdateView_filterVersion__ proc near  ; DATA XREF: __objc_const:0000000100040218↓o

var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                movss   [rbp+var_2C], xmm0
                mov     r14, rdi
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     [rbp+var_38], rax
                mov     r13, cs:selRef_updateFirmwaers
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                test    r12, r12
                jz      loc_10001051D
                mov     rax, cs:selRef_objectAtIndexedSubscript_
                mov     [rbp+var_60], rax
                mov     rax, cs:selRef_version
                mov     [rbp+var_48], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_40], rax
                mov     rax, cs:selRef_beta
                mov     [rbp+var_58], rax
                xor     r12d, r12d
                mov     rbx, cs:_objc_release_ptr
                mov     [rbp+var_50], r14

loc_100010458:                          ; CODE XREF: -[UpdateView filterVersion:]+173↓j
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_60] ; char *
                mov     rdx, r12
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_48] ; char *
                call    r15 ; _objc_msgSend
                ucomiss xmm0, [rbp+var_2C]
                jbe     short loc_1000104A7
                mov     rdi, [rbp+var_38] ; void *
                mov     rsi, [rbp+var_40] ; char *
                mov     rdx, r13
                call    r15 ; _objc_msgSend

loc_1000104A7:                          ; CODE XREF: -[UpdateView filterVersion:]+F3↑j
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_58] ; char *
                call    r15 ; _objc_msgSend
                test    eax, eax
                jnz     short loc_1000104D5
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_48] ; char *
                call    r15 ; _objc_msgSend
                ucomiss xmm0, [rbp+var_2C]
                jnz     short loc_1000104D5
                jp      short loc_1000104D5
                mov     rdi, [rbp+var_38] ; void *
                mov     rsi, [rbp+var_40] ; char *
                mov     rdx, r13
                call    r15 ; _objc_msgSend

loc_1000104D5:                          ; CODE XREF: -[UpdateView filterVersion:]+10F↑j
                                        ; -[UpdateView filterVersion:]+11F↑j ...
                mov     rdi, r13
                call    rbx ; _objc_release
                inc     r12
                mov     rdi, [rbp+var_50] ; void *
                mov     r13, cs:selRef_updateFirmwaers
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_count ; char *
                call    r15 ; _objc_msgSend
                mov     [rbp+var_68], rax
                mov     rdi, r14
                call    rbx ; _objc_release
                cmp     [rbp+var_68], r12
                mov     r14, [rbp+var_50]
                ja      loc_100010458

loc_10001051D:                          ; CODE XREF: -[UpdateView filterVersion:]+74↑j
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     rdi, r14        ; void *
                mov     rbx, [rbp+var_38]
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr ; -[UpdateView setUpdateFirmwaers:]
                mov     rdi, rbx
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__UpdateView_filterVersion__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView refreshFirmwaerList](UpdateView *self, SEL)
__UpdateView_refreshFirmwaerList_ proc near
                                        ; DATA XREF: __objc_const:0000000100040230↓o

var_540         = xmmword ptr -540h
var_530         = xmmword ptr -530h
var_520         = xmmword ptr -520h
var_510         = xmmword ptr -510h
var_500         = xmmword ptr -500h
var_4F0         = xmmword ptr -4F0h
var_4E0         = xmmword ptr -4E0h
var_4D0         = xmmword ptr -4D0h
var_4C0         = xmmword ptr -4C0h
anonymous_0     = xmmword ptr -4B0h
var_4A0         = xmmword ptr -4A0h
var_490         = xmmword ptr -490h
var_480         = xmmword ptr -480h
anonymous_1     = xmmword ptr -470h
var_460         = xmmword ptr -460h
var_450         = xmmword ptr -450h
var_440         = xmmword ptr -440h
var_430         = xmmword ptr -430h
var_420         = xmmword ptr -420h
var_410         = xmmword ptr -410h
var_400         = xmmword ptr -400h
anonymous_2     = xmmword ptr -3F0h
var_3E0         = xmmword ptr -3E0h
anonymous_3     = xmmword ptr -3D0h
var_3C0         = xmmword ptr -3C0h
var_3B0         = xmmword ptr -3B0h
var_3A0         = xmmword ptr -3A0h
anonymous_4     = xmmword ptr -390h
var_380         = xmmword ptr -380h
anonymous_5     = xmmword ptr -370h
var_360         = xmmword ptr -360h
var_350         = xmmword ptr -350h
var_340         = xmmword ptr -340h
anonymous_6     = xmmword ptr -330h
var_320         = xmmword ptr -320h
var_310         = xmmword ptr -310h
var_300         = xmmword ptr -300h
var_2F0         = xmmword ptr -2F0h
var_2E0         = xmmword ptr -2E0h
var_2D0         = xmmword ptr -2D0h
var_2C0         = xmmword ptr -2C0h
var_2B0         = xmmword ptr -2B0h
var_2A0         = xmmword ptr -2A0h
var_290         = xmmword ptr -290h
var_278         = qword ptr -278h
var_270         = qword ptr -270h
var_268         = qword ptr -268h
var_260         = qword ptr -260h
var_258         = qword ptr -258h
var_250         = qword ptr -250h
var_248         = qword ptr -248h
var_240         = qword ptr -240h
var_238         = qword ptr -238h
var_230         = qword ptr -230h
var_228         = qword ptr -228h
var_220         = qword ptr -220h
var_218         = qword ptr -218h
var_210         = qword ptr -210h
var_208         = qword ptr -208h
var_200         = qword ptr -200h
var_1F8         = qword ptr -1F8h
var_1F0         = qword ptr -1F0h
var_1E8         = qword ptr -1E8h
var_1E0         = qword ptr -1E0h
var_1D8         = qword ptr -1D8h
var_1D0         = qword ptr -1D0h
var_1C8         = qword ptr -1C8h
var_1C0         = qword ptr -1C0h
var_1B8         = qword ptr -1B8h
var_1B0         = qword ptr -1B0h
var_1A8         = qword ptr -1A8h
var_1A0         = qword ptr -1A0h
var_198         = qword ptr -198h
var_190         = qword ptr -190h
var_188         = qword ptr -188h
var_180         = qword ptr -180h
var_178         = qword ptr -178h
var_170         = qword ptr -170h
var_168         = qword ptr -168h
var_160         = qword ptr -160h
var_158         = qword ptr -158h
var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = xmmword ptr -0B0h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 518h
                mov     r14, rdi
                mov     [rbp+var_58], rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_sortUsingComparator_ ; char *
                lea     rdx, off_10003A428
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     r13, cs:selRef_device
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_bootVersion ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                movzx   r14d, ax
                mov     rdi, rbx
                call    r15 ; _objc_release
                cmp     r14d, 104h
                jbe     loc_100010751
                mov     rdi, [rbp+var_58] ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                movzx   r15d, ax
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                cmp     r15d, 6002h
                jnz     short loc_100010663
                mov     rsi, cs:selRef_filterVersion_ ; char *
                movss   xmm0, cs:dword_10002F230
                mov     rdi, [rbp+var_58] ; void *
                call    cs:_objc_msgSend_ptr

loc_100010663:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+FD↑j
                mov     rdi, [rbp+var_58] ; void *
                mov     r15, cs:selRef_device
                mov     rsi, r15        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     r13, cs:selRef_details
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r12 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 6000h
                jnz     short loc_1000106CD
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                jmp     short loc_100010738
; ---------------------------------------------------------------------------

loc_1000106CD:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+16B↑j
                mov     rdi, [rbp+var_58] ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r12 ; _objc_msgSend
                movzx   eax, ax
                mov     dword ptr [rbp+var_60], eax
                mov     rdi, r13
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     r12, cs:_objc_msgSend_ptr
                cmp     dword ptr [rbp+var_60], 6001h
                jnz     short loc_100010751

loc_100010738:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+180↑j
                mov     rsi, cs:selRef_filterVersion_ ; char *
                movss   xmm0, cs:dword_10002F234
                mov     rdi, [rbp+var_58] ; void *
                call    cs:_objc_msgSend_ptr

loc_100010751:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+9F↑j
                                        ; -[UpdateView refreshFirmwaerList]+1EB↑j
                mov     r14, cs:selRef_details
                mov     r15, cs:selRef_pid
                mov     rdi, [rbp+var_58] ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     [rbp+var_F8], r14
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     [rbp+var_108], r15
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                movzx   r15d, ax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     r15d, 6006h
                jnz     short loc_1000107DC
                mov     rsi, cs:selRef_filterVersion_ ; char *
                movss   xmm0, cs:dword_10002F238
                mov     rdi, [rbp+var_58] ; void *
                call    cs:_objc_msgSend_ptr

loc_1000107DC:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+276↑j
                mov     rsi, cs:selRef_scrollView ; char *
                mov     rdi, [rbp+var_58] ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                test    rax, rax
                jz      short loc_10001081E
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_520]
                mov     rdi, r14
                mov     rsi, rbx
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                jmp     short loc_100010832
; ---------------------------------------------------------------------------

loc_10001081E:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+2B0↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_510], xmm0
                movaps  [rbp+var_520], xmm0
                xorps   xmm0, xmm0

loc_100010832:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+2D1↑j
                movsd   [rbp+var_70], xmm0
                mov     r15, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     r14, [rbp+var_58]
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r13, rax
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r14        ; void *
                mov     rbx, cs:selRef_scrollView
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHasVerticalScroller_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                cmp     r13, 6
                mov     [rbp+var_D0], r13
                ja      short loc_1000108F4
                mov     rdi, [rbp+var_58] ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setHasVerticalScroller_ ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                xorps   xmm0, xmm0
                cvtsi2sd xmm0, r13
                jmp     short loc_1000108FC
; ---------------------------------------------------------------------------

loc_1000108F4:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+370↑j
                movsd   xmm0, cs:qword_10002F0E8

loc_1000108FC:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+3A7↑j
                movsd   [rbp+var_60], xmm0
                mov     r15, rbx
                mov     rdi, cs:classRef_NSView
                call    _objc_alloc
                mov     rbx, rax
                movsd   xmm0, [rbp+var_60]
                mulsd   xmm0, cs:qword_10002F0F0
                addsd   xmm0, [rbp+var_70]
                movsd   [rbp+var_60], xmm0
                mov     rdi, [rbp+var_58] ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10001096F
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_500]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                mov     r15, cs:selRef_scrollView
                jmp     short loc_100010987
; ---------------------------------------------------------------------------

loc_10001096F:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+3FA↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_4F0], xmm0
                movapd  [rbp+var_500], xmm0
                xorpd   xmm0, xmm0

loc_100010987:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+422↑j
                xor     eax, eax
                mov     qword ptr [rbp+var_90], rax
                movsd   xmm1, [rbp+var_60]
                movsd   qword ptr [rbp+var_90+8], xmm1
                movsd   qword ptr [rbp+var_80], xmm0
                mov     qword ptr [rbp+var_80+8], rax
                mov     rsi, cs:selRef_initWithFrame_ ; char *
                movups  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     [rbp+var_100], rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSView
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, [rbp+var_58] ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                test    rax, rax
                jz      short loc_100010A2D
                mov     rdx, cs:selRef_frame
                lea     rdi, [rbp+var_2A0]
                mov     rsi, rbx
                call    _objc_msgSend_stret
                jmp     short loc_100010A3E
; ---------------------------------------------------------------------------

loc_100010A2D:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+4C8↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_290], xmm0
                movaps  [rbp+var_2A0], xmm0

loc_100010A3E:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+4E0↑j
                mov     rsi, cs:selRef_setFrame_ ; char *
                movaps  xmm0, [rbp+var_2A0]
                movaps  xmm1, [rbp+var_290]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                mov     [rbp+var_130], r14
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_notFirmware ; char *
                mov     rdi, [rbp+var_58] ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rcx, [rbp+var_D0]
                dec     rcx
                js      loc_1000124CD
                mov     rax, cs:selRef_objectAtIndexedSubscript_
                mov     [rbp+var_158], rax
                mov     rax, cs:selRef_frame
                mov     [rbp+var_70], rax
                mov     rax, cs:selRef_layer
                mov     [rbp+var_128], rax
                mov     rax, cs:selRef_setBorderWidth_
                mov     [rbp+var_268], rax
                mov     rax, cs:selRef_setMasksToBounds_
                mov     [rbp+var_260], rax
                mov     rax, cs:selRef_fileName
                mov     [rbp+var_160], rax
                mov     rax, cs:selRef_setStringValue_
                mov     [rbp+var_C0], rax
                mov     rax, cs:selRef_containsString_
                mov     [rbp+var_258], rax
                mov     rax, cs:selRef_rangeOfString_
                mov     [rbp+var_1C8], rax
                mov     rax, cs:selRef_substringFromIndex_
                mov     [rbp+var_1C0], rax
                mov     rax, cs:selRef_version
                mov     [rbp+var_E8], rax
                mov     rax, cs:selRef_stringWithFormat_
                mov     [rbp+var_E0], rax
                mov     rax, cs:selRef_stringValue
                mov     [rbp+var_250], rax
                mov     rax, cs:selRef_componentsSeparatedByString_
                mov     [rbp+var_248], rax
                mov     rax, cs:selRef_date
                mov     [rbp+var_1B8], rax
                mov     rax, cs:selRef_firstObject
                mov     [rbp+var_1B0], rax
                mov     rax, cs:selRef_beta
                mov     [rbp+var_1A8], rax
                mov     rax, cs:selRef_colorWithRed_green_blue_alpha_
                mov     [rbp+var_120], rax
                mov     rax, cs:selRef_setTextColor_
                mov     [rbp+var_150], rax
                mov     rax, cs:selRef_systemFontOfSize_
                mov     [rbp+var_148], rax
                mov     rax, cs:selRef_setFont_
                mov     [rbp+var_140], rax
                mov     rax, cs:selRef_setAlignment_
                mov     [rbp+var_198], rax
                mov     rax, cs:selRef_sizeToFit
                mov     [rbp+var_118], rax
                mov     rax, cs:selRef_imageNamed_
                mov     [rbp+var_240], rax
                mov     rax, cs:selRef_setImage_
                mov     [rbp+var_238], rax
                mov     rax, cs:selRef_setAlternateImage_
                mov     [rbp+var_230], rax
                mov     rax, cs:selRef_setBordered_
                mov     [rbp+var_228], rax
                mov     rax, cs:selRef_setImageScaling_
                mov     [rbp+var_220], rax
                mov     rax, cs:selRef_setButtonType_
                mov     [rbp+var_218], rax
                mov     rax, cs:selRef_setTarget_
                mov     [rbp+var_190], rax
                mov     rax, cs:selRef_setTag_
                mov     [rbp+var_188], rax
                mov     rax, cs:selRef_chengeboxClick_
                mov     [rbp+var_138], rax
                mov     rax, cs:selRef_setAction_
                mov     [rbp+var_180], rax
                mov     rax, cs:selRef_setBezelStyle_
                mov     [rbp+var_210], rax
                mov     rax, cs:selRef_blackColor
                mov     [rbp+var_208], rax
                mov     rax, cs:selRef_dictionaryWithObjects_forKeys_count_
                mov     [rbp+var_200], rax
                mov     rax, cs:selRef_mainBundle
                mov     [rbp+var_1F8], rax
                mov     rax, cs:selRef_localizedStringForKey_value_table_
                mov     [rbp+var_1F0], rax
                mov     rax, cs:selRef_initWithString_attributes_
                mov     [rbp+var_1E8], rax
                mov     rax, cs:selRef_setAttributedTitle_
                mov     [rbp+var_1E0], rax
                mov     rax, cs:selRef_whiteColor
                mov     [rbp+var_1D8], rax
                mov     rax, cs:selRef_CGColor
                mov     [rbp+var_178], rax
                mov     rax, cs:selRef_setBackgroundColor_
                mov     [rbp+var_170], rax
                mov     rax, cs:selRef_setWantsLayer_
                mov     [rbp+var_168], rax
                mov     rax, cs:selRef_showLogClick_
                mov     [rbp+var_1D0], rax
                mov     rax, cs:selRef_addSubview_
                mov     [rbp+var_110], rax
                mov     r13, [rbp+var_100]
                mov     r12, cs:_objc_release_ptr
                mov     r14, cs:_objc_msgSend_ptr

loc_100010D4A:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1F7A↓j
                mov     [rbp+var_D0], rcx
                mov     r15, [rbp+var_58]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_notFirmware ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     edx, 1
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_158] ; char *
                mov     rdx, [rbp+var_D0]
                mov     r15, r14
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_A0], rax
                mov     rdi, rbx
                call    r12 ; _objc_release
                test    r13, r13
                mov     [rbp+var_100], r13
                jz      short loc_100010DEA
                lea     rdi, [rbp+var_90]
                mov     rsi, r13
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                jmp     short loc_100010DF8
; ---------------------------------------------------------------------------

loc_100010DEA:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+888↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_80], xmm0
                movaps  [rbp+var_90], xmm0

loc_100010DF8:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+89D↑j
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                call    _CGRectGetMaxY
                movsd   [rbp+var_60], xmm0
                mov     rdi, cs:classRef_SView
                call    _objc_alloc
                mov     rbx, rax
                mov     rdi, [rbp+var_58] ; void *
                mov     rsi, cs:selRef_scrollView ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100010E63
                lea     rdi, [rbp+var_4E0]
                mov     rsi, r14
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_4D0]
                jmp     short loc_100010E77
; ---------------------------------------------------------------------------

loc_100010E63:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+8F9↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_4D0], xmm0
                movaps  [rbp+var_4E0], xmm0
                xorps   xmm0, xmm0

loc_100010E77:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+916↑j
                mov     qword ptr [rbp+var_90], 0
                movsd   xmm1, [rbp+var_60]
                movsd   qword ptr [rbp+var_90+8], xmm1
                movsd   qword ptr [rbp+var_80], xmm0
                mov     rax, 4044000000000000h
                mov     qword ptr [rbp+var_80+8], rax
                movups  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                mov     rdi, rbx
                mov     rsi, cs:selRef_initWithFrame_
                call    r15
                mov     r13, rax
                mov     rdi, r14
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r13
                mov     r14, [rbp+var_128]
                mov     rsi, r14
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_268]
                movsd   xmm0, cs:qword_10002EFF8
                call    r15
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     [rbp+var_C8], r13
                mov     rdi, r13
                mov     rsi, r14
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_260]
                mov     edx, 1
                call    r15
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r15
                mov     r14, rax
                mov     r12, [rbp+var_A0]
                mov     rdi, r12
                mov     r13, [rbp+var_160]
                mov     rsi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_60], r14
                mov     rdi, r14
                mov     rsi, [rbp+var_C0]
                mov     rdx, rax
                call    r15
                mov     rdi, rbx
                mov     rax, cs:_objc_release_ptr
                call    rax ; _objc_release
                mov     rdi, r12
                mov     rsi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_258]
                lea     r13, cfstr_Beta ; "beta"
                mov     rdx, r13
                call    r15
                mov     r14d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                lea     rax, stru_10003A8B8
                mov     [rbp+var_F0], rax
                test    r14b, r14b
                jz      short loc_10001105D
                mov     rdi, r12
                mov     r14, r13
                mov     r13, [rbp+var_160]
                mov     rsi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_1C8]
                mov     rdx, r14
                call    r15
                mov     r14, rax
                mov     rdi, rbx
                mov     rax, cs:_objc_release_ptr
                call    rax ; _objc_release
                mov     rdi, r12
                mov     rsi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_1C0]
                mov     rdx, r14
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_F0], rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_10001105D:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+A97↑j
                mov     r13, [rbp+var_58]
                mov     rdi, r13
                mov     rsi, cs:selRef_device
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     r14, [rbp+var_108]
                mov     rsi, r14
                call    r15
                movzx   eax, ax
                cmp     eax, 5004h
                mov     r12, r15
                jnz     short loc_1000110AC
                mov     rdi, rbx
                mov     r14, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     r15, [rbp+var_60]
                jmp     short loc_100011126
; ---------------------------------------------------------------------------

loc_1000110AC:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+B49↑j
                mov     rdi, r13
                mov     rsi, cs:selRef_device
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_68], rax
                mov     rdi, rax
                mov     rsi, [rbp+var_F8]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, r14
                call    r12
                movzx   eax, ax
                mov     dword ptr [rbp+var_B8], eax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                mov     r13, r12
                mov     r12, r15
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_68]
                mov     r14, r13
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                cmp     dword ptr [rbp+var_B8], 5004h
                mov     r13, [rbp+var_58]
                mov     r15, [rbp+var_60]
                jnz     short loc_100011180

loc_100011126:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+B5F↑j
                mov     rbx, cs:classRef_NSString
                mov     rdi, [rbp+var_A0]
                mov     rsi, [rbp+var_E8]
                call    r14
                cvtss2sd xmm0, xmm0
                mov     rdi, rbx
                mov     rsi, [rbp+var_E0]
                lea     rdx, cfstr_N30ModkitV2f ; "N30 Modkit_V%.2f %@"
                mov     rcx, [rbp+var_F0]
                mov     al, 1
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_C0]
                mov     rdx, rax
                call    r14
                mov     rdi, rbx
                call    r12 ; _objc_release

loc_100011180:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+BD9↑j
                mov     rdi, r13
                mov     r15, cs:selRef_device
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_68], rax
                mov     rdi, rax
                mov     rbx, r14
                mov     r14, r13
                mov     r13, [rbp+var_108]
                mov     rsi, r13
                call    rbx
                movzx   eax, ax
                cmp     eax, 5003h
                jnz     short loc_1000111CE
                mov     rdi, [rbp+var_68]
                call    r12
                mov     r13, r14
                mov     r14, rbx
                mov     r15, [rbp+var_60]
                jmp     short loc_100011232
; ---------------------------------------------------------------------------

loc_1000111CE:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+C6E↑j
                mov     rdi, r14
                mov     rsi, r15
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_F8]
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, r13
                call    rbx
                movzx   r13d, ax
                mov     rdi, r15
                mov     r12, cs:_objc_release_ptr
                mov     r15, [rbp+var_60]
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_68]
                call    r12 ; _objc_release
                cmp     r13d, 5003h
                mov     r13, [rbp+var_58]
                mov     r14, rbx
                jnz     short loc_10001128C

loc_100011232:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+C81↑j
                mov     rbx, cs:classRef_NSString
                mov     rdi, [rbp+var_A0]
                mov     rsi, [rbp+var_E8]
                call    r14
                cvtss2sd xmm0, xmm0
                mov     rdi, rbx
                mov     rsi, [rbp+var_E0]
                lea     rdx, cfstr_Sn30ModkitV2f ; "SN30 Modkit_V%.2f %@"
                mov     rcx, [rbp+var_F0]
                mov     al, 1
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_C0]
                mov     rdx, rax
                call    r14
                mov     rdi, rbx
                call    r12

loc_10001128C:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+CE5↑j
                mov     rdi, r13
                mov     r15, cs:selRef_device
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_68], rax
                mov     rdi, rax
                mov     rbx, r14
                mov     r14, r13
                mov     r13, [rbp+var_108]
                mov     rsi, r13
                call    rbx
                movzx   eax, ax
                cmp     eax, 5002h
                jnz     short loc_1000112DA
                mov     rdi, [rbp+var_68]
                call    r12 ; _objc_release
                mov     r13, r14
                mov     r14, rbx
                mov     r15, [rbp+var_60]
                jmp     short loc_10001133E
; ---------------------------------------------------------------------------

loc_1000112DA:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+D7A↑j
                mov     rdi, r14
                mov     rsi, r15
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_F8]
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, r13
                call    rbx
                movzx   r13d, ax
                mov     rdi, r15
                mov     r12, cs:_objc_release_ptr
                mov     r15, [rbp+var_60]
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_68]
                call    r12 ; _objc_release
                cmp     r13d, 5002h
                mov     r13, [rbp+var_58]
                mov     r14, rbx
                jnz     short loc_100011398

loc_10001133E:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+D8D↑j
                mov     rbx, cs:classRef_NSString
                mov     rdi, [rbp+var_A0]
                mov     rsi, [rbp+var_E8]
                call    r14
                cvtss2sd xmm0, xmm0
                mov     rdi, rbx
                mov     rsi, [rbp+var_E0]
                lea     rdx, cfstr_Sf30ModkitV2f ; "SF30 Modkit_V%.2f %@"
                mov     rcx, [rbp+var_F0]
                mov     al, 1
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_C0]
                mov     rdx, rax
                call    r14
                mov     rdi, rbx
                call    r12 ; _objc_release

loc_100011398:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+DF1↑j
                mov     rdi, r13
                mov     r15, cs:selRef_device
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_68], rax
                mov     rdi, rax
                mov     rbx, r14
                mov     r14, r13
                mov     r13, [rbp+var_108]
                mov     rsi, r13
                call    rbx
                movzx   eax, ax
                cmp     eax, 5001h
                jnz     short loc_1000113EA
                mov     rdi, [rbp+var_68]
                call    r12 ; _objc_release
                mov     r13, [rbp+var_A0]
                mov     r14, rbx
                mov     r15, [rbp+var_60]
                jmp     short loc_100011451
; ---------------------------------------------------------------------------

loc_1000113EA:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+E86↑j
                mov     rdi, r14
                mov     rsi, r15
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_F8]
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, r13
                call    rbx
                movzx   r13d, ax
                mov     rdi, r15
                mov     r12, cs:_objc_release_ptr
                mov     r15, [rbp+var_60]
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_68]
                call    r12 ; _objc_release
                cmp     r13d, 5001h
                mov     r13, [rbp+var_A0]
                mov     r14, rbx
                jnz     short loc_1000114A7

loc_100011451:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+E9D↑j
                mov     rbx, cs:classRef_NSString
                mov     rdi, r13
                mov     rsi, [rbp+var_E8]
                call    r14
                cvtss2sd xmm0, xmm0
                mov     rdi, rbx
                mov     rsi, [rbp+var_E0]
                lea     rdx, cfstr_M30ModkitV2f ; "M30 Modkit_V%.2f %@"
                mov     rcx, [rbp+var_F0]
                mov     al, 1
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_C0]
                mov     rdx, rax
                call    r14
                mov     rdi, rbx
                call    r12 ; _objc_release

loc_1000114A7:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+F04↑j
                mov     rdi, r15
                mov     rsi, [rbp+var_250]
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_248]
                lea     rdx, cfstr_V    ; "_V"
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r14
                mov     r14, rax
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     [rbp+var_1A0], r14
                mov     rdi, r14
                mov     r14, r13
                mov     rsi, cs:selRef_count
                call    r13
                test    rax, rax
                jz      loc_100011621
                mov     rbx, cs:classRef_NSString
                mov     r13, [rbp+var_A0]
                mov     rdi, r13
                mov     rsi, [rbp+var_1B8]
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r14
                mov     r14, rax
                mov     rdi, [rbp+var_1A0]
                mov     rsi, [rbp+var_1B0]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r13
                mov     rsi, [rbp+var_E8]
                call    r12
                cvtss2sd xmm0, xmm0
                mov     rdi, rbx
                mov     rsi, [rbp+var_E0]
                lea     rdx, cfstr_V2f_0 ; "%@  %@ V%.2f"
                mov     rcx, r14
                mov     r8, r15
                mov     al, 1
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r13
                mov     r15, r13
                mov     r13, [rbp+var_1A8]
                mov     rsi, r13
                call    r12
                test    eax, eax
                jle     short loc_1000115FD
                mov     r14, cs:classRef_NSString
                mov     rdi, r15
                mov     rsi, r13
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_E0]
                lea     rdx, cfstr_BetaD ; "%@ beta %d"
                mov     rcx, rbx
                mov     r8d, eax
                xor     eax, eax
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rbx, r14
                mov     r14, r12
                mov     r12, r15
                jmp     short loc_100011607
; ---------------------------------------------------------------------------

loc_1000115FD:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1061↑j
                mov     r14, r12
                mov     r12, cs:_objc_release_ptr

loc_100011607:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+10B0↑j
                mov     r15, [rbp+var_60]
                mov     rdi, r15
                mov     rsi, [rbp+var_C0]
                mov     rdx, rbx
                call    r14
                mov     rdi, rbx
                call    r12

loc_100011621:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+FB6↑j
                mov     rdi, cs:classRef_NSColor
                mov     rsi, [rbp+var_120]
                movsd   xmm0, cs:qword_10002F0F8
                movapd  xmm1, xmm0
                movapd  xmm2, xmm0
                movsd   xmm3, cs:qword_10002EFF8
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_150]
                mov     rdx, rax
                call    r14
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSFont
                mov     rsi, [rbp+var_148]
                movsd   xmm0, cs:qword_10002F100
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_140]
                mov     rdx, rax
                call    r14
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     edx, 2
                mov     rdi, r15
                mov     rsi, [rbp+var_198]
                call    r14
                mov     rdi, r15
                mov     rsi, [rbp+var_118]
                call    r14
                test    r15, r15
                mov     r12, r14
                jz      short loc_10001173A
                lea     rdi, [rbp+var_4C0]
                mov     rsi, r15
                mov     rbx, [rbp+var_70]
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+anonymous_0+8]
                movsd   [rbp+var_68], xmm0
                lea     rdi, [rbp+var_4A0]
                mov     rsi, r15
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_490]
                movsd   [rbp+var_B8], xmm0
                lea     rdi, [rbp+var_480]
                mov     rsi, r15
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm3, [rbp+var_B8]
                movsd   xmm2, [rbp+var_68]
                movsd   xmm0, qword ptr [rbp+anonymous_1+8]
                jmp     short loc_100011772
; ---------------------------------------------------------------------------

loc_10001173A:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+117F↑j
                xorps   xmm0, xmm0
                movaps  xmmword ptr [rbp-4B0h], xmm0
                movaps  [rbp+var_4C0], xmm0
                movaps  [rbp+var_4A0], xmm0
                movaps  [rbp+var_490], xmm0
                movaps  [rbp+var_480], xmm0
                movaps  xmmword ptr [rbp-470h], xmm0
                xorps   xmm0, xmm0
                xorpd   xmm3, xmm3
                xorpd   xmm2, xmm2

loc_100011772:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+11ED↑j
                movsd   xmm1, cs:qword_10002F108
                subsd   xmm1, xmm2
                addsd   xmm1, cs:qword_10002F000
                mov     rax, 4041800000000000h
                mov     qword ptr [rbp+var_90], rax
                movsd   qword ptr [rbp+var_90+8], xmm1
                movsd   qword ptr [rbp+var_80], xmm3
                movsd   qword ptr [rbp+var_80+8], xmm0
                movupd  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movupd  [rsp+540h+var_540], xmm0
                mov     rdi, r15
                mov     rsi, cs:selRef_setFrame_
                call    r12
                mov     rdi, cs:classRef_NSButton
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r12
                mov     r13, rax
                mov     rdi, cs:classRef_NSImage
                mov     r14, [rbp+var_240]
                mov     rsi, r14
                lea     rdx, cfstr_CheckboxNomal ; "checkbox_nomal"
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r13
                mov     rsi, [rbp+var_238]
                mov     rdx, rax
                call    r12
                mov     rdi, rbx
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSImage
                mov     rsi, r14
                lea     rdx, cfstr_CheckboxHighli ; "checkbox_highlight"
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_68], r13
                mov     rdi, r13
                mov     rsi, [rbp+var_230]
                mov     rdx, rax
                call    r12
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     r13, [rbp+var_58]
                mov     rdi, r13
                mov     rsi, cs:selRef_scrollView
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1000118A2
                lea     rdi, [rbp+var_460]
                mov     rsi, rbx
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_450]
                jmp     short loc_1000118BA
; ---------------------------------------------------------------------------

loc_1000118A2:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1338↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_450], xmm0
                movapd  [rbp+var_460], xmm0
                xorpd   xmm0, xmm0

loc_1000118BA:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1355↑j
                addsd   xmm0, cs:qword_10002F090
                addsd   xmm0, cs:qword_10002F098
                movsd   qword ptr [rbp+var_90], xmm0
                movaps  xmm0, cs:xmmword_10002F220
                movups  [rbp+var_90+8], xmm0
                mov     rax, 4034000000000000h
                mov     qword ptr [rbp+var_80+8], rax
                movupd  xmm0, [rbp+var_90]
                movupd  xmm1, [rbp+var_80]
                movupd  [rsp+540h+var_530], xmm1
                movupd  [rsp+540h+var_540], xmm0
                mov     r14, [rbp+var_68]
                mov     rdi, r14
                mov     rsi, cs:selRef_setFrame_
                call    r12
                mov     rdi, rbx
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                mov     rsi, [rbp+var_228]
                xor     edx, edx
                call    r12
                mov     edx, 3
                mov     rdi, r14
                mov     rsi, [rbp+var_220]
                call    r12
                mov     edx, 5
                mov     rdi, r14
                mov     rsi, [rbp+var_218]
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_190]
                mov     rdx, r13
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_188]
                mov     rdx, [rbp+var_D0]
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_180]
                mov     rdx, [rbp+var_138]
                call    r12
                mov     rdi, cs:classRef_NSButton
                call    _objc_alloc
                mov     rdi, rax
                mov     rbx, cs:selRef_init
                mov     rsi, rbx
                call    r12
                mov     r14, rax
                mov     [rbp+var_B8], rax
                mov     edx, 3
                mov     rdi, rax
                mov     rsi, [rbp+var_210]
                call    r12
                mov     edx, 2
                mov     rdi, r14
                mov     r14, [rbp+var_198]
                mov     rsi, r14
                call    r12
                mov     rdi, cs:classRef_NSMutableParagraphStyle
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, rbx
                call    r12
                mov     r13, rax
                mov     edx, 2
                mov     rdi, rax
                mov     rsi, r14
                call    r12
                mov     rax, cs:_NSForegroundColorAttributeName_ptr
                mov     rax, [rax]
                mov     [rbp+var_50], rax
                mov     rdi, cs:classRef_NSColor
                mov     rsi, [rbp+var_208]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_40], rax
                mov     rax, cs:_NSParagraphStyleAttributeName_ptr
                mov     rax, [rax]
                mov     [rbp+var_48], rax
                mov     [rbp+var_278], r13
                mov     [rbp+var_38], r13
                mov     rdi, cs:classRef_NSDictionary
                mov     r8d, 2
                mov     rsi, [rbp+var_200]
                lea     rdx, [rbp+var_40]
                lea     rcx, [rbp+var_50]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSAttributedString
                call    _objc_alloc
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, [rbp+var_1F8]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_1F0]
                lea     rdx, cfstr_Log  ; "log"
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_1E8]
                mov     rdx, rax
                mov     [rbp+var_270], r14
                mov     rcx, r14
                call    r12
                mov     r15, rax
                mov     r14, [rbp+var_B8]
                mov     rdi, r14
                mov     rsi, [rbp+var_1E0]
                mov     rdx, rax
                call    r12
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSColor
                mov     rsi, [rbp+var_1D8]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_178]
                call    r12
                mov     [rbp+var_98], rax
                mov     rdi, r14
                mov     rsi, [rbp+var_128]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_170]
                mov     rdx, [rbp+var_98]
                call    r12
                mov     rdi, r13
                mov     r13, [rbp+var_58]
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rbx, [rbp+var_D0]
                call    cs:_objc_release_ptr
                mov     rdi, r14
                mov     rsi, [rbp+var_168]
                mov     edx, 1
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_190]
                mov     rdx, r13
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_180]
                mov     rdx, [rbp+var_1D0]
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_118]
                call    r12
                mov     rdi, r14
                mov     rsi, [rbp+var_188]
                mov     rdx, rbx
                call    r12
                mov     rsi, [rbp+var_68]
                test    rsi, rsi
                jz      short loc_100011C13
                lea     rdi, [rbp+var_440]
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                movsd   xmm1, qword ptr [rbp+var_440]
                jmp     short loc_100011C2B
; ---------------------------------------------------------------------------

loc_100011C13:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+16AC↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_430], xmm0
                movapd  [rbp+var_440], xmm0
                xorpd   xmm1, xmm1

loc_100011C2B:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+16C6↑j
                test    r14, r14
                jz      short loc_100011C5D
                lea     rdi, [rbp+var_420]
                mov     rsi, r14
                mov     rdx, [rbp+var_70]
                movsd   [rbp+var_98], xmm1
                call    _objc_msgSend_stret
                movsd   xmm1, [rbp+var_98]
                movsd   xmm0, qword ptr [rbp+var_410]
                jmp     short loc_100011C75
; ---------------------------------------------------------------------------

loc_100011C5D:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+16E3↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_410], xmm0
                movapd  [rbp+var_420], xmm0
                xorpd   xmm0, xmm0

loc_100011C75:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1710↑j
                subsd   xmm1, xmm0
                addsd   xmm1, cs:qword_10002F000
                movsd   [rbp+var_98], xmm1
                mov     rsi, [rbp+var_C8]
                test    rsi, rsi
                jz      short loc_100011CAF
                lea     rdi, [rbp+var_400]
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                movsd   xmm2, qword ptr [rbp+anonymous_2+8]
                jmp     short loc_100011CC7
; ---------------------------------------------------------------------------

loc_100011CAF:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1748↑j
                xorpd   xmm0, xmm0
                movapd  xmmword ptr [rbp-3F0h], xmm0
                movapd  [rbp+var_400], xmm0
                xorpd   xmm2, xmm2

loc_100011CC7:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1762↑j
                test    r14, r14
                jz      loc_100011D54
                lea     rdi, [rbp+var_3E0]
                mov     rsi, r14
                mov     r15, [rbp+var_70]
                mov     rdx, r15
                movsd   qword ptr [rbp+var_B0], xmm2
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+anonymous_3+8]
                movsd   qword ptr [rbp+var_B0+8], xmm0
                lea     rdi, [rbp+var_3C0]
                mov     rsi, r14
                mov     rdx, r15
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_3B0]
                movsd   [rbp+var_D8], xmm0
                lea     rdi, [rbp+var_3A0]
                mov     rsi, r14
                mov     rdx, r15
                call    _objc_msgSend_stret
                movsd   xmm3, [rbp+var_D8]
                movsd   xmm1, qword ptr [rbp+var_B0+8]
                movsd   xmm2, qword ptr [rbp+var_B0]
                movsd   xmm0, qword ptr [rbp+anonymous_4+8]
                jmp     short loc_100011D94
; ---------------------------------------------------------------------------

loc_100011D54:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+177F↑j
                xorpd   xmm0, xmm0
                movapd  xmmword ptr [rbp-3D0h], xmm0
                movapd  [rbp+var_3E0], xmm0
                movapd  [rbp+var_3C0], xmm0
                movapd  [rbp+var_3B0], xmm0
                movapd  [rbp+var_3A0], xmm0
                movapd  xmmword ptr [rbp-390h], xmm0
                xorpd   xmm0, xmm0
                xorpd   xmm3, xmm3
                xorpd   xmm1, xmm1

loc_100011D94:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1807↑j
                subsd   xmm2, xmm1
                mulsd   xmm2, cs:qword_10002F058
                movsd   xmm1, [rbp+var_98]
                movsd   qword ptr [rbp+var_90], xmm1
                movsd   qword ptr [rbp+var_90+8], xmm2
                movsd   qword ptr [rbp+var_80], xmm3
                movsd   qword ptr [rbp+var_80+8], xmm0
                movupd  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movupd  [rsp+540h+var_540], xmm0
                mov     rdi, r14
                mov     rsi, cs:selRef_setFrame_
                call    r12
                mov     r14, [rbp+var_C8]
                mov     rdi, r14
                mov     r15, [rbp+var_110]
                mov     rsi, r15
                mov     rdx, [rbp+var_60]
                call    r12
                sub     rbx, 1
                mov     [rbp+var_D0], rbx
                jnb     loc_100012133
                mov     rdi, r13
                mov     rsi, cs:selRef_updateFirmwaers
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_158]
                xor     edx, edx
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r13
                mov     r13, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r12
                mov     rbx, rax
                mov     rdi, r14
                mov     rsi, cs:selRef_device
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     r14, [rbp+var_E8]
                mov     rsi, r14
                call    r12
                movss   dword ptr [rbp+var_B0], xmm0
                mov     [rbp+var_98], r13
                mov     rdi, r13
                mov     rsi, r14
                call    r12
                movss   dword ptr [rbp+var_B0+8], xmm0
                mov     rdi, r15
                call    cs:_objc_release_ptr
                movss   xmm0, dword ptr [rbp+var_B0]
                ucomiss xmm0, dword ptr [rbp+var_B0+8]
                lea     rdx, stru_10003A8B8
                lea     rax, cfstr_New  ; "NEW"
                cmovnz  rdx, rax
                cmovp   rdx, rax
                mov     rdi, rbx
                mov     rsi, [rbp+var_C0]
                call    r12
                mov     rdi, cs:classRef_NSColor
                mov     rsi, [rbp+var_120]
                movsd   xmm0, cs:qword_10002F110
                movsd   xmm1, cs:qword_10002F118
                movapd  xmm2, xmm1
                movsd   xmm3, cs:qword_10002EFF8
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx
                mov     rsi, [rbp+var_150]
                mov     rdx, rax
                call    r12
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSFont
                mov     rsi, [rbp+var_148]
                movsd   xmm0, cs:qword_10002F008
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx
                mov     rsi, [rbp+var_140]
                mov     rdx, rax
                call    r12
                mov     rdi, r15
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                mov     rsi, [rbp+var_118]
                call    r12
                mov     rsi, [rbp+var_60]
                test    rsi, rsi
                jz      short loc_100011FA8
                lea     rdi, [rbp+var_90]
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                jmp     short loc_100011FB6
; ---------------------------------------------------------------------------

loc_100011FA8:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1A49↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_80], xmm0
                movaps  [rbp+var_90], xmm0

loc_100011FB6:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1A5B↑j
                movapd  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movupd  [rsp+540h+var_540], xmm0
                call    _CGRectGetMaxX
                addsd   xmm0, cs:qword_10002F0D8
                test    rbx, rbx
                mov     r13, [rbp+var_58]
                jz      loc_10001206A
                lea     rdi, [rbp+var_380]
                mov     rsi, rbx
                mov     r15, [rbp+var_70]
                mov     rdx, r15
                movsd   qword ptr [rbp+var_B0], xmm0
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+anonymous_5+8]
                movsd   qword ptr [rbp+var_B0+8], xmm0
                lea     rdi, [rbp+var_360]
                mov     rsi, rbx
                mov     rdx, r15
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_350]
                movsd   [rbp+var_D8], xmm0
                lea     rdi, [rbp+var_340]
                mov     rsi, rbx
                mov     rdx, r15
                call    _objc_msgSend_stret
                movsd   xmm4, [rbp+var_D8]
                movsd   xmm3, qword ptr [rbp+var_B0+8]
                movsd   xmm0, qword ptr [rbp+var_B0]
                movsd   xmm2, qword ptr [rbp+anonymous_6+8]
                jmp     short loc_1000120A2
; ---------------------------------------------------------------------------

loc_10001206A:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1A95↑j
                xorps   xmm1, xmm1
                movaps  xmmword ptr [rbp-370h], xmm1
                movaps  [rbp+var_380], xmm1
                movaps  [rbp+var_360], xmm1
                movaps  [rbp+var_350], xmm1
                movaps  [rbp+var_340], xmm1
                movaps  xmmword ptr [rbp-330h], xmm1
                xorpd   xmm2, xmm2
                xorps   xmm4, xmm4
                xorpd   xmm3, xmm3

loc_1000120A2:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1B1D↑j
                movsd   xmm1, cs:qword_10002F108
                subsd   xmm1, xmm3
                addsd   xmm1, cs:qword_10002F000
                movsd   qword ptr [rbp+var_90], xmm0
                movsd   qword ptr [rbp+var_90+8], xmm1
                movsd   qword ptr [rbp+var_80], xmm4
                movsd   qword ptr [rbp+var_80+8], xmm2
                movupd  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movupd  [rsp+540h+var_540], xmm0
                mov     rdi, rbx
                mov     rsi, cs:selRef_setFrame_
                call    r12
                mov     r14, [rbp+var_C8]
                mov     rdi, r14
                mov     r15, [rbp+var_110]
                mov     rsi, r15
                mov     rdx, rbx
                call    r12
                mov     rdi, r13
                mov     rsi, [rbp+var_138]
                mov     rdx, [rbp+var_68]
                call    r12
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_98]
                call    rbx ; _objc_release

loc_100012133:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+18C0↑j
                mov     rdi, r14
                mov     rsi, r15
                mov     rdx, [rbp+var_68]
                call    r12
                mov     rdi, r14
                mov     rsi, r15
                mov     rdx, [rbp+var_B8]
                call    r12
                mov     rdi, cs:classRef_NSView
                call    _objc_alloc
                mov     rbx, rax
                mov     rdi, r13
                mov     rsi, cs:selRef_scrollView
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100012199
                lea     rdi, [rbp+var_320]
                mov     rsi, r14
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_310]
                jmp     short loc_1000121B1
; ---------------------------------------------------------------------------

loc_100012199:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1C2F↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_310], xmm0
                movapd  [rbp+var_320], xmm0
                xorpd   xmm0, xmm0

loc_1000121B1:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1C4C↑j
                addsd   xmm0, cs:qword_10002F060
                movsd   xmm1, cs:qword_10002F120
                movaps  [rbp+var_90], xmm1
                movsd   qword ptr [rbp+var_80], xmm0
                mov     rax, 3FF0000000000000h
                mov     qword ptr [rbp+var_80+8], rax
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                mov     rdi, rbx
                mov     rsi, cs:selRef_initWithFrame_
                call    r12
                mov     r15, rax
                mov     rdi, r14
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_168] ; char *
                mov     edx, 1
                call    cs:_objc_msgSend_ptr
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, [rbp+var_120] ; char *
                movsd   xmm0, cs:qword_10002F0F8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                movsd   xmm3, cs:qword_10002F058
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_178] ; char *
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_128] ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_170] ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                mov     rax, r12
                mov     r12, cs:_objc_msgSend_ptr
                call    rax
                mov     rbx, [rbp+var_C8]
                mov     rdi, rbx        ; void *
                mov     r13, [rbp+var_110]
                mov     rsi, r13        ; char *
                mov     [rbp+var_98], r15
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                mov     r14, [rbp+var_130]
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                test    r14, r14
                jz      short loc_10001235F
                lea     rdi, [rbp+var_300]
                mov     rsi, r14
                mov     r13, [rbp+var_70]
                mov     rdx, r13
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_300]
                movsd   qword ptr [rbp+var_B0], xmm0
                lea     rdi, [rbp+var_2E0]
                mov     rsi, r14
                mov     rdx, r13
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_2E0+8]
                movsd   qword ptr [rbp+var_B0+8], xmm0
                lea     rdi, [rbp+var_2C0]
                mov     rsi, r14
                mov     rdx, r13
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_2B0]
                movsd   [rbp+var_D8], xmm0
                jmp     short loc_1000123A7
; ---------------------------------------------------------------------------

loc_10001235F:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1DA6↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_2F0], xmm0
                movaps  [rbp+var_300], xmm0
                movaps  [rbp+var_2E0], xmm0
                movaps  [rbp+var_2D0], xmm0
                movaps  [rbp+var_2C0], xmm0
                movaps  [rbp+var_2B0], xmm0
                xorps   xmm0, xmm0
                movsd   [rbp+var_D8], xmm0
                movsd   qword ptr [rbp+var_B0+8], xmm0
                movsd   qword ptr [rbp+var_B0], xmm0

loc_1000123A7:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1E12↑j
                mov     r15, [rbp+var_60]
                mov     rbx, [rbp+var_C8]
                test    rbx, rbx
                jz      short loc_1000123CC
                lea     rdi, [rbp+var_90]
                mov     rsi, rbx
                mov     rdx, [rbp+var_70]
                call    _objc_msgSend_stret
                jmp     short loc_1000123DA
; ---------------------------------------------------------------------------

loc_1000123CC:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1E6A↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_80], xmm0
                movaps  [rbp+var_90], xmm0

loc_1000123DA:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1E7F↑j
                mov     r13, [rbp+var_A0]
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                call    _CGRectGetMaxY
                movsd   xmm1, qword ptr [rbp+var_B0]
                movsd   qword ptr [rbp+var_90], xmm1
                movsd   xmm1, qword ptr [rbp+var_B0+8]
                movsd   qword ptr [rbp+var_90+8], xmm1
                movsd   xmm1, [rbp+var_D8]
                movsd   qword ptr [rbp+var_80], xmm1
                movsd   qword ptr [rbp+var_80+8], xmm0
                movups  xmm0, [rbp+var_90]
                movups  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, [rbp+var_100]
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_98]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_270]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_278]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_B8]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_68]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_1A0]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_F0]
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rcx, [rbp+var_D0]
                lea     rax, [rcx+1]
                mov     r13, rbx
                test    rax, rax
                jg      loc_100010D4A
                jmp     short loc_1000124DB
; ---------------------------------------------------------------------------

loc_1000124CD:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+563↑j
                mov     rbx, [rbp+var_100]
                mov     r14, cs:_objc_msgSend_ptr

loc_1000124DB:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+1F80↑j
                mov     [rbp+var_C8], rbx
                mov     r13, [rbp+var_58]
                mov     rdi, r13        ; void *
                mov     r12, cs:selRef_scrollView
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setDocumentView_ ; char *
                mov     rdi, rax        ; void *
                mov     r15, [rbp+var_130]
                mov     rdx, r15
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r13        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_documentView ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    r15, r15
                jz      short loc_10001256A
                mov     rdx, cs:selRef_frame
                lea     rdi, [rbp+var_90]
                mov     rsi, r15
                call    _objc_msgSend_stret
                jmp     short loc_100012578
; ---------------------------------------------------------------------------

loc_10001256A:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+2005↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_80], xmm0
                movaps  [rbp+var_90], xmm0

loc_100012578:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+201D↑j
                movaps  xmm0, [rbp+var_90]
                movaps  xmm1, [rbp+var_80]
                movups  [rsp+540h+var_530], xmm1
                movups  [rsp+540h+var_540], xmm0
                call    _CGRectGetMaxY
                movaps  xmm1, xmm0
                mov     rsi, cs:selRef_scrollPoint_ ; char *
                xorps   xmm0, xmm0
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbp+var_C8]
                call    r13 ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_1000125F2
                add     rsp, 518h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000125F2:                          ; CODE XREF: -[UpdateView refreshFirmwaerList]+2093↑j
                call    ___stack_chk_fail
__UpdateView_refreshFirmwaerList_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000125F7   proc near               ; DATA XREF: __const:000000010003A438↓o

var_34          = dword ptr -34h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r14, rdx
                mov     rdi, rsi
                mov     r15, cs:_objc_retain_ptr
                call    r15 ; _objc_retain
                mov     rbx, rax
                mov     rdi, r14
                call    r15 ; _objc_retain
                mov     r14, rax
                mov     r15, cs:selRef_beta
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                xorps   xmm0, xmm0
                movss   [rbp+var_34], xmm0
                test    eax, eax
                jle     short loc_10001265E
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, eax
                mulss   xmm0, cs:dword_10002F23C

loc_10001265E:                          ; CODE XREF: sub_1000125F7+4A↑j
                movss   dword ptr [rbp+var_30], xmm0
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                test    eax, eax
                jle     short loc_100012693
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, eax
                mulss   xmm0, cs:dword_10002F23C
                movss   [rbp+var_34], xmm0

loc_100012693:                          ; CODE XREF: sub_1000125F7+7A↑j
                mov     r15, cs:selRef_version
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                movss   xmm1, dword ptr [rbp+var_30]
                addss   xmm1, xmm0
                movss   dword ptr [rbp+var_30], xmm1
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                addss   xmm0, [rbp+var_34]
                mov     r15, 0FFFFFFFFFFFFFFFFh
                movss   xmm1, dword ptr [rbp+var_30]
                ucomiss xmm1, xmm0
                ja      short loc_100012740
                jnz     short loc_10001273A
                jp      short loc_10001273A
                mov     r13, cs:selRef_fileName
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     [rbp+var_30], rax
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_compare_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     r15, rax
                neg     r15
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_release
                jmp     short loc_100012740
; ---------------------------------------------------------------------------

loc_10001273A:                          ; CODE XREF: sub_1000125F7+E0↑j
                                        ; sub_1000125F7+E2↑j
                mov     r15d, 1

loc_100012740:                          ; CODE XREF: sub_1000125F7+DE↑j
                                        ; sub_1000125F7+141↑j
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rax, r15
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_1000125F7   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[UpdateView getFirmwaerHintVersion:beta:targerVersion:](UpdateView *self, SEL, float, unsigned __int16, float)
__UpdateView_getFirmwaerHintVersion_beta_targerVersion__ proc near
                                        ; CODE XREF: -[UpdateView loadViews]+1009↑P
                                        ; -[UpdateView SHIDBootGetVersion:hid:]+158↓P ...

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                movss   dword ptr [rbp+var_48], xmm1
                mov     ebx, edx
                movss   dword ptr [rbp+var_30], xmm0
                mov     r15, rdi
                mov     rsi, cs:selRef_state ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                xorps   xmm0, xmm0
                movss   xmm1, dword ptr [rbp+var_30]
                ucomiss xmm1, xmm0
                jnz     short loc_1000127B2
                jp      short loc_1000127B2
                test    rax, rax
                jnz     short loc_1000127B2
                lea     r14, stru_10003A8B8
                jmp     loc_100012B05
; ---------------------------------------------------------------------------

loc_1000127B2:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+38↑j
                                        ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+3A↑j ...
                mov     dword ptr [rbp+var_38], ebx
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     r14, cs:selRef_mainBundle
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Willupdatefirm ; "willUpdateFirmwaer"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     [rbp+var_40], r15
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_state ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView state]
                cmp     rax, 6
                jnz     short loc_100012880
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Willupdatefirm_0 ; "willUpdateFirmwaered"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                xor     r8d, r8d
                mov     r15, r12
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     r13, r12
                jmp     short loc_100012883
; ---------------------------------------------------------------------------

loc_100012880:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+BD↑j
                mov     r15, r12

loc_100012883:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+119↑j
                mov     rdi, [rbp+var_40] ; void *
                mov     rsi, cs:selRef_state ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 5
                jnz     short loc_100012901
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, cs:selRef_mainBundle
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Willupdatefirm_1 ; "willUpdateFirmwaering"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax
                mov     r14, cs:selRef_localizedStringForKey_value_table_
                mov     rsi, r14
                xor     r8d, r8d
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rbx, cs:selRef_mainBundle
                call    r13 ; _objc_release
                mov     r13, r12
                jmp     short loc_10001290F
; ---------------------------------------------------------------------------

loc_100012901:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+133↑j
                mov     r14, cs:selRef_localizedStringForKey_value_table_
                mov     rbx, cs:selRef_mainBundle

loc_10001290F:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+19A↑j
                mov     rdi, cs:classRef_NSString
                xorps   xmm0, xmm0
                cvtss2sd xmm0, dword ptr [rbp+var_30]
                mov     rsi, cs:selRef_stringWithFormat_
                lea     rdx, cfstr_2f   ; "%.2f"
                mov     al, 1
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, rbx
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Beta ; "beta"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax
                mov     rsi, r14
                mov     r12, rcx
                xor     r8d, r8d
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     eax, dword ptr [rbp+var_38]
                test    ax, ax
                mov     [rbp+var_50], r13
                jz      short loc_1000129C0
                movzx   ecx, ax
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, cfstr_Hu   ; " %hu"
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                xor     eax, eax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                jmp     short loc_1000129D4
; ---------------------------------------------------------------------------

loc_1000129C0:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+22B↑j
                mov     rdi, r14
                call    cs:_objc_release_ptr
                lea     r14, stru_10003A8B8
                mov     [rbp+var_38], r14

loc_1000129D4:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+259↑j
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, cs:selRef_mainBundle
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_To   ; "to"
                mov     rdi, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_
                mov     rcx, r12
                xor     r8d, r8d
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSString
                xorps   xmm0, xmm0
                cvtss2sd xmm0, dword ptr [rbp+var_48]
                lea     rdx, cfstr_V2f_1 ; " v%.2f"
                mov     r13, cs:selRef_stringWithFormat_
                mov     rsi, r13
                mov     al, 1
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r12, rax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_targetBeta ; int m_targetBeta;
                mov     rcx, [rbp+var_40]
                mov     ecx, [rcx+rax]
                test    ecx, ecx
                jz      short loc_100012A87
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, cfstr_BetaD_0 ; " beta %d "
                mov     rsi, r13        ; char *
                xor     eax, eax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, rax

loc_100012A87:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+2FC↑j
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, stru_10003BA78 ; "%@%@%@%@%@%@%@"
                mov     rsi, r13        ; char *
                mov     rcx, [rbp+var_50]
                mov     r8, [rbp+var_30]
                mov     r9, r14
                xor     eax, eax
                push    r10
                push    r12
                push    rbx
                mov     [rbp+var_40], r12
                mov     r12, [rbp+var_38]
                push    r12
                mov     r13, r10
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                add     rsp, 20h
                mov     [rbp+var_48], r14
                mov     r14, rax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r15 ; _objc_release

loc_100012B05:                          ; CODE XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+48↑j
                mov     rdi, r14
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__UpdateView_getFirmwaerHintVersion_beta_targerVersion__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView AllHidden:](UpdateView *self, SEL, char)
__UpdateView_AllHidden__ proc near      ; CODE XREF: -[UpdateView changeUIWithState:]+47↓P
                                        ; -[UpdateView changeUIWithState:]+387↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     ebx, edx
                mov     r14, rdi
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r15, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerListVist]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_progress ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView progress]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_reloadButton ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView reloadButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_hintLabel ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView hintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_updateButton ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_leftButton ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_rightButton ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, ebx
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__UpdateView_AllHidden__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView manualViewRemoveFromSuperView](UpdateView *self, SEL)
__UpdateView_manualViewRemoveFromSuperView_ proc near
                                        ; CODE XREF: -[UpdateView loadV1AndV2]+4D0↓P
                                        ; -[UpdateView SHIDBootAddDevice:hid:]+13E↓P ...

var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
anonymous_0     = xmmword ptr -0F0h
anonymous_1     = xmmword ptr -0E0h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0E8h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_110]
                movaps  xmmword ptr [r14], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+30h], xmm0
                mov     rsi, cs:selRef_subviews ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                mov     [rbp+var_C0], rax
                test    rax, rax
                jz      loc_100012E5C
                lea     rax, [rbp+var_110]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_D0], rax

loc_100012DA1:                          ; CODE XREF: -[UpdateView manualViewRemoveFromSuperView]+154↓j
                mov     r14, cs:selRef_class
                mov     rax, cs:selRef_removeFromSuperview
                mov     [rbp+var_C8], rax
                xor     r15d, r15d

loc_100012DB9:                          ; CODE XREF: -[UpdateView manualViewRemoveFromSuperView]+120↓j
                mov     rax, qword ptr [rbp+var_100]
                mov     rcx, [rbp+var_D0]
                cmp     [rax], rcx
                jz      short loc_100012DD8
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_100012DD8:                          ; CODE XREF: -[UpdateView manualViewRemoveFromSuperView]+C8↑j
                mov     rax, qword ptr [rbp+var_110+8]
                mov     r12, [rax+r15*8]
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, cs:classRef_DeviceManualView ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                cmp     rbx, rax
                jnz     short loc_100012E18
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_C8] ; char *
                call    cs:_objc_msgSend_ptr

loc_100012E18:                          ; CODE XREF: -[UpdateView manualViewRemoveFromSuperView]+104↑j
                inc     r15
                cmp     [rbp+var_C0], r15
                jnz     short loc_100012DB9
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_110]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     [rbp+var_C0], rax
                test    rax, rax
                jnz     loc_100012DA1

loc_100012E5C:                          ; CODE XREF: -[UpdateView manualViewRemoveFromSuperView]+84↑j
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100012E8B
                add     rsp, 0E8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100012E8B:                          ; CODE XREF: -[UpdateView manualViewRemoveFromSuperView]+175↑j
                call    ___stack_chk_fail
__UpdateView_manualViewRemoveFromSuperView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView changeUIWithState:](UpdateView *self, SEL, unsigned __int64)
__UpdateView_changeUIWithState__ proc near
                                        ; CODE XREF: -[UpdateView setState:]+17↑P
                                        ; DATA XREF: __objc_const:0000000100040290↓o

var_170         = xmmword ptr -170h
var_160         = xmmword ptr -160h
var_150         = xmmword ptr -150h
var_140         = xmmword ptr -140h
var_130         = xmmword ptr -130h
var_120         = xmmword ptr -120h
var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
var_F0          = xmmword ptr -0F0h
var_E0          = xmmword ptr -0E0h
var_D0          = xmmword ptr -0D0h
var_C0          = xmmword ptr -0C0h
var_B0          = xmmword ptr -0B0h
var_A0          = xmmword ptr -0A0h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 148h
                cmp     rdx, 7          ; switch 8 cases
                ja      loc_100013A1E   ; jumptable 0000000100012EBF default case
                mov     rbx, rdi
                lea     rax, off_100013A30
                movsxd  rcx, dword ptr [rax+rdx*4]
                add     rcx, rax
                jmp     rcx             ; switch jump
; ---------------------------------------------------------------------------

loc_100012EC1:                          ; CODE XREF: -[UpdateView changeUIWithState:]+2F↑j
                                        ; DATA XREF: __text:off_100013A30↓o
                mov     rsi, cs:selRef_AllHidden_ ; jumptable 0000000100012EBF case 0
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     edx, 1
                call    r13 ; _objc_msgSend ; -[UpdateView AllHidden:]
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_updateButton ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     r14, r13
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Update ; "update"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_updateButton ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setM_title_
                mov     rdi, rax
                mov     rdx, r12
                call    r14
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     r13, cs:selRef_updateButton
                mov     rsi, r13
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_progress_
                movss   xmm0, cs:dword_10002F040
                mov     rdi, rax
                call    r14
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSColor
                mov     r15, cs:selRef_colorWithRed_green_blue_alpha_
                movsd   xmm1, cs:qword_10002F128
                movsd   xmm2, cs:qword_10002F130
                movsd   xmm0, cs:qword_10002EFF8
                mov     rsi, r15
                movaps  xmm3, xmm0
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rsi, r13
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setM_highlightColor_
                mov     rdi, rax
                mov     rdx, r12
                call    r14
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSColor
                movsd   xmm1, cs:qword_10002F140
                movsd   xmm2, cs:qword_10002F148
                xorps   xmm0, xmm0
                mov     rsi, r15
                movsd   xmm3, cs:qword_10002EFF8
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx
                mov     rsi, cs:selRef_updateButton
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setM_backgroundColor_
                mov     rdi, rax
                mov     rdx, r15
                call    r14
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r15
                jmp     loc_1000131E7
; ---------------------------------------------------------------------------

loc_100013105:                          ; CODE XREF: -[UpdateView changeUIWithState:]+2F↑j
                                        ; DATA XREF: __text:off_100013A30↓o
                mov     rdi, cs:classRef_NSColor ; jumptable 0000000100012EBF case 5
                mov     r14, cs:selRef_colorWithRed_green_blue_alpha_
                mov     r15, cs:_objc_msgSend_ptr
                movsd   xmm1, cs:qword_10002F128
                movsd   xmm2, cs:qword_10002F130
                movsd   xmm0, cs:qword_10002EFF8
                mov     rsi, r14        ; char *
                movaps  xmm3, xmm0
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_updateButton ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setM_backgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r15 ; _objc_msgSend ; -[SButton setM_backgroundColor:]
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, r14        ; char *
                movsd   xmm0, cs:qword_10002EFF8
                movsd   xmm1, cs:qword_10002F128
                movsd   xmm2, cs:qword_10002F130
                movaps  xmm3, xmm0
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_updateButton ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setM_highlightColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r15 ; _objc_msgSend ; -[SButton setM_highlightColor:]
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14

loc_1000131E7:                          ; CODE XREF: -[UpdateView changeUIWithState:]+270↑j
                mov     rax, cs:_objc_release_ptr
                add     rsp, 148h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100013201:                          ; CODE XREF: -[UpdateView changeUIWithState:]+2F↑j
                                        ; DATA XREF: __text:off_100013A30↓o
                mov     rsi, cs:selRef_AllHidden_ ; jumptable 0000000100012EBF case 1
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     edx, 1
                call    r15 ; _objc_msgSend ; -[UpdateView AllHidden:]
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_findNewVersionListView ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView findNewVersionListView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_leftButton ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_rightButton ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Other ; "other"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_leftButton ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setM_title_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r13
                call    r15 ; _objc_msgSend ; -[SButton setM_title:]
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                lea     rdx, cfstr_Update ; "update"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_rightButton ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setM_title_ ; char *
                mov     rdx, r14
                call    r15 ; _objc_msgSend ; -[SButton setM_title:]
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, r12
                mov     r12, cs:selRef_leftButton
                call    r13 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm0, qword ptr [rbx+rax]
                movsd   [rbp+var_30], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      loc_100013692
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_150]
                mov     rdi, r14
                mov     rsi, r13
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                jmp     loc_1000136AA
; ---------------------------------------------------------------------------

loc_10001346F:                          ; CODE XREF: -[UpdateView changeUIWithState:]+2F↑j
                                        ; DATA XREF: __text:off_100013A30↓o
                mov     rsi, cs:selRef_leftButton ; jumptable 0000000100012EBF case 6
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_rightButton ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Close ; "close"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_leftButton ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setM_title_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend ; -[SButton setM_title:]
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_Updatenext ; "updateNext"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_rightButton ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setM_title_ ; char *
                mov     rdx, r15
                call    r13 ; _objc_msgSend ; -[SButton setM_title:]
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                mov     r15, cs:selRef_leftButton
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rsi, cs:selRef_updateButton ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_48], rax
                jz      loc_100013804
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_F0]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14]
                jmp     loc_10001381C
; ---------------------------------------------------------------------------

loc_100013649:                          ; CODE XREF: -[UpdateView changeUIWithState:]+2F↑j
                                        ; DATA XREF: __text:off_100013A30↓o
                mov     rsi, cs:selRef_updateButton ; jumptable 0000000100012EBF case 7
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setM_progress_ ; char *
                xorps   xmm0, xmm0
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend ; -[SButton setM_progress:]
                mov     rdi, rbx
                add     rsp, 148h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
; ---------------------------------------------------------------------------

loc_100013692:                          ; CODE XREF: -[UpdateView changeUIWithState:]+5B5↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_140], xmm0
                movapd  [rbp+var_150], xmm0
                xorpd   xmm0, xmm0

loc_1000136AA:                          ; CODE XREF: -[UpdateView changeUIWithState:]+5DA↑j
                movsd   xmm1, [rbp+var_30]
                mulsd   xmm1, cs:qword_10002F058
                subsd   xmm1, xmm0
                addsd   xmm1, cs:qword_10002F0D0
                movsd   [rbp+var_30], xmm1
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100013706
                mov     rdx, cs:selRef_frame
                lea     r12, [rbp+var_130]
                mov     rdi, r12
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm1, qword ptr [r12+8]
                jmp     short loc_10001371E
; ---------------------------------------------------------------------------

loc_100013706:                          ; CODE XREF: -[UpdateView changeUIWithState:]+852↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_120], xmm0
                movapd  [rbp+var_130], xmm0
                xorpd   xmm1, xmm1

loc_10001371E:                          ; CODE XREF: -[UpdateView changeUIWithState:]+874↑j
                mov     rsi, cs:selRef_setFrameOrigin_ ; char *
                mov     r12, [rbp+var_38]
                mov     rdi, r12        ; void *
                movsd   xmm0, [rbp+var_30]
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     r14, cs:selRef_rightButton
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_width ; double m_width;
                movsd   xmm0, qword ptr [rbx+rax]
                mulsd   xmm0, cs:qword_10002F058
                addsd   xmm0, cs:qword_10002F008
                movsd   [rbp+var_30], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1000137C3
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_110]
                mov     rdi, r14
                mov     rsi, rbx
                call    _objc_msgSend_stret
                movsd   xmm1, qword ptr [r14+8]
                jmp     short loc_1000137DB
; ---------------------------------------------------------------------------

loc_1000137C3:                          ; CODE XREF: -[UpdateView changeUIWithState:]+910↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_100], xmm0
                movapd  [rbp+var_110], xmm0
                xorpd   xmm1, xmm1

loc_1000137DB:                          ; CODE XREF: -[UpdateView changeUIWithState:]+931↑j
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_setFrameOrigin_ ; char *
                movsd   xmm0, [rbp+var_30]
                call    cs:_objc_msgSend_ptr
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r12
                jmp     loc_100013A1C
; ---------------------------------------------------------------------------

loc_100013804:                          ; CODE XREF: -[UpdateView changeUIWithState:]+790↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_E0], xmm0
                movapd  [rbp+var_F0], xmm0
                xorpd   xmm0, xmm0

loc_10001381C:                          ; CODE XREF: -[UpdateView changeUIWithState:]+7B4↑j
                movsd   [rbp+var_30], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_40], rax
                jz      short loc_100013860
                mov     rdx, cs:selRef_frame
                lea     r12, [rbp+var_D0]
                mov     rdi, r12
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r12+10h]
                jmp     short loc_100013878
; ---------------------------------------------------------------------------

loc_100013860:                          ; CODE XREF: -[UpdateView changeUIWithState:]+9AC↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_C0], xmm0
                movapd  [rbp+var_D0], xmm0
                xorpd   xmm0, xmm0

loc_100013878:                          ; CODE XREF: -[UpdateView changeUIWithState:]+9CE↑j
                movsd   xmm1, [rbp+var_30]
                subsd   xmm1, xmm0
                addsd   xmm1, cs:qword_10002F138
                movsd   [rbp+var_30], xmm1
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      short loc_1000138CB
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_B0]
                mov     rdi, r15
                mov     rsi, r12
                call    _objc_msgSend_stret
                movsd   xmm1, qword ptr [r15+8]
                jmp     short loc_1000138E3
; ---------------------------------------------------------------------------

loc_1000138CB:                          ; CODE XREF: -[UpdateView changeUIWithState:]+A18↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_A0], xmm0
                movapd  [rbp+var_B0], xmm0
                xorpd   xmm1, xmm1

loc_1000138E3:                          ; CODE XREF: -[UpdateView changeUIWithState:]+A39↑j
                mov     rsi, cs:selRef_setFrameOrigin_ ; char *
                mov     r14, [rbp+var_38]
                mov     rdi, r14        ; void *
                movsd   xmm0, [rbp+var_30]
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_48]
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_rightButton ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_updateButton ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      short loc_10001396B
                mov     rdx, cs:selRef_frame
                lea     rdi, [rbp+var_70]
                mov     rsi, r13
                call    _objc_msgSend_stret
                jmp     short loc_100013976
; ---------------------------------------------------------------------------

loc_10001396B:                          ; CODE XREF: -[UpdateView changeUIWithState:]+AC4↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_60], xmm0
                movaps  [rbp+var_70], xmm0

loc_100013976:                          ; CODE XREF: -[UpdateView changeUIWithState:]+AD9↑j
                movapd  xmm0, [rbp+var_70]
                movapd  xmm1, [rbp+var_60]
                movupd  [rsp+170h+var_160], xmm1
                movupd  [rsp+170h+var_170], xmm0
                call    _CGRectGetMaxX
                addsd   xmm0, cs:qword_10002F120
                movsd   [rbp+var_30], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_leftButton ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1000139DE
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_90]
                mov     rdi, r14
                mov     rsi, rbx
                call    _objc_msgSend_stret
                movsd   xmm1, qword ptr [r14+8]
                jmp     short loc_1000139F3
; ---------------------------------------------------------------------------

loc_1000139DE:                          ; CODE XREF: -[UpdateView changeUIWithState:]+B2B↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_80], xmm0
                movapd  [rbp+var_90], xmm0
                xorpd   xmm1, xmm1

loc_1000139F3:                          ; CODE XREF: -[UpdateView changeUIWithState:]+B4C↑j
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setFrameOrigin_ ; char *
                movsd   xmm0, [rbp+var_30]
                call    cs:_objc_msgSend_ptr
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r15

loc_100013A1C:                          ; CODE XREF: -[UpdateView changeUIWithState:]+96F↑j
                call    rbx ; _objc_release

loc_100013A1E:                          ; CODE XREF: -[UpdateView changeUIWithState:]+18↑j
                                        ; -[UpdateView changeUIWithState:]+2F↑j
                                        ; DATA XREF: ...
                add     rsp, 148h       ; jumptable 0000000100012EBF default case
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_changeUIWithState__ endp

; ---------------------------------------------------------------------------
off_100013A30   dd offset loc_100012EC1 - 100013A30h
                                        ; DATA XREF: -[UpdateView changeUIWithState:]+21↑o
                dd offset loc_100013201 - 100013A30h ; jump table for switch statement
                dd offset loc_100013A1E - 100013A30h
                dd offset loc_100013A1E - 100013A30h
                dd offset loc_100013A1E - 100013A30h
                dd offset loc_100013105 - 100013A30h
                dd offset loc_10001346F - 100013A30h
                dd offset loc_100013649 - 100013A30h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView changeBoot](UpdateView *self, SEL)
__UpdateView_changeBoot_ proc near      ; DATA XREF: __objc_const:00000001000402A8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r15, cs:selRef_updateButton
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_m_highlightColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend ; -[SButton m_highlightColor]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_backgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend ; -[SButton setM_backgroundColor:]
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                mov     r15, rbx
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r14
                mov     r14, cs:_objc_msgSend_ptr
                call    r13 ; _objc_release
                mov     rbx, cs:selRef_device
                mov     rdi, r15        ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_isChangeBoot ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                test    al, al
                jz      loc_100013BB8
                mov     rdi, r15        ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_deviceRef ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rbx, r15
                mov     r15, rax
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                test    r15, r15
                mov     r15, rbx
                jz      short loc_100013BC1
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r15
                mov     r15, rax
                mov     r12, cs:selRef_pid
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                movzx   ebx, ax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                cmp     ebx, 2000h
                jnz     short loc_100013C02
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_readPID
                jmp     loc_100013C5A
; ---------------------------------------------------------------------------

loc_100013BB8:                          ; CODE XREF: -[UpdateView changeBoot]+B9↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_100013BC1:                          ; CODE XREF: -[UpdateView changeBoot]+FF↑j
                mov     rsi, cs:selRef_bootBoot ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView bootBoot]
                test    al, al
                jz      short loc_100013BE4

loc_100013BD5:                          ; CODE XREF: -[UpdateView changeBoot]+239↓j
                                        ; -[UpdateView changeBoot]+251↓j ...
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100013BE4:                          ; CODE XREF: -[UpdateView changeBoot]+183↑j
                mov     rsi, cs:selRef_noChangeBoot
                mov     rdi, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[UpdateView noChangeBoot]
; ---------------------------------------------------------------------------

loc_100013C02:                          ; CODE XREF: -[UpdateView changeBoot]+13E↑j
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                movzx   ebx, ax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                cmp     ebx, 3209h
                jnz     short loc_100013C77
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_readVersion ; char *

loc_100013C5A:                          ; CODE XREF: -[UpdateView changeBoot]+163↑j
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend

loc_100013C60:                          ; CODE XREF: -[UpdateView changeBoot]+2AB↓j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
; ---------------------------------------------------------------------------

loc_100013C77:                          ; CODE XREF: -[UpdateView changeBoot]+1E5↑j
                mov     rsi, cs:selRef_bootBoot ; char *
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView bootBoot]
                test    al, al
                jnz     loc_100013BD5
                mov     rsi, cs:selRef_switchBoot ; char *
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView switchBoot]
                test    al, al
                jnz     loc_100013BD5
                mov     rsi, cs:selRef_macBoot ; char *
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView macBoot]
                test    al, al
                jnz     loc_100013BD5
                mov     r15, cs:classRef_SHIDDinput
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_deviceRef ; char *
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_boot_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend ; +[SHIDDinput boot:]
                jmp     loc_100013C60
__UpdateView_changeBoot_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[UpdateView switchBoot](UpdateView *self, SEL)
__UpdateView_switchBoot_ proc near      ; CODE XREF: -[UpdateView changeBoot]+249↑P
                                        ; DATA XREF: __objc_const:00000001000402C0↓o

var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     r14, rdi
                mov     r12, cs:selRef_device
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 2009h
                jnz     loc_100013DDD
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_vid ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                movzx   r12d, ax
                mov     rbx, r14
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                cmp     r12d, 57Eh
                jnz     short loc_100013DE4
                mov     rdi, rbx        ; void *
                mov     r12, cs:selRef_device
                mov     rsi, r12        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r14 ; _objc_msgSend
                movzx   eax, ax
                mov     dword ptr [rbp+var_38], eax
                cmp     eax, 3100h
                mov     r15, rbx
                mov     [rbp+var_68], r13
                jnz     short loc_100013DEB
                mov     rbx, r14
                mov     [rbp+var_2C], 0
                jmp     short loc_100013E3F
; ---------------------------------------------------------------------------

loc_100013DDD:                          ; CODE XREF: -[UpdateView switchBoot]+46↑j
                xor     ebx, ebx
                jmp     loc_100014023
; ---------------------------------------------------------------------------

loc_100013DE4:                          ; CODE XREF: -[UpdateView switchBoot]+8C↑j
                xor     ebx, ebx
                jmp     loc_10001402C
; ---------------------------------------------------------------------------

loc_100013DEB:                          ; CODE XREF: -[UpdateView switchBoot]+CF↑j
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, r14
                mov     r14, rax
                mov     rsi, cs:selRef_details
                mov     rdi, rax
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_50], rax
                mov     rdi, rax
                mov     rsi, cs:selRef_pid
                call    rbx
                movzx   eax, ax
                cmp     eax, 3100h
                mov     [rbp+var_58], r14
                jnz     loc_100013F2C
                mov     [rbp+var_2C], 0

loc_100013E3F:                          ; CODE XREF: -[UpdateView switchBoot]+DB↑j
                xor     r13d, r13d

loc_100013E42:                          ; CODE XREF: -[UpdateView switchBoot]+25E↓j
                                        ; -[UpdateView switchBoot]+2B0↓j
                mov     r14, r15
                mov     rdi, r15
                mov     rsi, r12
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_version
                mov     rdi, rax
                mov     r15, rbx
                call    rbx
                cvtss2sd xmm0, xmm0
                movsd   [rbp+var_60], xmm0
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r13b, r13b
                jz      short loc_100013E91
                mov     rdi, [rbp+var_70]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_40]
                call    rbx ; _objc_release

loc_100013E91:                          ; CODE XREF: -[UpdateView switchBoot]+17C↑j
                cmp     byte ptr [rbp+var_2C], 0
                mov     r13, [rbp+var_68]
                jz      short loc_100013EA5
                mov     rdi, [rbp+var_48]
                call    cs:_objc_release_ptr

loc_100013EA5:                          ; CODE XREF: -[UpdateView switchBoot]+199↑j
                cmp     dword ptr [rbp+var_38], 3100h
                mov     r12, cs:selRef_device
                jnz     short loc_100013EC0
                mov     rdi, r13
                call    cs:_objc_release_ptr
                jmp     short loc_100013ED8
; ---------------------------------------------------------------------------

loc_100013EC0:                          ; CODE XREF: -[UpdateView switchBoot]+1B3↑j
                mov     rdi, [rbp+var_50]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_58]
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release

loc_100013ED8:                          ; CODE XREF: -[UpdateView switchBoot]+1BE↑j
                movsd   xmm0, [rbp+var_60]
                ucomisd xmm0, cs:qword_10002F150
                mov     rbx, r15
                mov     rdi, r14
                jbe     loc_100013FEE
                mov     rsi, r12
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_deviceRef
                mov     rdi, rax
                call    rbx
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 51h
                mov     ecx, 1
                xor     r8d, r8d
                call    setReport151OneFrame1
                jmp     loc_100014021
; ---------------------------------------------------------------------------

loc_100013F2C:                          ; CODE XREF: -[UpdateView switchBoot]+132↑j
                mov     rdi, r15
                mov     rsi, r12
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rdi, rax
                mov     rsi, cs:selRef_pid
                call    rbx
                movzx   eax, ax
                cmp     eax, 3104h
                jnz     short loc_100013F63
                mov     al, 1
                mov     [rbp+var_2C], eax
                xor     r13d, r13d
                jmp     loc_100013E42
; ---------------------------------------------------------------------------

loc_100013F63:                          ; CODE XREF: -[UpdateView switchBoot]+254↑j
                mov     rdi, r15
                mov     rsi, r12
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, rax
                mov     rsi, cs:selRef_details
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_pid
                call    rbx
                movzx   eax, ax
                cmp     eax, 3104h
                jnz     short loc_100013FB5
                mov     [rbp+var_70], r14
                mov     al, 1
                mov     [rbp+var_2C], eax
                mov     r13b, 1
                jmp     loc_100013E42
; ---------------------------------------------------------------------------

loc_100013FB5:                          ; CODE XREF: -[UpdateView switchBoot]+2A2↑j
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                mov     [rbp+var_38], r15
                mov     r15, rax
                call    rax ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r15
                mov     rdi, [rbp+var_48]
                call    r15
                mov     rdi, [rbp+var_50]
                call    r15
                mov     rdi, [rbp+var_58]
                call    r15
                mov     rdi, r13
                call    r15
                mov     rdi, [rbp+var_38]

loc_100013FEE:                          ; CODE XREF: -[UpdateView switchBoot]+1EB↑j
                mov     rsi, r12
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_deviceRef
                mov     rdi, rax
                call    rbx
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 50h
                mov     ecx, 1
                call    setReport151

loc_100014021:                          ; CODE XREF: -[UpdateView switchBoot]+227↑j
                mov     bl, 1

loc_100014023:                          ; CODE XREF: -[UpdateView switchBoot]+DF↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10001402C:                          ; CODE XREF: -[UpdateView switchBoot]+E6↑j
                movzx   eax, bl
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_switchBoot_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[UpdateView macBoot](UpdateView *self, SEL)
__UpdateView_macBoot_ proc near         ; CODE XREF: -[UpdateView changeBoot]+261↑P
                                        ; DATA XREF: __objc_const:00000001000402D8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r15, rdi
                mov     r12, cs:selRef_device
                mov     r14, cs:_objc_msgSend_ptr
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 5C4h
                jnz     loc_1000141C5
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_vid ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                movzx   r13d, ax
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     r13d, 54Ch
                jnz     loc_1000141CA
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     rdi, r15        ; void *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_selectButton ; char *
                mov     rdi, r15        ; void *
                call    r14 ; _objc_msgSend ; -[UpdateView selectButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_tag ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     r12, cs:selRef_type
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                cmp     eax, 8
                jz      short loc_100014166
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     eax, 15h
                jnz     short loc_1000141CF

loc_100014166:                          ; CODE XREF: -[UpdateView macBoot]+115↑j
                mov     rsi, cs:selRef_version ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                cvtss2sd xmm0, xmm0
                ucomisd xmm0, cs:qword_10002F150
                jbe     short loc_1000141CF
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_deviceRef ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 50h
                mov     ecx, 5
                xor     r8d, r8d
                call    setReport151OneFrame1
                jmp     short loc_10001420B
; ---------------------------------------------------------------------------

loc_1000141C5:                          ; CODE XREF: -[UpdateView macBoot]+45↑j
                xor     r14d, r14d
                jmp     short loc_100014217
; ---------------------------------------------------------------------------

loc_1000141CA:                          ; CODE XREF: -[UpdateView macBoot]+8A↑j
                xor     r14d, r14d
                jmp     short loc_100014220
; ---------------------------------------------------------------------------

loc_1000141CF:                          ; CODE XREF: -[UpdateView macBoot]+126↑j
                                        ; -[UpdateView macBoot]+144↑j
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r14 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_deviceRef ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 50h
                mov     ecx, 5
                call    setReport151

loc_10001420B:                          ; CODE XREF: -[UpdateView macBoot]+185↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     r14b, 1

loc_100014217:                          ; CODE XREF: -[UpdateView macBoot]+18A↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_100014220:                          ; CODE XREF: -[UpdateView macBoot]+18F↑j
                movzx   eax, r14b
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_macBoot_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[UpdateView bootBoot](UpdateView *self, SEL)
__UpdateView_bootBoot_ proc near        ; CODE XREF: -[UpdateView changeBoot]+17B↑P
                                        ; -[UpdateView changeBoot]+231↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_bootState ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView bootState]
                cmp     rax, 1
                jnz     short loc_1000142CB
                mov     rsi, cs:selRef_device ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                movzx   r13d, ax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                cmp     r13d, 23FBh
                jnz     short loc_1000142CF
                lea     r14, selRef_readVersion
                lea     rax, classRef_SHIDBootHJZ
                jmp     short loc_100014304
; ---------------------------------------------------------------------------

loc_1000142CB:                          ; CODE XREF: -[UpdateView bootBoot]+22↑j
                xor     eax, eax
                jmp     short loc_100014337
; ---------------------------------------------------------------------------

loc_1000142CF:                          ; CODE XREF: -[UpdateView bootBoot]+86↑j
                mov     rsi, cs:selRef_bootDeviceRef ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView bootDeviceRef]
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 4
                xor     ecx, ecx
                xor     r8d, r8d
                call    flashfirmware   ; rdi --buff
                lea     r14, selRef_readPID
                lea     rax, classRef_SHIDBootPro2

loc_100014304:                          ; CODE XREF: -[UpdateView bootBoot]+96↑j
                mov     rdi, [rax]      ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, [r14]      ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     al, 1

loc_100014337:                          ; CODE XREF: -[UpdateView bootBoot]+9A↑j
                movzx   eax, al
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_bootBoot_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView noChangeBoot](UpdateView *self, SEL)
__UpdateView_noChangeBoot_ proc near    ; CODE XREF: -[UpdateView changeBoot]+1AC↑P
                                        ; DATA XREF: __objc_const:0000000100040308↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_setState_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     edx, 3
                call    r13 ; _objc_msgSend ; -[UpdateView setState:]
                mov     r14, cs:selRef_manualView
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setError_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setDevice_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_addSubview_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__UpdateView_noChangeBoot_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[UpdateView findBackButton:](UpdateView *self, SEL, id)
__UpdateView_findBackButton__ proc near ; DATA XREF: __objc_const:0000000100040320↓o

var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
anonymous_0     = xmmword ptr -0F0h
anonymous_1     = xmmword ptr -0E0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0E8h
                mov     rdi, rdx        ; void *
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_110]
                movaps  xmmword ptr [r14], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+30h], xmm0
                mov     rsi, cs:selRef_subviews ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                mov     [rbp+var_C0], rax
                test    rax, rax
                jz      loc_100014589
                lea     rax, [rbp+var_110]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_C8], rax

loc_1000144D1:                          ; CODE XREF: -[UpdateView findBackButton:]+154↓j
                mov     r15, cs:selRef_className
                mov     r14, cs:selRef_isEqual_
                xor     r13d, r13d

loc_1000144E2:                          ; CODE XREF: -[UpdateView findBackButton:]+120↓j
                mov     rax, qword ptr [rbp+var_100]
                mov     rcx, [rbp+var_C8]
                cmp     [rax], rcx
                jz      short loc_100014501
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_100014501:                          ; CODE XREF: -[UpdateView findBackButton:]+C4↑j
                mov     rax, qword ptr [rbp+var_110+8]
                mov     rdi, [rax+r13*8] ; void *
                mov     rsi, r15        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                lea     rdx, cfstr_Sbackbutton ; "SBackButton"
                call    r12 ; _objc_msgSend
                mov     r12d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                test    r12b, r12b
                jnz     short loc_10001458D
                inc     r13
                cmp     [rbp+var_C0], r13
                jnz     short loc_1000144E2
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_110]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     [rbp+var_C0], rax
                test    rax, rax
                jnz     loc_1000144D1

loc_100014589:                          ; CODE XREF: -[UpdateView findBackButton:]+87↑j
                xor     ebx, ebx
                jmp     short loc_10001458F
; ---------------------------------------------------------------------------

loc_10001458D:                          ; CODE XREF: -[UpdateView findBackButton:]+114↑j
                mov     bl, 1

loc_10001458F:                          ; CODE XREF: -[UpdateView findBackButton:]+15C↑j
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_1000145C1
                movzx   eax, bl
                add     rsp, 0E8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000145C1:                          ; CODE XREF: -[UpdateView findBackButton:]+17B↑j
                call    ___stack_chk_fail
__UpdateView_findBackButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView loadV1AndV2](UpdateView *self, SEL)
__UpdateView_loadV1AndV2_ proc near     ; CODE XREF: -[UpdateView noV1AndV2]+F2↓P
                                        ; -[UpdateView SHIDBootGetFirmwaerType:hid:]+C↓P
                                        ; DATA XREF: ...

var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     r14, rdi
                mov     rsi, cs:selRef_device ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r15, cs:selRef_details
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                cmp     eax, 1
                jz      short loc_10001468B
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_device ; char *
                mov     rbx, r15
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rdi, rax        ; void *
                mov     rbx, cs:selRef_type
                mov     rsi, rbx        ; char *
                call    r15 ; _objc_msgSend
                cmp     eax, 2
                jnz     loc_100014733
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_30]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_38]
                call    rbx ; _objc_release
                mov     r15, cs:selRef_details

loc_10001468B:                          ; CODE XREF: -[UpdateView loadV1AndV2]+58↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release

loc_10001469C:                          ; CODE XREF: -[UpdateView loadV1AndV2]+1EB↓j
                mov     rsi, cs:selRef_state ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 4
                setnz   cl
                lea     rax, dword_10004A3AC
                mov     eax, [rax]
                test    eax, eax
                setz    dl
                or      dl, cl
                jnz     loc_1000147B7
                cmp     eax, 0C8h
                jnz     loc_100014A85
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_device ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rdi, rax        ; void *
                mov     r13, cs:selRef_type
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rbx, r14
                mov     dword ptr [rbp+var_40], eax
                cmp     eax, 1
                jnz     loc_1000147C6
                mov     r14d, 0Dh
                jmp     loc_100014800
; ---------------------------------------------------------------------------

loc_100014733:                          ; CODE XREF: -[UpdateView loadV1AndV2]+A5↑j
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, rbx        ; char *
                mov     rbx, rax
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r15d, eax
                mov     [rbp+var_58], r14
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     r14, [rbp+var_58]
                cmp     r15d, 3
                mov     r15, cs:selRef_details
                jz      loc_10001469C

loc_1000147B7:                          ; CODE XREF: -[UpdateView loadV1AndV2]+FD↑j
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000147C6:                          ; CODE XREF: -[UpdateView loadV1AndV2]+15C↑j
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     r14d, eax

loc_100014800:                          ; CODE XREF: -[UpdateView loadV1AndV2]+168↑j
                mov     [rbp+var_58], rbx
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setType_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, r14d
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     dword ptr [rbp+var_40], 1
                jz      short loc_100014867
                mov     rdi, [rbp+var_48]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r14 ; _objc_release

loc_100014867:                          ; CODE XREF: -[UpdateView loadV1AndV2]+291↑j
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rbx, [rbp+var_58]
                mov     rdi, rbx        ; void *
                mov     r13, cs:selRef_device
                mov     rsi, r13        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     r15, cs:selRef_details
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rdi, rax        ; void *
                mov     r14, cs:selRef_type
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     dword ptr [rbp+var_40], eax
                cmp     eax, 2
                jnz     short loc_1000148D8
                mov     r14d, 12h
                jmp     short loc_10001490E
; ---------------------------------------------------------------------------

loc_1000148D8:                          ; CODE XREF: -[UpdateView loadV1AndV2]+308↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     r14d, eax

loc_10001490E:                          ; CODE XREF: -[UpdateView loadV1AndV2]+310↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setType_ ; char *
                mov     edx, r14d
                call    r12 ; _objc_msgSend
                mov     rdi, r13
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     dword ptr [rbp+var_40], 2
                jz      short loc_10001496D
                mov     rdi, [rbp+var_48]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r14 ; _objc_release

loc_10001496D:                          ; CODE XREF: -[UpdateView loadV1AndV2]+397↑j
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rbx, [rbp+var_58]
                mov     rdi, rbx        ; void *
                mov     r13, cs:selRef_device
                mov     rsi, r13        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                mov     r15, cs:selRef_details
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rdi, rax        ; void *
                mov     r14, cs:selRef_type
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     dword ptr [rbp+var_40], eax
                cmp     eax, 3
                jnz     short loc_1000149DE
                mov     r14d, 11h
                jmp     short loc_100014A14
; ---------------------------------------------------------------------------

loc_1000149DE:                          ; CODE XREF: -[UpdateView loadV1AndV2]+40E↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     r14d, eax

loc_100014A14:                          ; CODE XREF: -[UpdateView loadV1AndV2]+416↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setType_ ; char *
                mov     edx, r14d
                call    r12 ; _objc_msgSend
                mov     rdi, r13
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     dword ptr [rbp+var_40], 3
                jz      short loc_100014A73
                mov     rdi, [rbp+var_48]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r14 ; _objc_release

loc_100014A73:                          ; CODE XREF: -[UpdateView loadV1AndV2]+49D↑j
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     r14, [rbp+var_58]

loc_100014A85:                          ; CODE XREF: -[UpdateView loadV1AndV2]+108↑j
                mov     rsi, cs:selRef_manualViewRemoveFromSuperView ; char *
                mov     rdi, r14        ; void *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[UpdateView manualViewRemoveFromSuperView]
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend ; -[UpdateView setUpdateFirmwaers:]
                mov     rsi, cs:selRef_loadUpdateFirmwae
                mov     rdi, r14
                mov     rax, rbx
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[UpdateView loadUpdateFirmwae]
__UpdateView_loadV1AndV2_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView noV1AndV2](UpdateView *self, SEL)
__UpdateView_noV1AndV2_ proc near       ; DATA XREF: __objc_const:0000000100040350↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_setState_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     edx, 4
                call    r13 ; _objc_msgSend ; -[UpdateView setState:]
                mov     r12, cs:selRef_manualView
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setError_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setDevice_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     r15, r14
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_manualView ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_addSubview_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r15
                mov     rsi, cs:selRef_loadV1AndV2
                mov     rdi, rbx
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[UpdateView loadV1AndV2]
__UpdateView_noV1AndV2_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView reloadClic](UpdateView *self, SEL)
__UpdateView_reloadClic_ proc near      ; DATA XREF: __objc_const:0000000100040368↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_reloadButton ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[UpdateView reloadButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_loadUpdateFirmwae
                mov     rdi, rbx
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[UpdateView loadUpdateFirmwae]
__UpdateView_reloadClic_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView chengeboxClick:](UpdateView *self, SEL, id)
__UpdateView_chengeboxClick__ proc near ; DATA XREF: __objc_const:0000000100040380↓o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_38], rax
                mov     rsi, cs:selRef_selectButton ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend ; -[UpdateView selectButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSImage ; void *
                mov     rsi, cs:selRef_imageNamed_ ; char *
                lea     rdx, cfstr_CheckboxNomal ; "checkbox_nomal"
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     r13, r15
                mov     rdi, cs:classRef_NSImage ; void *
                lea     rdx, cfstr_CheckboxSelect ; "checkbox_selected"
                mov     rsi, cs:selRef_imageNamed_ ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, [rbp+var_38]
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                mov     r15, r12
                call    r13
                mov     rsi, cs:selRef_setSelectButton_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r12
                call    r14 ; _objc_msgSend ; -[UpdateView setSelectButton:]
                mov     rsi, cs:selRef_state ; char *
                mov     r12, rbx
                mov     rdi, rbx        ; void *
                mov     r13, r14
                call    r14 ; _objc_msgSend ; -[UpdateView state]
                cmp     rax, 5
                jz      loc_100014E61
                mov     rsi, cs:selRef_updateFirmwaers
                mov     r14, r12
                mov     rdi, r12
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_tag
                mov     rdi, r15
                call    r13
                mov     rsi, cs:selRef_objectAtIndexedSubscript_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx
                mov     rax, cs:_objc_release_ptr
                call    rax ; _objc_release
                mov     r12, cs:selRef_version
                mov     rdi, r15
                mov     rsi, r12
                call    r13
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_targerVersion ; float m_targerVersion;
                movss   dword ptr [r14+rax], xmm0
                mov     rsi, cs:selRef_beta
                mov     rdi, r15
                call    r13
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_targetBeta ; int m_targetBeta;
                mov     [r14+rcx], eax
                mov     rbx, cs:selRef_device
                mov     rdi, r14
                mov     rsi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, rax
                mov     rsi, r12
                call    r13
                movss   [rbp+var_2C], xmm0
                mov     rdi, r14
                mov     rsi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_beta
                call    r13
                mov     r12d, eax
                mov     rdi, r15
                mov     rsi, cs:selRef_version
                call    r13
                movaps  xmm1, xmm0
                mov     rsi, cs:selRef_getFirmwaerHintVersion_beta_targerVersion_
                movzx   edx, r12w
                mov     rdi, r14
                movss   xmm0, [rbp+var_2C]
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_40]
                call    rbx ; _objc_release
                mov     rsi, cs:selRef_firmwaerHintLabel
                mov     rdi, r14
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setStringValue_
                mov     rdi, rax
                mov     rdx, r12
                call    r13
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r15
                mov     r15, [rbp+var_38]
                call    rbx ; _objc_release

loc_100014E61:                          ; CODE XREF: -[UpdateView chengeboxClick:]+F0↑j
                mov     rdi, r15
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__UpdateView_chengeboxClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView showLogClick:](UpdateView *self, SEL, id)
__UpdateView_showLogClick__ proc near   ; DATA XREF: __objc_const:0000000100040398↓o

var_360         = xmmword ptr -360h
var_350         = xmmword ptr -350h
var_340         = xmmword ptr -340h
var_330         = xmmword ptr -330h
anonymous_1     = xmmword ptr -320h
anonymous_0     = xmmword ptr -310h
var_300         = xmmword ptr -300h
var_2F0         = xmmword ptr -2F0h
anonymous_3     = xmmword ptr -2E0h
anonymous_2     = xmmword ptr -2D0h
var_2C0         = xmmword ptr -2C0h
var_2B0         = xmmword ptr -2B0h
var_2A0         = xmmword ptr -2A0h
var_290         = xmmword ptr -290h
var_280         = xmmword ptr -280h
var_270         = xmmword ptr -270h
var_260         = xmmword ptr -260h
var_250         = xmmword ptr -250h
var_240         = xmmword ptr -240h
var_230         = xmmword ptr -230h
var_220         = xmmword ptr -220h
var_210         = xmmword ptr -210h
var_200         = xmmword ptr -200h
var_1F0         = xmmword ptr -1F0h
var_1E0         = xmmword ptr -1E0h
var_1D0         = xmmword ptr -1D0h
var_1B8         = xmmword ptr -1B8h
var_1A8         = xmmword ptr -1A8h
var_198         = qword ptr -198h
var_190         = qword ptr -190h
var_188         = qword ptr -188h
var_180         = qword ptr -180h
var_178         = qword ptr -178h
var_170         = qword ptr -170h
var_168         = qword ptr -168h
var_160         = qword ptr -160h
var_158         = qword ptr -158h
var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = xmmword ptr -140h
var_130         = byte ptr -130h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 338h
                mov     r12, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_190], rax
                mov     rdi, cs:classRef_FirmwaerUpdateLog
                call    _objc_alloc
                mov     rsi, cs:selRef_initWithWindowNibName_ ; char *
                lea     rdx, cfstr_Firmwaerupdate ; "FirmwaerUpdateLog"
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rbx, rax
                mov     r15, cs:selRef_window
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_170], rax
                mov     rdi, r12        ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_168], rax
                jz      short loc_100014F34
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_2C0]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                jmp     short loc_100014F4C
; ---------------------------------------------------------------------------

loc_100014F34:                          ; CODE XREF: -[UpdateView showLogClick:]+99↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_2B0], xmm0
                movapd  [rbp+var_2C0], xmm0
                xorpd   xmm0, xmm0

loc_100014F4C:                          ; CODE XREF: -[UpdateView showLogClick:]+BA↑j
                movsd   qword ptr [rbp+var_140], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_148], rax
                jz      short loc_100014F95
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_2A0]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                jmp     short loc_100014FAD
; ---------------------------------------------------------------------------

loc_100014F95:                          ; CODE XREF: -[UpdateView showLogClick:]+FA↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_290], xmm0
                movapd  [rbp+var_2A0], xmm0
                xorpd   xmm0, xmm0

loc_100014FAD:                          ; CODE XREF: -[UpdateView showLogClick:]+11B↑j
                movsd   [rbp+var_158], xmm0
                mov     rdi, r12        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_160], rax
                jz      short loc_100014FF5
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_280]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14]
                jmp     short loc_10001500D
; ---------------------------------------------------------------------------

loc_100014FF5:                          ; CODE XREF: -[UpdateView showLogClick:]+15B↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_270], xmm0
                movapd  [rbp+var_280], xmm0
                xorpd   xmm0, xmm0

loc_10001500D:                          ; CODE XREF: -[UpdateView showLogClick:]+17B↑j
                movsd   [rbp+var_150], xmm0
                mov     rdi, r12        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_180], rax
                jz      short loc_100015056
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_260]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                jmp     short loc_10001506E
; ---------------------------------------------------------------------------

loc_100015056:                          ; CODE XREF: -[UpdateView showLogClick:]+1BB↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_250], xmm0
                movapd  [rbp+var_260], xmm0
                xorpd   xmm0, xmm0

loc_10001506E:                          ; CODE XREF: -[UpdateView showLogClick:]+1DC↑j
                movsd   qword ptr [rbp+var_140+8], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_178], rax
                jz      short loc_1000150B7
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_240]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                jmp     short loc_1000150CF
; ---------------------------------------------------------------------------

loc_1000150B7:                          ; CODE XREF: -[UpdateView showLogClick:]+21C↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_230], xmm0
                movapd  [rbp+var_240], xmm0
                xorpd   xmm0, xmm0

loc_1000150CF:                          ; CODE XREF: -[UpdateView showLogClick:]+23D↑j
                movsd   xmm1, qword ptr [rbp+var_140+8]
                subsd   xmm1, xmm0
                movsd   qword ptr [rbp+var_140+8], xmm1
                movsd   xmm0, qword ptr [rbp+var_140]
                subsd   xmm0, [rbp+var_158]
                movsd   qword ptr [rbp+var_140], xmm0
                mov     rdi, r12        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_198], rax
                jz      short loc_10001513C
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_220]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+8]
                jmp     short loc_100015154
; ---------------------------------------------------------------------------

loc_10001513C:                          ; CODE XREF: -[UpdateView showLogClick:]+2A1↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_210], xmm0
                movapd  [rbp+var_220], xmm0
                xorpd   xmm0, xmm0

loc_100015154:                          ; CODE XREF: -[UpdateView showLogClick:]+2C2↑j
                movsd   [rbp+var_158], xmm0
                movsd   xmm0, qword ptr [rbp+var_140]
                mulsd   xmm0, cs:qword_10002F058
                movsd   qword ptr [rbp+var_140], xmm0
                movsd   xmm0, qword ptr [rbp+var_140+8]
                mulsd   xmm0, cs:qword_10002F058
                movsd   qword ptr [rbp+var_140+8], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_1000151C9
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_200]
                mov     rdi, r14
                mov     rsi, r15
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                jmp     short loc_1000151E1
; ---------------------------------------------------------------------------

loc_1000151C9:                          ; CODE XREF: -[UpdateView showLogClick:]+32E↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_1F0], xmm0
                movapd  [rbp+var_200], xmm0
                xorpd   xmm0, xmm0

loc_1000151E1:                          ; CODE XREF: -[UpdateView showLogClick:]+34F↑j
                movsd   [rbp+var_188], xmm0
                movsd   xmm0, qword ptr [rbp+var_140]
                addsd   xmm0, [rbp+var_150]
                movsd   qword ptr [rbp+var_140], xmm0
                movsd   xmm0, qword ptr [rbp+var_140+8]
                addsd   xmm0, [rbp+var_158]
                movsd   qword ptr [rbp+var_140+8], xmm0
                mov     [rbp+var_158], rbx
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_window ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                mov     [rbp+var_150], r12
                jz      short loc_100015267
                mov     rdx, cs:selRef_frame
                lea     rbx, [rbp+var_1E0]
                mov     rdi, rbx
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbx+18h]
                jmp     short loc_10001527F
; ---------------------------------------------------------------------------

loc_100015267:                          ; CODE XREF: -[UpdateView showLogClick:]+3CD↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_1D0], xmm0
                movapd  [rbp+var_1E0], xmm0
                xorpd   xmm0, xmm0

loc_10001527F:                          ; CODE XREF: -[UpdateView showLogClick:]+3ED↑j
                movsd   xmm1, qword ptr [rbp+var_140]
                movsd   qword ptr [rbp+var_1B8], xmm1
                movsd   xmm1, qword ptr [rbp+var_140+8]
                movsd   qword ptr [rbp+var_1B8+8], xmm1
                movsd   xmm1, [rbp+var_188]
                movsd   qword ptr [rbp+var_1A8], xmm1
                movsd   qword ptr [rbp+var_1A8+8], xmm0
                mov     rsi, cs:selRef_setFrame_display_ ; char *
                movups  xmm0, [rbp+var_1B8]
                movups  xmm1, [rbp+var_1A8]
                movups  [rsp+360h+var_350], xmm1
                movups  [rsp+360h+var_360], xmm0
                mov     r13, [rbp+var_170]
                mov     rdi, r13        ; void *
                mov     edx, 1
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_198]
                mov     r15, rbx
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_178]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_180]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_160]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_148]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_168]
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     r13, [rbp+var_150]
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_tag
                mov     rdi, [rbp+var_190]
                call    r15
                mov     rsi, cs:selRef_objectAtIndexedSubscript_
                mov     rdi, rbx
                mov     rdx, rax
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     [rbp+var_160], rax
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_fileName
                mov     rdi, r14
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_device
                mov     rdi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_pid
                mov     rdi, rax
                call    r15
                movzx   eax, ax
                cmp     eax, 5004h
                jnz     short loc_1000153EE
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     short loc_10001545F
; ---------------------------------------------------------------------------

loc_1000153EE:                          ; CODE XREF: -[UpdateView showLogClick:]+569↑j
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_device ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_148], rbx
                mov     rbx, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r15 ; _objc_msgSend
                movzx   r15d, ax
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rdi, rbx
                mov     rbx, [rbp+var_148]
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                cmp     r15d, 5004h
                jnz     short loc_10001546F

loc_10001545F:                          ; CODE XREF: -[UpdateView showLogClick:]+574↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                lea     rbx, cfstr_N30modkit ; "N30Modkit"

loc_10001546F:                          ; CODE XREF: -[UpdateView showLogClick:]+5E5↑j
                mov     r12, [rbp+var_150]
                mov     rdi, r12        ; void *
                mov     r13, cs:selRef_device
                mov     rsi, r13        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r15 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 5003h
                jnz     short loc_1000154BA
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     short loc_100015527
; ---------------------------------------------------------------------------

loc_1000154BA:                          ; CODE XREF: -[UpdateView showLogClick:]+635↑j
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_148], rbx
                mov     rbx, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r15 ; _objc_msgSend
                movzx   r15d, ax
                mov     rdi, r13
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, rbx
                mov     rbx, [rbp+var_148]
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                cmp     r15d, 5003h
                jnz     short loc_100015537

loc_100015527:                          ; CODE XREF: -[UpdateView showLogClick:]+640↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                lea     rbx, cfstr_Sn30modkit ; "SN30Modkit"

loc_100015537:                          ; CODE XREF: -[UpdateView showLogClick:]+6AD↑j
                mov     r12, [rbp+var_150]
                mov     rdi, r12        ; void *
                mov     r13, cs:selRef_device
                mov     rsi, r13        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r15 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 5002h
                jnz     short loc_100015582
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     short loc_1000155EF
; ---------------------------------------------------------------------------

loc_100015582:                          ; CODE XREF: -[UpdateView showLogClick:]+6FD↑j
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_148], rbx
                mov     rbx, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r15 ; _objc_msgSend
                movzx   r15d, ax
                mov     rdi, r13
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, rbx
                mov     rbx, [rbp+var_148]
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                cmp     r15d, 5002h
                jnz     short loc_1000155FF

loc_1000155EF:                          ; CODE XREF: -[UpdateView showLogClick:]+708↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                lea     rbx, cfstr_Sf30modkit ; "SF30Modkit"

loc_1000155FF:                          ; CODE XREF: -[UpdateView showLogClick:]+775↑j
                mov     r15, [rbp+var_150]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_device ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     r12, cs:selRef_pid
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 5001h
                jnz     short loc_100015651
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     r12, cs:_objc_release_ptr
                jmp     short loc_1000156BE
; ---------------------------------------------------------------------------

loc_100015651:                          ; CODE XREF: -[UpdateView showLogClick:]+7C5↑j
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_148], rbx
                mov     rbx, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r12        ; char *
                mov     r12, rax
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                movzx   r15d, ax
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, rbx
                mov     rbx, [rbp+var_148]
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                cmp     r15d, 5001h
                jnz     short loc_1000156CE

loc_1000156BE:                          ; CODE XREF: -[UpdateView showLogClick:]+7D7↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                lea     rbx, cfstr_M30modkit ; "M30Modkit"

loc_1000156CE:                          ; CODE XREF: -[UpdateView showLogClick:]+844↑j
                mov     rsi, cs:selRef_componentsSeparatedByString_ ; char *
                lea     rdx, cfstr_V    ; "_V"
                mov     [rbp+var_148], rbx
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rax, cs:classRef_NSString
                mov     qword ptr [rbp+var_140], rax
                mov     rsi, cs:selRef_date ; char *
                mov     rbx, [rbp+var_160]
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_version ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                cvtss2sd xmm0, xmm0
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_V2lf ; "%@  %@ V%.2lf"
                mov     rdi, qword ptr [rbp+var_140] ; void *
                mov     rcx, r15
                mov     [rbp+var_180], r14
                mov     r8, r14
                mov     al, 1
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setTitleString_ ; char *
                mov     rbx, [rbp+var_158]
                mov     rdi, rbx        ; void *
                mov     [rbp+var_178], r14
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSMutableString
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     [rbp+var_150], rax
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    r13 ; _objc_msgSend ; +[Language isCurrentChinaLanguage]
                test    al, al
                jz      loc_10001596F
                mov     rsi, cs:selRef_readme ; char *
                mov     rdi, [rbp+var_160] ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, stru_10003AF58 ; "\n"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_componentsSeparatedByString_ ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                xorps   xmm0, xmm0
                lea     r15, [rbp+var_340]
                movaps  xmmword ptr [r15+30h], xmm0
                movaps  xmmword ptr [r15+20h], xmm0
                movaps  xmmword ptr [r15+10h], xmm0
                movaps  xmmword ptr [r15], xmm0
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     qword ptr [rbp+var_140+8], rax
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      loc_100015B0A
                mov     r15, rax
                lea     rax, [rbp+var_340]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     qword ptr [rbp+var_140], rax

loc_10001588E:                          ; CODE XREF: -[UpdateView showLogClick:]+AEC↓j
                mov     r13, cs:selRef_length
                mov     rax, cs:selRef_appendString_
                mov     [rbp+var_168], rax
                xor     ebx, ebx
                mov     [rbp+var_170], r13

loc_1000158AC:                          ; CODE XREF: -[UpdateView showLogClick:]+AB4↓j
                mov     rax, qword ptr [rbp+var_330]
                mov     rcx, qword ptr [rbp+var_140]
                cmp     [rax], rcx
                jz      short loc_1000158CB
                mov     rdi, qword ptr [rbp+var_140+8]
                call    _objc_enumerationMutation

loc_1000158CB:                          ; CODE XREF: -[UpdateView showLogClick:]+A45↑j
                mov     rax, qword ptr [rbp+var_340+8]
                mov     r12, [rax+rbx*8]
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, 2
                jb      short loc_100015926
                mov     r13, r15
                mov     r15, [rbp+var_150]
                mov     rdi, r15        ; void *
                mov     r14, [rbp+var_168]
                mov     rsi, r14        ; char *
                mov     rdx, r12
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     r15, r13
                mov     r13, [rbp+var_170]
                mov     rsi, r14        ; char *
                lea     rdx, stru_10003BBD8 ; "\n\n"
                call    r12 ; _objc_msgSend

loc_100015926:                          ; CODE XREF: -[UpdateView showLogClick:]+A6E↑j
                inc     rbx
                cmp     r15, rbx
                jnz     loc_1000158AC
                mov     r8d, 10h
                mov     rdi, qword ptr [rbp+var_140+8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_340]
                lea     rcx, [rbp+var_B0]
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     r15, rax
                test    rax, rax
                jnz     loc_10001588E
                jmp     loc_100015AFA
; ---------------------------------------------------------------------------

loc_10001596F:                          ; CODE XREF: -[UpdateView showLogClick:]+961↑j
                mov     rsi, cs:selRef_readme_en ; char *
                mov     rdi, [rbp+var_160] ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, stru_10003AF58 ; "\n"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_componentsSeparatedByString_ ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                xorps   xmm0, xmm0
                lea     r15, [rbp+var_300]
                movaps  xmmword ptr [r15+30h], xmm0
                movaps  xmmword ptr [r15+20h], xmm0
                movaps  xmmword ptr [r15+10h], xmm0
                movaps  xmmword ptr [r15], xmm0
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_130]
                mov     r8d, 10h
                mov     qword ptr [rbp+var_140+8], rax
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      loc_100015B0A
                mov     r15, rax
                lea     rax, [rbp+var_300]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     qword ptr [rbp+var_140], rax

loc_100015A1E:                          ; CODE XREF: -[UpdateView showLogClick:]+C7C↓j
                mov     r13, cs:selRef_length
                mov     rax, cs:selRef_appendString_
                mov     [rbp+var_168], rax
                xor     ebx, ebx
                mov     [rbp+var_170], r13

loc_100015A3C:                          ; CODE XREF: -[UpdateView showLogClick:]+C44↓j
                mov     rax, qword ptr [rbp+var_2F0]
                mov     rcx, qword ptr [rbp+var_140]
                cmp     [rax], rcx
                jz      short loc_100015A5B
                mov     rdi, qword ptr [rbp+var_140+8]
                call    _objc_enumerationMutation

loc_100015A5B:                          ; CODE XREF: -[UpdateView showLogClick:]+BD5↑j
                mov     rax, qword ptr [rbp+var_300+8]
                mov     r12, [rax+rbx*8]
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, 2
                jb      short loc_100015AB6
                mov     r13, r15
                mov     r15, [rbp+var_150]
                mov     rdi, r15        ; void *
                mov     r14, [rbp+var_168]
                mov     rsi, r14        ; char *
                mov     rdx, r12
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     r15, r13
                mov     r13, [rbp+var_170]
                mov     rsi, r14        ; char *
                lea     rdx, stru_10003BBD8 ; "\n\n"
                call    r12 ; _objc_msgSend

loc_100015AB6:                          ; CODE XREF: -[UpdateView showLogClick:]+BFE↑j
                inc     rbx
                cmp     r15, rbx
                jnz     loc_100015A3C
                mov     r8d, 10h
                mov     rdi, qword ptr [rbp+var_140+8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_300]
                lea     rcx, [rbp+var_130]
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     r15, rax
                test    rax, rax
                jnz     loc_100015A1E

loc_100015AFA:                          ; CODE XREF: -[UpdateView showLogClick:]+AF2↑j
                mov     r14, [rbp+var_158]
                mov     r12, cs:_objc_release_ptr
                jmp     short loc_100015B0D
; ---------------------------------------------------------------------------

loc_100015B0A:                          ; CODE XREF: -[UpdateView showLogClick:]+9F8↑j
                                        ; -[UpdateView showLogClick:]+B88↑j
                mov     r14, rbx

loc_100015B0D:                          ; CODE XREF: -[UpdateView showLogClick:]+C90↑j
                mov     rbx, qword ptr [rbp+var_140+8]
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setContentString_ ; char *
                mov     rdi, r14        ; void *
                mov     rbx, [rbp+var_150]
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_window ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, r14
                mov     r14, rax
                mov     rsi, cs:selRef_orderFront_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_window ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_makeKeyWindow ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_178]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_180]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_148]
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_160]
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_190]
                call    r12 ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100015BF2
                add     rsp, 338h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100015BF2:                          ; CODE XREF: -[UpdateView showLogClick:]+D66↑j
                call    ___stack_chk_fail
__UpdateView_showLogClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView loadUpdateFirmwae](UpdateView *self, SEL)
__UpdateView_loadUpdateFirmwae_ proc near
                                        ; CODE XREF: -[UpdateView loadViews]+143A↑P
                                        ; -[UpdateView loadV1AndV2]+4FB↑P ...

anonymous_0     = ymmword ptr -80h
anonymous_1     = qword ptr -60h
anonymous_2     = qword ptr -58h
var_50          = qword ptr -50h
anonymous_3     = qword ptr -48h
anonymous_4     = qword ptr -40h
anonymous_5     = qword ptr -38h
anonymous_6     = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 58h
                mov     rbx, rdi
                mov     rsi, cs:selRef_setLastTimer_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                xor     edx, edx
                call    r13 ; _objc_msgSend ; -[UpdateView setLastTimer:]
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                test    r14, r14
                jnz     loc_100015D92
                mov     r14, cs:selRef_progress
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView progress]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_startAnimation_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView progress]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_notFirmware ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView notFirmware]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     r15, cs:classRef_SHttp
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdx, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+anonymous_0+8]
                mov     [rcx], rdx
                mov     esi, 0C2000000h
                mov     [rcx+8], rsi
                lea     rdi, sub_100015DA1
                mov     [rcx+10h], rdi
                lea     rdi, unk_10003A448
                mov     [rcx+18h], rdi
                mov     [rcx+20h], rbx
                lea     r8, [rbp+var_50]
                mov     [r8], rdx
                mov     [r8+8], rsi
                lea     rdx, sub_100015E68
                mov     [r8+10h], rdx
                lea     rdx, unk_10003A478
                mov     [r8+18h], rdx
                mov     [r8+20h], rbx
                mov     rsi, cs:selRef_getUpdateFirmwaerWithType_success_failure_ ; char *
                mov     rdi, r15        ; void *
                mov     edx, eax
                call    r13 ; _objc_msgSend ; +[SHttp getUpdateFirmwaerWithType:success:failure:]
                mov     rdi, r12
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release

loc_100015D92:                          ; CODE XREF: -[UpdateView loadUpdateFirmwae]+4B↑j
                add     rsp, 58h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_loadUpdateFirmwae_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100015DA1   proc near               ; DATA XREF: -[UpdateView loadUpdateFirmwae]+13C↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r15, [rdi+20h]
                mov     r13, cs:selRef_progress
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setHidden_ ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_refreshFirmwaerList
                mov     rax, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100015DA1   endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100015E68   proc near               ; DATA XREF: -[UpdateView loadUpdateFirmwae]+161↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_progress ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_reloadButton ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100015E68   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView loadUpdateFirmwae:](UpdateView *self, SEL, int)
__UpdateView_loadUpdateFirmwae__ proc near
                                        ; CODE XREF: -[UpdateView SMiniImageViewClick:]+2F9↓P
                                        ; DATA XREF: __objc_const:00000001000403C8↓o

var_80          = ymmword ptr -80h
anonymous_0     = qword ptr -60h
var_58          = qword ptr -58h
anonymous_1     = qword ptr -50h
anonymous_2     = qword ptr -48h
anonymous_3     = qword ptr -40h
anonymous_4     = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 58h
                mov     ebx, edx
                mov     r14, rdi
                mov     rsi, cs:selRef_setLastTimer_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                xor     edx, edx
                call    r13 ; _objc_msgSend ; -[UpdateView setLastTimer:]
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                test    r15, r15
                jnz     loc_100016042
                mov     r15, cs:selRef_progress
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView progress]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_startAnimation_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     [rbp+var_2C], ebx
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView progress]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rsi, cs:selRef_notFirmware ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView notFirmware]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_SHttp ; void *
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+var_80]
                mov     [rcx], rax
                mov     edx, 0C2000000h
                mov     [rcx+8], rdx
                lea     rsi, sub_100016051
                mov     [rcx+10h], rsi
                lea     rsi, unk_10003A448
                mov     [rcx+18h], rsi
                mov     [rcx+20h], r14
                lea     r8, [rbp+var_58]
                mov     [r8], rax
                mov     [r8+8], rdx
                lea     rax, sub_100016116
                mov     [r8+10h], rax
                lea     rax, unk_10003A478
                mov     [r8+18h], rax
                mov     [r8+20h], r14
                mov     rsi, cs:selRef_getUpdateFirmwaerWithType_success_failure_ ; char *
                mov     edx, [rbp+var_2C]
                call    r13 ; _objc_msgSend ; +[SHttp getUpdateFirmwaerWithType:success:failure:]

loc_100016042:                          ; CODE XREF: -[UpdateView loadUpdateFirmwae:]+4D↑j
                add     rsp, 58h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_loadUpdateFirmwae__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100016051   proc near               ; DATA XREF: -[UpdateView loadUpdateFirmwae:]+101↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r15, [rdi+20h]
                mov     r13, cs:selRef_progress
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setHidden_ ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_refreshFirmwaerList
                mov     rax, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100016051   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100016116   proc near               ; DATA XREF: -[UpdateView loadUpdateFirmwae:]+126↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_progress ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_reloadButton ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100016116   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView updateStateFindNewVersionDowmFirmwaerFile](UpdateView *self, SEL)
__UpdateView_updateStateFindNewVersionDowmFirmwaerFile_ proc near
                                        ; DATA XREF: __objc_const:00000001000403E0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r14, cs:selRef_updateFirmwaers
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                test    r12, r12
                jz      short loc_10001624F
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_dowmFirmwaerFile_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[UpdateView dowmFirmwaerFile:]
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                mov     rax, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_10001624F:                          ; CODE XREF: -[UpdateView updateStateFindNewVersionDowmFirmwaerFile]+4C↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_updateStateFindNewVersionDowmFirmwaerFile_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView updateStateDowmFirmwaerFile](UpdateView *self, SEL)
__UpdateView_updateStateDowmFirmwaerFile_ proc near
                                        ; CODE XREF: -[UpdateView SButtonClick:]+2F4↓P
                                        ; DATA XREF: __objc_const:00000001000403F8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r14, cs:selRef_selectButton
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView selectButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                jz      short loc_100016297
                mov     rdi, rax
                call    cs:_objc_release_ptr
                jmp     short loc_1000162AF
; ---------------------------------------------------------------------------

loc_100016297:                          ; CODE XREF: -[UpdateView updateStateDowmFirmwaerFile]+2C↑j
                mov     rsi, cs:selRef_isSetNewFirmware ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView isSetNewFirmware]
                test    al, al
                jz      loc_100016346

loc_1000162AF:                          ; CODE XREF: -[UpdateView updateStateDowmFirmwaerFile]+37↑j
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView selectButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_tag ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_dowmFirmwaerFile_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr ; -[UpdateView dowmFirmwaerFile:]
                mov     rdi, r12
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100016346:                          ; CODE XREF: -[UpdateView updateStateDowmFirmwaerFile]+4B↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_updateStateDowmFirmwaerFile_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView dowmFirmwaerFile:](UpdateView *self, SEL, id)
__UpdateView_dowmFirmwaerFile__ proc near
                                        ; CODE XREF: -[UpdateView updateStateFindNewVersionDowmFirmwaerFile]+87↑P
                                        ; -[UpdateView updateStateDowmFirmwaerFile]+CC↑P
                                        ; DATA XREF: ...

var_A0          = ymmword ptr -0A0h
anonymous_0     = qword ptr -80h
anonymous_1     = qword ptr -78h
anonymous_2     = qword ptr -70h
var_68          = qword ptr -68h
anonymous_3     = qword ptr -60h
anonymous_4     = qword ptr -58h
anonymous_5     = qword ptr -50h
anonymous_6     = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 78h
                mov     rbx, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_initTimer ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView initTimer]
                mov     rsi, cs:selRef_setState_ ; char *
                mov     edx, 2
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView setState:]
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r15
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Prepareupdate ; "prepareUpdate"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax
                xor     r8d, r8d
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_updateButton
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r13
                mov     r13, rax
                mov     rsi, cs:selRef_setM_title_
                mov     rdi, rax
                mov     rdx, r12
                call    rcx
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rax, cs:classRef_SHttp
                mov     [rbp+var_40], rax
                mov     rsi, cs:selRef_fileURL ; char *
                mov     r14, [rbp+var_30]
                mov     rdi, r14        ; void *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r15, [rbp+var_A0+8]
                mov     [r15], rax
                mov     ecx, 0C2000000h
                mov     [r15+8], rcx
                lea     rdx, sub_10001652B
                mov     [r15+10h], rdx
                lea     rdx, unk_10003A4A8
                mov     [r15+18h], rdx
                mov     [r15+20h], r14
                mov     rdi, r14
                mov     [r15+28h], rbx
                lea     r13, [rbp+var_68]
                mov     [r13+0], rax
                mov     [r13+8], rcx
                lea     rax, sub_1000166BA
                mov     [r13+10h], rax
                lea     rax, unk_10003A478
                mov     [r13+18h], rax
                mov     [r13+20h], rbx
                mov     r14, cs:selRef_id
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     dword ptr [rbp+var_30], eax
                mov     rsi, cs:selRef_fileSize ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_dowmFirmwaerFile_success_failure_downLoadID_maxSize_ ; char *
                mov     dword ptr [rsp+0A0h+var_A0], eax
                mov     rdi, [rbp+var_40] ; void *
                mov     r14, [rbp+var_38]
                mov     rdx, r14
                mov     rcx, r15
                mov     r8, r13
                mov     r9d, dword ptr [rbp+var_30]
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [r15+20h]
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                add     rsp, 78h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_dowmFirmwaerFile__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001652B   proc near               ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+11B↑o

var_30          = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r15, [rdi+20h]
                mov     r12, cs:selRef_type
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                xor     r12d, r12d
                cmp     eax, 15h
                setz    r12b
                mov     rdi, [rbx+28h]  ; void *
                mov     rsi, cs:selRef_shidBoot ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setIsUSBRR_PS_classic_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, r12d
                call    cs:_objc_msgSend_ptr
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     [rbp+var_30.var0.var0], rbx
                mov     rdi, [rbx+28h]  ; void *
                mov     rsi, cs:selRef_setSavePath_ ; char *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbx+28h]  ; void *
                mov     rsi, cs:selRef_shidBoot ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rbx, cs:selRef_setFilePath_
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     r12, cs:selRef_sharedInstance
                mov     rsi, r12        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     rsi, r12        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rax, [rbp+var_30.var0.var0]
                mov     rdi, [rax+28h]
                mov     rsi, cs:selRef_changeBoot
                mov     rax, cs:_objc_msgSend_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_10001652B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100016694   proc near               ; DATA XREF: __const:000000010003A4B8↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     rdi, [rsi+20h]
                mov     r14, cs:_objc_retain_ptr
                call    r14 ; _objc_retain
                mov     rdi, [rbx+28h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_100016694   endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000166BA   proc near               ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+148↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r14, [rdi+20h]
                mov     r12, cs:selRef_setState_
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSAlert ; void *
                mov     rsi, cs:selRef_new ; char *
                call    r13 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_addButtonWithTitle_ ; char *
                lea     rdx, cfstr_Error ; "Error"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     rsi, cs:selRef_description ; char *
                mov     rdi, r15        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setMessageText_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setAlertStyle_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_window ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_beginSheetModalForWindow_completionHandler_ ; char *
                lea     rcx, off_10003A4F8
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_1000166BA   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000167C0   proc near               ; DATA XREF: __const:000000010003A508↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_1000167C0   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView initTimer](UpdateView *self, SEL)
__UpdateView_initTimer_ proc near       ; CODE XREF: -[UpdateView dowmFirmwaerFile:]+32↑P
                                        ; DATA XREF: __objc_const:0000000100040428↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r14, cs:selRef_updateTimer
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                test    r15, r15
                jz      short loc_10001680F
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10001680F:                          ; CODE XREF: -[UpdateView initTimer]+38↑j
                mov     rdi, cs:classRef_NSTimer ; void *
                mov     rcx, cs:selRef_timerOut
                mov     rsi, cs:selRef_timerWithTimeInterval_target_selector_userInfo_repeats_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                movsd   xmm0, cs:qword_10002F158
                mov     rdx, rbx
                xor     r8d, r8d
                mov     r9d, 1
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setUpdateTimer_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[UpdateView setUpdateTimer:]
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSRunLoop ; void *
                mov     rsi, cs:selRef_mainRunLoop ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rax, cs:_NSDefaultRunLoopMode_ptr
                mov     rcx, [rax]
                mov     rsi, cs:selRef_addTimer_forMode_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_gs_getCurrentTimeToMilliSecond ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView gs_getCurrentTimeToMilliSecond]
                mov     rsi, cs:selRef_setLastTimer_
                mov     rdi, rbx
                mov     rdx, rax
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[UpdateView setLastTimer:]
__UpdateView_initTimer_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView timerOut](UpdateView *self, SEL)
__UpdateView_timerOut_ proc near        ; DATA XREF: __objc_const:0000000100040440↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     r14, cs:selRef_lastTimer
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView lastTimer]
                test    rax, rax
                jz      short loc_10001693C
                mov     rsi, cs:selRef_gs_getCurrentTimeToMilliSecond ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView gs_getCurrentTimeToMilliSecond]
                mov     r15, rax
                add     r15, 0FFFFFFFFFFFFB1E0h
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView lastTimer]
                cmp     r15, rax
                jge     short loc_100016945

loc_10001693C:                          ; CODE XREF: -[UpdateView timerOut]+21↑j
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100016945:                          ; CODE XREF: -[UpdateView timerOut]+4D↑j
                mov     rsi, cs:selRef_updateingError
                mov     rdi, rbx
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[UpdateView updateingError]
__UpdateView_timerOut_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; signed __int64 __cdecl -[UpdateView gs_getCurrentTimeToMilliSecond](UpdateView *self, SEL)
__UpdateView_gs_getCurrentTimeToMilliSecond_ proc near
                                        ; CODE XREF: -[UpdateView initTimer]+104↑P
                                        ; -[UpdateView timerOut]+34↑P ...

var_18          = qword ptr -18h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 10h
                mov     rdi, cs:classRef_NSDate ; void *
                mov     rsi, cs:selRef_date ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_timeIntervalSince1970 ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mulsd   xmm0, cs:qword_10002F160
                movsd   [rbp+var_18], xmm0
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                cvttsd2si rax, [rbp+var_18]
                add     rsp, 10h
                pop     rbx
                pop     r14
                pop     rbp
                retn
__UpdateView_gs_getCurrentTimeToMilliSecond_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SButtonClick:](UpdateView *self, SEL, id)
__UpdateView_SButtonClick__ proc near   ; DATA XREF: __objc_const:0000000100040470↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_updateButton ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                cmp     r12, rbx
                jz      loc_100016BE2

loc_100016A07:                          ; CODE XREF: -[UpdateView SButtonClick:]+2FA↓j
                mov     r12, cs:selRef_leftButton
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                cmp     r13, rbx
                jnz     short loc_100016A94
                mov     r13, cs:selRef_state
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 1
                jnz     short loc_100016A7E
                mov     rsi, cs:selRef_setState_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend ; -[UpdateView setState:]
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend ; -[UpdateView setUpdateFirmwaers:]
                mov     rsi, cs:selRef_loadUpdateFirmwae ; char *
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView loadUpdateFirmwae]

loc_100016A7E:                          ; CODE XREF: -[UpdateView SButtonClick:]+8D↑j
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 6
                jz      loc_100016CBC

loc_100016A94:                          ; CODE XREF: -[UpdateView SButtonClick:]+74↑j
                mov     r13, cs:selRef_rightButton
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView rightButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                cmp     r15, rbx
                jnz     loc_100016C0D
                mov     r15, cs:selRef_state
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 1
                jnz     loc_100016B8C
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView leftButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r15
                mov     r15, rax
                mov     rsi, cs:selRef_setHidden_
                mov     rdi, rax
                mov     edx, 1
                call    r12
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r14
                mov     rsi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     r13, cs:selRef_setHidden_
                mov     rsi, r13
                mov     edx, 1
                call    r12
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r14
                mov     rsi, cs:selRef_updateButton
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, r13
                xor     edx, edx
                call    r12
                mov     rdi, r15
                mov     r15, cs:selRef_state
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_updateStateFindNewVersionDowmFirmwaerFile
                mov     rdi, r14
                call    r12

loc_100016B8C:                          ; CODE XREF: -[UpdateView SButtonClick:]+11E↑j
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 6
                jnz     short loc_100016C0D
                mov     rdi, cs:classRef_NSNotificationCenter ; void *
                mov     rsi, cs:selRef_defaultCenter ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_postNotificationName_object_ ; char *
                lea     rdx, cfstr_Updateviewback ; "updateViewBack"
                mov     rdi, rax        ; void *
                xor     ecx, ecx
                call    r14 ; _objc_msgSend

loc_100016BD7:                          ; CODE XREF: -[UpdateView SButtonClick:]+2E5↓j
                mov     rdi, r15
                call    cs:_objc_release_ptr
                jmp     short loc_100016C0D
; ---------------------------------------------------------------------------

loc_100016BE2:                          ; CODE XREF: -[UpdateView SButtonClick:]+44↑j
                mov     r12, cs:selRef_state
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 2
                jz      short loc_100016C0D
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 5
                jnz     short loc_100016C24

loc_100016C0D:                          ; CODE XREF: -[UpdateView SButtonClick:]+101↑j
                                        ; -[UpdateView SButtonClick:]+1DF↑j ...
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
; ---------------------------------------------------------------------------

loc_100016C24:                          ; CODE XREF: -[UpdateView SButtonClick:]+24E↑j
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 6
                jnz     short loc_100016CA7
                mov     rsi, cs:selRef_delegate ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_goHome_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      short loc_100016C0D
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_delegate ; char *
                call    r12 ; _objc_msgSend ; -[UpdateView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_goHome_ ; char *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                jmp     loc_100016BD7
; ---------------------------------------------------------------------------

loc_100016CA7:                          ; CODE XREF: -[UpdateView SButtonClick:]+277↑j
                mov     rsi, cs:selRef_updateStateDowmFirmwaerFile ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView updateStateDowmFirmwaerFile]
                jmp     loc_100016A07
; ---------------------------------------------------------------------------

loc_100016CBC:                          ; CODE XREF: -[UpdateView SButtonClick:]+D1↑j
                xor     edi, edi        ; int
                call    _exit
__UpdateView_SButtonClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootAddDevice:hid:](UpdateView *self, SEL, id, id)
__UpdateView_SHIDBootAddDevice_hid__ proc near
                                        ; DATA XREF: __objc_const:0000000100040488↓o

var_80          = byte ptr -80h
var_58          = byte ptr -58h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 58h
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_delegate ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r12, cs:selRef_addBootDevice_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r15 ; _objc_msgSend
                mov     ebx, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    bl, bl
                jz      short loc_100016D56
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_delegate ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r14
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_100016D56:                          ; CODE XREF: -[UpdateView SHIDBootAddDevice:hid:]+64↑j
                mov     rsi, cs:selRef_deviceRef ; char *
                mov     rdi, [rbp+var_30] ; void *
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setBootDeviceRef_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[UpdateView setBootDeviceRef:]
                mov     rsi, cs:selRef_setBootState_ ; char *
                mov     edx, 1
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView setBootState:]
                mov     rsi, cs:selRef_bootDeviceRef ; char *
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView bootDeviceRef]
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 4
                xor     ecx, ecx
                xor     r8d, r8d
                call    flashfirmware   ; rdi --buff
                mov     esi, 1DCD6500h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_80]
                mov     [rdx], rcx
                mov     r13d, 0C2000000h
                mov     [rdx+8], r13
                lea     rcx, sub_100016EE7
                mov     [rdx+10h], rcx
                lea     rbx, unk_10003A338
                mov     [rdx+18h], rbx
                mov     [rdx+20h], r14
                mov     rsi, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                call    _dispatch_after
                mov     rsi, cs:selRef_manualViewRemoveFromSuperView ; char *
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView manualViewRemoveFromSuperView]
                mov     r12, cs:selRef_state
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView state]
                cmp     rax, 7
                jnz     short loc_100016E66
                mov     esi, 1DCD6500h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                lea     rdx, [rbp+var_58]
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                mov     [rdx], rcx
                mov     [rdx+8], r13
                lea     rcx, sub_100016F2B
                mov     [rdx+10h], rcx
                mov     [rdx+18h], rbx
                mov     [rdx+20h], r14
                mov     rbx, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                mov     rsi, rbx
                call    _dispatch_after
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_100016E66:                          ; CODE XREF: -[UpdateView SHIDBootAddDevice:hid:]+155↑j
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 3
                jz      short loc_100016E9C
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 2
                jz      short loc_100016E9C
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 7
                jnz     short loc_100016ECE

loc_100016E9C:                          ; CODE XREF: -[UpdateView SHIDBootAddDevice:hid:]+1B3↑j
                                        ; -[UpdateView SHIDBootAddDevice:hid:]+1C5↑j
                mov     rdi, cs:classRef_SHIDBootPro2 ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r15 ; _objc_msgSend ; +[SHIDBootPro2 sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_readPID ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_100016ECE:                          ; CODE XREF: -[UpdateView SHIDBootAddDevice:hid:]+1D7↑j
                mov     rdi, [rbp+var_30]
                call    cs:_objc_release_ptr
                add     rsp, 58h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_SHIDBootAddDevice_hid__ endp


; =============== S U B R O U T I N E =======================================


sub_100016EE7   proc near               ; DATA XREF: -[UpdateView SHIDBootAddDevice:hid:]+10B↑o
                mov     rdi, [rdi+20h]  ; void *
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_version ; float m_version;
                movss   xmm0, dword ptr [rdi+rax]
                xorps   xmm1, xmm1
                ucomiss xmm0, xmm1
                jnz     short locret_100016F2A
                jp      short locret_100016F2A
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_bootDeviceRef ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 4
                xor     ecx, ecx
                xor     r8d, r8d
                pop     rbp
                jmp     flashfirmware   ; rdi --buff
; ---------------------------------------------------------------------------

locret_100016F2A:                       ; CODE XREF: sub_100016EE7+16↑j
                                        ; sub_100016EE7+18↑j
                retn
sub_100016EE7   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100016F2B   proc near               ; DATA XREF: -[UpdateView SHIDBootAddDevice:hid:]+175↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_bootDeviceRef ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                mov     esi, 97h
                mov     edx, 1Ah
                xor     ecx, ecx
                pop     rbp
                jmp     setReport3206
sub_100016F2B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootGetFirmwaerType:hid:](UpdateView *self, SEL, unsigned int, id)
__UpdateView_SHIDBootGetFirmwaerType_hid__ proc near
                                        ; DATA XREF: __objc_const:00000001000404A0↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_loadV1AndV2
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[UpdateView loadV1AndV2]
__UpdateView_SHIDBootGetFirmwaerType_hid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootRemoveDevice:hid:](UpdateView *self, SEL, id, id)
__UpdateView_SHIDBootRemoveDevice_hid__ proc near
                                        ; DATA XREF: __objc_const:00000001000404B8↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rsi, cs:selRef_setBootDeviceRef_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                xor     edx, edx
                call    r14 ; _objc_msgSend ; -[UpdateView setBootDeviceRef:]
                mov     rsi, cs:selRef_setBootState_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r14 ; _objc_msgSend ; -[UpdateView setBootState:]
                mov     rsi, cs:selRef_state ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend ; -[UpdateView state]
                cmp     rax, 5
                jnz     short loc_100016FBA
                mov     rsi, cs:selRef_updateingError
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[UpdateView updateingError]
; ---------------------------------------------------------------------------

loc_100016FBA:                          ; CODE XREF: -[UpdateView SHIDBootRemoveDevice:hid:]+3D↑j
                pop     rbx
                pop     r14
                pop     rbp
                retn
__UpdateView_SHIDBootRemoveDevice_hid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootGetVersion:hid:](UpdateView *self, SEL, id, id)
__UpdateView_SHIDBootGetVersion_hid__ proc near
                                        ; DATA XREF: __objc_const:00000001000404D0↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r15, cs:selRef_version
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                xorps   xmm1, xmm1
                ucomiss xmm0, xmm1
                jnz     short loc_100016FFD
                jnp     loc_100017166

loc_100016FFD:                          ; CODE XREF: -[UpdateView SHIDBootGetVersion:hid:]+36↑j
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_version ; float m_version;
                movss   dword ptr [r14+rax], xmm0
                mov     rsi, cs:selRef_beta ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, eax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_beta ; float m_beta;
                movss   dword ptr [r14+rax], xmm0
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_selectButton ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView selectButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_tag ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_version ; char *
                call    cs:_objc_msgSend_ptr
                mov     r15, cs:_OBJC_IVAR_$_UpdateView_m_targerVersion ; float m_targerVersion;
                movss   dword ptr [r14+r15], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_beta ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_targetBeta ; int m_targetBeta;
                mov     [r14+rcx], eax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_beta ; float m_beta;
                cvttss2si eax, dword ptr [r14+rax]
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_version ; float m_version;
                movss   xmm0, dword ptr [r14+rcx]
                movss   xmm1, dword ptr [r14+r15]
                mov     rsi, cs:selRef_getFirmwaerHintVersion_beta_targerVersion_ ; char *
                movzx   edx, ax
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release

loc_100017166:                          ; CODE XREF: -[UpdateView SHIDBootGetVersion:hid:]+38↑j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__UpdateView_SHIDBootGetVersion_hid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootStartUpdate:](UpdateView *self, SEL, id)
__UpdateView_SHIDBootStartUpdate__ proc near
                                        ; DATA XREF: __objc_const:00000001000404E8↓o

var_120         = xmmword ptr -120h
var_110         = xmmword ptr -110h
anonymous_1     = xmmword ptr -100h
anonymous_0     = xmmword ptr -0F0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0F8h
                mov     r14, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_setState_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     edx, 5
                call    r15 ; _objc_msgSend ; -[UpdateView setState:]
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_120]
                movaps  xmmword ptr [rbx+30h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx], xmm0
                mov     rsi, cs:selRef_subviews ; char *
                mov     [rbp+var_C8], r14
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     [rbp+var_C0], rax
                test    rax, rax
                jz      loc_1000172EF
                lea     rax, [rbp+var_120]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_D8], rax

loc_100017236:                          ; CODE XREF: -[UpdateView SHIDBootStartUpdate:]+16C↓j
                mov     r15, cs:selRef_class
                mov     rax, cs:selRef_removeFromSuperview
                mov     [rbp+var_D0], rax
                xor     r12d, r12d

loc_10001724E:                          ; CODE XREF: -[UpdateView SHIDBootStartUpdate:]+138↓j
                mov     rax, qword ptr [rbp+var_110]
                mov     rcx, [rbp+var_D8]
                cmp     [rax], rcx
                jz      short loc_10001726D
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_10001726D:                          ; CODE XREF: -[UpdateView SHIDBootStartUpdate:]+E2↑j
                mov     rax, qword ptr [rbp+var_120+8]
                mov     r13, [rax+r12*8]
                mov     rdi, r13        ; void *
                mov     rsi, r15        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     r14, rax
                mov     rdi, cs:classRef_DeviceManualView ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend
                cmp     r14, rax
                jnz     short loc_1000172AB
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_D0] ; char *
                call    cs:_objc_msgSend_ptr

loc_1000172AB:                          ; CODE XREF: -[UpdateView SHIDBootStartUpdate:]+11C↑j
                inc     r12
                cmp     [rbp+var_C0], r12
                jnz     short loc_10001724E
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_120]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     [rbp+var_C0], rax
                test    rax, rax
                jnz     loc_100017236

loc_1000172EF:                          ; CODE XREF: -[UpdateView SHIDBootStartUpdate:]+9E↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_B8]
                call    rbx ; _objc_release
                mov     r14, cs:selRef_updateButton
                mov     r13, [rbp+var_C8]
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_title_ ; char *
                lea     rdx, stru_10003A8B8
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend ; -[SButton setM_title:]
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setM_progress_ ; char *
                xorps   xmm0, xmm0
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend ; -[SButton setM_progress:]
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Willupdatefirm_1 ; "willUpdateFirmwaering"
                mov     rdi, rax        ; void *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_gs_getCurrentTimeToMilliSecond ; char *
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setLastTimer_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_10001742F
                add     rsp, 0F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10001742F:                          ; CODE XREF: -[UpdateView SHIDBootStartUpdate:]+29E↑j
                call    ___stack_chk_fail
__UpdateView_SHIDBootStartUpdate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootStartUpdateing:shid:](UpdateView *self, SEL, int, id)
__UpdateView_SHIDBootStartUpdateing_shid__ proc near
                                        ; DATA XREF: __objc_const:0000000100040500↓o

var_1C          = dword ptr -1Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdi
                cvtsi2ss xmm0, edx
                movss   [rbp+var_1C], xmm0
                mov     rsi, cs:selRef_updateButton ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setM_progress_ ; char *
                mov     rdi, rax        ; void *
                movss   xmm0, [rbp+var_1C]
                call    r15 ; _objc_msgSend ; -[SButton setM_progress:]
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_gs_getCurrentTimeToMilliSecond ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView gs_getCurrentTimeToMilliSecond]
                mov     rsi, cs:selRef_setLastTimer_
                mov     rdi, rbx
                mov     rdx, rax
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[UpdateView setLastTimer:]
__UpdateView_SHIDBootStartUpdateing_shid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootStartUpdateed:](UpdateView *self, SEL, id)
__UpdateView_SHIDBootStartUpdateed__ proc near
                                        ; DATA XREF: __objc_const:0000000100040518↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Success ; "success"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_updateButton ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setM_title_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend ; -[SButton setM_title:]
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002F130
                movsd   xmm1, cs:qword_10002F168
                movsd   xmm2, cs:qword_10002F170
                movsd   xmm3, cs:qword_10002EFF8
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_updateButton ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setM_backgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend ; -[SButton setM_backgroundColor:]
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setState_ ; char *
                mov     edx, 6
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView setState:]
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_version ; float m_version;
                movss   xmm0, dword ptr [rbx+rax]
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_beta ; float m_beta;
                cvttss2si eax, dword ptr [rbx+rax]
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_targerVersion ; float m_targerVersion;
                movss   xmm1, dword ptr [rbx+rcx]
                mov     rsi, cs:selRef_getFirmwaerHintVersion_beta_targerVersion_ ; char *
                movzx   edx, ax
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     r14, cs:selRef_updateTimer
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    r12 ; _objc_release
                test    r15, r15
                jz      short loc_1000176BA
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_invalidate ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setUpdateTimer_
                mov     rdi, rbx
                xor     edx, edx
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[UpdateView setUpdateTimer:]
; ---------------------------------------------------------------------------

loc_1000176BA:                          ; CODE XREF: -[UpdateView SHIDBootStartUpdateed:]+1BE↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_SHIDBootStartUpdateed__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootNotSupportFirmware:](UpdateView *self, SEL, id)
__UpdateView_SHIDBootNotSupportFirmware__ proc near
                                        ; DATA XREF: __objc_const:0000000100040530↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_30], rdi
                mov     rdi, cs:classRef_NSAlert ; void *
                mov     rsi, cs:selRef_new ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Sure ; "sure"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_addButtonWithTitle_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Notsupport ; "NotSupport"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setMessageText_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     r12, r14
                mov     r14, rbx
                mov     rbx, [rbp+var_30]
                mov     rsi, cs:selRef_setAlertStyle_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_beginSheetModalForWindow_completionHandler_ ; char *
                lea     rcx, off_10003A518
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rsi, cs:selRef_setState_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     r15, cs:selRef_updateTimer
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                test    r12, r12
                jz      short loc_1000178B3
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_invalidate ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setUpdateTimer_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend

loc_1000178B3:                          ; CODE XREF: -[UpdateView SHIDBootNotSupportFirmware:]+1AF↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__UpdateView_SHIDBootNotSupportFirmware__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000178CA   proc near               ; DATA XREF: __const:000000010003A528↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_1000178CA   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:](UpdateView *self, SEL, id, int, int)
__UpdateView_SHIDBootErrorNOEqualPID_gamepadType_pid__ proc near
                                        ; DATA XREF: __objc_const:0000000100040548↓o

var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r15d, r8d
                mov     r13d, ecx
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSString
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r14, rax
                mov     rdi, cs:classRef_Language ; void *
                mov     rsi, cs:selRef_isCurrentChinaLanguage ; char *
                call    r12 ; _objc_msgSend ; +[Language isCurrentChinaLanguage]
                test    al, al
                jz      loc_100017A50
                mov     rsi, cs:selRef_stringByAppendingFormat_ ; char *
                lea     rdx, stru_10003BC78 ; "选中的固件为 \""
                mov     rdi, r14        ; void *
                xor     eax, eax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_2C], r15d
                mov     r15, rax
                mov     [rbp+var_38], rbx
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_S8BitdoDevice ; void *
                mov     rsi, cs:selRef_getNameWithPid_ ; char *
                mov     edx, r13d
                call    r12 ; _objc_msgSend ; +[S8BitdoDevice getNameWithPid:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, stru_10003BC98 ; "%@\""
                mov     rdi, r15        ; void *
                mov     rbx, cs:selRef_stringByAppendingFormat_
                mov     rsi, rbx        ; char *
                mov     rcx, rax
                xor     eax, eax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                lea     rdx, stru_10003BCB8 ; " 与当前更新的 \""
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                xor     eax, eax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_S8BitdoDevice ; void *
                mov     rsi, cs:selRef_getNameWithPid_ ; char *
                mov     edx, [rbp+var_2C]
                call    r12 ; _objc_msgSend ; +[S8BitdoDevice getNameWithPid:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r14        ; void *
                mov     rsi, rbx        ; char *
                lea     rdx, stru_10003BC98 ; "%@\""
                mov     rcx, rax
                xor     eax, eax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     r15, r14
                lea     rdx, stru_10003BCD8 ; " 不匹配"
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                xor     eax, eax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13
                call    r15
                mov     rbx, [rbp+var_38]

loc_100017A50:                          ; CODE XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+50↑j
                mov     rsi, cs:selRef_setState_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend ; -[UpdateView setState:]
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView firmwaerListVist]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSAlert ; void *
                mov     rsi, cs:selRef_new ; char *
                call    r12 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_addButtonWithTitle_ ; char *
                lea     rdx, cfstr_Error ; "Error"
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     rsi, cs:selRef_setMessageText_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setAlertStyle_ ; char *
                mov     rdi, r15        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_beginSheetModalForWindow_completionHandler_ ; char *
                lea     rcx, off_10003A538
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, r14
                mov     rax, r13
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__UpdateView_SHIDBootErrorNOEqualPID_gamepadType_pid__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100017B33   proc near               ; DATA XREF: __const:000000010003A548↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_100017B33   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootErrorString:msg:](UpdateView *self, SEL, id, id)
__UpdateView_SHIDBootErrorString_msg__ proc near
                                        ; DATA XREF: __objc_const:0000000100040560↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_30], rdi
                mov     r14, cs:classRef_NSAlert
                mov     r12, cs:selRef_new
                mov     rdi, rcx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_38], rax
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Sure ; "sure"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_addButtonWithTitle_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r13
                mov     r13, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     r12, r14
                mov     r14, r15
                mov     rsi, cs:selRef_setMessageText_ ; char *
                mov     rdi, r15        ; void *
                mov     r15, [rbp+var_38]
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rsi, cs:selRef_setAlertStyle_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_beginSheetModalForWindow_completionHandler_ ; char *
                lea     rcx, off_10003A558
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rsi, cs:selRef_setState_ ; char *
                mov     rdi, r13        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend ; -[UpdateView setState:]
                mov     rsi, cs:selRef_firmwaerListVist ; char *
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend ; -[UpdateView firmwaerListVist]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     r15, cs:selRef_updateTimer
                mov     rdi, r13        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                test    r12, r12
                jz      short loc_100017CE3
                mov     rdi, r13        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_invalidate ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setUpdateTimer_ ; char *
                mov     rdi, r13        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend ; -[UpdateView setUpdateTimer:]

loc_100017CE3:                          ; CODE XREF: -[UpdateView SHIDBootErrorString:msg:]+172↑j
                mov     rdi, r14
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__UpdateView_SHIDBootErrorString_msg__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100017CFA   proc near               ; DATA XREF: __const:000000010003A568↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_100017CFA   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView updateingError](UpdateView *self, SEL)
__UpdateView_updateingError_ proc near  ; CODE XREF: -[UpdateView timerOut]+6A↑P
                                        ; -[UpdateView SHIDBootRemoveDevice:hid:]+4D↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_setState_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     edx, 7
                call    r13 ; _objc_msgSend ; -[UpdateView setState:]
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_manualView ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setDevice_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     r12, r14
                mov     rdi, rbx        ; void *
                mov     r14, cs:selRef_manualView
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setError_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView manualView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_addSubview_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     r14, cs:selRef_updateTimer
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    r12
                test    r15, r15
                jz      short loc_100017E50
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[UpdateView updateTimer]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_invalidate ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setUpdateTimer_
                mov     rdi, rbx
                xor     edx, edx
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[UpdateView setUpdateTimer:]
; ---------------------------------------------------------------------------

loc_100017E50:                          ; CODE XREF: -[UpdateView updateingError]+FE↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_updateingError_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SMiniImageViewClick:](UpdateView *self, SEL, id)
__UpdateView_SMiniImageViewClick__ proc near
                                        ; DATA XREF: __objc_const:0000000100040590↓o

var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 58h
                mov     r12, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_38], rax
                mov     rdi, cs:classRef_NSView
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_scrollView ; char *
                mov     rdi, r12        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView scrollView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      short loc_100017ED5
                mov     rdx, cs:selRef_frame
                lea     rdi, [rbp+var_60]
                mov     rsi, r13
                call    _objc_msgSend_stret
                jmp     short loc_100017EE0
; ---------------------------------------------------------------------------

loc_100017ED5:                          ; CODE XREF: -[UpdateView SMiniImageViewClick:]+5F↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_50], xmm0
                movaps  [rbp+var_60], xmm0

loc_100017EE0:                          ; CODE XREF: -[UpdateView SMiniImageViewClick:]+74↑j
                mov     rsi, cs:selRef_setFrame_ ; char *
                movaps  xmm0, [rbp+var_60]
                movaps  xmm1, [rbp+var_50]
                movups  [rsp+80h+var_70], xmm1
                movups  [rsp+80h+var_80], xmm0
                mov     rdi, r15        ; void *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     r13, r12
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_scrollView ; char *
                call    rbx ; _objc_msgSend ; -[UpdateView scrollView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setDocumentView_ ; char *
                mov     rdi, rax        ; void *
                mov     [rbp+var_40], r15
                mov     rdx, r15
                mov     r15, rbx
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_setUpdateFirmwaers_ ; char *
                mov     rdi, r13        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend ; -[UpdateView setUpdateFirmwaers:]
                mov     rsi, cs:selRef_miniImageView ; char *
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                call    r14 ; _objc_release
                mov     rbx, [rbp+var_38]
                cmp     r12, rbx
                jz      short loc_100017F8E
                mov     rsi, cs:selRef_miniRRImageView
                mov     r12, cs:_objc_release_ptr
                jmp     loc_10001806D
; ---------------------------------------------------------------------------

loc_100017F8E:                          ; CODE XREF: -[UpdateView SMiniImageViewClick:]+11A↑j
                mov     rsi, cs:selRef_device
                mov     rdi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setIsManuanlViewRR_
                mov     rdi, rax
                xor     edx, edx
                call    r15
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                call    rax ; _objc_release
                mov     rsi, cs:selRef_miniRRImageView
                mov     rdi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r14, cs:selRef_setIsSelect_
                mov     rdi, rax
                mov     rsi, r14
                xor     edx, edx
                call    r15
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rsi, r14
                mov     edx, 1
                call    r15
                mov     rdi, r13
                mov     rsi, cs:selRef_device
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_details
                mov     rdi, rax
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_type
                mov     rdi, rax
                call    r15
                mov     rsi, cs:selRef_loadUpdateFirmwae_
                mov     rdi, r13
                mov     edx, eax
                call    r15
                mov     rdi, r12
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_release
                mov     r12, r14
                mov     rsi, cs:selRef_miniRRImageView ; char *

loc_10001806D:                          ; CODE XREF: -[UpdateView SMiniImageViewClick:]+12A↑j
                mov     r14, r13
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpdateView miniRRImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                cmp     r15, rbx
                jnz     loc_100018171
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, r14        ; void *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setIsManuanlViewRR_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_miniImageView ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView miniImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:selRef_setIsSelect_
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_device ; char *
                call    r13 ; _objc_msgSend ; -[UpdateView device]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                lea     edx, [rax+1]
                mov     rsi, cs:selRef_loadUpdateFirmwae_ ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView loadUpdateFirmwae:]
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release

loc_100018171:                          ; CODE XREF: -[UpdateView SMiniImageViewClick:]+231↑j
                mov     rdi, [rbp+var_40]
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                add     rsp, 58h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_SMiniImageViewClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootHJZUpdate:device:](UpdateView *self, SEL, id, id)
__UpdateView_SHIDBootHJZUpdate_device__ proc near
                                        ; DATA XREF: __objc_const:00000001000405A8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r14, cs:selRef_delegate
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdx, cs:selRef_addBootDevice_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r13b, r13b
                jz      short loc_10001820F
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_addBootDevice_ ; char *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr

loc_10001820F:                          ; CODE XREF: -[UpdateView SHIDBootHJZUpdate:device:]+53↑j
                mov     rsi, cs:selRef_setBootState_ ; char *
                mov     edx, 1
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView setBootState:]
                mov     rsi, cs:selRef_manualViewRemoveFromSuperView ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[UpdateView manualViewRemoveFromSuperView]
                mov     r14, cs:selRef_state
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[UpdateView state]
                cmp     rax, 3
                jz      short loc_100018268
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 2
                jz      short loc_100018268
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr ; -[UpdateView state]
                cmp     rax, 7
                jnz     short loc_1000182A8

loc_100018268:                          ; CODE XREF: -[UpdateView SHIDBootHJZUpdate:device:]+B5↑j
                                        ; -[UpdateView SHIDBootHJZUpdate:device:]+C7↑j
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r15 ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_readVersion ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
; ---------------------------------------------------------------------------

loc_1000182A8:                          ; CODE XREF: -[UpdateView SHIDBootHJZUpdate:device:]+D9↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__UpdateView_SHIDBootHJZUpdate_device__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView SHIDBootHJZGetVersion:](UpdateView *self, SEL, id)
__UpdateView_SHIDBootHJZGetVersion__ proc near
                                        ; DATA XREF: __objc_const:00000001000405C0↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r15, cs:selRef_version
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                xorps   xmm1, xmm1
                ucomiss xmm0, xmm1
                jnz     short loc_1000182F5
                jnp     loc_10001845E

loc_1000182F5:                          ; CODE XREF: -[UpdateView SHIDBootHJZGetVersion:]+36↑j
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_version ; float m_version;
                movss   dword ptr [r14+rax], xmm0
                mov     rsi, cs:selRef_beta ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, eax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_beta ; float m_beta;
                movss   dword ptr [r14+rax], xmm0
                mov     rsi, cs:selRef_updateFirmwaers ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView updateFirmwaers]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_selectButton ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[UpdateView selectButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_tag ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_version ; char *
                call    cs:_objc_msgSend_ptr
                mov     r15, cs:_OBJC_IVAR_$_UpdateView_m_targerVersion ; float m_targerVersion;
                movss   dword ptr [r14+r15], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_beta ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_targetBeta ; int m_targetBeta;
                mov     [r14+rcx], eax
                mov     rax, cs:_OBJC_IVAR_$_UpdateView_m_beta ; float m_beta;
                cvttss2si eax, dword ptr [r14+rax]
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView_m_version ; float m_version;
                movss   xmm0, dword ptr [r14+rcx]
                movss   xmm1, dword ptr [r14+r15]
                mov     rsi, cs:selRef_getFirmwaerHintVersion_beta_targerVersion_ ; char *
                movzx   edx, ax
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_firmwaerHintLabel ; char *
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend ; -[UpdateView firmwaerHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release

loc_10001845E:                          ; CODE XREF: -[UpdateView SHIDBootHJZGetVersion:]+38↑j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__UpdateView_SHIDBootHJZGetVersion__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; S8BitdoDevice *__cdecl -[UpdateView device](UpdateView *self, SEL)
__UpdateView_device_ proc near          ; CODE XREF: -[UpdateView setminiImageposition:]+93↑P
                                        ; -[UpdateView loadViews]+214↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__device ; S8BitdoDevice *_device;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__UpdateView_device_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int64 __cdecl -[UpdateView state](UpdateView *self, SEL)
__UpdateView_state_ proc near           ; CODE XREF: -[UpdateView loadViews]+1428↑P
                                        ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+27↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__state ; unsigned __int64 _state;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__UpdateView_state_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[UpdateView delegate](UpdateView *self, SEL)
__UpdateView_delegate_ proc near        ; CODE XREF: -[UpdateView SButtonClick:]+28A↑P
                                        ; -[UpdateView SButtonClick:]+2C7↑P ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_UpdateView__delegate ; id _delegate;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__UpdateView_delegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setDelegate:](UpdateView *self, SEL, id)
__UpdateView_setDelegate__ proc near    ; CODE XREF: -[ViewController updateView]+AC↑P
                                        ; DATA XREF: __objc_const:0000000100040620↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_UpdateView__delegate ; id _delegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__UpdateView_setDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[UpdateView isSetNewFirmware](UpdateView *self, SEL)
__UpdateView_isSetNewFirmware_ proc near
                                        ; CODE XREF: -[UpdateView loadViews]+144A↑P
                                        ; -[UpdateView updateStateDowmFirmwaerFile]+43↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__isSetNewFirmware ; char _isSetNewFirmware;
                movsx   eax, byte ptr [rdi+rax]
                pop     rbp
                retn
__UpdateView_isSetNewFirmware_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setIsSetNewFirmware:](UpdateView *self, SEL, char)
__UpdateView_setIsSetNewFirmware__ proc near
                                        ; CODE XREF: -[UpdateView setNewFirmwaer:]+305↑P
                                        ; -[UpdateView removeFromSuperview]+85↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__isSetNewFirmware ; char _isSetNewFirmware;
                mov     [rdi+rax], dl
                pop     rbp
                retn
__UpdateView_setIsSetNewFirmware__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SMiniImageView *__cdecl -[UpdateView miniImageView](UpdateView *self, SEL)
__UpdateView_miniImageView_ proc near   ; CODE XREF: -[UpdateView setDevice:]+85↑P
                                        ; -[UpdateView setminiImageposition:]+22↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__miniImageView ; SMiniImageView *_miniImageView;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_miniImageView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setMiniImageView:](UpdateView *self, SEL, id)
__UpdateView_setMiniImageView__ proc near
                                        ; CODE XREF: -[UpdateView initWithFrame:]+7F↑P
                                        ; DATA XREF: __objc_const:0000000100040680↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__miniImageView ; SMiniImageView *_miniImageView;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setMiniImageView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SMiniImageView *__cdecl -[UpdateView miniRRImageView](UpdateView *self, SEL)
__UpdateView_miniRRImageView_ proc near ; CODE XREF: -[UpdateView setminiImageposition:]+59↑P
                                        ; -[UpdateView setminiImageposition:]+142↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__miniRRImageView ; SMiniImageView *_miniRRImageView;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_miniRRImageView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setMiniRRImageView:](UpdateView *self, SEL, id)
__UpdateView_setMiniRRImageView__ proc near
                                        ; CODE XREF: -[UpdateView initWithFrame:]+118↑P
                                        ; DATA XREF: __objc_const:00000001000406B0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__miniRRImageView ; SMiniImageView *_miniRRImageView;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setMiniRRImageView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[UpdateView isShowMiniRRImage](UpdateView *self, SEL)
__UpdateView_isShowMiniRRImage_ proc near
                                        ; CODE XREF: -[UpdateView loadViews]+E9↑P
                                        ; DATA XREF: __objc_const:00000001000406C8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__isShowMiniRRImage ; char _isShowMiniRRImage;
                movsx   eax, byte ptr [rdi+rax]
                pop     rbp
                retn
__UpdateView_isShowMiniRRImage_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setIsShowMiniRRImage:](UpdateView *self, SEL, char)
__UpdateView_setIsShowMiniRRImage__ proc near
                                        ; CODE XREF: -[UpdateView setminiImageposition:]+D3↑P
                                        ; -[UpdateView setminiImageposition:]+169↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__isShowMiniRRImage ; char _isShowMiniRRImage;
                mov     [rdi+rax], dl
                pop     rbp
                retn
__UpdateView_setIsShowMiniRRImage__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SView *__cdecl -[UpdateView firmwaerListVist](UpdateView *self, SEL)
__UpdateView_firmwaerListVist_ proc near
                                        ; CODE XREF: -[UpdateView loadViews]+513↑P
                                        ; -[UpdateView loadViews]+58D↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__firmwaerListVist ; SView *_firmwaerListVist;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_firmwaerListVist_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setFirmwaerListVist:](UpdateView *self, SEL, id)
__UpdateView_setFirmwaerListVist__ proc near
                                        ; DATA XREF: __objc_const:0000000100040710↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__firmwaerListVist ; SView *_firmwaerListVist;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setFirmwaerListVist__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSScrollView *__cdecl -[UpdateView scrollView](UpdateView *self, SEL)
__UpdateView_scrollView_ proc near      ; CODE XREF: -[UpdateView loadViews]+5BD↑P
                                        ; -[UpdateView SMiniImageViewClick:]+4E↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__scrollView ; NSScrollView *_scrollView;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_scrollView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setScrollView:](UpdateView *self, SEL, id)
__UpdateView_setScrollView__ proc near  ; DATA XREF: __objc_const:0000000100040740↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__scrollView ; NSScrollView *_scrollView;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setScrollView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SView *__cdecl -[UpdateView findNewVersionListView](UpdateView *self, SEL)
__UpdateView_findNewVersionListView_ proc near
                                        ; CODE XREF: -[UpdateView loadViews]+653↑P
                                        ; -[UpdateView loadViews]+719↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__findNewVersionListView ; SView *_findNewVersionListView;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_findNewVersionListView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setFindNewVersionListView:](UpdateView *self, SEL, id)
__UpdateView_setFindNewVersionListView__ proc near
                                        ; DATA XREF: __objc_const:0000000100040770↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__findNewVersionListView ; SView *_findNewVersionListView;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setFindNewVersionListView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[UpdateView findNewVersionLabel](UpdateView *self, SEL)
__UpdateView_findNewVersionLabel_ proc near
                                        ; CODE XREF: -[UpdateView setNewFirmwaer:]+E2↑P
                                        ; -[UpdateView setNewFirmwaer:]+1D8↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__findNewVersionLabel ; SLabel *_findNewVersionLabel;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_findNewVersionLabel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setFindNewVersionLabel:](UpdateView *self, SEL, id)
__UpdateView_setFindNewVersionLabel__ proc near
                                        ; CODE XREF: -[UpdateView initFindNewVersion]+41↑P
                                        ; DATA XREF: __objc_const:00000001000407A0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__findNewVersionLabel ; SLabel *_findNewVersionLabel;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setFindNewVersionLabel__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSTextView *__cdecl -[UpdateView findNewVersionLogTextView](UpdateView *self, SEL)
__UpdateView_findNewVersionLogTextView_ proc near
                                        ; CODE XREF: -[UpdateView setNewFirmwaer:]+259↑P
                                        ; -[UpdateView setNewFirmwaer:]+2A4↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__findNewVersionLogTextView ; NSTextView *_findNewVersionLogTextView;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_findNewVersionLogTextView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setFindNewVersionLogTextView:](UpdateView *self, SEL, id)
__UpdateView_setFindNewVersionLogTextView__ proc near
                                        ; DATA XREF: __objc_const:00000001000407D0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__findNewVersionLogTextView ; NSTextView *_findNewVersionLogTextView;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setFindNewVersionLogTextView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[UpdateView isloadData](UpdateView *self, SEL)
__UpdateView_isloadData_ proc near      ; CODE XREF: -[UpdateView loadViews]+1E↑P
                                        ; DATA XREF: __objc_const:00000001000407E8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__isloadData ; char _isloadData;
                movsx   eax, byte ptr [rdi+rax]
                pop     rbp
                retn
__UpdateView_isloadData_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setIsloadData:](UpdateView *self, SEL, char)
__UpdateView_setIsloadData__ proc near  ; CODE XREF: -[UpdateView loadViews]+42↑P
                                        ; -[UpdateView removeFromSuperview]+94↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__isloadData ; char _isloadData;
                mov     [rdi+rax], dl
                pop     rbp
                retn
__UpdateView_setIsloadData__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSProgressIndicator *__cdecl -[UpdateView progress](UpdateView *self, SEL)
__UpdateView_progress_ proc near        ; CODE XREF: -[UpdateView loadViews]+9B5↑P
                                        ; -[UpdateView AllHidden:]+AC↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__progress ; NSProgressIndicator *_progress;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_progress_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setProgress:](UpdateView *self, SEL, id)
__UpdateView_setProgress__ proc near    ; DATA XREF: __objc_const:0000000100040830↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__progress ; NSProgressIndicator *_progress;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setProgress__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSButton *__cdecl -[UpdateView reloadButton](UpdateView *self, SEL)
__UpdateView_reloadButton_ proc near    ; CODE XREF: -[UpdateView loadViews]+A5D↑P
                                        ; -[UpdateView AllHidden:]+D8↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__reloadButton ; NSButton *_reloadButton;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_reloadButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setReloadButton:](UpdateView *self, SEL, id)
__UpdateView_setReloadButton__ proc near
                                        ; DATA XREF: __objc_const:0000000100040860↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__reloadButton ; NSButton *_reloadButton;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setReloadButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[UpdateView notFirmware](UpdateView *self, SEL)
__UpdateView_notFirmware_ proc near     ; CODE XREF: -[UpdateView loadViews]+D85↑P
                                        ; -[UpdateView loadViews]+DCC↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__notFirmware ; SLabel *_notFirmware;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_notFirmware_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setNotFirmware:](UpdateView *self, SEL, id)
__UpdateView_setNotFirmware__ proc near ; DATA XREF: __objc_const:0000000100040890↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__notFirmware ; SLabel *_notFirmware;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setNotFirmware__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[UpdateView hintLabel](UpdateView *self, SEL)
__UpdateView_hintLabel_ proc near       ; CODE XREF: -[UpdateView loadViews]+B09↑P
                                        ; -[UpdateView loadViews]+B52↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__hintLabel ; SLabel *_hintLabel;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_hintLabel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setHintLabel:](UpdateView *self, SEL, id)
__UpdateView_setHintLabel__ proc near   ; DATA XREF: __objc_const:00000001000408C0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__hintLabel ; SLabel *_hintLabel;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setHintLabel__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[UpdateView firmwaerHintLabel](UpdateView *self, SEL)
__UpdateView_firmwaerHintLabel_ proc near
                                        ; CODE XREF: -[UpdateView loadViews]+1027↑P
                                        ; -[UpdateView loadViews]+107D↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__firmwaerHintLabel ; SLabel *_firmwaerHintLabel;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_firmwaerHintLabel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setFirmwaerHintLabel:](UpdateView *self, SEL, id)
__UpdateView_setFirmwaerHintLabel__ proc near
                                        ; DATA XREF: __objc_const:00000001000408F0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__firmwaerHintLabel ; SLabel *_firmwaerHintLabel;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setFirmwaerHintLabel__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SButton *__cdecl -[UpdateView updateButton](UpdateView *self, SEL)
__UpdateView_updateButton_ proc near    ; CODE XREF: -[UpdateView loadViews]+12B7↑P
                                        ; -[UpdateView AllHidden:]+15C↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__updateButton ; SButton *_updateButton;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_updateButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setUpdateButton:](UpdateView *self, SEL, id)
__UpdateView_setUpdateButton__ proc near
                                        ; DATA XREF: __objc_const:0000000100040920↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__updateButton ; SButton *_updateButton;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setUpdateButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SButton *__cdecl -[UpdateView leftButton](UpdateView *self, SEL)
__UpdateView_leftButton_ proc near      ; CODE XREF: -[UpdateView loadViews]+1343↑P
                                        ; -[UpdateView AllHidden:]+188↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__leftButton ; SButton *_leftButton;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_leftButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setLeftButton:](UpdateView *self, SEL, id)
__UpdateView_setLeftButton__ proc near  ; DATA XREF: __objc_const:0000000100040950↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__leftButton ; SButton *_leftButton;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setLeftButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SButton *__cdecl -[UpdateView rightButton](UpdateView *self, SEL)
__UpdateView_rightButton_ proc near     ; CODE XREF: -[UpdateView loadViews]+13C2↑P
                                        ; -[UpdateView AllHidden:]+1B4↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__rightButton ; SButton *_rightButton;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_rightButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setRightButton:](UpdateView *self, SEL, id)
__UpdateView_setRightButton__ proc near ; DATA XREF: __objc_const:0000000100040980↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__rightButton ; SButton *_rightButton;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setRightButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableArray *__cdecl -[UpdateView updateFirmwaers](UpdateView *self, SEL)
__UpdateView_updateFirmwaers_ proc near ; CODE XREF: -[UpdateView filterVersion:]+4A↑P
                                        ; -[UpdateView filterVersion:]+BA↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__updateFirmwaers ; NSMutableArray *_updateFirmwaers;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_updateFirmwaers_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setUpdateFirmwaers:](UpdateView *self, SEL, id)
__UpdateView_setUpdateFirmwaers__ proc near
                                        ; CODE XREF: -[UpdateView setNewFirmwaer:]+298↑P
                                        ; -[UpdateView removeFromSuperview]+24↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__updateFirmwaers ; NSMutableArray *_updateFirmwaers;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setUpdateFirmwaers__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSButton *__cdecl -[UpdateView selectButton](UpdateView *self, SEL)
__UpdateView_selectButton_ proc near    ; CODE XREF: -[UpdateView macBoot]+B9↑P
                                        ; -[UpdateView chengeboxClick:]+32↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__selectButton ; NSButton *_selectButton;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_selectButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setSelectButton:](UpdateView *self, SEL, id)
__UpdateView_setSelectButton__ proc near
                                        ; CODE XREF: -[UpdateView removeFromSuperview]+76↑P
                                        ; -[UpdateView chengeboxClick:]+D6↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__selectButton ; NSButton *_selectButton;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setSelectButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[UpdateView savePath](UpdateView *self, SEL)
__UpdateView_savePath_ proc near        ; DATA XREF: __objc_const:00000001000409F8↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__savePath ; NSString *_savePath;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_savePath_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setSavePath:](UpdateView *self, SEL, id)
__UpdateView_setSavePath__ proc near    ; DATA XREF: __objc_const:0000000100040A10↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__savePath ; NSString *_savePath;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setSavePath__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDBoot *__cdecl -[UpdateView shidBoot](UpdateView *self, SEL)
__UpdateView_shidBoot_ proc near        ; CODE XREF: -[UpdateView removeFromSuperview]+40↑P
                                        ; DATA XREF: __objc_const:0000000100040A28↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_UpdateView__shidBoot ; SHIDBoot *_shidBoot;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__UpdateView_shidBoot_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setShidBoot:](UpdateView *self, SEL, id)
__UpdateView_setShidBoot__ proc near    ; DATA XREF: __objc_const:0000000100040A40↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_UpdateView__shidBoot ; SHIDBoot *_shidBoot;
                pop     rbp
                jmp     _objc_setProperty_atomic
__UpdateView_setShidBoot__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int64 __cdecl -[UpdateView bootState](UpdateView *self, SEL)
__UpdateView_bootState_ proc near       ; CODE XREF: -[UpdateView bootBoot]+18↑P
                                        ; DATA XREF: __objc_const:0000000100040A58↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__bootState ; unsigned __int64 _bootState;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__UpdateView_bootState_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setBootState:](UpdateView *self, SEL, unsigned __int64)
__UpdateView_setBootState__ proc near   ; CODE XREF: -[UpdateView SHIDBootAddDevice:hid:]+C0↑P
                                        ; -[UpdateView SHIDBootRemoveDevice:hid:]+29↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__bootState ; unsigned __int64 _bootState;
                mov     [rdi+rax], rdx
                pop     rbp
                retn
__UpdateView_setBootState__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __IOHIDDevice *__cdecl -[UpdateView bootDeviceRef](UpdateView *self, SEL)
__UpdateView_bootDeviceRef_ proc near   ; CODE XREF: -[UpdateView bootBoot]+A6↑P
                                        ; -[UpdateView SHIDBootAddDevice:hid:]+CD↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__bootDeviceRef ; __IOHIDDevice *_bootDeviceRef;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__UpdateView_bootDeviceRef_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setBootDeviceRef:](UpdateView *self, SEL, __IOHIDDevice *)
__UpdateView_setBootDeviceRef__ proc near
                                        ; CODE XREF: -[UpdateView SHIDBootAddDevice:hid:]+AE↑P
                                        ; -[UpdateView SHIDBootRemoveDevice:hid:]+1A↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__bootDeviceRef ; __IOHIDDevice *_bootDeviceRef;
                mov     [rdi+rax], rdx
                pop     rbp
                retn
__UpdateView_setBootDeviceRef__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setManualView:](UpdateView *self, SEL, id)
__UpdateView_setManualView__ proc near  ; DATA XREF: __objc_const:0000000100040AB8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_UpdateView__manualView ; DeviceManualView *_manualView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__UpdateView_setManualView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSTimer *__cdecl -[UpdateView updateTimer](UpdateView *self, SEL)
__UpdateView_updateTimer_ proc near     ; CODE XREF: -[UpdateView initTimer]+1B↑P
                                        ; -[UpdateView initTimer]+C6↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__updateTimer ; NSTimer *_updateTimer;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__UpdateView_updateTimer_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setUpdateTimer:](UpdateView *self, SEL, id)
__UpdateView_setUpdateTimer__ proc near ; CODE XREF: -[UpdateView initTimer]+94↑P
                                        ; -[UpdateView SHIDBootStartUpdateed:]+20E↑P ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_UpdateView__updateTimer ; NSTimer *_updateTimer;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__UpdateView_setUpdateTimer__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; signed __int64 __cdecl -[UpdateView lastTimer](UpdateView *self, SEL)
__UpdateView_lastTimer_ proc near       ; CODE XREF: -[UpdateView timerOut]+18↑P
                                        ; -[UpdateView timerOut]+47↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__lastTimer ; signed __int64 _lastTimer;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__UpdateView_lastTimer_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView setLastTimer:](UpdateView *self, SEL, signed __int64)
__UpdateView_setLastTimer__ proc near   ; CODE XREF: -[UpdateView loadUpdateFirmwae]+24↑P
                                        ; -[UpdateView loadUpdateFirmwae:]+26↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_UpdateView__lastTimer ; signed __int64 _lastTimer;
                mov     [rdi+rax], rdx
                pop     rbp
                retn
__UpdateView_setLastTimer__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpdateView .cxx_destruct](UpdateView *self, SEL)
__UpdateView__cxx_destruct_ proc near   ; DATA XREF: __objc_const:0000000100040B30↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__updateTimer ; NSTimer *_updateTimer;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__manualView ; DeviceManualView *_manualView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__shidBoot ; SHIDBoot *_shidBoot;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__savePath ; NSString *_savePath;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__selectButton ; NSButton *_selectButton;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__updateFirmwaers ; NSMutableArray *_updateFirmwaers;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__rightButton ; SButton *_rightButton;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__leftButton ; SButton *_leftButton;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__updateButton ; SButton *_updateButton;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__firmwaerHintLabel ; SLabel *_firmwaerHintLabel;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__hintLabel ; SLabel *_hintLabel;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__notFirmware ; SLabel *_notFirmware;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__reloadButton ; NSButton *_reloadButton;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__progress ; NSProgressIndicator *_progress;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__findNewVersionLogTextView ; NSTextView *_findNewVersionLogTextView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__findNewVersionLabel ; SLabel *_findNewVersionLabel;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__findNewVersionListView ; SView *_findNewVersionListView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__scrollView ; NSScrollView *_scrollView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__firmwaerListVist ; SView *_firmwaerListVist;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__miniRRImageView ; SMiniImageView *_miniRRImageView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__miniImageView ; SMiniImageView *_miniImageView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_UpdateView__delegate ; id _delegate;
                add     rdi, rbx
                call    _objc_destroyWeak
                add     rbx, cs:_OBJC_IVAR_$_UpdateView__device ; S8BitdoDevice *_device;
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__UpdateView__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SMiniImageView *__cdecl -[SMiniImageView initWithFrame:](SMiniImageView *self, SEL, CGRect)
__SMiniImageView_initWithFrame__ proc near
                                        ; DATA XREF: __objc_const:0000000100041290↓o

var_40          = xmmword ptr -40h
var_30          = xmmword ptr -30h
var_18          = qword ptr -18h
anonymous_0     = qword ptr -10h
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 38h
                lea     rax, [rbp+var_18]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SMiniImageView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_initWithFrame_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+40h+var_30], xmm1
                movups  [rsp+40h+var_40], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      short loc_100018A92
                mov     rsi, cs:selRef_updateTrackingAreas ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SMiniImageView updateTrackingAreas]

loc_100018A92:                          ; CODE XREF: -[SMiniImageView initWithFrame:]+41↑j
                mov     rax, rbx
                add     rsp, 38h
                pop     rbx
                pop     rbp
                retn
__SMiniImageView_initWithFrame__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView setIsSelect:](SMiniImageView *self, SEL, bool)
__SMiniImageView_setIsSelect__ proc near
                                        ; DATA XREF: __objc_const:00000001000412A8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r12d, edx
                mov     rbx, rdi
                mov     rax, cs:_OBJC_IVAR_$_SMiniImageView__isSelect ; bool _isSelect;
                mov     [rdi+rax], r12b
                mov     r15, cs:selRef_layer
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setBorderWidth_ ; char *
                test    r12d, r12d
                jz      loc_100018B87
                mov     r13, cs:_objc_msgSend_ptr
                movsd   xmm0, cs:qword_10002EFF8
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithSRGBRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002F240
                movsd   xmm1, cs:qword_10002F248
                movsd   xmm2, cs:qword_10002F128
                movsd   xmm3, cs:qword_10002EFF8
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setBorderColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                jmp     short loc_100018B93
; ---------------------------------------------------------------------------

loc_100018B87:                          ; CODE XREF: -[SMiniImageView setIsSelect:]+44↑j
                xorps   xmm0, xmm0
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr

loc_100018B93:                          ; CODE XREF: -[SMiniImageView setIsSelect:]+E9↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__SMiniImageView_setIsSelect__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView updateTrackingAreas](SMiniImageView *self, SEL)
__SMiniImageView_updateTrackingAreas_ proc near
                                        ; CODE XREF: -[SMiniImageView initWithFrame:]+4D↑P
                                        ; DATA XREF: __objc_const:00000001000412C0↓o

var_140         = xmmword ptr -140h
var_130         = xmmword ptr -130h
var_120         = qword ptr -120h
anonymous_3     = qword ptr -118h
anonymous_0     = qword ptr -110h
anonymous_4     = qword ptr -108h
var_100         = xmmword ptr -100h
var_F0          = xmmword ptr -0F0h
anonymous_1     = xmmword ptr -0E0h
anonymous_2     = xmmword ptr -0D0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 118h
                mov     r14, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_trackingAreas ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rdx, [rbp+var_100]
                movaps  xmmword ptr [rdx], xmm0
                movaps  xmmword ptr [rdx+10h], xmm0
                movaps  xmmword ptr [rdx+20h], xmm0
                movaps  xmmword ptr [rdx+30h], xmm0
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                test    rax, rax
                jz      loc_100018CAA
                mov     r15, rax
                lea     rax, [rbp+var_100]
                mov     rax, [rax+10h]
                mov     r13, [rax]

loc_100018C3A:                          ; CODE XREF: -[SMiniImageView updateTrackingAreas]+FE↓j
                mov     r12, cs:selRef_removeTrackingArea_
                xor     ebx, ebx

loc_100018C43:                          ; CODE XREF: -[SMiniImageView updateTrackingAreas]+CE↓j
                mov     rax, qword ptr [rbp+var_F0]
                cmp     [rax], r13
                jz      short loc_100018C5B
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_100018C5B:                          ; CODE XREF: -[SMiniImageView updateTrackingAreas]+A3↑j
                mov     rax, qword ptr [rbp+var_100+8]
                mov     rdx, [rax+rbx*8]
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                inc     rbx
                cmp     r15, rbx
                jnz     short loc_100018C43
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_100]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r15, rax
                test    rax, rax
                jnz     short loc_100018C3A

loc_100018CAA:                          ; CODE XREF: -[SMiniImageView updateTrackingAreas]+79↑j
                mov     rdi, cs:classRef_NSTrackingArea
                call    _objc_alloc
                mov     r15, rax
                mov     rdx, cs:selRef_bounds
                lea     r12, [rbp+var_120]
                mov     rdi, r12
                mov     rsi, r14
                call    _objc_msgSend_stret
                mov     rsi, cs:selRef_initWithRect_options_owner_userInfo_ ; char *
                movups  xmm0, xmmword ptr [r12]
                movups  xmm1, xmmword ptr [r12+10h]
                movups  [rsp+140h+var_130], xmm1
                movups  [rsp+140h+var_140], xmm0
                mov     edx, 347h
                mov     rdi, r15        ; void *
                mov     rcx, r14
                xor     r8d, r8d
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_addTrackingArea_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_B8]
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100018D4D
                add     rsp, 118h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100018D4D:                          ; CODE XREF: -[SMiniImageView updateTrackingAreas]+18F↑j
                call    ___stack_chk_fail
__SMiniImageView_updateTrackingAreas_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView drawRect:](SMiniImageView *self, SEL, CGRect)
__SMiniImageView_drawRect__ proc near   ; DATA XREF: __objc_const:00000001000412D8↓o

var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
anonymous_0     = qword ptr -8
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                lea     rax, [rbp+var_10]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SMiniImageView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_drawRect_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+30h+var_20], xmm1
                movups  [rsp+30h+var_30], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                add     rsp, 30h
                pop     rbp
                retn
__SMiniImageView_drawRect__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView mouseDown:](SMiniImageView *self, SEL, id)
__SMiniImageView_mouseDown__ proc near  ; DATA XREF: __objc_const:00000001000412F0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_isClick ; char *
                call    cs:_objc_msgSend_ptr ; -[SMiniImageView isClick]
                test    al, al
                jz      loc_100018E52
                mov     rsi, cs:selRef_isSelect ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SMiniImageView isSelect]
                test    al, al
                jnz     loc_100018E52
                mov     r14, cs:selRef_delegate
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[SMiniImageView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdx, cs:selRef_SMiniImageViewClick_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r13b, r13b
                jz      short loc_100018E44
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[SMiniImageView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SMiniImageViewClick_ ; char *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr

loc_100018E44:                          ; CODE XREF: -[SMiniImageView mouseDown:]+83↑j
                lea     rdi, cfstr_Mousedown ; "mouseDown-"
                xor     eax, eax
                call    _NSLog

loc_100018E52:                          ; CODE XREF: -[SMiniImageView mouseDown:]+20↑j
                                        ; -[SMiniImageView mouseDown:]+38↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SMiniImageView_mouseDown__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView mouseEntered:](SMiniImageView *self, SEL, id)
__SMiniImageView_mouseEntered__ proc near
                                        ; DATA XREF: __objc_const:0000000100041308↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_isClick ; char *
                call    cs:_objc_msgSend_ptr ; -[SMiniImageView isClick]
                test    al, al
                jz      loc_100018F71
                mov     rsi, cs:selRef_isSelect ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SMiniImageView isSelect]
                test    al, al
                jnz     loc_100018F71
                mov     rsi, cs:selRef_layer ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setBorderWidth_ ; char *
                movsd   xmm0, cs:qword_10002EFF8
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithSRGBRed_green_blue_alpha_ ; char *
                movsd   xmm1, cs:qword_10002F250
                movsd   xmm2, cs:qword_10002F148
                xorps   xmm0, xmm0
                movsd   xmm3, cs:qword_10002EFF8
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r15, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_layer ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setBorderColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                lea     rdi, cfstr_Mouseentered ; "mouseEntered-"
                xor     eax, eax
                call    _NSLog

loc_100018F71:                          ; CODE XREF: -[SMiniImageView mouseEntered:]+20↑j
                                        ; -[SMiniImageView mouseEntered:]+38↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SMiniImageView_mouseEntered__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView mouseExited:](SMiniImageView *self, SEL, id)
__SMiniImageView_mouseExited__ proc near
                                        ; DATA XREF: __objc_const:0000000100041320↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rsi, cs:selRef_isClick ; char *
                call    cs:_objc_msgSend_ptr ; -[SMiniImageView isClick]
                test    al, al
                jz      short loc_100018FF5
                mov     rsi, cs:selRef_isSelect ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SMiniImageView isSelect]
                test    al, al
                jnz     short loc_100018FF5
                mov     rsi, cs:selRef_layer ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setBorderWidth_ ; char *
                xorps   xmm0, xmm0
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                lea     rdi, cfstr_Mouseexited ; "mouseExited-"
                xor     eax, eax
                call    _NSLog

loc_100018FF5:                          ; CODE XREF: -[SMiniImageView mouseExited:]+19↑j
                                        ; -[SMiniImageView mouseExited:]+2D↑j
                pop     rbx
                pop     r14
                pop     rbp
                retn
__SMiniImageView_mouseExited__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool __cdecl -[SMiniImageView isSelect](SMiniImageView *self, SEL)
__SMiniImageView_isSelect_ proc near    ; CODE XREF: -[SMiniImageView mouseDown:]+30↑P
                                        ; -[SMiniImageView mouseEntered:]+30↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SMiniImageView__isSelect ; bool _isSelect;
                mov     al, [rdi+rax]
                pop     rbp
                retn
__SMiniImageView_isSelect_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool __cdecl -[SMiniImageView isClick](SMiniImageView *self, SEL)
__SMiniImageView_isClick_ proc near     ; CODE XREF: -[SMiniImageView mouseDown:]+18↑P
                                        ; -[SMiniImageView mouseEntered:]+18↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SMiniImageView__isClick ; bool _isClick;
                mov     al, [rdi+rax]
                pop     rbp
                retn
__SMiniImageView_isClick_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView setIsClick:](SMiniImageView *self, SEL, bool)
__SMiniImageView_setIsClick__ proc near ; DATA XREF: __objc_const:0000000100041368↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SMiniImageView__isClick ; bool _isClick;
                mov     [rdi+rax], dl
                pop     rbp
                retn
__SMiniImageView_setIsClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SMiniImageViewDelegate *__cdecl -[SMiniImageView delegate](SMiniImageView *self, SEL)
__SMiniImageView_delegate_ proc near    ; CODE XREF: -[SMiniImageView mouseDown:]+52↑P
                                        ; -[SMiniImageView mouseDown:]+8B↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SMiniImageView__delegate ; SMiniImageViewDelegate *_delegate;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SMiniImageView_delegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView setDelegate:](SMiniImageView *self, SEL, id)
__SMiniImageView_setDelegate__ proc near
                                        ; DATA XREF: __objc_const:0000000100041398↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SMiniImageView__delegate ; SMiniImageViewDelegate *_delegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__SMiniImageView_setDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SMiniImageView .cxx_destruct](SMiniImageView *self, SEL)
__SMiniImageView__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:00000001000413B0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SMiniImageView__delegate ; SMiniImageViewDelegate *_delegate;
                pop     rbp
                jmp     _objc_destroyWeak
__SMiniImageView__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

                public start
start           proc near
                push    rbp
                mov     rbp, rsp
                pop     rbp
                jmp     _NSApplicationMain
start           endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100019072   proc near               ; DATA XREF: sub_100019669+135↓o

var_130         = xmmword ptr -130h
var_120         = xmmword ptr -120h
anonymous_0     = xmmword ptr -110h
anonymous_1     = xmmword ptr -100h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_BC          = dword ptr -0BCh
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 108h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                movzx   eax, byte ptr [r9]
                cmp     eax, 1
                jz      short loc_1000190AD
                cmp     eax, 81h
                jz      short loc_1000190AD
                cmp     eax, 5
                jnz     loc_10001944A

loc_1000190AD:                          ; CODE XREF: sub_100019072+29↑j
                                        ; sub_100019072+30↑j
                cmp     byte ptr [r9+1], 66h
                jnz     loc_10001944A
                mov     [rbp+var_B8], rdi
                mov     [rbp+var_F0], rdx
                mov     [rbp+var_D0], r9
                movzx   ebx, word ptr [r9+3]
                mov     rdi, cs:classRef_S8BitdoDeviceDetailsTools ; void *
                mov     rsi, cs:selRef_get8BitdoDevicePIDVIDAndNAMEs ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[S8BitdoDeviceDetailsTools get8BitdoDevicePIDVIDAndNAMEs]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_S8BitdoDataDetails
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r14, rax
                xorps   xmm0, xmm0
                lea     r15, [rbp+var_130]
                movaps  xmmword ptr [r15], xmm0
                movaps  xmmword ptr [r15+10h], xmm0
                movaps  xmmword ptr [r15+20h], xmm0
                movaps  xmmword ptr [r15+30h], xmm0
                mov     rdi, r12
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_E0], rax
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      loc_100019251
                mov     r15, rax
                mov     [rbp+var_C8], r14
                rol     bx, 8
                movzx   eax, bx
                mov     dword ptr [rbp+var_E8], eax
                lea     rax, [rbp+var_130]
                mov     rax, [rax+10h]
                mov     rbx, [rax]
                mov     [rbp+var_D8], 0

loc_100019194:                          ; CODE XREF: sub_100019072+1C5↓j
                mov     r12, cs:selRef_pid
                xor     r14d, r14d

loc_10001919E:                          ; CODE XREF: sub_100019072+195↓j
                mov     rax, qword ptr [rbp+var_120]
                cmp     [rax], rbx
                jz      short loc_1000191B6
                mov     rdi, [rbp+var_E0]
                call    _objc_enumerationMutation

loc_1000191B6:                          ; CODE XREF: sub_100019072+136↑j
                mov     rax, qword ptr [rbp+var_130+8]
                mov     r13, [rax+r14*8]
                mov     rdi, r13        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     dword ptr [rbp+var_E8], eax
                jnz     short loc_100019201
                mov     rdi, r13
                call    cs:_objc_retain_ptr
                mov     r13, rax
                mov     rdi, [rbp+var_C8]
                call    cs:_objc_release_ptr
                mov     al, 1
                mov     [rbp+var_D8], rax
                mov     [rbp+var_C8], r13

loc_100019201:                          ; CODE XREF: sub_100019072+164↑j
                inc     r14
                cmp     r15, r14
                jnz     short loc_10001919E
                mov     r8d, 10h
                mov     rdi, [rbp+var_E0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_130]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r15, rax
                test    rax, rax
                jnz     loc_100019194
                cmp     byte ptr [rbp+var_D8], 0
                setz    r13b
                mov     r14, [rbp+var_C8]
                jmp     short loc_100019254
; ---------------------------------------------------------------------------

loc_100019251:                          ; CODE XREF: sub_100019072+EC↑j
                mov     r13b, 1

loc_100019254:                          ; CODE XREF: sub_100019072+1DD↑j
                mov     rdi, [rbp+var_E0]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     rsi, cs:selRef_getDeviceWithRef_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, [rbp+var_F0]
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                mov     rbx, [rbp+var_D0]
                jz      loc_10001942B
                mov     byte ptr [rbp+var_D8], r13b
                mov     [rbp+var_E8], r15
                mov     rsi, cs:selRef_setDetails_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, r14
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                movzx   eax, word ptr [rbx+6]
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, eax
                divss   xmm0, cs:dword_10002F040
                mov     rsi, cs:selRef_setVersion_ ; char *
                mov     rdi, r12        ; void *
                call    r13 ; _objc_msgSend
                movzx   edx, word ptr [rbx+8]
                mov     rsi, cs:selRef_setBeta_ ; char *
                mov     rdi, r12        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, r12        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_pid ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 3100h
                jz      loc_1000193CB
                mov     [rbp+var_C8], r14
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_details ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r14 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 3104h
                jz      short loc_1000193BB
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_details ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r14 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 3010h
                mov     r14, cs:selRef_details
                jnz     loc_100019470
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr

loc_1000193BB:                          ; CODE XREF: sub_100019072+2F5↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r14, [rbp+var_C8]

loc_1000193CB:                          ; CODE XREF: sub_100019072+2B4↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_1000193D4:                          ; CODE XREF: sub_100019072+471↓j
                movsx   edx, byte ptr [rbx+0Ah]
                mov     r15, cs:selRef_setIsChangeBoot_
                mov     rdi, r12        ; void *
                mov     rsi, r15        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, r12        ; void *
                mov     rsi, r15        ; char *
                mov     edx, 1
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_deviceRef ; char *
                mov     rdi, r12        ; void *
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_changeDinput_ ; char *
                mov     r15, [rbp+var_E8]
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, r12        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend

loc_10001942B:                          ; CODE XREF: sub_100019072+22B↑j
                                        ; sub_100019072+570↓j ...
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_E0]
                call    rbx ; _objc_release

loc_10001944A:                          ; CODE XREF: sub_100019072+35↑j
                                        ; sub_100019072+40↑j
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     loc_100019664
                add     rsp, 108h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100019470:                          ; CODE XREF: sub_100019072+336↑j
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r14 ; _objc_msgSend
                movzx   eax, ax
                mov     [rbp+var_BC], eax
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_B8]
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                cmp     [rbp+var_BC], 3105h
                mov     rbx, [rbp+var_D0]
                mov     rsi, cs:selRef_details ; char *
                mov     r14, [rbp+var_C8]
                jz      loc_1000193D4
                mov     rdi, r12        ; void *
                mov     r13, rsi
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    rbx ; _objc_msgSend
                movzx   ebx, ax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                cmp     ebx, 3101h
                mov     rbx, [rbp+var_D0]
                jnz     short loc_10001953E
                movsx   edx, byte ptr [rbx+0Ah]
                mov     rsi, cs:selRef_setIsChangeBoot_ ; char *
                mov     rdi, r12        ; void *
                call    cs:_objc_msgSend_ptr

loc_10001953E:                          ; CODE XREF: sub_100019072+4B6↑j
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 6002h
                jz      short loc_1000195B0
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 6000h
                jnz     short loc_1000195FD
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr

loc_1000195B0:                          ; CODE XREF: sub_100019072+4FC↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_1000195B9:                          ; CODE XREF: sub_100019072+5E7↓j
                movzx   edx, word ptr [rbx+0Ah]
                mov     rsi, cs:selRef_setBootVersion_ ; char *
                mov     rdi, r12        ; void *
                call    cs:_objc_msgSend_ptr

loc_1000195CD:                          ; CODE XREF: sub_100019072+5ED↓j
                cmp     byte ptr [rbp+var_D8], 0
                mov     rdx, [rbp+var_F0]
                mov     r15, [rbp+var_E8]
                jnz     loc_10001942B
                mov     rsi, cs:selRef_addS8BitdoDeviceRefreshUI_ ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                jmp     loc_10001942B
; ---------------------------------------------------------------------------

loc_1000195FD:                          ; CODE XREF: sub_100019072+52F↑j
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                mov     [rbp+var_BC], eax
                mov     rdi, rbx
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, [rbp+var_B8]
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                cmp     [rbp+var_BC], 6001h
                mov     rbx, [rbp+var_D0]
                jz      loc_1000195B9
                jmp     loc_1000195CD
; ---------------------------------------------------------------------------

loc_100019664:                          ; CODE XREF: sub_100019072+3E6↑j
                call    ___stack_chk_fail
sub_100019072   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100019669   proc near               ; DATA XREF: -[SHIDSwitchAndMac open]+29A↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rbx, rcx
                mov     r14, rdi
                mov     rdi, rcx
                call    sub_10002DB0C
                mov     r12, rax
                mov     rdi, rbx
                call    sub_10002DBB9
                mov     r13, rax
                mov     r15, cs:classRef_S8BitdoDevice
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     rdi, r15
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r14, r15
                mov     r15, rax
                mov     rsi, cs:selRef_setPid_
                mov     ecx, 0FFFFh
                and     r13d, ecx
                mov     rdi, rax
                mov     edx, r13d
                call    r14
                mov     rsi, cs:selRef_setVid_
                mov     eax, 0FFFFh
                and     r12d, eax
                mov     rdi, r15
                mov     edx, r12d
                call    r14
                lea     rsi, cfstr_Product ; "Product"
                mov     rdi, rbx
                call    _IOHIDDeviceGetProperty
                mov     rsi, cs:selRef_setDeviceName_
                mov     rdi, r15
                mov     rdx, rax
                call    r14
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, r15        ; void *
                mov     r14, r15
                mov     [rbp+var_38], r15
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_devices ; char *
                mov     rdi, [rbp+var_30] ; void *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r15
                mov     r15, rax
                mov     rsi, cs:selRef_addObject_
                mov     rdi, rax
                mov     rdx, r14
                call    rcx
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                xor     esi, esi
                call    _IOHIDDeviceOpen
                lea     rax, _OBJC_IVAR_$_SHIDManager_gpReportBufB ; unsigned __int8 gpReportBufB[64];
                mov     rsi, [rax]
                mov     r15, [rbp+var_30]
                add     rsi, r15
                lea     rax, _OBJC_IVAR_$_SHIDManager_reportSizeIn ; unsigned __int8 reportSizeIn;
                mov     rax, [rax]
                movzx   edx, byte ptr [r15+rax]
                lea     rcx, sub_100019072
                mov     rdi, rbx
                mov     r8, r15
                call    _IOHIDDeviceRegisterInputReportCallback
                mov     eax, r13d
                xor     eax, 2009h
                mov     ecx, r12d
                xor     ecx, 57Eh
                xor     r13d, 5C4h
                xor     r12d, 54Ch
                xor     edx, edx
                or      r12d, r13d
                setz    dl
                or      ecx, eax
                lea     eax, [rdx+rdx*4]
                mov     r12d, 1
                cmovnz  r12d, eax
                mov     rsi, cs:selRef_stopChangeMode_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                mov     esi, 97h
                mov     edx, 21h
                mov     ecx, r12d
                call    setReport151
                mov     rdi, rbx
                mov     esi, 97h
                mov     edx, 21h
                mov     ecx, r12d
                call    setReport151
                mov     rdi, rbx
                mov     esi, 97h
                mov     edx, 21h
                mov     ecx, r12d
                call    setReport151
                mov     rdi, [rbp+var_38]
                mov     rax, r14
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100019669   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100019855   proc near               ; DATA XREF: -[SHIDSwitchAndMac open]+2B4↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rcx
                mov     cs:byte_100075D21, 1
                mov     r14, cs:selRef_remove8BitdoDeviceRefreshUI_
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_getDeviceWithRef_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100019855   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDSwitchAndMac open](SHIDSwitchAndMac *self, SEL)
__SHIDSwitchAndMac_open_ proc near      ; DATA XREF: __objc_const:0000000100041520↓o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r14, rdi
                mov     [rbp+var_40], rdi
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                xor     esi, esi
                call    _IOHIDManagerCreate
                mov     rsi, cs:selRef_setHidManager_ ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend ; -[SHIDManager setHidManager:]
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                mov     edx, 2009h
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     r14, cs:selRef_stringWithUTF8String_
                lea     rdx, aProductid ; "ProductID"
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, r15
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 57Eh
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, aVendorid  ; "VendorID"
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r12        ; void *
                mov     r14, r12
                mov     [rbp+var_38], r12
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r15
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 5C4h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aProductid ; "ProductID"
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r13
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 54Ch
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aVendorid  ; "VendorID"
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r15        ; void *
                mov     [rbp+var_30], r15
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r12
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_ ; char *
                mov     rdx, r14
                mov     rcx, r15
                xor     r8d, r8d
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:selRef_hidManager
                mov     r15, [rbp+var_40]
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                mov     rsi, r12
                call    _IOHIDManagerSetDeviceMatchingMultiple
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     r14, rax
                call    _CFRunLoopGetCurrent
                mov     rcx, cs:_kCFRunLoopDefaultMode_ptr
                mov     rdx, [rcx]
                mov     rdi, r14
                mov     rsi, rax
                call    _IOHIDManagerScheduleWithRunLoop
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                xor     esi, esi
                call    _IOHIDManagerOpen
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                lea     rsi, sub_100019669
                mov     rdi, rax
                mov     rdx, r15
                call    _IOHIDManagerRegisterDeviceMatchingCallback
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                lea     rsi, sub_100019855
                mov     rdi, rax
                mov     rdx, r15
                call    _IOHIDManagerRegisterDeviceRemovalCallback
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_38]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SHIDSwitchAndMac_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHIDSwitchAndMac boot:](SHIDSwitchAndMac_meta *self, SEL, __IOHIDDevice *)
__SHIDSwitchAndMac_boot__ proc near     ; DATA XREF: __objc_const:00000001000414B8↓o
                push    rbp
                mov     rbp, rsp
                test    rdx, rdx
                jz      short loc_100019BE9
                mov     rdi, rdx
                mov     esi, 97h
                mov     edx, 50h
                mov     ecx, 5
                pop     rbp
                jmp     setReport151
; ---------------------------------------------------------------------------

loc_100019BE9:                          ; CODE XREF: +[SHIDSwitchAndMac boot:]+7↑j
                pop     rbp
                retn
__SHIDSwitchAndMac_boot__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDSwitchAndMac stopChangeMode:](SHIDSwitchAndMac *self, SEL, __IOHIDDevice *)
__SHIDSwitchAndMac_stopChangeMode__ proc near
                                        ; DATA XREF: __objc_const:0000000100041538↓o

var_50          = xmmword ptr -50h
anonymous_2     = xmmword ptr -40h
anonymous_1     = xmmword ptr -30h
anonymous_0     = xmmword ptr -20h
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                mov     rdi, rdx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                movaps  xmm0, cs:xmmword_10002F290
                lea     rsi, [rbp+var_50]
                movaps  xmmword ptr [rsi+30h], xmm0
                movaps  xmm0, cs:xmmword_10002F280
                movaps  xmmword ptr [rsi+20h], xmm0
                movaps  xmm0, cs:xmmword_10002F270
                movaps  xmmword ptr [rsi+10h], xmm0
                movaps  xmm0, cs:xmmword_10002F260
                movaps  xmmword ptr [rsi], xmm0
                mov     edx, 40h
                call    setReportOneFrame
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_8]
                jnz     short loc_100019C53
                add     rsp, 50h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100019C53:                          ; CODE XREF: -[SHIDSwitchAndMac stopChangeMode:]+60↑j
                call    ___stack_chk_fail
__SHIDSwitchAndMac_stopChangeMode__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDSwitchAndMac changeDinput:](SHIDSwitchAndMac *self, SEL, __IOHIDDevice *)
__SHIDSwitchAndMac_changeDinput__ proc near
                                        ; DATA XREF: __objc_const:0000000100041550↓o

var_60          = xmmword ptr -60h
anonymous_2     = xmmword ptr -50h
anonymous_1     = xmmword ptr -40h
anonymous_0     = xmmword ptr -30h
var_18          = qword ptr -18h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 50h
                mov     rbx, rdx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_18], rax
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_60]
                movaps  xmmword ptr [r14], xmm0
                movaps  xmmword ptr [r14+30h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                mov     word ptr [r14], 6601h
                mov     byte ptr [r14+2], 0AAh
                mov     word ptr [r14+4], 151h
                mov     rdi, rdx
                mov     rsi, r14
                mov     edx, 40h
                call    setReportOneFrame
                mov     rdi, rbx
                mov     rsi, r14
                mov     edx, 40h
                call    setReportOneFrame
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_18]
                jnz     short loc_100019CD9
                add     rsp, 50h
                pop     rbx
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100019CD9:                          ; CODE XREF: -[SHIDSwitchAndMac changeDinput:]+76↑j
                call    ___stack_chk_fail
__SHIDSwitchAndMac_changeDinput__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDSwitchAndMac addS8BitdoDeviceRefreshUI:](SHIDSwitchAndMac *self, SEL, __IOHIDDevice *)
__SHIDSwitchAndMac_addS8BitdoDeviceRefreshUI__ proc near
                                        ; DATA XREF: __objc_const:0000000100041568↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     r14, rdi
                mov     rsi, cs:selRef_delegate ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_addS8BitdoDevice_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      short loc_100019D99
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_delegate ; char *
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_getDeviceWithRef_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend ; -[SHIDSwitchAndMac getDeviceWithRef:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_addS8BitdoDevice_ ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                mov     rax, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100019D99:                          ; CODE XREF: -[SHIDSwitchAndMac addS8BitdoDeviceRefreshUI:]+53↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDSwitchAndMac_addS8BitdoDeviceRefreshUI__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDSwitchAndMac remove8BitdoDeviceRefreshUI:](SHIDSwitchAndMac *self, SEL, __IOHIDDevice *)
__SHIDSwitchAndMac_remove8BitdoDeviceRefreshUI__ proc near
                                        ; DATA XREF: __objc_const:0000000100041580↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     r14, rdi
                mov     rsi, cs:selRef_delegate ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_removeS8BitdoDevice_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      short loc_100019E63
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_delegate ; char *
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_getDeviceWithRef_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend ; -[SHIDSwitchAndMac getDeviceWithRef:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_removeS8BitdoDevice_ ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                mov     rax, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100019E63:                          ; CODE XREF: -[SHIDSwitchAndMac remove8BitdoDeviceRefreshUI:]+53↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDSwitchAndMac_remove8BitdoDeviceRefreshUI__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDSwitchAndMac getDeviceWithRef:](SHIDSwitchAndMac *self, SEL, __IOHIDDevice *)
__SHIDSwitchAndMac_getDeviceWithRef__ proc near
                                        ; CODE XREF: -[SHIDSwitchAndMac addS8BitdoDeviceRefreshUI:]+7A↑P
                                        ; -[SHIDSwitchAndMac remove8BitdoDeviceRefreshUI:]+7A↑P
                                        ; DATA XREF: ...

var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
anonymous_0     = xmmword ptr -0F0h
anonymous_1     = xmmword ptr -0E0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0E8h
                mov     [rbp+var_C8], rdx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_110]
                movaps  xmmword ptr [r14], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+30h], xmm0
                mov     rsi, cs:selRef_devices ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[SHIDManager devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                test    rax, rax
                jz      loc_100019FB7
                mov     r13, rax
                lea     rax, [rbp+var_110]
                mov     rax, [rax+10h]
                mov     r12, [rax]
                mov     [rbp+var_B8], 0

loc_100019F18:                          ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+13D↓j
                mov     r15, cs:selRef_deviceRef
                xor     ebx, ebx

loc_100019F21:                          ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+10D↓j
                mov     rax, qword ptr [rbp+var_100]
                cmp     [rax], r12
                jz      short loc_100019F39
                mov     rdi, [rbp+var_C0]
                call    _objc_enumerationMutation

loc_100019F39:                          ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+B9↑j
                mov     rax, qword ptr [rbp+var_110+8]
                mov     r14, [rax+rbx*8]
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, [rbp+var_C8]
                jnz     short loc_100019F79
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr
                mov     [rbp+var_B8], r14

loc_100019F79:                          ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+E5↑j
                inc     rbx
                cmp     r13, rbx
                jnz     short loc_100019F21
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_110]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                test    rax, rax
                jnz     loc_100019F18
                jmp     short loc_100019FC2
; ---------------------------------------------------------------------------

loc_100019FB7:                          ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+84↑j
                mov     [rbp+var_B8], 0

loc_100019FC2:                          ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+143↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100019FFC
                mov     rdi, [rbp+var_B8]
                add     rsp, 0E8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100019FFC:                          ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+16B↑j
                call    ___stack_chk_fail
__SHIDSwitchAndMac_getDeviceWithRef__ endp


; =============== S U B R O U T I N E =======================================


; id __cdecl +[UpDaterManager shared](UpDaterManager_meta *self, SEL)
__UpDaterManager_shared_ proc near      ; CODE XREF: -[ViewController updateClick]+1C↑P
                                        ; DATA XREF: __objc_const:0000000100041600↓o
                cmp     cs:qword_100075DD8, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10001A017

loc_10001A00B:                          ; CODE XREF: +[UpDaterManager shared]+20↓j
                mov     rdi, cs:qword_100075DD0
                jmp     _objc_retainAutoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10001A017:                          ; CODE XREF: +[UpDaterManager shared]+8↑j
                push    rbp
                mov     rbp, rsp
                call    sub_10002E9D0
                pop     rbp
                jmp     short loc_10001A00B
__UpDaterManager_shared_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001A023   proc near               ; DATA XREF: __const:000000010003A5A8↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:classRef_UpDaterManager
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, cs:qword_100075DD0
                mov     cs:qword_100075DD0, rax
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_10001A023   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; UpDaterManager *__cdecl -[UpDaterManager init](UpDaterManager *self, SEL)
__UpDaterManager_init_ proc near        ; DATA XREF: __objc_const:0000000100041D98↓o

var_18          = qword ptr -18h
anonymous_0     = qword ptr -10h

                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                lea     rax, [rbp+var_18]
                mov     [rax], rdi
                mov     rcx, cs:classRef_UpDaterManager_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_init
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      short loc_10001A09A
                mov     rsi, cs:selRef_setupUpdater ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[UpDaterManager setupUpdater]

loc_10001A09A:                          ; CODE XREF: -[UpDaterManager init]+30↑j
                mov     rax, rbx
                add     rsp, 18h
                pop     rbx
                pop     rbp
                retn
__UpDaterManager_init_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpDaterManager setupUpdater](UpDaterManager *self, SEL)
__UpDaterManager_setupUpdater_ proc near
                                        ; CODE XREF: -[UpDaterManager init]+3C↑P
                                        ; DATA XREF: __objc_const:0000000100041DB0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_setSparkleLanguage ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[UpDaterManager setSparkleLanguage]
                mov     rdi, cs:classRef_SPUStandardUpdaterController
                call    _objc_alloc
                mov     rsi, cs:selRef_initWithStartingUpdater_updaterDelegate_userDriverDelegate_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setController_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[UpDaterManager setController:]
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_controller ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[UpDaterManager controller]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_updater ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setUpdater_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[UpDaterManager setUpdater:]
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, r14
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__UpDaterManager_setupUpdater_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpDaterManager setSparkleLanguage](UpDaterManager *self, SEL)
__UpDaterManager_setSparkleLanguage_ proc near
                                        ; CODE XREF: -[UpDaterManager setupUpdater]+1F↑P
                                        ; DATA XREF: __objc_const:0000000100041DC8↓o

anonymous_0     = CGRect ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+anonymous_0.var1.var0], rax
                mov     rsi, cs:selRef_getCurrentLanguageCode ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[UpDaterManager getCurrentLanguageCode]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdi, cfstr_SettingSparkle ; "Setting Sparkle language to: %@"
                mov     rsi, rax
                xor     eax, eax
                call    _NSLog
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, [rbp+anonymous_0.var0.var1]
                mov     [rdx], rbx
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_count_ ; char *
                mov     ecx, 1
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                lea     rcx, cfstr_Applelanguages ; "AppleLanguages"
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                mov     r15, r14
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_synchronize
                mov     rdi, rax
                call    r15
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+anonymous_0.var1.var0]
                jnz     short loc_10001A277
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10001A277:                          ; CODE XREF: -[UpDaterManager setSparkleLanguage]+100↑j
                call    ___stack_chk_fail
__UpDaterManager_setSparkleLanguage_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[UpDaterManager getCurrentLanguageCode](UpDaterManager *self, SEL)
__UpDaterManager_getCurrentLanguageCode_ proc near
                                        ; CODE XREF: -[UpDaterManager setSparkleLanguage]+2D↑P
                                        ; -[UpDaterManager feedURLStringForUpdater:]+15↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rdi, cs:classRef_NSLocale ; void *
                mov     rsi, cs:selRef_preferredLanguages ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                test    rbx, rbx
                jz      loc_10001A389
                mov     rdi, cs:classRef_NSLocale
                call    _objc_alloc
                mov     rsi, cs:selRef_initWithLocaleIdentifier_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_languageCode ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      loc_10001A3A0
                mov     r13, cs:selRef_isEqualToString_
                lea     rdx, cfstr_Zh   ; "zh"
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001A3BA
                mov     rsi, cs:selRef_scriptCode ; char *
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r13        ; char *
                mov     r13, rax
                lea     rdx, cfstr_Hans ; "Hans"
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                test    al, al
                lea     rax, cfstr_En   ; "en"
                lea     rdi, cfstr_ZhHans ; "zh-Hans"
                cmovz   rdi, rax
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                jmp     short loc_10001A3D0
; ---------------------------------------------------------------------------

loc_10001A389:                          ; CODE XREF: -[UpDaterManager getCurrentLanguageCode]+55↑j
                lea     rdi, cfstr_NoPreferredLan ; "No preferred language found, defaulting to en"
                xor     eax, eax
                call    _NSLog
                lea     r12, cfstr_En   ; "en"
                jmp     short loc_10001A3E3
; ---------------------------------------------------------------------------

loc_10001A3A0:                          ; CODE XREF: -[UpDaterManager getCurrentLanguageCode]+95↑j
                lea     rdi, cfstr_NoLanguageCode ; "No language code found in %@, defaulting to en"
                mov     rsi, rbx
                xor     eax, eax
                call    _NSLog
                lea     r12, cfstr_En   ; "en"
                jmp     short loc_10001A3D0
; ---------------------------------------------------------------------------

loc_10001A3BA:                          ; CODE XREF: -[UpDaterManager getCurrentLanguageCode]+B7↑j
                lea     r12, cfstr_En   ; "en"
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr

loc_10001A3D0:                          ; CODE XREF: -[UpDaterManager getCurrentLanguageCode]+10B↑j
                                        ; -[UpDaterManager getCurrentLanguageCode]+13C↑j
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release

loc_10001A3E3:                          ; CODE XREF: -[UpDaterManager getCurrentLanguageCode]+122↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__UpDaterManager_getCurrentLanguageCode_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpDaterManager updateLanguage](UpDaterManager *self, SEL)
__UpDaterManager_updateLanguage_ proc near
                                        ; DATA XREF: __objc_const:0000000100041DF8↓o

var_28          = qword ptr -28h
anonymous_0     = qword ptr -20h
anonymous_1     = qword ptr -18h
anonymous_2     = qword ptr -10h
anonymous_3     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rsi, [rbp+var_28]
                mov     [rsi], rax
                mov     eax, 0C2000000h
                mov     [rsi+8], rax
                lea     rax, sub_10001A44D
                mov     [rsi+10h], rax
                lea     rax, unk_10003A338
                mov     [rsi+18h], rax
                mov     [rsi+20h], rdi
                mov     rdi, cs:__dispatch_main_q_ptr
                call    _dispatch_async
                add     rsp, 30h
                pop     rbp
                retn
__UpDaterManager_updateLanguage_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001A44D   proc near               ; DATA XREF: -[UpDaterManager updateLanguage]+1F↑o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_setSparkleLanguage ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_setupUpdater ; char *
                call    r14 ; _objc_msgSend
                lea     rdi, cfstr_UpdatedSparkle ; "Updated Sparkle language"
                xor     eax, eax
                call    _NSLog
                pop     rbx
                pop     r14
                pop     rbp
                retn
sub_10001A44D   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpDaterManager checkForUpdates](UpDaterManager *self, SEL)
__UpDaterManager_checkForUpdates_ proc near
                                        ; DATA XREF: __objc_const:0000000100041E10↓o

var_28          = qword ptr -28h
anonymous_0     = qword ptr -20h
anonymous_1     = qword ptr -18h
anonymous_2     = qword ptr -10h
anonymous_3     = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rsi, [rbp+var_28]
                mov     [rsi], rax
                mov     eax, 0C2000000h
                mov     [rsi+8], rax
                lea     rax, sub_10001A4D8
                mov     [rsi+10h], rax
                lea     rax, unk_10003A338
                mov     [rsi+18h], rax
                mov     [rsi+20h], rdi
                mov     rdi, cs:__dispatch_main_q_ptr
                call    _dispatch_async
                add     rsp, 30h
                pop     rbp
                retn
__UpDaterManager_checkForUpdates_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001A4D8   proc near               ; DATA XREF: -[UpDaterManager checkForUpdates]+1F↑o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_updater ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_checkForUpdates ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                lea     rdi, cfstr_TriggeredCheck ; "Triggered check for updates"
                xor     eax, eax
                call    _NSLog
                pop     rbx
                pop     r14
                pop     rbp
                retn
sub_10001A4D8   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[UpDaterManager feedURLStringForUpdater:](UpDaterManager *self, SEL, id)
__UpDaterManager_feedURLStringForUpdater__ proc near
                                        ; DATA XREF: __objc_const:0000000100041E28↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rsi, cs:selRef_getCurrentLanguageCode ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[UpDaterManager getCurrentLanguageCode]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_isEqualToString_ ; char *
                lea     rdx, cfstr_En   ; "en"
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                test    al, al
                lea     rax, cfstr_HttpDl8bitdoCn_0 ; "http://dl.8bitdo.cn/Firmware-Updater/appcast.xml"
                lea     rdi, cfstr_HttpDl8bitdoCo_0 ; "http://dl.8bitdo.com/Firmware-Updater/appcast.xml"
                cmovz   rdi, rax
                call    _objc_retainAutoreleaseReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                retn
__UpDaterManager_feedURLStringForUpdater__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SPUStandardUpdaterController *__cdecl -[UpDaterManager controller](UpDaterManager *self, SEL)
__UpDaterManager_controller_ proc near  ; CODE XREF: -[UpDaterManager setupUpdater]+70↑P
                                        ; DATA XREF: __objc_const:0000000100041E40↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+8]
                pop     rbp
                retn
__UpDaterManager_controller_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpDaterManager setController:](UpDaterManager *self, SEL, id)
__UpDaterManager_setController__ proc near
                                        ; CODE XREF: -[UpDaterManager setupUpdater]+56↑P
                                        ; DATA XREF: __objc_const:0000000100041E58↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 8
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__UpDaterManager_setController__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SPUUpdater *__cdecl -[UpDaterManager updater](UpDaterManager *self, SEL)
__UpDaterManager_updater_ proc near     ; DATA XREF: __objc_const:0000000100041E70↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+10h]
                pop     rbp
                retn
__UpDaterManager_updater_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpDaterManager setUpdater:](UpDaterManager *self, SEL, id)
__UpDaterManager_setUpdater__ proc near ; CODE XREF: -[UpDaterManager setupUpdater]+A3↑P
                                        ; DATA XREF: __objc_const:0000000100041E88↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 10h
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__UpDaterManager_setUpdater__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[UpDaterManager .cxx_destruct](UpDaterManager *self, SEL)
__UpDaterManager__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:0000000100041EA0↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 10h
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 8
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__UpDaterManager__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[MJPropertyKey valueInObject:](MJPropertyKey *self, SEL, id)
__MJPropertyKey_valueInObject__ proc near
                                        ; DATA XREF: __objc_const:0000000100042000↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     r15, cs:selRef_class
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     r12, cs:selRef_isKindOfClass_
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                test    al, al
                jz      short loc_10001A651
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr ; -[MJPropertyKey type]
                test    eax, eax
                jz      loc_10001A6F8

loc_10001A651:                          ; CODE XREF: -[MJPropertyKey valueInObject:]+4D↑j
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                test    al, al
                jz      loc_10001A6F3
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr ; -[MJPropertyKey type]
                cmp     eax, 1
                jnz     short loc_10001A6F3
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[MJPropertyKey name]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_intValue ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                movsxd  r14, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, r15        ; void *
                call    r13 ; _objc_msgSend
                cmp     rax, r14
                jbe     short loc_10001A72D
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                jmp     short loc_10001A728
; ---------------------------------------------------------------------------

loc_10001A6F3:                          ; CODE XREF: -[MJPropertyKey valueInObject:]+82↑j
                                        ; -[MJPropertyKey valueInObject:]+9B↑j
                xor     r14d, r14d
                jmp     short loc_10001A739
; ---------------------------------------------------------------------------

loc_10001A6F8:                          ; CODE XREF: -[MJPropertyKey valueInObject:]+61↑j
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[MJPropertyKey name]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue

loc_10001A728:                          ; CODE XREF: -[MJPropertyKey valueInObject:]+107↑j
                mov     r14, rax
                jmp     short loc_10001A730
; ---------------------------------------------------------------------------

loc_10001A72D:                          ; CODE XREF: -[MJPropertyKey valueInObject:]+EA↑j
                xor     r14d, r14d

loc_10001A730:                          ; CODE XREF: -[MJPropertyKey valueInObject:]+141↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10001A739:                          ; CODE XREF: -[MJPropertyKey valueInObject:]+10C↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__MJPropertyKey_valueInObject__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[MJPropertyKey name](MJPropertyKey *self, SEL)
__MJPropertyKey_name_ proc near         ; CODE XREF: -[MJPropertyKey valueInObject:]+B3↑P
                                        ; -[MJPropertyKey valueInObject:]+118↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+10h]
                pop     rbp
                retn
__MJPropertyKey_name_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJPropertyKey setName:](MJPropertyKey *self, SEL, id)
__MJPropertyKey_setName__ proc near     ; DATA XREF: __objc_const:0000000100042030↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 10h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__MJPropertyKey_setName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[MJPropertyKey type](MJPropertyKey *self, SEL)
__MJPropertyKey_type_ proc near         ; CODE XREF: -[MJPropertyKey valueInObject:]+59↑P
                                        ; -[MJPropertyKey valueInObject:]+92↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     eax, [rdi+8]
                pop     rbp
                retn
__MJPropertyKey_type_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJPropertyKey setType:](MJPropertyKey *self, SEL, int)
__MJPropertyKey_setType__ proc near     ; DATA XREF: __objc_const:0000000100042060↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+8], edx
                pop     rbp
                retn
__MJPropertyKey_setType__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJPropertyKey .cxx_destruct](MJPropertyKey *self, SEL)
__MJPropertyKey__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:0000000100042078↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 10h
                xor     esi, esi
                pop     rbp
                jmp     _objc_storeStrong
__MJPropertyKey__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001A793   proc near

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r14, rdi
                mov     rdi, rcx
                call    sub_10002DB0C
                mov     r12, rax
                mov     rdi, rbx
                call    sub_10002DBB9
                mov     r13, rax
                mov     r15, cs:classRef_S8BitdoDevice
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     rdi, r15
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setPid_ ; char *
                mov     eax, 0FFFFh
                and     r13d, eax
                mov     rdi, r14        ; void *
                mov     edx, r13d
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setVid_ ; char *
                mov     eax, 0FFFFh
                and     r12d, eax
                mov     rdi, r14        ; void *
                mov     edx, r12d
                call    r15 ; _objc_msgSend
                lea     rsi, cfstr_Product ; "Product"
                mov     rdi, rbx
                call    _IOHIDDeviceGetProperty
                mov     rsi, cs:selRef_setDeviceName_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_devices ; char *
                mov     r12, [rbp+var_30]
                mov     rdi, r12        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rsi, cs:selRef_addObject_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r14
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, r14
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_10001A793   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDXinput open](SHIDXinput *self, SEL)
__SHIDXinput_open_ proc near            ; DATA XREF: __objc_const:0000000100042198↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__SHIDXinput_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_error](NSObject_meta *self, SEL)
__NSObject_mj_error_ proc near          ; DATA XREF: __objc_const:00000001000422E0↓o
                push    rbp
                mov     rbp, rsp
                lea     rsi, unk_10002F2A0
                pop     rbp
                jmp     _objc_getAssociatedObject
__NSObject_mj_error_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject setMj_error:](NSObject_meta *self, SEL, id)
__NSObject_setMj_error__ proc near      ; DATA XREF: __objc_const:00000001000422F8↓o
                push    rbp
                mov     rbp, rsp
                lea     rsi, unk_10002F2A0
                mov     ecx, 1
                pop     rbp
                jmp     _objc_setAssociatedObject
__NSObject_setMj_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_referenceReplacedKeyWhenCreatingKeyValues:](NSObject_meta *self, SEL, char)
__NSObject_mj_referenceReplacedKeyWhenCreatingKeyValues__ proc near
                                        ; DATA XREF: __objc_const:0000000100042310↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithBool_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rsi, unk_10002F2A1
                mov     rdi, rbx
                mov     rdx, rax
                xor     ecx, ecx
                call    _objc_setAssociatedObject
                mov     rdi, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__NSObject_mj_referenceReplacedKeyWhenCreatingKeyValues__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues](NSObject_meta *self, SEL)
__NSObject_mj_isReferenceReplacedKeyWhenCreatingKeyValues_ proc near
                                        ; DATA XREF: __objc_const:0000000100042328↓o

anonymous_4     = ymmword ptr -70h
anonymous_6     = qword ptr -50h
anonymous_7     = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
anonymous_0     = qword ptr -30h
anonymous_1     = qword ptr -28h
anonymous_2     = qword ptr -20h
anonymous_3     = qword ptr -18h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 60h
                mov     rbx, rdi
                lea     r14, [rbp+var_40]
                mov     qword ptr [r14], 0
                mov     [r14+8], r14
                mov     rax, 3032000000h
                mov     [r14+10h], rax
                lea     rax, sub_10001AA15
                mov     [r14+18h], rax
                lea     rax, sub_10001AA2B
                mov     [r14+20h], rax
                lea     rsi, unk_10002F2A1
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [r14+28h], rax
                mov     rax, [r14+8]
                mov     rdi, [rax+28h]
                test    rdi, rdi
                jnz     short loc_10001A9CA
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+anonymous_4+8]
                mov     [rdx], rax
                mov     eax, 0C2000000h
                mov     [rdx+8], rax
                lea     rax, sub_10001AA3A
                mov     [rdx+10h], rax
                lea     rax, unk_10003A5B8
                mov     [rdx+18h], rax
                mov     [rdx+20h], r14
                mov     rsi, cs:selRef_mj_enumerateAllClasses_ ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rax, [rbp+var_38]
                mov     rdi, [rax+28h]  ; void *

loc_10001A9CA:                          ; CODE XREF: +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]+64↑j
                mov     rsi, cs:selRef_boolValue ; char *
                call    cs:_objc_msgSend_ptr
                mov     ebx, eax
                mov     rdi, r14        ; void *
                mov     esi, 8          ; int
                call    __Block_object_dispose
                mov     rdi, [r14+28h]
                call    cs:_objc_release_ptr
                movsx   eax, bl
                add     rsp, 60h
                pop     rbx
                pop     r14
                pop     rbp
                retn
__NSObject_mj_isReferenceReplacedKeyWhenCreatingKeyValues_ endp

; ---------------------------------------------------------------------------
                mov     rbx, rax
                lea     rdi, [rbp-40h]
                mov     esi, 8
                call    __Block_object_dispose
                mov     rdi, rbx
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001AA15   proc near               ; DATA XREF: +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]+2B↑o
                                        ; sub_10001C73D+2F2↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rsi+28h]
                mov     [rdi+28h], rax
                mov     qword ptr [rsi+28h], 0
                pop     rbp
                retn
sub_10001AA15   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001AA2B   proc near               ; DATA XREF: +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]+36↑o
                                        ; sub_10001C73D+2FE↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+28h]
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_10001AA2B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001AA3A   proc near               ; DATA XREF: +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]+7D↑o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdx
                mov     rax, rsi
                mov     r14, rdi
                lea     rsi, unk_10002F2A1
                mov     rdi, rax
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [r14+20h]
                mov     rcx, [rcx+8]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr
                mov     rax, [r14+20h]
                mov     rax, [rax+8]
                cmp     qword ptr [rax+28h], 0
                jz      short loc_10001AA89
                mov     byte ptr [rbx], 1

loc_10001AA89:                          ; CODE XREF: sub_10001AA3A+4A↑j
                pop     rbx
                pop     r14
                pop     rbp
                retn
sub_10001AA3A   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001AA8E   proc near               ; DATA XREF: __const:000000010003A5C8↓o
                                        ; __const:000000010003A7E8↓o ...
                push    rbp
                mov     rbp, rsp
                add     rdi, 20h        ; void *
                mov     rsi, [rsi+20h]  ; void *
                mov     edx, 8          ; int
                pop     rbp
                jmp     __Block_object_assign
sub_10001AA8E   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001AAA5   proc near               ; DATA XREF: __const:000000010003A5D0↓o
                                        ; __const:000000010003A7F0↓o ...
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]  ; void *
                mov     esi, 8          ; int
                pop     rbp
                jmp     __Block_object_dispose
sub_10001AAA5   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject load](NSObject_meta *self, SEL)
__NSObject_load_ proc near              ; DATA XREF: __objc_const:0000000100042340↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSNumberFormatter
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, cs:qword_100075DE0
                mov     cs:qword_100075DE0, rax
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_mj_referenceReplacedKeyWhenCreatingKeyValues_
                mov     rdi, rbx
                mov     edx, 1
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
__NSObject_load_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_setKeyValues:](NSObject *self, SEL, id)
__NSObject_mj_setKeyValues__ proc near  ; DATA XREF: __objc_const:0000000100042200↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setKeyValues_context_
                xor     ecx, ecx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_setKeyValues__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_setKeyValues:context:](NSObject *self, SEL, id, id)
__NSObject_mj_setKeyValues_context__ proc near
                                        ; DATA XREF: __objc_const:0000000100042218↓o

var_A0          = qword ptr -0A0h
anonymous_0     = qword ptr -98h
anonymous_1     = qword ptr -90h
anonymous_2     = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
anonymous_4     = qword ptr -68h
var_60          = qword ptr -60h
anonymous_3     = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 78h
                mov     r14, rdx
                mov     r15, rdi
                mov     rdi, rcx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_48], rax
                mov     rsi, cs:selRef_mj_JSONObject ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r12, cs:selRef_class
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     r14, cs:selRef_setMj_error_
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                test    al, al
                mov     [rbp+var_50], r13
                jz      loc_10001ACCF
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_mj_totalAllowedPropertyNames ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rsi, cs:selRef_mj_totalIgnoredPropertyNames ; char *
                mov     rdi, r14        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                mov     [rbp+var_40], r15
                lea     r15, [rbp+var_A0]
                mov     [r15], rax
                mov     eax, 0C2000000h
                mov     [r15+8], rax
                lea     rax, sub_10001AD4A
                mov     [r15+10h], rax
                lea     rax, unk_10003A5E8
                mov     [r15+18h], rax
                mov     r12, cs:_objc_retain_ptr
                mov     rdi, [rbp+var_38]
                call    r12 ; _objc_retain
                mov     [rbp+var_38], rax
                mov     [r15+20h], rax
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_retain
                mov     [rbp+var_30], rax
                mov     [r15+28h], rax
                mov     [r15+48h], r14
                mov     rdi, r13
                call    r12 ; _objc_retain
                mov     [r15+30h], rax
                mov     rax, [rbp+var_40]
                mov     [r15+38h], rax
                mov     rdi, [rbp+var_48]
                call    r12 ; _objc_retain
                mov     [r15+40h], rax
                mov     rsi, cs:selRef_mj_enumerateProperties_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, r15
                mov     r13, [rbp+var_40]
                call    rbx ; _objc_msgSend
                mov     r14, cs:selRef_mj_keyValuesDidFinishConvertingToObject
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                test    al, al
                jz      short loc_10001AC99
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr

loc_10001AC99:                          ; CODE XREF: -[NSObject mj_setKeyValues:context:]+169↑j
                mov     rdi, r13
                call    cs:_objc_retain_ptr
                mov     rdi, [rbp+var_60]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_70]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_78]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_80]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_30]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_38]
                call    rbx ; _objc_release
                jmp     short loc_10001AD21
; ---------------------------------------------------------------------------

loc_10001ACCF:                          ; CODE XREF: -[NSObject mj_setKeyValues:context:]+83↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_Keyvalues_0 ; "keyValues参数不是一个字典"
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r15
                mov     r15, rax
                mov     rdi, r13        ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_retain_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10001AD21:                          ; CODE XREF: -[NSObject mj_setKeyValues:context:]+1AB↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_48]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_50]
                call    rbx ; _objc_release
                mov     rdi, r13
                add     rsp, 78h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_setKeyValues_context__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001AD4A   proc near               ; DATA XREF: -[NSObject mj_setKeyValues:context:]+E2↑o

var_2C0         = ymmword ptr -2C0h
anonymous_1     = xmmword ptr -2A0h
anonymous_0     = xmmword ptr -290h
var_280         = xmmword ptr -280h
var_270         = xmmword ptr -270h
anonymous_3     = xmmword ptr -260h
anonymous_2     = xmmword ptr -250h
var_240         = xmmword ptr -240h
var_230         = xmmword ptr -230h
var_220         = xmmword ptr -220h
var_210         = xmmword ptr -210h
var_1F8         = qword ptr -1F8h
var_1F0         = qword ptr -1F0h
var_1E8         = qword ptr -1E8h
var_1E0         = qword ptr -1E0h
var_1D8         = qword ptr -1D8h
var_1D0         = qword ptr -1D0h
var_1C8         = qword ptr -1C8h
var_1C0         = qword ptr -1C0h
var_1B8         = qword ptr -1B8h
var_1B0         = byte ptr -1B0h
var_130         = byte ptr -130h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 298h
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     [rbp+var_1C8], rax
                mov     [rbp+var_1C0], rbx
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_count ; char *
                call    cs:_objc_msgSend_ptr
                mov     rbx, cs:selRef_name
                test    rax, rax
                jz      short loc_10001ADF1
                mov     rax, [rbp+var_1C0]
                mov     r15, [rax+20h]
                mov     rdi, [rbp+var_1C8] ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_containsObject_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     r15d, eax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      loc_10001B111

loc_10001ADF1:                          ; CODE XREF: sub_10001AD4A+57↑j
                mov     rax, [rbp+var_1C0]
                mov     r14, [rax+28h]
                mov     rdi, [rbp+var_1C8] ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_containsObject_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     r14d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                test    r14b, r14b
                jnz     loc_10001B111
                mov     rax, [rbp+var_1C0]
                mov     rdx, [rax+48h]
                mov     rsi, cs:selRef_propertyKeysForClass_ ; char *
                mov     rdi, [rbp+var_1C8] ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_2C0]
                movaps  xmmword ptr [rbx+30h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx], xmm0
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_1E8], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rcx, rax
                test    rax, rax
                jz      loc_10001B084
                lea     rax, [rbp+var_2C0]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_1E0], rax

loc_10001AED0:                          ; CODE XREF: sub_10001AD4A+334↓j
                xor     ebx, ebx
                mov     [rbp+var_1F0], rcx

loc_10001AED9:                          ; CODE XREF: sub_10001AD4A+300↓j
                mov     rax, qword ptr [rbp+var_2C0+10h]
                mov     rcx, [rbp+var_1E0]
                cmp     [rax], rcx
                jz      short loc_10001AEF8
                mov     rdi, [rbp+var_1E8]
                call    _objc_enumerationMutation

loc_10001AEF8:                          ; CODE XREF: sub_10001AD4A+1A0↑j
                mov     rax, qword ptr [rbp+var_2C0+8]
                mov     [rbp+var_1F8], rbx
                mov     rbx, [rax+rbx*8]
                mov     rax, [rbp+var_1C0]
                mov     rdi, [rax+30h]
                mov     r15, cs:_objc_retain_ptr
                call    r15 ; _objc_retain
                mov     r14, rax
                xorps   xmm0, xmm0
                movaps  [rbp+var_240], xmm0
                movaps  [rbp+var_230], xmm0
                movaps  [rbp+var_220], xmm0
                movaps  [rbp+var_210], xmm0
                mov     rdi, rbx
                call    r15 ; _objc_retain
                mov     r8d, 10h
                mov     [rbp+var_1D0], rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_240]
                lea     rcx, [rbp+var_130]
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                test    rax, rax
                jz      loc_10001B024
                mov     rax, qword ptr [rbp+var_230]
                mov     rax, [rax]
                mov     [rbp+var_1B8], rax

loc_10001AF8F:                          ; CODE XREF: sub_10001AD4A+2D4↓j
                mov     r15, cs:selRef_valueInObject_
                mov     r12, r14
                xor     ebx, ebx

loc_10001AF9B:                          ; CODE XREF: sub_10001AD4A+2A4↓j
                mov     rax, qword ptr [rbp+var_230]
                mov     rcx, [rbp+var_1B8]
                cmp     [rax], rcx
                jz      short loc_10001AFBA
                mov     rdi, [rbp+var_1D0]
                call    _objc_enumerationMutation

loc_10001AFBA:                          ; CODE XREF: sub_10001AD4A+262↑j
                mov     rax, qword ptr [rbp+var_240+8]
                mov     rdi, [rax+rbx*8] ; void *
                mov     rsi, r15        ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                inc     rbx
                mov     r12, r14
                cmp     r13, rbx
                jnz     short loc_10001AF9B
                mov     r8d, 10h
                mov     rdi, [rbp+var_1D0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_240]
                lea     rcx, [rbp+var_130]
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                test    rax, rax
                jnz     loc_10001AF8F

loc_10001B024:                          ; CODE XREF: sub_10001AD4A+22E↑j
                mov     rdi, [rbp+var_1D0]
                call    cs:_objc_release_ptr
                test    r14, r14
                jnz     short loc_10001B087
                mov     rbx, [rbp+var_1F8]
                inc     rbx
                mov     rcx, [rbp+var_1F0]
                cmp     rbx, rcx
                jnz     loc_10001AED9
                mov     r8d, 10h
                mov     rdi, [rbp+var_1E8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_2C0]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     rcx, rax
                test    rax, rax
                jnz     loc_10001AED0

loc_10001B084:                          ; CODE XREF: sub_10001AD4A+16B↑j
                xor     r14d, r14d

loc_10001B087:                          ; CODE XREF: sub_10001AD4A+2EA↑j
                mov     r12, r14
                mov     rdi, [rbp+var_1E8]
                call    cs:_objc_release_ptr
                mov     rax, [rbp+var_1C0]
                mov     rdx, [rax+38h]
                mov     rdi, [rax+48h]  ; void *
                mov     rsi, cs:selRef_mj_getNewValueFromObject_oldValue_property_ ; char *
                mov     rbx, r12
                mov     rcx, r12
                mov     r8, [rbp+var_1C8]
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                cmp     rax, rbx
                jz      short loc_10001B144
                mov     rax, [rbp+var_1C0]
                mov     rcx, [rax+38h]
                mov     rsi, cs:selRef_setValue_forObject_ ; char *
                mov     rdi, [rbp+var_1C8] ; void *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr

loc_10001B0F2:                          ; CODE XREF: sub_10001AD4A+3FD↓j
                                        ; sub_10001AD4A+43A↓j
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_1E8]
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_10001B111:                          ; CODE XREF: sub_10001AD4A+A1↑j
                                        ; sub_10001AD4A+EF↑j ...
                mov     rdi, [rbp+var_1C8]
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     loc_10001B94B
                add     rsp, 298h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10001B144:                          ; CODE XREF: sub_10001AD4A+384↑j
                test    rbx, rbx
                jz      short loc_10001B0F2
                mov     rdi, cs:classRef_NSNull ; void *
                mov     rsi, cs:selRef_null ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1F0], r14
                cmp     rbx, rax
                setz    bl
                mov     rdi, rax
                call    cs:_objc_release_ptr
                test    bl, bl
                mov     r14, [rbp+var_1F0]
                jnz     loc_10001B0F2
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, [rbp+var_1C8] ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_typeClass ; char *
                mov     [rbp+var_1D8], rax
                mov     rdi, rax        ; void *
                mov     r13, rsi
                call    cs:_objc_msgSend_ptr
                mov     r14, rax
                mov     rax, [rbp+var_1C0]
                mov     rdi, [rax+38h]  ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_objectClassInArrayForClass_ ; char *
                mov     rdi, [rbp+var_1C8] ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     rbx, rax
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r14, rax
                jz      loc_10001B2AB

loc_10001B212:                          ; CODE XREF: sub_10001AD4A+58A↓j
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r14, rax
                jz      loc_10001B2EA

loc_10001B22F:                          ; CODE XREF: sub_10001AD4A+5C9↓j
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r14, rax
                jz      loc_10001B329

loc_10001B24C:                          ; CODE XREF: sub_10001AD4A+608↓j
                mov     rdi, cs:classRef_NSMutableData ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r14, rax
                jnz     loc_10001B38C
                mov     rdi, cs:classRef_NSData ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B38C
                lea     rax, selRef_dataWithData_
                lea     rcx, classRef_NSMutableData
                jmp     loc_10001B366
; ---------------------------------------------------------------------------

loc_10001B2AB:                          ; CODE XREF: sub_10001AD4A+4C2↑j
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B212
                lea     rax, selRef_arrayWithArray_
                lea     rcx, classRef_NSMutableArray
                jmp     short loc_10001B366
; ---------------------------------------------------------------------------

loc_10001B2EA:                          ; CODE XREF: sub_10001AD4A+4DF↑j
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B22F
                lea     rax, selRef_dictionaryWithDictionary_
                lea     rcx, classRef_NSMutableDictionary
                jmp     short loc_10001B366
; ---------------------------------------------------------------------------

loc_10001B329:                          ; CODE XREF: sub_10001AD4A+4FC↑j
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B24C
                lea     rax, selRef_stringWithString_
                lea     rcx, classRef_NSMutableString

loc_10001B366:                          ; CODE XREF: sub_10001AD4A+55C↑j
                                        ; sub_10001AD4A+59E↑j ...
                mov     rdi, [rcx]      ; void *
                mov     rsi, [rax]      ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     r12, r15

loc_10001B38C:                          ; CODE XREF: sub_10001AD4A+519↑j
                                        ; sub_10001AD4A+548↑j
                mov     rdi, [rbp+var_1D8] ; void *
                mov     rsi, cs:selRef_isFromFoundation ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                setz    al
                test    r14, r14
                setnz   cl
                and     cl, al
                cmp     cl, 1
                jnz     short loc_10001B3E1
                mov     rdi, r14        ; void *
                mov     rax, [rbp+var_1C0]
                mov     rcx, [rax+40h]
                mov     rsi, cs:selRef_mj_objectWithKeyValues_context_ ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1B8], rax
                jmp     short loc_10001B434
; ---------------------------------------------------------------------------

loc_10001B3E1:                          ; CODE XREF: sub_10001AD4A+666↑j
                test    rbx, rbx
                jz      loc_10001B49C
                mov     rdi, cs:classRef_NSURL ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rbx, rax
                jz      loc_10001B68B

loc_10001B407:                          ; CODE XREF: sub_10001AD4A+96A↓j
                mov     rax, [rbp+var_1C0]
                mov     rcx, [rax+40h]
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_context_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1B8], rax

loc_10001B434:                          ; CODE XREF: sub_10001AD4A+695↑j
                mov     rdi, r12

loc_10001B437:                          ; CODE XREF: sub_10001AD4A+AED↓j
                                        ; sub_10001AD4A+BFC↓j
                call    cs:_objc_release_ptr

loc_10001B43D:                          ; CODE XREF: sub_10001AD4A+BC5↓j
                                        ; sub_10001AD4A+BE4↓j
                mov     rax, [rbp+var_1C0]
                mov     rcx, [rax+38h]
                mov     rsi, cs:selRef_setValue_forObject_ ; char *
                mov     rdi, [rbp+var_1C8] ; void *
                mov     rdx, [rbp+var_1B8]
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_1D8]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_1F0]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_1E8]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_1B8]
                call    cs:_objc_release_ptr
                jmp     loc_10001B111
; ---------------------------------------------------------------------------

loc_10001B49C:                          ; CODE XREF: sub_10001AD4A+69A↑j
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r14, rax
                jz      loc_10001B83C
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r12        ; void *
                mov     [rbp+var_1D0], rsi
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B905
                mov     rdi, cs:classRef_NSURL ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r14, rax
                jz      loc_10001B88F
                mov     rsi, cs:selRef_isNumberType ; char *
                mov     rdi, [rbp+var_1D8] ; void *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B905
                mov     rdi, r12
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, [rbp+var_1D8] ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                mov     r15, rax
                mov     rdi, cs:classRef_NSDecimalNumber ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r15, rax
                lea     rax, classRef_NSDecimalNumber
                lea     rcx, qword_100075DE0
                cmovz   rcx, rax
                mov     rdi, [rcx]      ; void *
                lea     rax, selRef_decimalNumberWithString_
                lea     rcx, selRef_numberFromString_
                cmovz   rcx, rax
                mov     rsi, [rcx]      ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1B8], rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_isBoolType ; char *
                mov     rdi, [rbp+var_1D8] ; void *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B8FA
                mov     rsi, cs:selRef_lowercaseString ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r13, cs:selRef_isEqualToString_
                lea     rdx, cfstr_Yes  ; "yes"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                mov     bl, 1
                test    al, al
                jnz     short loc_10001B647
                lea     rdx, cfstr_True ; "true"
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     short loc_10001B647
                lea     rdx, cfstr_No   ; "no"
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     short loc_10001B645
                lea     rdx, cfstr_False ; "false"
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10001B67D

loc_10001B645:                          ; CODE XREF: sub_10001AD4A+8E2↑j
                xor     ebx, ebx

loc_10001B647:                          ; CODE XREF: sub_10001AD4A+8B4↑j
                                        ; sub_10001AD4A+8CB↑j
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithBool_ ; char *
                movzx   edx, bl
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, [rbp+var_1B8]
                call    cs:_objc_release_ptr
                mov     [rbp+var_1B8], rbx

loc_10001B67D:                          ; CODE XREF: sub_10001AD4A+8F9↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr
                jmp     loc_10001B8FA
; ---------------------------------------------------------------------------

loc_10001B68B:                          ; CODE XREF: sub_10001AD4A+6B7↑j
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001B407
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_array ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1B8], rax
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_280]
                movaps  xmmword ptr [rbx+30h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx], xmm0
                mov     rdi, r12
                call    cs:_objc_retain_ptr
                lea     rcx, [rbp+var_1B0]
                mov     r8d, 10h
                mov     [rbp+var_1E0], rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     r15, rax
                test    rax, rax
                jz      loc_10001B823
                lea     rax, [rbp+var_280]
                mov     rax, [rax+10h]
                mov     rbx, [rax]
                mov     r12, cs:_objc_msgSend_ptr

loc_10001B747:                          ; CODE XREF: sub_10001AD4A+AD3↓j
                mov     rax, cs:selRef_mj_url
                mov     [rbp+var_1D0], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_1F8], rax
                xor     r14d, r14d

loc_10001B766:                          ; CODE XREF: sub_10001AD4A+AA2↓j
                mov     rax, qword ptr [rbp+var_270]
                cmp     [rax], rbx
                jz      short loc_10001B77E
                mov     rdi, [rbp+var_1E0]
                call    _objc_enumerationMutation

loc_10001B77E:                          ; CODE XREF: sub_10001AD4A+A26↑j
                mov     rax, qword ptr [rbp+var_280+8]
                mov     r13, [rax+r14*8]
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_class ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_10001B7E6
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_1D0] ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, [rbp+var_1B8] ; void *
                mov     rsi, [rbp+var_1F8] ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr

loc_10001B7E6:                          ; CODE XREF: sub_10001AD4A+A62↑j
                inc     r14
                cmp     r15, r14
                jnz     loc_10001B766
                mov     r8d, 10h
                mov     rdi, [rbp+var_1E0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_280]
                lea     rcx, [rbp+var_1B0]
                call    r12 ; _objc_msgSend
                mov     r15, rax
                test    rax, rax
                jnz     loc_10001B747

loc_10001B823:                          ; CODE XREF: sub_10001AD4A+9E2↑j
                mov     rdi, [rbp+var_1E0]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_1E0]
                jmp     loc_10001B437
; ---------------------------------------------------------------------------

loc_10001B83C:                          ; CODE XREF: sub_10001AD4A+769↑j
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r12        ; void *
                mov     [rbp+var_1D0], rsi
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10001B8B0
                mov     rsi, cs:selRef_description ; char *
                mov     rdi, r12        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1B8], rax
                jmp     short loc_10001B8FA
; ---------------------------------------------------------------------------

loc_10001B88F:                          ; CODE XREF: sub_10001AD4A+7BC↑j
                mov     rsi, cs:selRef_mj_url ; char *
                mov     rdi, r12        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1B8], rax
                jmp     short loc_10001B8FA
; ---------------------------------------------------------------------------

loc_10001B8B0:                          ; CODE XREF: sub_10001AD4A+B22↑j
                mov     rdi, cs:classRef_NSURL ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10001B905
                mov     rsi, cs:selRef_absoluteString ; char *
                mov     rdi, r12        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_1B8], rax

loc_10001B8FA:                          ; CODE XREF: sub_10001AD4A+875↑j
                                        ; sub_10001AD4A+93C↑j ...
                mov     rdi, r12
                call    cs:_objc_release_ptr
                jmp     short loc_10001B90C
; ---------------------------------------------------------------------------

loc_10001B905:                          ; CODE XREF: sub_10001AD4A+79F↑j
                                        ; sub_10001AD4A+7D8↑j ...
                mov     [rbp+var_1B8], r12

loc_10001B90C:                          ; CODE XREF: sub_10001AD4A+BB9↑j
                test    r14, r14
                jz      loc_10001B43D
                mov     rdi, [rbp+var_1B8] ; void *
                mov     rsi, [rbp+var_1D0] ; char *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     loc_10001B43D
                mov     rdi, [rbp+var_1B8]
                mov     [rbp+var_1B8], 0
                jmp     loc_10001B437
; ---------------------------------------------------------------------------

loc_10001B94B:                          ; CODE XREF: sub_10001AD4A+3E2↑j
                call    ___stack_chk_fail
sub_10001AD4A   endp

; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                mov     rbx, rax
                test    edx, edx
                jnz     short loc_10001B97F
                jmp     loc_10001BA40
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short loc_10001B97C
; ---------------------------------------------------------------------------
                jmp     short $+2
; ---------------------------------------------------------------------------

loc_10001B97C:                          ; CODE XREF: __text:000000010001B950↑j
                                        ; __text:000000010001B952↑j ...
                mov     rbx, rax

loc_10001B97F:                          ; CODE XREF: __text:000000010001B96F↑j
                cmp     edx, 1
                jnz     loc_10001BA40
                mov     rdi, rbx
                call    _objc_begin_catch
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r14, cs:classRef_NSError
                mov     rsi, cs:selRef_reason
                mov     rdi, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_
                mov     ecx, 0FAh
                mov     rdi, r14
                mov     rdx, rax
                xor     r8d, r8d
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rax, [rbp-1C0h]
                mov     rdi, [rax+38h]
                mov     rsi, cs:selRef_class
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_setMj_error_
                mov     rdi, rax
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                call    _objc_end_catch
                jmp     loc_10001B111
; ---------------------------------------------------------------------------
                mov     rbx, rax
                call    _objc_end_catch
                jmp     short loc_10001BA40
; ---------------------------------------------------------------------------
                mov     rbx, rax

loc_10001BA40:                          ; CODE XREF: __text:000000010001B971↑j
                                        ; __text:000000010001B982↑j ...
                mov     rdi, rbx
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001BA48   proc near               ; DATA XREF: __const:000000010003A5F8↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     rdi, [rsi+20h]
                mov     r14, cs:_objc_retain_ptr
                call    r14 ; _objc_retain
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+30h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+38h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+40h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_10001BA48   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001BA82   proc near               ; DATA XREF: __const:000000010003A600↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+40h]
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbx+38h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+30h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_10001BA82   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectWithKeyValues:](NSObject_meta *self, SEL, id)
__NSObject_mj_objectWithKeyValues__ proc near
                                        ; DATA XREF: __objc_const:0000000100042358↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectWithKeyValues_context_
                xor     ecx, ecx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_objectWithKeyValues__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectWithKeyValues:context:](NSObject_meta *self, SEL, id, id)
__NSObject_mj_objectWithKeyValues_context__ proc near
                                        ; DATA XREF: __objc_const:0000000100042370↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdx
                mov     r15, rdi
                mov     rdi, rcx
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     rsi, cs:selRef_mj_JSONObject ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r13, cs:selRef_class
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r14 ; _objc_msgSend
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                test    al, al
                mov     [rbp+var_38], r12
                jz      loc_10001BC3F
                mov     rdi, cs:classRef_NSManagedObject ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_isSubclassOfClass_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                test    r12, r12
                jz      loc_10001BC8F
                test    al, al
                jz      loc_10001BC8F
                mov     rdi, r15
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rbx
                mov     rbx, rax
                mov     rsi, cs:selRef_componentsSeparatedByString_ ; char *
                lea     rdx, stru_10003BF78 ; "."
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_lastObject ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSEntityDescription ; void *
                mov     rsi, cs:selRef_insertNewObjectForEntityForName_inManagedObjectContext_ ; char *
                mov     rdx, r12
                mov     rbx, [rbp+var_38]
                mov     rcx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_mj_setKeyValues_context_ ; char *
                mov     rdi, rax        ; void *
                mov     r15, [rbp+var_30]
                mov     rdx, r15
                mov     rcx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                jmp     loc_10001BCC5
; ---------------------------------------------------------------------------

loc_10001BC3F:                          ; CODE XREF: +[NSObject mj_objectWithKeyValues:context:]+84↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_Keyvalues_0 ; "keyValues参数不是一个字典"
                mov     [rbp+var_30], rbx
                xor     ebx, ebx
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15        ; void *
                mov     r15, [rbp+var_30]
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                jmp     short loc_10001BCC5
; ---------------------------------------------------------------------------

loc_10001BC8F:                          ; CODE XREF: +[NSObject mj_objectWithKeyValues:context:]+AA↑j
                                        ; +[NSObject mj_objectWithKeyValues:context:]+B2↑j
                mov     rdi, r15
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r12, rax
                mov     rsi, cs:selRef_mj_setKeyValues_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rbx
                mov     rbx, rax

loc_10001BCC5:                          ; CODE XREF: +[NSObject mj_objectWithKeyValues:context:]+16A↑j
                                        ; +[NSObject mj_objectWithKeyValues:context:]+1BD↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_objectWithKeyValues_context__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectWithFilename:](NSObject_meta *self, SEL, id)
__NSObject_mj_objectWithFilename__ proc near
                                        ; DATA XREF: __objc_const:0000000100042388↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r15, cs:selRef_class
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     r13, cs:selRef_setMj_error_
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                test    rbx, rbx
                jz      short loc_10001BD9F
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_pathForResource_ofType_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                xor     ecx, ecx
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_mj_objectWithFile_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                jmp     short loc_10001BDE2
; ---------------------------------------------------------------------------

loc_10001BD9F:                          ; CODE XREF: +[NSObject mj_objectWithFilename:]+49↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_FilenameNil ; "filename参数为nil"
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r15        ; char *
                mov     r15, rax
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                xor     r12d, r12d

loc_10001BDE2:                          ; CODE XREF: +[NSObject mj_objectWithFilename:]+A8↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_objectWithFilename__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectWithFile:](NSObject_meta *self, SEL, id)
__NSObject_mj_objectWithFile__ proc near
                                        ; DATA XREF: __objc_const:00000001000423A0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_class ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                test    rbx, rbx
                jz      short loc_10001BE8C
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     rsi, cs:selRef_dictionaryWithContentsOfFile_ ; char *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_mj_objectWithKeyValues_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                jmp     short loc_10001BED7
; ---------------------------------------------------------------------------

loc_10001BE8C:                          ; CODE XREF: +[NSObject mj_objectWithFile:]+43↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_FileNil ; "file参数为nil"
                xor     r15d, r15d
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_class ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdx, r12
                call    r13 ; _objc_msgSend

loc_10001BED7:                          ; CODE XREF: +[NSObject mj_objectWithFile:]+7F↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_objectWithFile__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectArrayWithKeyValuesArray:](NSObject_meta *self, SEL, id)
__NSObject_mj_objectArrayWithKeyValuesArray__ proc near
                                        ; DATA XREF: __objc_const:00000001000423B8↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_context_
                xor     ecx, ecx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_objectArrayWithKeyValuesArray__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectArrayWithKeyValuesArray:context:](NSObject_meta *self, SEL, id, id)
__NSObject_mj_objectArrayWithKeyValuesArray_context__ proc near
                                        ; DATA XREF: __objc_const:00000001000423D0↓o

var_140         = ymmword ptr -140h
anonymous_0     = xmmword ptr -120h
anonymous_1     = xmmword ptr -110h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 118h
                mov     rbx, rdx
                mov     r12, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, rcx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_C8], rax
                mov     rsi, cs:selRef_mj_JSONObject ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r14, cs:selRef_class
                mov     rdi, r12        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                mov     rbx, cs:selRef_setMj_error_
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                test    al, al
                jz      short loc_10001BFF4
                mov     rdi, cs:classRef_MJFoundation ; void *
                mov     rsi, cs:selRef_isClassFromFoundation_ ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr ; +[MJFoundation isClassFromFoundation:]
                mov     rdi, cs:classRef_NSMutableArray ; void *
                test    al, al
                jz      short loc_10001C04D
                mov     rsi, cs:selRef_arrayWithArray_ ; char *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_B8], rax
                jmp     loc_10001C234
; ---------------------------------------------------------------------------

loc_10001BFF4:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+98↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_Keyvaluesarray_5 ; "keyValuesArray参数不是一个数组"
                mov     [rbp+var_B8], 0
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r14        ; char *
                mov     r14, rax
                mov     rdi, r12        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     loc_10001C234
; ---------------------------------------------------------------------------

loc_10001C04D:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+BA↑j
                mov     [rbp+var_D8], r12
                mov     rsi, cs:selRef_array ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_B8], rax
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_140]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     [rbp+var_E0], r15
                mov     rdi, r15
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      loc_10001C220
                mov     r14, rax
                lea     rax, [rbp+var_140]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_F8], rax

loc_10001C0DB:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+306↓j
                mov     rbx, r13
                mov     rax, cs:selRef_mj_objectArrayWithKeyValuesArray_context_
                mov     [rbp+var_F0], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_D0], rax
                mov     rax, cs:selRef_mj_objectWithKeyValues_context_
                mov     [rbp+var_E8], rax
                xor     r15d, r15d

loc_10001C10B:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+2D3↓j
                mov     rax, qword ptr [rbp+var_140+10h]
                mov     rcx, [rbp+var_F8]
                cmp     [rax], rcx
                jz      short loc_10001C12A
                mov     rdi, [rbp+var_C0]
                call    _objc_enumerationMutation

loc_10001C12A:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+208↑j
                mov     rax, qword ptr [rbp+var_140+8]
                mov     r13, [rax+r15*8]
                mov     rdi, cs:classRef_NSArray
                mov     rsi, cs:selRef_class
                mov     r12, rbx
                call    rbx
                mov     rdi, r13
                mov     rsi, cs:selRef_isKindOfClass_
                mov     rdx, rax
                call    rbx
                test    al, al
                jz      short loc_10001C197
                mov     rdi, [rbp+var_D8]
                mov     rsi, [rbp+var_F0]
                mov     rdx, r13
                mov     rcx, [rbp+var_C8]
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, [rbp+var_B8]
                mov     rsi, [rbp+var_D0]
                mov     rdx, rax
                call    r12
                jmp     short loc_10001C1D8
; ---------------------------------------------------------------------------

loc_10001C197:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+245↑j
                mov     rdi, [rbp+var_D8] ; void *
                mov     rsi, [rbp+var_E8] ; char *
                mov     rdx, r13
                mov     rcx, [rbp+var_C8]
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      short loc_10001C1D8
                mov     rdi, [rbp+var_B8]
                mov     rsi, [rbp+var_D0]
                mov     rdx, r13
                call    rbx

loc_10001C1D8:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+281↑j
                                        ; +[NSObject mj_objectArrayWithKeyValuesArray:context:]+2AF↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr
                inc     r15
                cmp     r14, r15
                jnz     loc_10001C10B
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0]
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_
                lea     rdx, [rbp+var_140]
                lea     rcx, [rbp+var_B0]
                mov     r13, rbx
                call    rbx
                mov     r14, rax
                test    rax, rax
                jnz     loc_10001C0DB

loc_10001C220:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+1A9↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     r15, [rbp+var_E0]

loc_10001C234:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+DB↑j
                                        ; +[NSObject mj_objectArrayWithKeyValuesArray:context:]+134↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_C8]
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_10001C276
                mov     rdi, [rbp+var_B8]
                add     rsp, 118h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10001C276:                          ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+343↑j
                call    ___stack_chk_fail
__NSObject_mj_objectArrayWithKeyValuesArray_context__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectArrayWithFilename:](NSObject_meta *self, SEL, id)
__NSObject_mj_objectArrayWithFilename__ proc near
                                        ; DATA XREF: __objc_const:00000001000423E8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r15, cs:selRef_class
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     r13, cs:selRef_setMj_error_
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                test    rbx, rbx
                jz      short loc_10001C325
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_pathForResource_ofType_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                xor     ecx, ecx
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_mj_objectArrayWithFile_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                jmp     short loc_10001C368
; ---------------------------------------------------------------------------

loc_10001C325:                          ; CODE XREF: +[NSObject mj_objectArrayWithFilename:]+49↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_FilenameNil ; "filename参数为nil"
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, r15        ; char *
                mov     r15, rax
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, r15
                call    r12 ; _objc_msgSend
                xor     r12d, r12d

loc_10001C368:                          ; CODE XREF: +[NSObject mj_objectArrayWithFilename:]+A8↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_objectArrayWithFilename__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_objectArrayWithFile:](NSObject_meta *self, SEL, id)
__NSObject_mj_objectArrayWithFile__ proc near
                                        ; DATA XREF: __objc_const:0000000100042400↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_class ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                test    rbx, rbx
                jz      short loc_10001C412
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithContentsOfFile_ ; char *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                jmp     short loc_10001C45D
; ---------------------------------------------------------------------------

loc_10001C412:                          ; CODE XREF: +[NSObject mj_objectArrayWithFile:]+43↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_FileNil ; "file参数为nil"
                xor     r15d, r15d
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_class ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdx, r12
                call    r13 ; _objc_msgSend

loc_10001C45D:                          ; CODE XREF: +[NSObject mj_objectArrayWithFile:]+7F↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_objectArrayWithFile__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_keyValues](NSObject *self, SEL)
__NSObject_mj_keyValues_ proc near      ; DATA XREF: __objc_const:0000000100042230↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesWithKeys_ignoredKeys_
                xor     edx, edx
                xor     ecx, ecx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_keyValues_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_keyValuesWithKeys:](NSObject *self, SEL, id)
__NSObject_mj_keyValuesWithKeys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042248↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesWithKeys_ignoredKeys_
                xor     ecx, ecx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_keyValuesWithKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_keyValuesWithIgnoredKeys:](NSObject *self, SEL, id)
__NSObject_mj_keyValuesWithIgnoredKeys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042260↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, rdx
                mov     rsi, cs:selRef_mj_keyValuesWithKeys_ignoredKeys_
                xor     edx, edx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_keyValuesWithIgnoredKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_keyValuesWithKeys:ignoredKeys:](NSObject *self, SEL, id, id)
__NSObject_mj_keyValuesWithKeys_ignoredKeys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042278↓o

anonymous_0     = ymmword ptr -0B0h
anonymous_1     = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
anonymous_2     = qword ptr -68h
var_60          = qword ptr -60h
anonymous_3     = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 88h
                mov     rbx, rcx
                mov     r15, rdi
                mov     r14, cs:_objc_retain_ptr
                mov     rdi, rdx
                call    r14 ; _objc_retain
                mov     [rbp+var_40], rax
                mov     rdi, rbx
                call    r14 ; _objc_retain
                mov     [rbp+var_38], rax
                mov     r12, cs:selRef_class
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rbx, cs:selRef_setMj_error_
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     r14, cs:classRef_MJFoundation
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_isClassFromFoundation_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; +[MJFoundation isClassFromFoundation:]
                test    al, al
                jz      short loc_10001C5A3
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, stru_10003BFF8 ; "不是自定义的模型类"
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     loc_10001C70F
; ---------------------------------------------------------------------------

loc_10001C5A3:                          ; CODE XREF: -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+80↑j
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_48], rax
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rbx, rax
                mov     rsi, cs:selRef_mj_totalAllowedPropertyNames ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_mj_totalIgnoredPropertyNames ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r12, [rbp+anonymous_0+8]
                mov     [r12], rax
                mov     eax, 0C2000000h
                mov     [r12+8], rax
                lea     rax, sub_10001C73D
                mov     [r12+10h], rax
                lea     rax, unk_10003A648
                mov     [r12+18h], rax
                mov     rdi, r14
                mov     r14, cs:_objc_retain_ptr
                call    r14 ; _objc_retain
                mov     [rbp+var_50], rax
                mov     [r12+20h], rax
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_retain
                mov     [rbp+var_30], rax
                mov     [r12+28h], rax
                mov     rdi, [rbp+var_40]
                call    r14 ; _objc_retain
                mov     [r12+30h], rax
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_retain
                mov     [r12+38h], rax
                mov     [r12+40h], r15
                mov     [r12+50h], rbx
                mov     rdi, [rbp+var_48]
                call    r14 ; _objc_retain
                mov     r14, rax
                mov     [r12+48h], rax
                mov     rsi, cs:selRef_mj_enumerateProperties_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rbx, cs:selRef_mj_objectDidFinishConvertingToKeyValues
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                test    al, al
                jz      short loc_10001C6BF
                mov     rdi, r15        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr

loc_10001C6BF:                          ; CODE XREF: -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+1EA↑j
                mov     r15, [rbp+var_60]
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_70]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_78]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_80]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_88]
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r14 ; _objc_release

loc_10001C70F:                          ; CODE XREF: -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+D7↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_40]
                call    r14 ; _objc_release
                mov     rdi, rbx
                add     rsp, 88h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_keyValuesWithKeys_ignoredKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001C73D   proc near               ; DATA XREF: -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+152↑o

anonymous_0     = ymmword ptr -0C0h
anonymous_6     = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
anonymous_8     = qword ptr -88h
anonymous_7     = qword ptr -80h
var_78          = qword ptr -78h
anonymous_1     = qword ptr -70h
anonymous_2     = qword ptr -68h
anonymous_3     = qword ptr -60h
anonymous_4     = qword ptr -58h
anonymous_5     = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 98h
                mov     r14, rdi
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, [r14+20h]  ; void *
                mov     rsi, cs:selRef_count ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      short loc_10001C7BD
                mov     r15, [r14+20h]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_name ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_containsObject_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      loc_10001CB56

loc_10001C7BD:                          ; CODE XREF: sub_10001C73D+37↑j
                mov     r12, [r14+28h]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_name ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r13, cs:selRef_containsObject_
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     r12d, eax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                test    r12b, r12b
                jnz     loc_10001CB56
                mov     rdi, [r14+30h]  ; void *
                mov     rsi, cs:selRef_count ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      short loc_10001C860
                mov     r12, [r14+30h]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_name ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     r12d, eax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                test    r12b, r12b
                jz      loc_10001CB56

loc_10001C860:                          ; CODE XREF: sub_10001C73D+DE↑j
                mov     r12, [r14+38h]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_name ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     r12d, eax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                test    r12b, r12b
                jnz     loc_10001CB56
                mov     rdx, [r14+40h]
                mov     rsi, cs:selRef_valueForObject_ ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      loc_10001CB56
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_typeClass ; char *
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     r15, rax
                mov     rsi, cs:selRef_isFromFoundation ; char *
                mov     rdi, [rbp+var_38] ; void *
                call    cs:_objc_msgSend_ptr
                test    al, al
                setz    al
                test    r15, r15
                setnz   cl
                test    al, cl
                jz      short loc_10001C937
                lea     rax, selRef_mj_keyValues

loc_10001C921:                          ; CODE XREF: sub_10001C73D+454↓j
                mov     rsi, [rax]      ; char *
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                jmp     short loc_10001C988
; ---------------------------------------------------------------------------

loc_10001C937:                          ; CODE XREF: sub_10001C73D+1DB↑j
                mov     rdi, cs:classRef_NSArray ; void *
                mov     r12, cs:selRef_class
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001CB71
                mov     rdi, cs:classRef_NSObject ; void *
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_ ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue

loc_10001C988:                          ; CODE XREF: sub_10001C73D+1F8↑j
                mov     r15, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, r15

loc_10001C997:                          ; CODE XREF: sub_10001C73D+447↓j
                mov     rdi, [r14+50h]  ; void *
                mov     rsi, cs:selRef_mj_isReferenceReplacedKeyWhenCreatingKeyValues ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001CB04
                mov     rdx, [r14+50h]
                mov     rsi, cs:selRef_propertyKeysForClass_ ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     [rbp+var_30], r13
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     [rbp+var_48], r12
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_count ; char *
                call    cs:_objc_msgSend_ptr
                mov     [rbp+var_40], rax
                lea     r12, [rbp+var_78]
                mov     qword ptr [r12], 0
                mov     [r12+8], r12
                mov     rax, 3032000000h
                mov     [r12+10h], rax
                lea     rax, sub_10001AA15
                mov     [r12+18h], rax
                lea     rax, sub_10001AA2B
                mov     [r12+20h], rax
                mov     rdi, [r14+48h]
                mov     r15, cs:_objc_retain_ptr
                call    r15 ; _objc_retain
                mov     [r12+28h], rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r13, [rbp+anonymous_0+8]
                mov     [r13+0], rax
                mov     eax, 0C2000000h
                mov     [r13+8], rax
                lea     rax, sub_10001CC7B
                mov     [r13+10h], rax
                lea     rax, unk_10003A618
                mov     [r13+18h], rax
                mov     rax, [rbp+var_40]
                mov     [r13+38h], rax
                mov     rdi, [rbp+var_48]
                call    r15 ; _objc_retain
                mov     rcx, r15
                mov     r15, rax
                mov     [r13+20h], rax
                mov     [r13+30h], r12
                mov     rdi, [rbp+var_30]
                call    rcx
                mov     [r13+28h], rax
                mov     rsi, cs:selRef_enumerateObjectsUsingBlock_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_90]
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_98]
                call    r12 ; _objc_release
                lea     r14, [rbp+var_78]
                mov     rdi, r14        ; void *
                mov     esi, 8          ; int
                call    __Block_object_dispose
                mov     rdi, [r14+28h]
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     r13, [rbp+var_30]
                jmp     short loc_10001CB42
; ---------------------------------------------------------------------------

loc_10001CB04:                          ; CODE XREF: sub_10001C73D+26D↑j
                mov     r12, [r14+48h]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_name ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, r13
                mov     rcx, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10001CB42:                          ; CODE XREF: sub_10001C73D+3C5↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, [rbp+var_38]
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release

loc_10001CB56:                          ; CODE XREF: sub_10001C73D+7A↑j
                                        ; sub_10001C73D+C4↑j ...
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                add     rsp, 98h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10001CB71:                          ; CODE XREF: sub_10001C73D+226↑j
                mov     rdi, cs:classRef_NSURL ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     r15, rax
                jnz     loc_10001C997
                lea     rax, selRef_absoluteString
                jmp     loc_10001C921
sub_10001C73D   endp

; ---------------------------------------------------------------------------
                mov     r12, rdx
                mov     r15, rax
                lea     rdi, [rbp-78h]
                mov     esi, 8
                call    __Block_object_dispose
                jmp     short loc_10001CBBC
; ---------------------------------------------------------------------------
                jmp     short loc_10001CBB6
; ---------------------------------------------------------------------------
                jmp     short loc_10001CBB6
; ---------------------------------------------------------------------------
                jmp     short loc_10001CBB6
; ---------------------------------------------------------------------------
                jmp     short loc_10001CBB6
; ---------------------------------------------------------------------------
                jmp     short $+2
; ---------------------------------------------------------------------------

loc_10001CBB6:                          ; CODE XREF: __text:000000010001CBAC↑j
                                        ; __text:000000010001CBAE↑j ...
                mov     r12, rdx
                mov     r15, rax

loc_10001CBBC:                          ; CODE XREF: __text:000000010001CBAA↑j
                cmp     r12d, 1
                jnz     loc_10001CC73
                mov     rdi, r15
                call    _objc_begin_catch
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:classRef_NSError
                mov     rsi, cs:selRef_reason
                mov     rdi, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_
                mov     ecx, 0FAh
                mov     rdi, r12
                mov     rdx, rax
                xor     r8d, r8d
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, [r14+40h]
                mov     rsi, cs:selRef_class
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_setMj_error_
                mov     rdi, rax
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                call    _objc_end_catch
                jmp     loc_10001CB56
; ---------------------------------------------------------------------------
                mov     r15, rax
                call    _objc_end_catch

loc_10001CC73:                          ; CODE XREF: __text:000000010001CBC0↑j
                mov     rdi, r15
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001CC7B   proc near               ; DATA XREF: sub_10001C73D+338↑o

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     rbx, rdx
                mov     r12, rdi
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     r13, rax
                mov     rax, [r12+38h]
                dec     rax
                cmp     rax, rbx
                jz      loc_10001CE09
                mov     rdi, [r12+20h]  ; void *
                inc     rbx
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                jz      loc_10001CE09
                mov     r14, rax
                mov     [rbp+var_48], r12
                mov     rax, [r12+30h]
                mov     rax, [rax+8]
                mov     rdx, [rax+28h]
                mov     rsi, cs:selRef_valueInObject_ ; char *
                mov     [rbp+var_38], r13
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                mov     [rbp+var_40], r14
                jz      short loc_10001CD42
                mov     rdi, cs:classRef_NSNull ; void *
                mov     rsi, cs:selRef_class ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                test    al, al
                jz      loc_10001CEBA

loc_10001CD42:                          ; CODE XREF: sub_10001CC7B+97↑j
                mov     rbx, cs:selRef_type
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                test    eax, eax
                lea     rax, classRef_NSMutableDictionary
                lea     rcx, classRef_NSMutableArray
                cmovz   rcx, rax
                mov     rdi, [rcx]      ; void *
                lea     rax, selRef_dictionary
                lea     rcx, selRef_array
                cmovz   rcx, rax
                mov     rsi, [rcx]      ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, [rbp+var_38]
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     r14d, eax
                mov     rax, [rbp+var_48]
                mov     rax, [rax+30h]
                mov     rax, [rax+8]
                mov     rbx, [rax+28h]
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    r14d, r14d
                jz      loc_10001CE95
                mov     rsi, cs:selRef_intValue ; char *
                mov     rdi, r12        ; void *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                movsxd  rcx, eax
                mov     rsi, cs:selRef_setObject_atIndexedSubscript_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r15
                call    r14 ; _objc_msgSend
                jmp     loc_10001CEAB
; ---------------------------------------------------------------------------

loc_10001CE09:                          ; CODE XREF: sub_10001CC7B+2E↑j
                                        ; sub_10001CC7B+57↑j
                mov     rsi, cs:selRef_type ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, r13        ; void *
                call    r15 ; _objc_msgSend
                mov     r14d, eax
                mov     rax, [r12+28h]
                mov     [rbp+var_30], rax
                mov     rax, [r12+30h]
                mov     rax, [rax+8]
                mov     rbx, [rax+28h]
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r13        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    r14d, r14d
                jz      short loc_10001CE76
                mov     rsi, cs:selRef_intValue ; char *
                mov     rdi, r12        ; void *
                call    r15 ; _objc_msgSend
                movsxd  rcx, eax
                mov     rsi, cs:selRef_setObject_atIndexedSubscript_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, [rbp+var_30]
                call    r15 ; _objc_msgSend
                jmp     short loc_10001CE8D
; ---------------------------------------------------------------------------

loc_10001CE76:                          ; CODE XREF: sub_10001CC7B+1D6↑j
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, [rbp+var_30]
                mov     rcx, r12
                call    cs:_objc_msgSend_ptr

loc_10001CE8D:                          ; CODE XREF: sub_10001CC7B+1F9↑j
                mov     r14, r12
                jmp     loc_10001CFC7
; ---------------------------------------------------------------------------

loc_10001CE95:                          ; CODE XREF: sub_10001CC7B+15C↑j
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r15
                mov     rcx, r12
                call    cs:_objc_msgSend_ptr

loc_10001CEAB:                          ; CODE XREF: sub_10001CC7B+189↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     r14, [rbp+var_40]
                jmp     short loc_10001CEC1
; ---------------------------------------------------------------------------

loc_10001CEBA:                          ; CODE XREF: sub_10001CC7B+C1↑j
                mov     r15, r13
                mov     r13, [rbp+var_38]

loc_10001CEC1:                          ; CODE XREF: sub_10001CC7B+23D↑j
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_class ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      loc_10001CFAD
                mov     [rbp+var_50], r15
                mov     rdi, r15
                call    cs:_objc_retain_ptr
                mov     r13, rax
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_intValue ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r14d, eax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rbx, cs:selRef_count
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                inc     r14d
                movsxd  r14, r14d
                cmp     rax, r14
                jnb     short loc_10001CF98
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_30], rax

loc_10001CF58:                          ; CODE XREF: sub_10001CC7B+31B↓j
                mov     rdi, cs:classRef_NSNull ; void *
                mov     rsi, cs:selRef_null ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_30] ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                cmp     rax, r14
                jb      short loc_10001CF58

loc_10001CF98:                          ; CODE XREF: sub_10001CC7B+2D0↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, [rbp+var_38]
                mov     r14, [rbp+var_40]
                mov     r15, [rbp+var_50]

loc_10001CFAD:                          ; CODE XREF: sub_10001CC7B+270↑j
                mov     rax, [rbp+var_48]
                mov     rax, [rax+30h]
                mov     rax, [rax+8]
                mov     rdi, [rax+28h]
                mov     [rax+28h], r15
                call    cs:_objc_release_ptr

loc_10001CFC7:                          ; CODE XREF: sub_10001CC7B+215↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r13
                mov     rax, rbx
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_10001CC7B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001CFE9   proc near               ; DATA XREF: __const:000000010003A628↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rsi
                mov     r14, rdi
                mov     rdi, [rsi+20h]
                mov     r15, cs:_objc_retain_ptr
                call    r15 ; _objc_retain
                mov     rdi, [rbx+28h]
                call    r15 ; _objc_retain
                add     r14, 30h
                mov     rsi, [rbx+30h]  ; void *
                mov     rdi, r14        ; void *
                mov     edx, 8          ; int
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     __Block_object_assign
sub_10001CFE9   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001D02D   proc near               ; DATA XREF: __const:000000010003A630↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+30h]  ; void *
                mov     esi, 8          ; int
                call    __Block_object_dispose
                mov     rdi, [rbx+28h]
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_10001D02D   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001D060   proc near               ; DATA XREF: __const:000000010003A658↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     rdi, [rsi+20h]
                mov     r14, cs:_objc_retain_ptr
                call    r14 ; _objc_retain
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+30h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+38h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+40h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+48h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_10001D060   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10001D0A1   proc near               ; DATA XREF: __const:000000010003A660↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+48h]
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbx+40h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+38h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+30h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_10001D0A1   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_keyValuesArrayWithObjectArray:](NSObject_meta *self, SEL, id)
__NSObject_mj_keyValuesArrayWithObjectArray__ proc near
                                        ; DATA XREF: __objc_const:0000000100042418↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_
                xor     ecx, ecx
                xor     r8d, r8d
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_keyValuesArrayWithObjectArray__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_keyValuesArrayWithObjectArray:keys:](NSObject_meta *self, SEL, id, id)
__NSObject_mj_keyValuesArrayWithObjectArray_keys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042430↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_
                xor     r8d, r8d
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_keyValuesArrayWithObjectArray_keys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_keyValuesArrayWithObjectArray:ignoredKeys:](NSObject_meta *self, SEL, id, id)
__NSObject_mj_keyValuesArrayWithObjectArray_ignoredKeys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042448↓o
                push    rbp
                mov     rbp, rsp
                mov     r8, rcx
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_
                xor     ecx, ecx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_keyValuesArrayWithObjectArray_ignoredKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:](NSObject_meta *self, SEL, id, id, id)
__NSObject_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042460↓o

var_130         = xmmword ptr -130h
var_120         = xmmword ptr -120h
anonymous_0     = xmmword ptr -110h
anonymous_1     = xmmword ptr -100h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 108h
                mov     r15, r8
                mov     r14, rcx
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     r12, cs:_objc_retain_ptr
                mov     rdi, rdx
                call    r12 ; _objc_retain
                mov     rdi, r14
                mov     r14, rax
                call    r12 ; _objc_retain
                mov     [rbp+var_D0], rax
                mov     rdi, r15
                call    r12 ; _objc_retain
                mov     [rbp+var_C8], rax
                mov     r15, cs:selRef_class
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                test    al, al
                jz      loc_10001D345
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_array ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_C0], rax
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_130]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     [rbp+var_D8], r14
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      loc_10001D32F
                mov     rbx, rax
                lea     rax, [rbp+var_130]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_F0], rax

loc_10001D253:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+204↓j
                mov     r14, r13
                mov     rax, cs:selRef_mj_keyValuesWithKeys_
                mov     [rbp+var_E8], rax
                mov     r13, cs:selRef_addObject_
                mov     rax, cs:selRef_mj_keyValuesWithIgnoredKeys_
                mov     [rbp+var_E0], rax
                xor     r15d, r15d

loc_10001D27C:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+1D4↓j
                mov     rax, qword ptr [rbp+var_120]
                mov     rcx, [rbp+var_F0]
                cmp     [rax], rcx
                jz      short loc_10001D29B
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_10001D29B:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+168↑j
                mov     rax, qword ptr [rbp+var_130+8]
                mov     rdi, [rax+r15*8] ; void *
                mov     rdx, [rbp+var_D0]
                test    rdx, rdx
                jz      short loc_10001D2BB
                mov     rsi, [rbp+var_E8]
                jmp     short loc_10001D2C9
; ---------------------------------------------------------------------------

loc_10001D2BB:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+18B↑j
                mov     rsi, [rbp+var_E0] ; char *
                mov     rdx, [rbp+var_C8]

loc_10001D2C9:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+194↑j
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, [rbp+var_C0]
                mov     rsi, r13
                mov     rdx, rax
                call    r14
                mov     rdi, r12
                call    cs:_objc_release_ptr
                inc     r15
                cmp     rbx, r15
                jnz     short loc_10001D27C
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8]
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_
                lea     rdx, [rbp+var_130]
                lea     rcx, [rbp+var_B0]
                mov     r13, r14
                call    r14
                mov     rbx, rax
                test    rax, rax
                jnz     loc_10001D253

loc_10001D32F:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+110↑j
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr
                mov     r14, [rbp+var_D8]
                jmp     short loc_10001D39D
; ---------------------------------------------------------------------------

loc_10001D345:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+9A↑j
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, cs:selRef_errorWithDomain_code_userInfo_ ; char *
                lea     rdx, cfstr_Objectarray ; "objectArray参数不是一个数组"
                mov     [rbp+var_C0], 0
                mov     ecx, 0FAh
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setMj_error_ ; char *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_10001D39D:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+21E↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_C8]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_D0]
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_10001D3E8
                mov     rdi, [rbp+var_C0]
                add     rsp, 108h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10001D3E8:                          ; CODE XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+2A4↑j
                call    ___stack_chk_fail
__NSObject_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_JSONData](NSObject *self, SEL)
__NSObject_mj_JSONData_ proc near       ; DATA XREF: __objc_const:0000000100042290↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSString ; void *
                mov     r14, cs:selRef_class
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     r15, cs:selRef_isKindOfClass_
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_10001D44C
                mov     rsi, cs:selRef_dataUsingEncoding_ ; char *
                mov     edx, 4
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                jmp     short loc_10001D472
; ---------------------------------------------------------------------------

loc_10001D44C:                          ; CODE XREF: -[NSObject mj_JSONData]+3E↑j
                mov     rdi, cs:classRef_NSData ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_10001D485
                mov     rdi, rbx
                call    cs:_objc_retain_ptr

loc_10001D472:                          ; CODE XREF: -[NSObject mj_JSONData]+5D↑j
                mov     rbx, rax

loc_10001D475:                          ; CODE XREF: -[NSObject mj_JSONData]+E0↓j
                mov     rdi, rbx
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10001D485:                          ; CODE XREF: -[NSObject mj_JSONData]+7A↑j
                mov     r14, cs:classRef_NSJSONSerialization
                mov     rsi, cs:selRef_mj_JSONObject ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_dataWithJSONObject_options_error_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                xor     ecx, ecx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                jmp     short loc_10001D475
__NSObject_mj_JSONData_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_JSONObject](NSObject *self, SEL)
__NSObject_mj_JSONObject_ proc near     ; DATA XREF: __objc_const:00000001000422A8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSString ; void *
                mov     r14, cs:selRef_class
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     r15, cs:selRef_isKindOfClass_
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_10001D55E
                mov     r14, cs:classRef_NSJSONSerialization
                mov     rsi, cs:selRef_dataUsingEncoding_ ; char *
                mov     edx, 4
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_JSONObjectWithData_options_error_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                xor     ecx, ecx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                jmp     short loc_10001D5BC
; ---------------------------------------------------------------------------

loc_10001D55E:                          ; CODE XREF: -[NSObject mj_JSONObject]+3E↑j
                mov     rdi, cs:classRef_NSData ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_10001D5A1
                mov     rdi, cs:classRef_NSJSONSerialization ; void *
                mov     rsi, cs:selRef_JSONObjectWithData_options_error_ ; char *
                mov     rdx, rbx
                xor     ecx, ecx
                xor     r8d, r8d
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                jmp     short loc_10001D5B9
; ---------------------------------------------------------------------------

loc_10001D5A1:                          ; CODE XREF: -[NSObject mj_JSONObject]+AA↑j
                mov     rsi, cs:selRef_mj_keyValues ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue

loc_10001D5B9:                          ; CODE XREF: -[NSObject mj_JSONObject]+D0↑j
                mov     rbx, rax

loc_10001D5BC:                          ; CODE XREF: -[NSObject mj_JSONObject]+8D↑j
                mov     rdi, rbx
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_JSONObject_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject mj_JSONString](NSObject *self, SEL)
__NSObject_mj_JSONString_ proc near     ; DATA XREF: __objc_const:00000001000422C0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSString ; void *
                mov     r14, cs:selRef_class
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     r15, cs:selRef_isKindOfClass_
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_10001D617
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                jmp     short loc_10001D65F
; ---------------------------------------------------------------------------

loc_10001D617:                          ; CODE XREF: -[NSObject mj_JSONString]+3E↑j
                mov     rdi, cs:classRef_NSData ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, cs:classRef_NSString
                call    _objc_alloc
                mov     r14, rax
                test    r15b, r15b
                jz      short loc_10001D672
                mov     rsi, cs:selRef_initWithData_encoding_ ; char *
                mov     ecx, 4
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr

loc_10001D65F:                          ; CODE XREF: -[NSObject mj_JSONString]+49↑j
                mov     rbx, rax

loc_10001D662:                          ; CODE XREF: -[NSObject mj_JSONString]+DF↓j
                mov     rdi, rbx
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10001D672:                          ; CODE XREF: -[NSObject mj_JSONString]+79↑j
                mov     rsi, cs:selRef_mj_JSONData ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_initWithData_encoding_ ; char *
                mov     ecx, 4
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                jmp     short loc_10001D662
__NSObject_mj_JSONString_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject setKeyValues:](NSObject *self, SEL, id)
__NSObject_setKeyValues__ proc near     ; DATA XREF: __objc_const:0000000100042920↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setKeyValues_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_setKeyValues__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject setKeyValues:error:](NSObject *self, SEL, id, id *)
__NSObject_setKeyValues_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042938↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_setKeyValues_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001D721
                mov     rsi, cs:selRef_class ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001D721:                          ; CODE XREF: -[NSObject setKeyValues:error:]+2C↑j
                mov     rdi, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_setKeyValues_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject setKeyValues:context:](NSObject *self, SEL, id, id)
__NSObject_setKeyValues_context__ proc near
                                        ; DATA XREF: __objc_const:0000000100042950↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setKeyValues_context_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_setKeyValues_context__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject setKeyValues:context:error:](NSObject *self, SEL, id, id, id *)
__NSObject_setKeyValues_context_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042968↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, r8
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_setKeyValues_context_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001D7A5
                mov     rsi, cs:selRef_class ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001D7A5:                          ; CODE XREF: -[NSObject setKeyValues:context:error:]+2C↑j
                mov     rdi, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_setKeyValues_context_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject referenceReplacedKeyWhenCreatingKeyValues:](NSObject_meta *self, SEL, char)
__NSObject_referenceReplacedKeyWhenCreatingKeyValues__ proc near
                                        ; DATA XREF: __objc_const:0000000100042A60↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_referenceReplacedKeyWhenCreatingKeyValues_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_referenceReplacedKeyWhenCreatingKeyValues__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject keyValues](NSObject *self, SEL)
__NSObject_keyValues_ proc near         ; DATA XREF: __objc_const:0000000100042980↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValues
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_keyValues_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject keyValuesWithError:](NSObject *self, SEL, id *)
__NSObject_keyValuesWithError__ proc near
                                        ; DATA XREF: __objc_const:0000000100042998↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_keyValues ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001D83B
                mov     rsi, cs:selRef_class ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001D83B:                          ; CODE XREF: -[NSObject keyValuesWithError:]+2C↑j
                mov     rdi, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_keyValuesWithError__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject keyValuesWithKeys:](NSObject *self, SEL, id)
__NSObject_keyValuesWithKeys__ proc near
                                        ; DATA XREF: __objc_const:00000001000429B0↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesWithKeys_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_keyValuesWithKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject keyValuesWithKeys:error:](NSObject *self, SEL, id, id *)
__NSObject_keyValuesWithKeys_error__ proc near
                                        ; DATA XREF: __objc_const:00000001000429C8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_keyValuesWithKeys_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001D8BF
                mov     rsi, cs:selRef_class ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001D8BF:                          ; CODE XREF: -[NSObject keyValuesWithKeys:error:]+2C↑j
                mov     rdi, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_keyValuesWithKeys_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject keyValuesWithIgnoredKeys:](NSObject *self, SEL, id)
__NSObject_keyValuesWithIgnoredKeys__ proc near
                                        ; DATA XREF: __objc_const:00000001000429E0↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesWithIgnoredKeys_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_keyValuesWithIgnoredKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject keyValuesWithIgnoredKeys:error:](NSObject *self, SEL, id, id *)
__NSObject_keyValuesWithIgnoredKeys_error__ proc near
                                        ; DATA XREF: __objc_const:00000001000429F8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_keyValuesWithIgnoredKeys_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001D943
                mov     rsi, cs:selRef_class ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001D943:                          ; CODE XREF: -[NSObject keyValuesWithIgnoredKeys:error:]+2C↑j
                mov     rdi, r14
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_keyValuesWithIgnoredKeys_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject keyValuesArrayWithObjectArray:](NSObject_meta *self, SEL, id)
__NSObject_keyValuesArrayWithObjectArray__ proc near
                                        ; DATA XREF: __objc_const:0000000100042A78↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_keyValuesArrayWithObjectArray__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject keyValuesArrayWithObjectArray:error:](NSObject_meta *self, SEL, id, id *)
__NSObject_keyValuesArrayWithObjectArray_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042A90↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001D9B5
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001D9B5:                          ; CODE XREF: +[NSObject keyValuesArrayWithObjectArray:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_keyValuesArrayWithObjectArray_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject keyValuesArrayWithObjectArray:keys:](NSObject_meta *self, SEL, id, id)
__NSObject_keyValuesArrayWithObjectArray_keys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042AA8↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_keys_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_keyValuesArrayWithObjectArray_keys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject keyValuesArrayWithObjectArray:keys:error:](NSObject_meta *self, SEL, id, id, id *)
__NSObject_keyValuesArrayWithObjectArray_keys_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042AC0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, r8
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_keys_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DA29
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DA29:                          ; CODE XREF: +[NSObject keyValuesArrayWithObjectArray:keys:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_keyValuesArrayWithObjectArray_keys_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject keyValuesArrayWithObjectArray:ignoredKeys:](NSObject_meta *self, SEL, id, id)
__NSObject_keyValuesArrayWithObjectArray_ignoredKeys__ proc near
                                        ; DATA XREF: __objc_const:0000000100042AD8↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_ignoredKeys_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_keyValuesArrayWithObjectArray_ignoredKeys__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject keyValuesArrayWithObjectArray:ignoredKeys:error:](NSObject_meta *self, SEL, id, id, id *)
__NSObject_keyValuesArrayWithObjectArray_ignoredKeys_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042AF0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, r8
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_keyValuesArrayWithObjectArray_ignoredKeys_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DA9D
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DA9D:                          ; CODE XREF: +[NSObject keyValuesArrayWithObjectArray:ignoredKeys:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_keyValuesArrayWithObjectArray_ignoredKeys_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithKeyValues:](NSObject_meta *self, SEL, id)
__NSObject_objectWithKeyValues__ proc near
                                        ; DATA XREF: __objc_const:0000000100042B08↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectWithKeyValues_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectWithKeyValues__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithKeyValues:error:](NSObject_meta *self, SEL, id, id *)
__NSObject_objectWithKeyValues_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042B20↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectWithKeyValues_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DB11
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DB11:                          ; CODE XREF: +[NSObject objectWithKeyValues:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectWithKeyValues_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithKeyValues:context:](NSObject_meta *self, SEL, id, id)
__NSObject_objectWithKeyValues_context__ proc near
                                        ; DATA XREF: __objc_const:0000000100042B38↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectWithKeyValues_context_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectWithKeyValues_context__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithKeyValues:context:error:](NSObject_meta *self, SEL, id, id, id *)
__NSObject_objectWithKeyValues_context_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042B50↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, r8
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectWithKeyValues_context_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DB85
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DB85:                          ; CODE XREF: +[NSObject objectWithKeyValues:context:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectWithKeyValues_context_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithFilename:](NSObject_meta *self, SEL, id)
__NSObject_objectWithFilename__ proc near
                                        ; DATA XREF: __objc_const:0000000100042B68↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectWithFilename_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectWithFilename__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithFilename:error:](NSObject_meta *self, SEL, id, id *)
__NSObject_objectWithFilename_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042B80↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectWithFilename_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DBF9
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DBF9:                          ; CODE XREF: +[NSObject objectWithFilename:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectWithFilename_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithFile:](NSObject_meta *self, SEL, id)
__NSObject_objectWithFile__ proc near   ; DATA XREF: __objc_const:0000000100042B98↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectWithFile_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectWithFile__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectWithFile:error:](NSObject_meta *self, SEL, id, id *)
__NSObject_objectWithFile_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042BB0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectWithFile_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DC6D
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DC6D:                          ; CODE XREF: +[NSObject objectWithFile:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectWithFile_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithKeyValuesArray:](NSObject_meta *self, SEL, id)
__NSObject_objectArrayWithKeyValuesArray__ proc near
                                        ; DATA XREF: __objc_const:0000000100042BC8↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectArrayWithKeyValuesArray__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithKeyValuesArray:error:](NSObject_meta *self, SEL, id, id *)
__NSObject_objectArrayWithKeyValuesArray_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042BE0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DCE1
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DCE1:                          ; CODE XREF: +[NSObject objectArrayWithKeyValuesArray:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectArrayWithKeyValuesArray_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithKeyValuesArray:context:](NSObject_meta *self, SEL, id, id)
__NSObject_objectArrayWithKeyValuesArray_context__ proc near
                                        ; DATA XREF: __objc_const:0000000100042BF8↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_context_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectArrayWithKeyValuesArray_context__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithKeyValuesArray:context:error:](NSObject_meta *self, SEL, id, id, id *)
__NSObject_objectArrayWithKeyValuesArray_context_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042C10↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, r8
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectArrayWithKeyValuesArray_context_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DD55
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DD55:                          ; CODE XREF: +[NSObject objectArrayWithKeyValuesArray:context:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectArrayWithKeyValuesArray_context_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithFilename:](NSObject_meta *self, SEL, id)
__NSObject_objectArrayWithFilename__ proc near
                                        ; DATA XREF: __objc_const:0000000100042C28↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectArrayWithFilename_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectArrayWithFilename__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithFilename:error:](NSObject_meta *self, SEL, id, id *)
__NSObject_objectArrayWithFilename_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042C40↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectArrayWithFilename_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DDC9
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DDC9:                          ; CODE XREF: +[NSObject objectArrayWithFilename:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectArrayWithFilename_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithFile:](NSObject_meta *self, SEL, id)
__NSObject_objectArrayWithFile__ proc near
                                        ; DATA XREF: __objc_const:0000000100042C58↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_objectArrayWithFile_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_objectArrayWithFile__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject objectArrayWithFile:error:](NSObject_meta *self, SEL, id, id *)
__NSObject_objectArrayWithFile_error__ proc near
                                        ; DATA XREF: __objc_const:0000000100042C70↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r15, rdi
                mov     rsi, cs:selRef_mj_objectArrayWithFile_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rbx, rbx
                jz      short loc_10001DE3D
                mov     rsi, cs:selRef_mj_error ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_autorelease
                mov     [rbx], rax

loc_10001DE3D:                          ; CODE XREF: +[NSObject objectArrayWithFile:error:]+2B↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_objectArrayWithFile_error__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject JSONData](NSObject *self, SEL)
__NSObject_JSONData_ proc near          ; DATA XREF: __objc_const:0000000100042A10↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_JSONData
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_JSONData_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject JSONObject](NSObject *self, SEL)
__NSObject_JSONObject_ proc near        ; DATA XREF: __objc_const:0000000100042A28↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_JSONObject
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_JSONObject_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSObject JSONString](NSObject *self, SEL)
__NSObject_JSONString_ proc near        ; DATA XREF: __objc_const:0000000100042A40↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_JSONString
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_JSONString_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton updateTrackingAreas](SButton *self, SEL)
__SButton_updateTrackingAreas_ proc near
                                        ; DATA XREF: __objc_const:0000000100042D18↓o

var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_38          = qword ptr -38h
anonymous_1     = qword ptr -30h
anonymous_0     = qword ptr -28h
anonymous_2     = qword ptr -20h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                mov     rdi, cs:classRef_NSTrackingArea
                call    _objc_alloc
                mov     r14, rax
                mov     rdx, cs:selRef_bounds
                lea     r15, [rbp+var_38]
                mov     rdi, r15
                mov     rsi, rbx
                call    _objc_msgSend_stret
                mov     rsi, cs:selRef_initWithRect_options_owner_userInfo_ ; char *
                movups  xmm0, xmmword ptr [r15]
                movups  xmm1, xmmword ptr [r15+10h]
                movups  [rsp+60h+var_50], xmm1
                movups  [rsp+60h+var_60], xmm0
                mov     r15, cs:_objc_msgSend_ptr
                mov     edx, 21h
                mov     rdi, r14        ; void *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r15 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_addTrackingArea_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                add     rsp, 48h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
__SButton_updateTrackingAreas_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SButton *__cdecl -[SButton initWithFrame:](SButton *self, SEL, CGRect)
__SButton_initWithFrame__ proc near     ; DATA XREF: __objc_const:0000000100042D30↓o

var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_38          = qword ptr -38h
anonymous_0     = qword ptr -30h
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                lea     rax, [rbp+var_38]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SButton_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_initWithFrame_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+60h+var_50], xmm1
                movups  [rsp+60h+var_60], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      loc_10001E249
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     edx, 1
                call    r13 ; _objc_msgSend
                mov     r14, cs:selRef_layer
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setCornerRadius_ ; char *
                movsd   xmm0, cs:qword_10002F0D8
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setBorderWidth_ ; char *
                movsd   xmm0, cs:qword_10002EFF8
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     r14, r12
                mov     rdi, cs:classRef_NSColor ; void *
                mov     r15, cs:selRef_colorWithRed_green_blue_alpha_
                movsd   xmm1, cs:qword_10002F128
                movsd   xmm2, cs:qword_10002F130
                mov     rsi, r15        ; char *
                movsd   xmm0, cs:qword_10002EFF8
                movaps  xmm3, xmm0
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setM_highlightColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_highlightColor:]
                mov     rdi, r12
                call    r14
                mov     rdi, cs:classRef_NSColor ; void *
                movsd   xmm1, cs:qword_10002F140
                movsd   xmm2, cs:qword_10002F148
                xorps   xmm0, xmm0
                mov     rsi, r15        ; char *
                movsd   xmm3, cs:qword_10002EFF8
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_backgroundColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_backgroundColor:]
                mov     rdi, r15
                call    r14
                mov     r15, cs:selRef_m_backgroundColor
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[SButton m_backgroundColor]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setM_tmpbg_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_tmpbg:]
                mov     rdi, r12
                call    r14
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[SButton m_backgroundColor]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r15, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_layer ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setBorderColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     r14, cs:selRef_whiteColor
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_tmpTitleColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_tmpTitleColor:]
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_blackColor ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_titleHighlighColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_titleHighlighColor:]
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setM_titleColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_titleColor:]
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setM_progress_ ; char *
                movss   xmm0, cs:dword_10002F040
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[SButton setM_progress:]
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Update ; "update"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_title_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_title:]
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setTarget_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdx, cs:selRef_click_
                mov     rsi, cs:selRef_setAction_ ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend

loc_10001E249:                          ; CODE XREF: -[SButton initWithFrame:]+49↑j
                mov     rax, rbx
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SButton_initWithFrame__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton drawRect:](SButton *self, SEL, CGRect)
__SButton_drawRect__ proc near          ; DATA XREF: __objc_const:0000000100042D48↓o

var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = qword ptr -30h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                mov     rsi, cs:selRef_m_tmpbg ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[SButton m_tmpbg]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setFill ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                movsd   xmm0, [rbp+arg_10]
                movsd   [rbp+var_30], xmm0
                mov     rsi, cs:selRef_m_progress ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[SButton m_progress]
                cvtss2sd xmm0, xmm0
                mulsd   xmm0, cs:qword_10002F2A8
                mulsd   xmm0, [rbp+var_30]
                xorps   xmm1, xmm1
                movaps  [rbp+var_50], xmm1
                movsd   qword ptr [rbp+var_40], xmm0
                mov     rax, 4044000000000000h
                mov     qword ptr [rbp+var_40+8], rax
                movaps  xmm0, [rbp+var_50]
                movapd  xmm1, [rbp+var_40]
                movupd  [rsp+70h+var_60], xmm1
                movups  [rsp+70h+var_70], xmm0
                call    _NSRectFill
                mov     rsi, cs:selRef_m_title ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[SButton m_title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSFont ; void *
                mov     rsi, cs:selRef_fontWithName_size_ ; char *
                lea     rdx, cfstr_Arial ; "Arial"
                movsd   xmm0, cs:qword_10002F2B0
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rax, cs:_NSFontAttributeName_ptr
                mov     rcx, [rax]
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_m_tmpTitleColor ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[SButton m_tmpTitleColor]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rax, cs:_NSForegroundColorAttributeName_ptr
                mov     rcx, [rax]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_sizeWithAttributes_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                movsd   xmm2, [rbp+var_30]
                subsd   xmm2, xmm0
                movsd   xmm3, cs:qword_10002F058
                mulsd   xmm2, xmm3
                movapd  xmm0, xmm2
                movsd   xmm2, [rbp+arg_18]
                subsd   xmm2, xmm1
                mulsd   xmm2, xmm3
                mov     rsi, cs:selRef_drawAtPoint_withAttributes_ ; char *
                mov     rdi, r14        ; void *
                movapd  xmm1, xmm2
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SButton_drawRect__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton mouseEntered:](SButton *self, SEL, id)
__SButton_mouseEntered__ proc near      ; DATA XREF: __objc_const:0000000100042D60↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_isEnabled ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001E4E8
                mov     rsi, cs:selRef_m_title ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[SButton m_title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Success ; "success"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_isEqualToString_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     r13d, eax
                mov     r14, rbx
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_30]
                mov     r12, rbx
                call    rbx ; _objc_release
                test    r13b, r13b
                jz      short loc_10001E4F7

loc_10001E4E8:                          ; CODE XREF: -[SButton mouseEntered:]+20↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10001E4F7:                          ; CODE XREF: -[SButton mouseEntered:]+C1↑j
                mov     rbx, r14
                mov     r14, cs:selRef_m_highlightColor
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[SButton m_highlightColor]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_tmpbg_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_tmpbg:]
                mov     rdi, r15
                call    r12
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[SButton m_highlightColor]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setBorderColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_m_titleHighlighColor ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[SButton m_titleHighlighColor]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setM_tmpTitleColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_tmpTitleColor:]
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_setNeedsDisplay
                mov     rdi, rbx
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SButton_mouseEntered__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton mouseExited:](SButton *self, SEL, id)
__SButton_mouseExited__ proc near       ; DATA XREF: __objc_const:0000000100042D78↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_isEnabled ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10001E6AA
                mov     rsi, cs:selRef_m_title ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[SButton m_title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rbx
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Success ; "success"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_isEqualToString_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     r13d, eax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r14
                mov     r14, [rbp+var_30]
                mov     r12, r15
                call    r15 ; _objc_release
                test    r13b, r13b
                jz      short loc_10001E6B9

loc_10001E6AA:                          ; CODE XREF: -[SButton mouseExited:]+20↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10001E6B9:                          ; CODE XREF: -[SButton mouseExited:]+C4↑j
                mov     rsi, cs:selRef_m_titleColor ; char *
                mov     rdi, r14        ; void *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r14
                mov     r14, rax
                mov     rsi, cs:selRef_setM_tmpTitleColor_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     r14, cs:selRef_m_backgroundColor
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setM_tmpbg_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setBorderColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_setNeedsDisplay
                mov     rdi, r13
                mov     rax, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SButton_mouseExited__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_progress:](SButton *self, SEL, float)
__SButton_setM_progress__ proc near     ; CODE XREF: -[UpdateView changeUIWithState:]+7E5↑P
                                        ; -[UpdateView SHIDBootStartUpdate:]+1E5↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_progress ; float _m_progress;
                movss   dword ptr [rdi+rax], xmm0
                mov     rsi, cs:selRef_setNeedsDisplay
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__SButton_setM_progress__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_title:](SButton *self, SEL, id)
__SButton_setM_title__ proc near        ; CODE XREF: -[UpdateView changeUIWithState:]+4CF↑P
                                        ; -[UpdateView changeUIWithState:]+555↑P ...
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdx
                mov     r14, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_title ; NSString *_m_title;
                add     rdi, r14
                mov     rsi, rdx
                call    _objc_storeStrong
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_setNeedsDisplay ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__SButton_setM_title__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_backgroundColor:](SButton *self, SEL, id)
__SButton_setM_backgroundColor__ proc near
                                        ; CODE XREF: -[UpdateView changeUIWithState:]+2DB↑P
                                        ; -[UpdateView changeBoot]+69↑P ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdx
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_backgroundColor ; NSColor *_m_backgroundColor;
                add     rdi, rbx
                mov     rsi, rdx
                call    _objc_storeStrong
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rsi, cs:selRef_setM_tmpbg_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_tmpbg:]
                mov     rdi, r14
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setBorderColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_setNeedsDisplay ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SButton_setM_backgroundColor__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_highlightColor:](SButton *self, SEL, id)
__SButton_setM_highlightColor__ proc near
                                        ; CODE XREF: -[UpdateView changeUIWithState:]+348↑P
                                        ; -[SButton initWithFrame:]+11E↑P ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdx
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_highlightColor ; NSColor *_m_highlightColor;
                add     rdi, rbx
                mov     rsi, rdx
                call    _objc_storeStrong
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rsi, cs:selRef_setM_tmpbg_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[SButton setM_tmpbg:]
                mov     rdi, r14
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setBorderColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_setNeedsDisplay ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SButton_setM_highlightColor__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_titleColor:](SButton *self, SEL, id)
__SButton_setM_titleColor__ proc near   ; CODE XREF: -[SButton initWithFrame:]+294↑P
                                        ; DATA XREF: __objc_const:0000000100042DF0↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdx
                mov     r14, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_titleColor ; NSColor *_m_titleColor;
                add     rdi, r14
                mov     rsi, rdx
                call    _objc_storeStrong
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_setNeedsDisplay ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__SButton_setM_titleColor__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_titleHighlighColor:](SButton *self, SEL, id)
__SButton_setM_titleHighlighColor__ proc near
                                        ; CODE XREF: -[SButton initWithFrame:]+266↑P
                                        ; -[FirmwaerUpdateLog windowDidLoad]+1D8↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdx
                mov     r14, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_titleHighlighColor ; NSColor *_m_titleHighlighColor;
                add     rdi, r14
                mov     rsi, rdx
                call    _objc_storeStrong
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_setNeedsDisplay ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__SButton_setM_titleHighlighColor__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton click:](SButton *self, SEL, id)
__SButton_click__ proc near             ; DATA XREF: __objc_const:0000000100042E20↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     r14, cs:selRef_delegate
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[SButton delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdx, cs:selRef_SButtonClick_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r13b, r13b
                jz      short loc_10001EA9C
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[SButton delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SButtonClick_ ; char *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
; ---------------------------------------------------------------------------

loc_10001EA9C:                          ; CODE XREF: -[SButton click:]+53↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SButton_click__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; float __cdecl -[SButton m_progress](SButton *self, SEL)
__SButton_m_progress_ proc near         ; CODE XREF: -[SButton drawRect:]+5A↑P
                                        ; DATA XREF: __objc_const:0000000100042E38↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_progress ; float _m_progress;
                movss   xmm0, dword ptr [rdi+rax]
                pop     rbp
                retn
__SButton_m_progress_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[SButton m_title](SButton *self, SEL)
__SButton_m_title_ proc near            ; CODE XREF: -[SButton drawRect:]+AA↑P
                                        ; -[SButton mouseEntered:]+37↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_title ; NSString *_m_title;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_m_title_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSColor *__cdecl -[SButton m_backgroundColor](SButton *self, SEL)
__SButton_m_backgroundColor_ proc near  ; CODE XREF: -[SButton initWithFrame:]+17D↑P
                                        ; -[SButton initWithFrame:]+1A7↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_backgroundColor ; NSColor *_m_backgroundColor;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_m_backgroundColor_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSColor *__cdecl -[SButton m_highlightColor](SButton *self, SEL)
__SButton_m_highlightColor_ proc near   ; CODE XREF: -[UpdateView changeBoot]+3A↑P
                                        ; -[SButton mouseEntered:]+E9↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_highlightColor ; NSColor *_m_highlightColor;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_m_highlightColor_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSColor *__cdecl -[SButton m_titleColor](SButton *self, SEL)
__SButton_m_titleColor_ proc near       ; DATA XREF: __objc_const:0000000100042E98↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_titleColor ; NSColor *_m_titleColor;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_m_titleColor_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSColor *__cdecl -[SButton m_titleHighlighColor](SButton *self, SEL)
__SButton_m_titleHighlighColor_ proc near
                                        ; CODE XREF: -[SButton mouseEntered:]+17E↑P
                                        ; DATA XREF: __objc_const:0000000100042EB0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_titleHighlighColor ; NSColor *_m_titleHighlighColor;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_m_titleHighlighColor_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SButton delegate](SButton *self, SEL)
__SButton_delegate_ proc near           ; CODE XREF: -[SButton click:]+22↑P
                                        ; -[SButton click:]+5B↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__delegate ; id _delegate;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_delegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setDelegate:](SButton *self, SEL, id)
__SButton_setDelegate__ proc near       ; CODE XREF: -[ViewController initView]+7C↑P
                                        ; -[UpdateView initWithFrame:]+E3↑P ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SButton__delegate ; id _delegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SButton_setDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSColor *__cdecl -[SButton m_tmpbg](SButton *self, SEL)
__SButton_m_tmpbg_ proc near            ; CODE XREF: -[SButton drawRect:]+22↑P
                                        ; DATA XREF: __objc_const:0000000100042EF8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_tmpbg ; NSColor *_m_tmpbg;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_m_tmpbg_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_tmpbg:](SButton *self, SEL, id)
__SButton_setM_tmpbg__ proc near        ; CODE XREF: -[SButton initWithFrame:]+198↑P
                                        ; -[SButton mouseEntered:]+104↑P ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SButton__m_tmpbg ; NSColor *_m_tmpbg;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SButton_setM_tmpbg__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSColor *__cdecl -[SButton m_tmpTitleColor](SButton *self, SEL)
__SButton_m_tmpTitleColor_ proc near    ; CODE XREF: -[SButton drawRect:]+12C↑P
                                        ; DATA XREF: __objc_const:0000000100042F28↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SButton__m_tmpTitleColor ; NSColor *_m_tmpTitleColor;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SButton_m_tmpTitleColor_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton setM_tmpTitleColor:](SButton *self, SEL, id)
__SButton_setM_tmpTitleColor__ proc near
                                        ; CODE XREF: -[SButton initWithFrame:]+234↑P
                                        ; -[SButton mouseEntered:]+199↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SButton__m_tmpTitleColor ; NSColor *_m_tmpTitleColor;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SButton_setM_tmpTitleColor__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SButton .cxx_destruct](SButton *self, SEL)
__SButton__cxx_destruct_ proc near      ; DATA XREF: __objc_const:0000000100042F58↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_tmpTitleColor ; NSColor *_m_tmpTitleColor;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_tmpbg ; NSColor *_m_tmpbg;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SButton__delegate ; id _delegate;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_titleHighlighColor ; NSColor *_m_titleHighlighColor;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_titleColor ; NSColor *_m_titleColor;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_highlightColor ; NSColor *_m_highlightColor;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SButton__m_backgroundColor ; NSColor *_m_backgroundColor;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, cs:_OBJC_IVAR_$_SButton__m_title ; NSString *_m_title;
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__SButton__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SLoadXIB loadXibName:](SLoadXIB_meta *self, SEL, id)
__SLoadXIB_loadXibName__ proc near      ; CODE XREF: -[ViewController initView]+2D↑P
                                        ; DATA XREF: __objc_const:0000000100043180↓o

var_110         = ymmword ptr -110h
anonymous_1     = xmmword ptr -0F0h
anonymous_0     = xmmword ptr -0E0h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0E8h
                mov     rdi, rdx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, cs:classRef_NSArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     r12, [rbp+var_D0]
                mov     [r12], r15
                mov     rsi, cs:selRef_loadNibNamed_owner_topLevelObjects_ ; char *
                mov     [rbp+var_B8], 0
                mov     rdi, rax        ; void *
                mov     [rbp+var_C8], rbx
                mov     rdx, rbx
                xor     ecx, ecx
                mov     r8, r12
                call    r13 ; _objc_msgSend
                mov     rdi, [r12]
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_110]
                movaps  xmmword ptr [r14+30h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14], xmm0
                mov     rdi, r12
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      loc_10001EDE4
                mov     r13, rax
                lea     rax, [rbp+var_110]
                mov     rax, [rax+10h]
                mov     r15, [rax]
                mov     [rbp+var_B8], 0

loc_10001ED44:                          ; CODE XREF: +[SLoadXIB loadXibName:]+1AD↓j
                mov     r12, cs:selRef_isKindOfClass_
                xor     ebx, ebx

loc_10001ED4D:                          ; CODE XREF: +[SLoadXIB loadXibName:]+17D↓j
                mov     rax, qword ptr [rbp+var_110+10h]
                cmp     [rax], r15
                jz      short loc_10001ED65
                mov     rdi, [rbp+var_C0]
                call    _objc_enumerationMutation

loc_10001ED65:                          ; CODE XREF: +[SLoadXIB loadXibName:]+13F↑j
                mov     rax, qword ptr [rbp+var_110+8]
                mov     r14, [rax+rbx*8]
                mov     rdi, [rbp+var_C8]
                call    _NSClassFromString
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     short loc_10001EDCD
                inc     rbx
                cmp     r13, rbx
                jnz     short loc_10001ED4D
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_110]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                test    rax, rax
                jnz     loc_10001ED44
                jmp     short loc_10001EDDD
; ---------------------------------------------------------------------------

loc_10001EDCD:                          ; CODE XREF: +[SLoadXIB loadXibName:]+175↑j
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     [rbp+var_B8], rax

loc_10001EDDD:                          ; CODE XREF: +[SLoadXIB loadXibName:]+1B3↑j
                mov     rbx, cs:_objc_release_ptr

loc_10001EDE4:                          ; CODE XREF: +[SLoadXIB loadXibName:]+10A↑j
                mov     r14, [rbp+var_C0]
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_C8]
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_10001EE2B
                mov     rdi, [rbp+var_B8]
                add     rsp, 0E8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10001EE2B:                          ; CODE XREF: +[SLoadXIB loadXibName:]+1F4↑j
                call    ___stack_chk_fail
__SLoadXIB_loadXibName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog windowDidLoad](FirmwaerUpdateLog *self, SEL)
__FirmwaerUpdateLog_windowDidLoad_ proc near
                                        ; DATA XREF: __objc_const:00000001000432B8↓o

var_B0          = xmmword ptr -0B0h
var_A0          = xmmword ptr -0A0h
var_90          = qword ptr -90h
anonymous_1     = qword ptr -88h
var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_58          = xmmword ptr -58h
anonymous_0     = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 88h
                mov     rbx, rdi
                lea     rdi, [rbp+var_90]
                mov     [rdi], rbx
                mov     rax, cs:classRef_FirmwaerUpdateLog_0
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_windowDidLoad
                call    _objc_msgSendSuper2
                mov     rdi, cs:classRef_SButton
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setOkButton_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog setOkButton:]
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     r13, r12
                mov     r12, cs:selRef_okButton
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog okButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setM_title_ ; char *
                lea     rdx, cfstr_Ok   ; "OK"
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r13
                mov     rdi, cs:classRef_NSColor ; void *
                mov     r13, cs:selRef_colorWithRed_green_blue_alpha_
                movsd   xmm0, cs:qword_10002F130
                movsd   xmm1, cs:qword_10002F168
                movsd   xmm2, cs:qword_10002F170
                movsd   xmm3, cs:qword_10002EFF8
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog okButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setM_highlightColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r15 ; _objc_msgSend ; -[SButton setM_highlightColor:]
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                movsd   xmm1, cs:qword_10002F140
                movsd   xmm2, cs:qword_10002F148
                xorps   xmm0, xmm0
                mov     rsi, r13        ; char *
                movsd   xmm3, cs:qword_10002EFF8
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_okButton ; char *
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog okButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setM_backgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r15 ; _objc_msgSend ; -[SButton setM_backgroundColor:]
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_whiteColor ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     r13, cs:selRef_okButton
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog okButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setM_titleHighlighColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r15 ; _objc_msgSend ; -[SButton setM_titleHighlighColor:]
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog okButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setDelegate_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend ; -[SButton setDelegate:]
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_contentView ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog okButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_addSubview_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_window ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_contentView ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      short loc_10001F118
                mov     rdx, cs:selRef_frame
                lea     r13, [rbp+var_80]
                mov     rdi, r13
                mov     rsi, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r13+10h]
                addsd   xmm0, cs:qword_10002F2B8
                mulsd   xmm0, cs:qword_10002F058
                jmp     short loc_10001F12B
; ---------------------------------------------------------------------------

loc_10001F118:                          ; CODE XREF: -[FirmwaerUpdateLog windowDidLoad]+2B8↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_70], xmm0
                movaps  [rbp+var_80], xmm0
                movsd   xmm0, cs:qword_10002F060

loc_10001F12B:                          ; CODE XREF: -[FirmwaerUpdateLog windowDidLoad]+2E6↑j
                movsd   [rbp+var_30], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_okButton ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[FirmwaerUpdateLog okButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r15
                mov     r15, rax
                movsd   xmm0, [rbp+var_30]
                movsd   qword ptr [rbp+var_58], xmm0
                movaps  xmm0, cs:xmmword_10002F2C0
                movups  [rbp+var_58+8], xmm0
                mov     rax, 4043000000000000h
                mov     [rbp+var_40], rax
                mov     rsi, cs:selRef_setFrame_
                movups  xmm0, [rbp+var_58]
                movups  xmm1, xmmword ptr [rbp-48h]
                movups  [rsp+0B0h+var_A0], xmm1
                movups  [rsp+0B0h+var_B0], xmm0
                mov     rdi, r15
                call    r13
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     r12, r15
                mov     rdi, rbx
                mov     rsi, cs:selRef_window
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_contentView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setWantsLayer_
                mov     rdi, rax
                mov     edx, 1
                call    r13
                mov     rdi, r15
                call    r12
                mov     rdi, r14
                call    r12
                mov     rdi, cs:classRef_NSColor
                movsd   xmm0, cs:qword_10002EFF0
                movsd   xmm3, cs:qword_10002EFF8
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rsi, cs:selRef_CGColor
                mov     rdi, rax
                call    r13
                mov     [rbp+var_38], rax
                mov     rdi, rbx
                mov     rsi, cs:selRef_window
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_contentView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r13
                mov     r13, rax
                mov     rsi, cs:selRef_layer
                mov     rdi, rax
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rbx
                mov     rbx, rax
                mov     rsi, cs:selRef_setBackgroundColor_
                mov     rdi, rax
                mov     rdx, [rbp+var_38]
                call    r12
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_blackColor
                mov     r15, r12
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_title
                mov     r13, [rbp+var_30]
                mov     rdi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTextColor_
                mov     rdi, rax
                mov     rdx, rbx
                call    r15
                mov     rdi, r12
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     r12, r14
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_blackColor
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_content
                mov     rdi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setTextColor_
                mov     rdx, rbx
                call    r15
                mov     rdi, r14
                call    r12
                mov     rdi, rbx
                call    r12
                add     rsp, 88h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__FirmwaerUpdateLog_windowDidLoad_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog SButtonClick:](FirmwaerUpdateLog *self, SEL, id)
__FirmwaerUpdateLog_SButtonClick__ proc near
                                        ; DATA XREF: __objc_const:00000001000432D0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_window ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_orderOut_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__FirmwaerUpdateLog_SButtonClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog setTitleString:](FirmwaerUpdateLog *self, SEL, id)
__FirmwaerUpdateLog_setTitleString__ proc near
                                        ; DATA XREF: __objc_const:00000001000432E8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rsi, cs:selRef_title ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[FirmwaerUpdateLog title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rax, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__titleString ; NSString *_titleString;
                mov     rdi, [rbx+rax]
                mov     [rbx+rax], r14
                mov     rax, r12
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__FirmwaerUpdateLog_setTitleString__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog setContentString:](FirmwaerUpdateLog *self, SEL, id)
__FirmwaerUpdateLog_setContentString__ proc near
                                        ; DATA XREF: __objc_const:0000000100043300↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rsi, cs:selRef_content ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend ; -[FirmwaerUpdateLog content]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rax, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__contentString ; NSString *_contentString;
                mov     rdi, [rbx+rax]
                mov     [rbx+rax], r14
                mov     rax, r12
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__FirmwaerUpdateLog_setContentString__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[FirmwaerUpdateLog titleString](FirmwaerUpdateLog *self, SEL)
__FirmwaerUpdateLog_titleString_ proc near
                                        ; DATA XREF: __objc_const:0000000100043318↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__titleString ; NSString *_titleString;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__FirmwaerUpdateLog_titleString_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[FirmwaerUpdateLog contentString](FirmwaerUpdateLog *self, SEL)
__FirmwaerUpdateLog_contentString_ proc near
                                        ; DATA XREF: __objc_const:0000000100043330↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__contentString ; NSString *_contentString;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__FirmwaerUpdateLog_contentString_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSTextField *__cdecl -[FirmwaerUpdateLog title](FirmwaerUpdateLog *self, SEL)
__FirmwaerUpdateLog_title_ proc near    ; CODE XREF: -[FirmwaerUpdateLog setTitleString:]+2B↑P
                                        ; DATA XREF: __objc_const:0000000100043348↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__title ; NSTextField *_title;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__FirmwaerUpdateLog_title_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog setTitle:](FirmwaerUpdateLog *self, SEL, id)
__FirmwaerUpdateLog_setTitle__ proc near
                                        ; DATA XREF: __objc_const:0000000100043360↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__title ; NSTextField *_title;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__FirmwaerUpdateLog_setTitle__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSTextField *__cdecl -[FirmwaerUpdateLog content](FirmwaerUpdateLog *self, SEL)
__FirmwaerUpdateLog_content_ proc near  ; CODE XREF: -[FirmwaerUpdateLog setContentString:]+2B↑P
                                        ; DATA XREF: __objc_const:0000000100043378↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__content ; NSTextField *_content;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__FirmwaerUpdateLog_content_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog setContent:](FirmwaerUpdateLog *self, SEL, id)
__FirmwaerUpdateLog_setContent__ proc near
                                        ; DATA XREF: __objc_const:0000000100043390↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__content ; NSTextField *_content;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__FirmwaerUpdateLog_setContent__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SButton *__cdecl -[FirmwaerUpdateLog okButton](FirmwaerUpdateLog *self, SEL)
__FirmwaerUpdateLog_okButton_ proc near ; CODE XREF: -[FirmwaerUpdateLog windowDidLoad]+88↑P
                                        ; -[FirmwaerUpdateLog windowDidLoad]+F5↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__okButton ; SButton *_okButton;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__FirmwaerUpdateLog_okButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog setOkButton:](FirmwaerUpdateLog *self, SEL, id)
__FirmwaerUpdateLog_setOkButton__ proc near
                                        ; CODE XREF: -[FirmwaerUpdateLog windowDidLoad]+68↑P
                                        ; DATA XREF: __objc_const:00000001000433C0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__okButton ; SButton *_okButton;
                pop     rbp
                jmp     _objc_setProperty_atomic
__FirmwaerUpdateLog_setOkButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwaerUpdateLog .cxx_destruct](FirmwaerUpdateLog *self, SEL)
__FirmwaerUpdateLog__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:00000001000433D8↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__okButton ; SButton *_okButton;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__content ; NSTextField *_content;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__title ; NSTextField *_title;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__contentString ; NSString *_contentString;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, cs:_OBJC_IVAR_$_FirmwaerUpdateLog__titleString ; NSString *_titleString;
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__FirmwaerUpdateLog__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl +[Language isCurrentChinaLanguage](Language_meta *self, SEL)
__Language_isCurrentChinaLanguage_ proc near
                                        ; CODE XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+47↑P
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+A5↑P ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rdi, cs:classRef_NSUserDefaults ; void *
                mov     rsi, cs:selRef_standardUserDefaults ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_objectForKey_ ; char *
                lea     rdx, cfstr_Applelanguages ; "AppleLanguages"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_objectAtIndex_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:selRef_isEqualToString_
                lea     rdx, cfstr_ZhHansCn ; "zh-Hans-CN"
                mov     rdi, rax        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     r13b, 1
                test    al, al
                jnz     short loc_10001F671
                lea     rdx, cfstr_ZhHans ; "zh-Hans"
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     short loc_10001F671
                lea     rdx, cfstr_ZhHansUs ; "zh-Hans-US"
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                setnz   r13b

loc_10001F671:                          ; CODE XREF: +[Language isCurrentChinaLanguage]+86↑j
                                        ; +[Language isCurrentChinaLanguage]+9D↑j
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                movzx   eax, r13b
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__Language_isCurrentChinaLanguage_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; MoreView *__cdecl -[MoreView initWithFrame:](MoreView *self, SEL, CGRect)
__MoreView_initWithFrame__ proc near    ; DATA XREF: __objc_const:0000000100043638↓o

var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_48          = qword ptr -48h
anonymous_0     = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                lea     rax, [rbp+var_48]
                mov     [rax], rdi
                mov     rcx, cs:classRef_MoreView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_initWithFrame_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+70h+var_60], xmm1
                movups  [rsp+70h+var_70], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     r13, rax
                test    rax, rax
                jz      loc_10001FC98
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_setTitle_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend ; -[MoreView setTitle:]
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Chooseproduct ; "chooseProduct"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r14, cs:selRef_title
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend ; -[MoreView title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], r13
                mov     r13, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     r12, r13
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_blackColor ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setTextColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    r12
                mov     rdi, r15
                call    r12
                mov     rdi, cs:classRef_SView
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_init ; char *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_setLine_ ; char *
                mov     rdi, [rbp+var_30] ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     r14, cs:selRef_line
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_blackColor ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r15, rax
                mov     rsi, cs:selRef_CGColor ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r12, rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_layer ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     r13, r14
                mov     rdi, cs:classRef_NSScrollView
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_init ; char *
                call    rbx ; _objc_msgSend
                mov     r14, rax
                mov     rsi, cs:selRef_setMoreScrollView_ ; char *
                mov     rdi, [rbp+var_30] ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r13
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002EFF0
                movsd   xmm3, cs:qword_10002EFF8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_moreScrollView ; char *
                mov     rdi, [rbp+var_30] ; void *
                mov     r14, rsi
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                call    r13
                mov     rdi, r15
                call    r13
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setHasVerticalScroller_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, 1
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r13
                mov     r15, r13
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_verticalScroller ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     edx, 1
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                call    r15
                mov     rdi, r12
                call    r15
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_whiteColor ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_CGColor ; char *
                call    rbx ; _objc_msgSend
                mov     [rbp+var_38], rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, cs:selRef_moreScrollView ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_verticalScroller ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_layer ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdx, [rbp+var_38]
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     r15, r12
                mov     rdi, [rbp+var_30] ; void *
                mov     r13, cs:selRef_moreScrollView
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_horizontalScroller ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setWantsLayer_ ; char *
                mov     edx, 1
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                call    r15
                mov     rdi, r14
                call    r15
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_whiteColor ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_CGColor ; char *
                call    rbx ; _objc_msgSend
                mov     [rbp+var_38], rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_horizontalScroller ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_layer ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdx, [rbp+var_38]
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r13
                mov     r13, [rbp+var_30]
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     r12, r14
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_title ; char *
                call    rbx ; _objc_msgSend ; -[MoreView title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:selRef_addSubview_
                mov     rdi, r13        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_line ; char *
                call    rbx ; _objc_msgSend ; -[MoreView line]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_moreScrollView ; char *
                call    rbx ; _objc_msgSend ; -[MoreView moreScrollView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r12
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_ ; char *
                movsd   xmm0, cs:qword_10002EFF0
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                movsd   xmm3, cs:qword_10002EFF8
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_CGColor ; char *
                call    rbx ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_layer ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release

loc_10001FC98:                          ; CODE XREF: -[MoreView initWithFrame:]+49↑j
                mov     rax, r13
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__MoreView_initWithFrame__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView layout](MoreView *self, SEL)
__MoreView_layout_ proc near            ; DATA XREF: __objc_const:0000000100043650↓o

var_140         = xmmword ptr -140h
var_130         = xmmword ptr -130h
var_120         = byte ptr -120h
anonymous_1     = qword ptr -110h
var_100         = byte ptr -100h
anonymous_2     = qword ptr -0E8h
var_E0          = qword ptr -0E0h
anonymous_0     = qword ptr -0D8h
var_D0          = xmmword ptr -0D0h
var_C0          = xmmword ptr -0C0h
var_B0          = xmmword ptr -0B0h
var_A0          = xmmword ptr -0A0h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_68          = qword ptr -68h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_38          = xmmword ptr -38h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 118h
                mov     rbx, rdi
                lea     rdi, [rbp+var_E0]
                mov     [rdi], rbx
                mov     rax, cs:classRef_MoreView_0
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_layout
                call    _objc_msgSendSuper2
                mov     r14, cs:selRef_frame
                lea     r15, [rbp+var_120]
                mov     rdi, r15
                mov     rsi, rbx
                mov     rdx, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                mov     r12, cs:_OBJC_IVAR_$_MoreView_m_widht ; double m_widht;
                movsd   qword ptr [rbx+r12], xmm0
                lea     r15, [rbp+var_100]
                mov     rdi, r15
                mov     rsi, rbx
                mov     rdx, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                mov     rax, cs:_OBJC_IVAR_$_MoreView_m_height ; double m_height;
                movsd   qword ptr [rbx+rax], xmm0
                mov     r14, cs:selRef_title
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[MoreView title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_sizeToFit ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                movsd   xmm0, qword ptr [rbx+r12]
                addsd   xmm0, cs:qword_10002F2D0
                movsd   qword ptr [rbp+var_38], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[MoreView title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10001FDBD
                lea     r13, [rbp+var_D0]
                mov     rdi, r13
                mov     rsi, r15
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r13+18h]
                jmp     short loc_10001FDD5
; ---------------------------------------------------------------------------

loc_10001FDBD:                          ; CODE XREF: -[MoreView layout]+F0↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_C0], xmm0
                movapd  [rbp+var_D0], xmm0
                xorpd   xmm0, xmm0

loc_10001FDD5:                          ; CODE XREF: -[MoreView layout]+111↑j
                movsd   qword ptr [rbp+var_38+8], xmm0
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rax, cs:_OBJC_IVAR_$_MoreView_m_height ; double m_height;
                movsd   xmm0, qword ptr [rbx+rax]
                subsd   xmm0, qword ptr [rbp+var_38+8]
                addsd   xmm0, cs:qword_10002F2D8
                movsd   [rbp+var_68], xmm0
                mov     rdi, rbx        ; void *
                mov     r15, cs:selRef_title
                mov     rsi, r15        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[MoreView title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rax, 4032000000000000h
                mov     qword ptr [rbp+var_60], rax
                movsd   xmm0, [rbp+var_68]
                movsd   qword ptr [rbp+var_60+8], xmm0
                movsd   xmm0, qword ptr [rbp+var_38]
                movsd   qword ptr [rbp+var_50], xmm0
                movsd   xmm0, qword ptr [rbp+var_38+8]
                movsd   qword ptr [rbp+var_50+8], xmm0
                mov     rsi, cs:selRef_setFrame_ ; char *
                movups  xmm0, [rbp+var_60]
                movups  xmm1, [rbp+var_50]
                movups  [rsp+140h+var_130], xmm1
                movups  [rsp+140h+var_140], xmm0
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend ; -[MoreView title]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      short loc_10001FEB9
                lea     r13, [rbp+var_B0]
                mov     rdi, r13
                mov     rsi, r12
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r13+8]
                addsd   xmm0, cs:qword_10002F2E0
                jmp     short loc_10001FED2
; ---------------------------------------------------------------------------

loc_10001FEB9:                          ; CODE XREF: -[MoreView layout]+1E4↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_A0], xmm0
                movaps  [rbp+var_B0], xmm0
                movsd   xmm0, cs:qword_10002F2E0

loc_10001FED2:                          ; CODE XREF: -[MoreView layout]+20D↑j
                movsd   qword ptr [rbp+var_38+8], xmm0
                mov     rax, cs:_OBJC_IVAR_$_MoreView_m_widht ; double m_widht;
                movsd   xmm0, qword ptr [rbx+rax]
                addsd   xmm0, cs:qword_10002F2D0
                movsd   qword ptr [rbp+var_38], xmm0
                mov     r13, cs:selRef_line
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[MoreView line]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rax, 4032000000000000h
                mov     qword ptr [rbp+var_60], rax
                movsd   xmm0, qword ptr [rbp+var_38+8]
                movsd   qword ptr [rbp+var_60+8], xmm0
                movsd   xmm0, qword ptr [rbp+var_38]
                movsd   qword ptr [rbp+var_50], xmm0
                mov     rax, 3FF0000000000000h
                mov     qword ptr [rbp+var_50+8], rax
                movups  xmm0, [rbp+var_60]
                movupd  xmm1, [rbp+var_50]
                movupd  [rsp+140h+var_130], xmm1
                movups  [rsp+140h+var_140], xmm0
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rax, cs:_OBJC_IVAR_$_MoreView_m_widht ; double m_widht;
                movsd   xmm0, qword ptr [rbx+rax]
                movsd   qword ptr [rbp+var_38+8], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[MoreView line]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      short loc_10001FFD5
                lea     r14, [rbp+var_90]
                mov     rdi, r14
                mov     rsi, r12
                mov     rdx, cs:selRef_frame
                call    _objc_msgSend_stret
                movsd   xmm0, cs:qword_10002F2D8
                movsd   xmm1, qword ptr [r14+8]
                addsd   xmm1, xmm0
                addsd   xmm1, xmm0
                movsd   qword ptr [rbp+var_38], xmm1
                jmp     short loc_10001FFF0
; ---------------------------------------------------------------------------

loc_10001FFD5:                          ; CODE XREF: -[MoreView layout]+2F3↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_80], xmm0
                movaps  [rbp+var_90], xmm0
                movsd   xmm0, cs:qword_10002F2D0
                movsd   qword ptr [rbp+var_38], xmm0

loc_10001FFF0:                          ; CODE XREF: -[MoreView layout]+329↑j
                movsd   xmm0, qword ptr [rbp+var_38+8]
                addsd   xmm0, cs:qword_10002F2D0
                movsd   qword ptr [rbp+var_38+8], xmm0
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_moreScrollView ; char *
                mov     rdi, rbx        ; void *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[MoreView moreScrollView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                movaps  xmm0, cs:xmmword_10002F310
                movaps  [rbp+var_60], xmm0
                movsd   xmm0, qword ptr [rbp+var_38+8]
                movsd   qword ptr [rbp+var_50], xmm0
                movsd   xmm0, qword ptr [rbp+var_38]
                movsd   qword ptr [rbp+var_50+8], xmm0
                movaps  xmm0, [rbp+var_60]
                movaps  xmm1, [rbp+var_50]
                movups  [rsp+140h+var_130], xmm1
                movups  [rsp+140h+var_140], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_addProduct ; char *
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend ; -[MoreView addProduct]
                add     rsp, 118h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__MoreView_layout_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView addProduct](MoreView *self, SEL)
__MoreView_addProduct_ proc near        ; CODE XREF: -[MoreView layout]+3D1↑P
                                        ; DATA XREF: __objc_const:0000000100043668↓o

var_250         = xmmword ptr -250h
var_240         = xmmword ptr -240h
var_230         = xmmword ptr -230h
var_220         = xmmword ptr -220h
var_210         = xmmword ptr -210h
var_200         = xmmword ptr -200h
var_1F0         = xmmword ptr -1F0h
var_1E0         = xmmword ptr -1E0h
var_1D0         = xmmword ptr -1D0h
var_1C0         = xmmword ptr -1C0h
var_1B0         = xmmword ptr -1B0h
var_1A0         = xmmword ptr -1A0h
var_190         = xmmword ptr -190h
anonymous_0     = xmmword ptr -180h
var_170         = xmmword ptr -170h
var_160         = xmmword ptr -160h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 228h
                mov     rbx, rdi
                mov     rdi, cs:classRef_S8BitdoDeviceDetailsTools ; void *
                mov     rsi, cs:selRef_getMore8BitdoDevicePIDVIDAndNAMEs ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setMoreS8BitdoDatails_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; -[MoreView setMoreS8BitdoDatails:]
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     r12, cs:selRef_moreScrollView
                mov     [rbp+var_38], rbx
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend ; -[MoreView moreScrollView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100020138
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_230]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                addsd   xmm0, cs:qword_10002F2E8
                addsd   xmm0, cs:qword_10002EFF8
                jmp     short loc_100020151
; ---------------------------------------------------------------------------

loc_100020138:                          ; CODE XREF: -[MoreView addProduct]+75↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_220], xmm0
                movaps  [rbp+var_230], xmm0
                movsd   xmm0, cs:qword_10002F2F0

loc_100020151:                          ; CODE XREF: -[MoreView addProduct]+A6↑j
                movsd   [rbp+var_50], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSView
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     [rbp+var_78], rax
                mov     rdi, [rbp+var_38] ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_contentView ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_1000201C6
                mov     rdx, cs:selRef_frame
                lea     rdi, [rbp+var_170]
                mov     rsi, r15
                call    _objc_msgSend_stret
                jmp     short loc_1000201DA
; ---------------------------------------------------------------------------

loc_1000201C6:                          ; CODE XREF: -[MoreView addProduct]+11C↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_160], xmm0
                movapd  [rbp+var_170], xmm0

loc_1000201DA:                          ; CODE XREF: -[MoreView addProduct]+134↑j
                mov     rsi, cs:selRef_setFrame_ ; char *
                movapd  xmm0, [rbp+var_170]
                movapd  xmm1, [rbp+var_160]
                movupd  [rsp+250h+var_240], xmm1
                movupd  [rsp+250h+var_250], xmm0
                mov     rdi, [rbp+var_78] ; void *
                call    r13 ; _objc_msgSend
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     r15, rbx
                mov     rsi, cs:selRef_moreS8BitdoDatails ; char *
                mov     rbx, [rbp+var_38]
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, r13
                mov     r13, cs:selRef_count
                mov     rdi, rax
                mov     rsi, r13
                call    r12
                mov     rdi, r14
                call    r15
                mov     rdi, rbx
                mov     rsi, cs:selRef_moreS8BitdoDatails
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, r13
                call    r12
                mov     r15, rax
                mov     rdi, r14
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                test    r15, r15
                jz      loc_1000208F7
                movsd   xmm0, [rbp+var_50]
                divsd   xmm0, cs:qword_10002F158
                movsd   [rbp+var_50], xmm0
                mov     rax, cs:selRef_objectAtIndexedSubscript_
                mov     [rbp+var_138], rax
                mov     rax, cs:selRef_setBordered_
                mov     [rbp+var_130], rax
                mov     rax, cs:selRef_setImageScaling_
                mov     [rbp+var_128], rax
                mov     rax, cs:selRef_setButtonType_
                mov     [rbp+var_120], rax
                mov     rax, cs:selRef_moreImage
                mov     [rbp+var_118], rax
                mov     rax, cs:selRef_imageNamed_
                mov     [rbp+var_98], rax
                mov     rax, cs:selRef_setImage_
                mov     [rbp+var_110], rax
                mov     rax, cs:selRef_moreImagehighlight
                mov     [rbp+var_108], rax
                mov     rax, cs:selRef_setAlternateImage_
                mov     [rbp+var_100], rax
                mov     rax, cs:selRef_setTag_
                mov     [rbp+var_F8], rax
                mov     rax, cs:selRef_setTarget_
                mov     [rbp+var_F0], rax
                mov     rax, cs:selRef_moreClick_
                mov     [rbp+var_E8], rax
                mov     rax, cs:selRef_setAction_
                mov     [rbp+var_E0], rax
                xorpd   xmm1, xmm1
                mov     rax, cs:selRef_addSubview_
                mov     [rbp+var_90], rax
                mov     rax, cs:selRef_name
                mov     [rbp+var_D8], rax
                mov     rax, cs:selRef_setStringValue_
                mov     [rbp+var_88], rax
                mov     rax, cs:selRef_containsString_
                mov     [rbp+var_D0], rax
                mov     rax, cs:selRef_substringFromIndex_
                mov     [rbp+var_B8], rax
                mov     rax, cs:selRef_systemFontOfSize_
                mov     [rbp+var_C8], rax
                mov     rax, cs:selRef_setFont_
                mov     [rbp+var_C0], rax
                mov     rax, 0FFFFFFFFFFFFFFFFh
                mov     rcx, cs:selRef_frame
                mov     [rbp+var_B0], rcx
                xor     ebx, ebx
                mov     r14, cs:_objc_msgSend_ptr

loc_1000203D2:                          ; CODE XREF: -[MoreView addProduct]+85F↓j
                mov     [rbp+var_A8], rax
                movsd   [rbp+var_148], xmm1
                mov     eax, ebx
                mov     edx, 0AAAAAAABh
                imul    rax, rdx
                shr     rax, 21h
                lea     eax, [rax+rax*2]
                mov     dword ptr [rbp+var_30], eax
                mov     r13, [rbp+var_38]
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_moreS8BitdoDatails ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_138] ; char *
                mov     rdx, rbx
                mov     [rbp+var_48], rbx
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_80], rax
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSButton
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_init ; char *
                call    r14 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_moreS8BitdoDatails ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, r12
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_count ; char *
                call    r14 ; _objc_msgSend
                add     rax, [rbp+var_A8]
                mov     rcx, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                xorps   xmm0, xmm0
                cvtsi2sd xmm0, rdx
                mulsd   xmm0, cs:qword_10002F2F8
                movsd   [rbp+var_40], xmm0
                mov     rdi, r12
                call    r13
                mov     eax, ebx
                sub     eax, dword ptr [rbp+var_30]
                xorps   xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   xmm1, [rbp+var_50]
                mulsd   xmm0, xmm1
                addsd   xmm0, cs:qword_10002F300
                movsd   qword ptr [rbp+var_70], xmm0
                movsd   xmm0, [rbp+var_40]
                movsd   qword ptr [rbp+var_70+8], xmm0
                movsd   qword ptr [rbp+var_60], xmm1
                mov     rax, 4065E00000000000h
                mov     qword ptr [rbp+var_60+8], rax
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+250h+var_240], xmm1
                movups  [rsp+250h+var_250], xmm0
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_130] ; char *
                xor     edx, edx
                call    r14 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_128] ; char *
                xor     edx, edx
                call    r14 ; _objc_msgSend
                mov     edx, 5
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_120] ; char *
                call    r14 ; _objc_msgSend
                mov     r12, cs:classRef_NSImage
                mov     r13, [rbp+var_80]
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_118] ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_98] ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_110] ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rbx, cs:classRef_NSImage
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_108] ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, [rbp+var_98] ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_100] ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_F8] ; char *
                mov     rdx, [rbp+var_48]
                call    r14 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_F0] ; char *
                mov     rdx, [rbp+var_38]
                call    r14 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_E0] ; char *
                mov     rdx, [rbp+var_E8]
                call    r14 ; _objc_msgSend
                mov     rdi, [rbp+var_78] ; void *
                mov     rsi, [rbp+var_90] ; char *
                mov     [rbp+var_30], r15
                mov     rdx, r15
                call    r14 ; _objc_msgSend
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_init ; char *
                call    r14 ; _objc_msgSend
                mov     r15, rax
                mov     [rbp+var_A0], rax
                mov     rdi, r13        ; void *
                mov     r12, [rbp+var_D8]
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_88] ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_D0] ; char *
                lea     rdx, cfstr_8bitdo ; "8BitDo"
                call    r14 ; _objc_msgSend
                mov     r13, r14
                mov     r14d, eax
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     r15, [rbp+var_A0]
                test    r14b, r14b
                jz      short loc_100020732
                mov     rdi, [rbp+var_80]
                mov     rsi, r12
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     edx, 7
                mov     rdi, rax
                mov     rsi, [rbp+var_B8]
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_88]
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release

loc_100020732:                          ; CODE XREF: -[MoreView addProduct]+64B↑j
                mov     r12, [rbp+var_80]
                mov     rdi, cs:classRef_NSFont
                mov     rsi, [rbp+var_C8]
                movsd   xmm0, cs:qword_10002F008
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15
                mov     rsi, [rbp+var_C0]
                mov     rdx, rax
                call    r13
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                cmp     [rbp+var_30], 0
                jz      short loc_1000207CB
                lea     rdi, [rbp+var_1B0]
                mov     r14, [rbp+var_30]
                mov     rsi, r14
                mov     rbx, [rbp+var_B0]
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [rbp+var_1A0]
                movsd   [rbp+var_140], xmm0
                lea     rdi, [rbp+var_190]
                mov     rsi, r14
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm1, [rbp+var_140]
                movsd   xmm0, qword ptr [rbp+anonymous_0+8]
                jmp     short loc_1000207F6
; ---------------------------------------------------------------------------

loc_1000207CB:                          ; CODE XREF: -[MoreView addProduct]+6E8↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_1A0], xmm0
                movapd  [rbp+var_1B0], xmm0
                movapd  [rbp+var_190], xmm0
                movapd  xmmword ptr [rbp-180h], xmm0
                xorpd   xmm0, xmm0
                xorps   xmm1, xmm1

loc_1000207F6:                          ; CODE XREF: -[MoreView addProduct]+739↑j
                mov     r14, cs:selRef_moreS8BitdoDatails
                mov     rbx, r12
                addsd   xmm0, cs:qword_10002F0F0
                addsd   xmm0, cs:qword_10002F308
                mov     qword ptr [rbp+var_70], 0
                movsd   qword ptr [rbp+var_70+8], xmm0
                movsd   qword ptr [rbp+var_60], xmm1
                mov     rax, 4044000000000000h
                mov     qword ptr [rbp+var_60+8], rax
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+250h+var_240], xmm1
                movups  [rsp+250h+var_250], xmm0
                mov     r15, [rbp+var_A0]
                mov     rdi, r15
                mov     rsi, cs:selRef_setFrame_
                call    r13
                mov     rdi, [rbp+var_30]
                mov     rsi, [rbp+var_90]
                mov     rdx, r15
                call    r13
                movsd   xmm0, [rbp+var_40]
                addsd   xmm0, cs:qword_10002F2F8
                cmp     [rbp+var_48], 0
                jz      short loc_100020882
                movsd   xmm0, [rbp+var_148]

loc_100020882:                          ; CODE XREF: -[MoreView addProduct]+7E8↑j
                movsd   [rbp+var_40], xmm0
                mov     rdi, r15
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r12 ; _objc_release
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     r15, [rbp+var_48]
                inc     r15
                mov     rdi, [rbp+var_38]
                mov     rsi, r14
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     r14, r13
                mov     rsi, cs:selRef_count
                call    r13
                mov     r13, rax
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rbx, r15
                movsd   xmm0, [rbp+var_40]
                mov     rax, [rbp+var_A8]
                dec     rax
                movapd  xmm1, xmm0
                cmp     r13, r15
                ja      loc_1000203D2
                jmp     short loc_100020902
; ---------------------------------------------------------------------------

loc_1000208F7:                          ; CODE XREF: -[MoreView addProduct]+1F0↑j
                xorpd   xmm0, xmm0
                mov     r14, cs:_objc_msgSend_ptr

loc_100020902:                          ; CODE XREF: -[MoreView addProduct]+865↑j
                mov     rax, [rbp+var_38]
                movsd   [rbp+var_40], xmm0
                mov     r13, r14
                mov     r12, [rbp+var_78]
                test    r12, r12
                jz      short loc_10002098F
                mov     rbx, cs:selRef_frame
                lea     r14, [rbp+var_210]
                mov     rdi, r14
                mov     rsi, r12
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14]
                movsd   [rbp+var_30], xmm0
                lea     r14, [rbp+var_1F0]
                mov     rdi, r14
                mov     rsi, r12
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+8]
                movsd   [rbp+var_48], xmm0
                lea     r14, [rbp+var_1D0]
                mov     rdi, r14
                mov     rsi, r12
                mov     rdx, rbx
                call    _objc_msgSend_stret
                movsd   xmm2, [rbp+var_48]
                movsd   xmm1, [rbp+var_30]
                movsd   xmm0, qword ptr [r14+10h]
                mov     r14, [rbp+var_38]
                mov     r15, cs:selRef_moreScrollView
                jmp     short loc_1000209D8
; ---------------------------------------------------------------------------

loc_10002098F:                          ; CODE XREF: -[MoreView addProduct]+885↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_200], xmm0
                movapd  [rbp+var_210], xmm0
                movapd  [rbp+var_1F0], xmm0
                movapd  [rbp+var_1E0], xmm0
                movapd  [rbp+var_1D0], xmm0
                movapd  [rbp+var_1C0], xmm0
                xorpd   xmm0, xmm0
                xorps   xmm2, xmm2
                xorpd   xmm1, xmm1
                mov     r15, cs:selRef_moreScrollView
                mov     r14, rax

loc_1000209D8:                          ; CODE XREF: -[MoreView addProduct]+8FD↑j
                movsd   qword ptr [rbp+var_70], xmm1
                movsd   qword ptr [rbp+var_70+8], xmm2
                movsd   qword ptr [rbp+var_60], xmm0
                movsd   xmm0, [rbp+var_40]
                movsd   qword ptr [rbp+var_60+8], xmm0
                movups  xmm0, [rbp+var_70]
                movups  xmm1, [rbp+var_60]
                movups  [rsp+250h+var_240], xmm1
                movups  [rsp+250h+var_250], xmm0
                mov     rdi, r12
                mov     rsi, cs:selRef_setFrame_
                call    r13
                mov     rdi, r14
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setDocumentView_
                mov     rdi, rax
                mov     rdx, r12
                call    r13
                mov     rdi, rbx
                mov     rax, cs:_objc_release_ptr
                call    rax ; _objc_release
                mov     rdi, r14
                mov     rsi, r15
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_contentView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_scrollPoint_
                xorps   xmm0, xmm0
                mov     rdi, rax
                movsd   xmm1, [rbp+var_40]
                call    r13
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                add     rsp, 228h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__MoreView_addProduct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView moreClick:](MoreView *self, SEL, id)
__MoreView_moreClick__ proc near        ; DATA XREF: __objc_const:0000000100043680↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r13, cs:selRef_moreS8BitdoDatails
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr ; -[MoreView moreS8BitdoDatails]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                call    cs:_objc_release_ptr
                test    r12, r12
                jz      loc_100020C06
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend ; -[MoreView moreS8BitdoDatails]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_tag ; char *
                mov     [rbp+var_38], rbx
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r12, rax
                mov     rsi, cs:selRef_setDetails_ ; char *
                mov     rdi, rax        ; void *
                mov     [rbp+var_30], rbx
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_delegate ; char *
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend ; -[MoreView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_MoreViewClick_View_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     ebx, eax
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                test    bl, bl
                jz      short loc_100020BF5
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_delegate ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[MoreView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_MoreViewClick_View_ ; char *
                mov     rdx, r12
                mov     rcx, r14
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_100020BF5:                          ; CODE XREF: -[MoreView moreClick:]+10D↑j
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r13 ; _objc_release
                mov     rbx, [rbp+var_38]

loc_100020C06:                          ; CODE XREF: -[MoreView moreClick:]+4A↑j
                mov     rdi, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__MoreView_moreClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[MoreView delegate](MoreView *self, SEL)
__MoreView_delegate_ proc near          ; CODE XREF: -[MoreView moreClick:]+DA↑P
                                        ; -[MoreView moreClick:]+120↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_MoreView__delegate ; id _delegate;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__MoreView_delegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView setDelegate:](MoreView *self, SEL, id)
__MoreView_setDelegate__ proc near      ; CODE XREF: -[ViewController moreView]+67↑P
                                        ; DATA XREF: __objc_const:00000001000436B0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_MoreView__delegate ; id _delegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__MoreView_setDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[MoreView title](MoreView *self, SEL)
__MoreView_title_ proc near             ; CODE XREF: -[MoreView initWithFrame:]+D9↑P
                                        ; -[MoreView initWithFrame:]+507↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_MoreView__title ; SLabel *_title;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__MoreView_title_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView setTitle:](MoreView *self, SEL, id)
__MoreView_setTitle__ proc near         ; CODE XREF: -[MoreView initWithFrame:]+7E↑P
                                        ; DATA XREF: __objc_const:00000001000436E0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_MoreView__title ; SLabel *_title;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__MoreView_setTitle__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SView *__cdecl -[MoreView line](MoreView *self, SEL)
__MoreView_line_ proc near              ; CODE XREF: -[MoreView initWithFrame:]+536↑P
                                        ; -[MoreView layout]+25A↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_MoreView__line ; SView *_line;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__MoreView_line_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView setLine:](MoreView *self, SEL, id)
__MoreView_setLine__ proc near          ; DATA XREF: __objc_const:0000000100043710↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_MoreView__line ; SView *_line;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__MoreView_setLine__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSScrollView *__cdecl -[MoreView moreScrollView](MoreView *self, SEL)
__MoreView_moreScrollView_ proc near    ; CODE XREF: -[MoreView initWithFrame:]+55E↑P
                                        ; -[MoreView layout]+376↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_MoreView__moreScrollView ; NSScrollView *_moreScrollView;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__MoreView_moreScrollView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView setMoreScrollView:](MoreView *self, SEL, id)
__MoreView_setMoreScrollView__ proc near
                                        ; DATA XREF: __objc_const:0000000100043740↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_MoreView__moreScrollView ; NSScrollView *_moreScrollView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__MoreView_setMoreScrollView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableArray *__cdecl -[MoreView moreS8BitdoDatails](MoreView *self, SEL)
__MoreView_moreS8BitdoDatails_ proc near
                                        ; CODE XREF: -[MoreView moreClick:]+2D↑P
                                        ; -[MoreView moreClick:]+5D↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_MoreView__moreS8BitdoDatails ; NSMutableArray *_moreS8BitdoDatails;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__MoreView_moreS8BitdoDatails_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView setMoreS8BitdoDatails:](MoreView *self, SEL, id)
__MoreView_setMoreS8BitdoDatails__ proc near
                                        ; CODE XREF: -[MoreView addProduct]+47↑P
                                        ; DATA XREF: __objc_const:0000000100043770↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_MoreView__moreS8BitdoDatails ; NSMutableArray *_moreS8BitdoDatails;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__MoreView_setMoreS8BitdoDatails__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MoreView .cxx_destruct](MoreView *self, SEL)
__MoreView__cxx_destruct_ proc near     ; DATA XREF: __objc_const:0000000100043788↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_MoreView__moreS8BitdoDatails ; NSMutableArray *_moreS8BitdoDatails;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_MoreView__moreScrollView ; NSScrollView *_moreScrollView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_MoreView__line ; SView *_line;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_MoreView__title ; SLabel *_title;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, cs:_OBJC_IVAR_$_MoreView__delegate ; id _delegate;
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_destroyWeak
__MoreView__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[MJPropertyType initialize](MJPropertyType_meta *self, SEL)
__MJPropertyType_initialize_ proc near  ; DATA XREF: __objc_const:0000000100043930↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075DE8
                mov     cs:qword_100075DE8, rax
                pop     rbp
                jmp     cs:_objc_release_ptr
__MJPropertyType_initialize_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[MJPropertyType cachedTypeWithCode:](MJPropertyType_meta *self, SEL, id)
__MJPropertyType_cachedTypeWithCode__ proc near
                                        ; CODE XREF: -[MJProperty setProperty:]+100↓P
                                        ; DATA XREF: __objc_const:0000000100043948↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                test    rax, rax
                jz      loc_100020E2D
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rdi, rax
                call    _objc_sync_enter
                mov     rdi, cs:qword_100075DE8 ; void *
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jnz     short loc_100020E1A
                mov     rdi, r14
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     r15, rax
                mov     rsi, cs:selRef_setCode_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, cs:qword_100075DE8 ; void *
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdx, r15
                mov     rcx, rbx
                call    cs:_objc_msgSend_ptr

loc_100020E1A:                          ; CODE XREF: +[MJPropertyType cachedTypeWithCode:]+5B↑j
                mov     rdi, r14
                call    _objc_sync_exit
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     short loc_100020E30
; ---------------------------------------------------------------------------

loc_100020E2D:                          ; CODE XREF: +[MJPropertyType cachedTypeWithCode:]+1C↑j
                xor     r15d, r15d

loc_100020E30:                          ; CODE XREF: +[MJPropertyType cachedTypeWithCode:]+B6↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r15
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__MJPropertyType_cachedTypeWithCode__ endp

; ---------------------------------------------------------------------------
                mov     rbx, rax
                mov     rdi, r14
                call    _objc_sync_exit
                mov     rdi, rbx
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJPropertyType setCode:](MJPropertyType *self, SEL, id)
__MJPropertyType_setCode__ proc near    ; DATA XREF: __objc_const:00000001000439B0↓o

anonymous_8     = ymmword ptr -90h
anonymous_0     = qword ptr -70h
anonymous_1     = qword ptr -68h
anonymous_2     = qword ptr -60h
anonymous_3     = qword ptr -58h
anonymous_4     = qword ptr -50h
anonymous_5     = qword ptr -48h
anonymous_6     = qword ptr -40h
anonymous_7     = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 68h
                mov     r14, rdx
                mov     r15, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     qword ptr [rbp+anonymous_8+10h], r15
                lea     r12, [r15+10h]
                mov     rdi, r12
                mov     rsi, r14
                call    _objc_storeStrong
                test    rbx, rbx
                jz      loc_10002100D
                lea     rax, off_10003A880
                mov     rdx, [rax]
                mov     rsi, cs:selRef_isEqualToString_ ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                mov     r13b, 1
                mov     r15d, 8
                test    al, al
                mov     qword ptr [rbp+anonymous_8+8], rbx
                jz      loc_100021039

loc_100020EDD:                          ; CODE XREF: -[MJPropertyType setCode:]+1F7↓j
                                        ; -[MJPropertyType setCode:]+2D7↓j ...
                mov     rax, qword ptr [rbp+anonymous_8+10h]
                mov     [rax+r15], r13b

loc_100020EE5:                          ; CODE XREF: -[MJPropertyType setCode:]+33D↓j
                mov     rdi, [r12]      ; void *
                mov     rsi, cs:selRef_lowercaseString ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                lea     rax, off_10003A808
                mov     rax, [rax]
                lea     rdx, [rbp+anonymous_8+18h]
                mov     [rdx], rax
                lea     rax, off_10003A810
                mov     rax, [rax]
                mov     [rdx+8], rax
                lea     rax, off_10003A840
                mov     r15, [rax]
                mov     [rdx+10h], r15
                lea     rax, off_10003A848
                mov     r13, [rax]
                mov     [rdx+18h], r13
                lea     rax, off_10003A818
                mov     rax, [rax]
                mov     [rdx+20h], rax
                lea     rax, off_10003A820
                mov     rax, [rax]
                mov     [rdx+28h], rax
                lea     rax, off_10003A828
                mov     rax, [rax]
                mov     [rdx+30h], rax
                lea     rax, off_10003A830
                mov     rax, [rax]
                mov     [rdx+38h], rax
                lea     rax, off_10003A838
                mov     rax, [rax]
                mov     [rdx+40h], rax
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_count_ ; char *
                mov     ecx, 9
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_containsObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    rbx ; _objc_msgSend
                test    al, al
                mov     rbx, cs:selRef_isEqualToString_
                jz      short loc_100020FF5
                mov     rax, qword ptr [rbp+anonymous_8+10h]
                mov     byte ptr [rax+9], 1
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     short loc_100020FED
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_100020FF5

loc_100020FED:                          ; CODE XREF: -[MJPropertyType setCode:]+17A↑j
                mov     rax, qword ptr [rbp+anonymous_8+10h]
                mov     byte ptr [rax+0Ah], 1

loc_100020FF5:                          ; CODE XREF: -[MJPropertyType setCode:]+15F↑j
                                        ; -[MJPropertyType setCode:]+18D↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rbx, qword ptr [rbp+anonymous_8+8]

loc_10002100D:                          ; CODE XREF: -[MJPropertyType setCode:]+47↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     loc_1000211A0
                add     rsp, 68h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100021039:                          ; CODE XREF: -[MJPropertyType setCode:]+79↑j
                mov     r14, cs:selRef_length
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                mov     r15d, 0Ch
                test    rax, rax
                jz      loc_100020EDD
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, 4
                jb      loc_10002113A
                mov     rsi, cs:selRef_hasPrefix_ ; char *
                lea     rdx, stru_10003C0F8 ; "@\""
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      loc_10002113A
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                lea     rcx, [rax-3]
                mov     rsi, cs:selRef_substringWithRange_ ; char *
                mov     edx, 2
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, qword ptr [rbp+anonymous_8+10h]
                mov     rdi, [r14+10h]
                mov     [r14+10h], rax
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [r14+10h]
                call    _NSClassFromString
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, [r14+18h]
                mov     [r14+18h], rax
                call    rbx ; _objc_release
                mov     rdi, cs:classRef_MJFoundation ; void *
                mov     rdx, [r14+18h]
                mov     rsi, cs:selRef_isClassFromFoundation_ ; char *
                call    r15 ; _objc_msgSend ; +[MJFoundation isClassFromFoundation:]
                mov     [r14+0Bh], al
                mov     r14, [r14+18h]
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_class ; char *
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_isSubclassOfClass_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     r13d, eax
                mov     r15d, 9
                jmp     loc_100020EDD
; ---------------------------------------------------------------------------

loc_10002113A:                          ; CODE XREF: -[MJPropertyType setCode:]+20D↑j
                                        ; -[MJPropertyType setCode:]+22C↑j
                lea     rax, off_10003A878
                mov     rdx, [rax]
                mov     rdi, rbx        ; void *
                mov     r14, cs:selRef_isEqualToString_
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     loc_100020EDD
                lea     rax, off_10003A858
                mov     rdx, [rax]
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     loc_100020EDD
                lea     rax, off_10003A860
                mov     rdx, [rax]
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     loc_100020EDD
                jmp     loc_100020EE5
; ---------------------------------------------------------------------------

loc_1000211A0:                          ; CODE XREF: -[MJPropertyType setCode:]+1C6↑j
                call    ___stack_chk_fail
__MJPropertyType_setCode__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[MJPropertyType code](MJPropertyType *self, SEL)
__MJPropertyType_code_ proc near        ; DATA XREF: __objc_const:00000001000439C8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+10h]
                pop     rbp
                retn
__MJPropertyType_code_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[MJPropertyType isIdType](MJPropertyType *self, SEL)
__MJPropertyType_isIdType_ proc near    ; DATA XREF: __objc_const:00000001000439E0↓o
                push    rbp
                mov     rbp, rsp
                movsx   eax, byte ptr [rdi+8]
                pop     rbp
                retn
__MJPropertyType_isIdType_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[MJPropertyType isNumberType](MJPropertyType *self, SEL)
__MJPropertyType_isNumberType_ proc near
                                        ; DATA XREF: __objc_const:00000001000439F8↓o
                push    rbp
                mov     rbp, rsp
                movsx   eax, byte ptr [rdi+9]
                pop     rbp
                retn
__MJPropertyType_isNumberType_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[MJPropertyType isBoolType](MJPropertyType *self, SEL)
__MJPropertyType_isBoolType_ proc near  ; DATA XREF: __objc_const:0000000100043A10↓o
                push    rbp
                mov     rbp, rsp
                movsx   eax, byte ptr [rdi+0Ah]
                pop     rbp
                retn
__MJPropertyType_isBoolType_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; Class __cdecl -[MJPropertyType typeClass](MJPropertyType *self, SEL)
__MJPropertyType_typeClass_ proc near   ; DATA XREF: __objc_const:0000000100043A28↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+18h]
                pop     rbp
                retn
__MJPropertyType_typeClass_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[MJPropertyType isFromFoundation](MJPropertyType *self, SEL)
__MJPropertyType_isFromFoundation_ proc near
                                        ; DATA XREF: __objc_const:0000000100043A40↓o
                push    rbp
                mov     rbp, rsp
                movsx   eax, byte ptr [rdi+0Bh]
                pop     rbp
                retn
__MJPropertyType_isFromFoundation_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[MJPropertyType isKVCDisabled](MJPropertyType *self, SEL)
__MJPropertyType_isKVCDisabled_ proc near
                                        ; DATA XREF: __objc_const:0000000100043A58↓o
                push    rbp
                mov     rbp, rsp
                movsx   eax, byte ptr [rdi+0Ch]
                pop     rbp
                retn
__MJPropertyType_isKVCDisabled_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJPropertyType .cxx_destruct](MJPropertyType *self, SEL)
__MJPropertyType__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:0000000100043A70↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 18h
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 10h
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__MJPropertyType__cxx_destruct_ endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setState:](HomeView *self, SEL, unsigned __int64)
__HomeView_setState__ proc near         ; CODE XREF: -[HomeView refresh]+B5↓P
                                        ; -[HomeView refresh]+E8↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                test    rdx, rdx
                jz      short loc_100021233
                cmp     rdx, 1
                jnz     short loc_100021246
                mov     al, 1
                jmp     short loc_100021235
; ---------------------------------------------------------------------------

loc_100021233:                          ; CODE XREF: -[HomeView setState:]+7↑j
                xor     eax, eax

loc_100021235:                          ; CODE XREF: -[HomeView setState:]+11↑j
                mov     rsi, cs:selRef_findStateUI_
                movzx   edx, al
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[HomeView findStateUI:]
; ---------------------------------------------------------------------------

loc_100021246:                          ; CODE XREF: -[HomeView setState:]+D↑j
                pop     rbp
                retn
__HomeView_setState__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; S8BitdoDevice *__cdecl -[HomeView moreDevice](HomeView *self, SEL)
__HomeView_moreDevice_ proc near        ; DATA XREF: __objc_const:0000000100043C98↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rbx, cs:selRef_devices
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                test    r12, r12
                jz      short loc_1000212CD
                mov     rdi, r14        ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                jmp     short loc_1000212CF
; ---------------------------------------------------------------------------

loc_1000212CD:                          ; CODE XREF: -[HomeView moreDevice]+4C↑j
                xor     ebx, ebx

loc_1000212CF:                          ; CODE XREF: -[HomeView moreDevice]+83↑j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_moreDevice_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView awakeFromNib](HomeView *self, SEL)
__HomeView_awakeFromNib_ proc near      ; DATA XREF: __objc_const:0000000100043CB0↓o

var_30          = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r12, rdi
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_array ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setDevices_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend ; -[HomeView setDevices:]
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     r13, r15
                mov     rdi, cs:classRef_NSTimer ; void *
                mov     rcx, cs:selRef_usbAniamtion
                mov     rsi, cs:selRef_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_ ; char *
                movsd   xmm0, cs:qword_10002F320
                mov     rdx, r12
                xor     r8d, r8d
                mov     r9d, 1
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSRunLoop ; void *
                mov     rsi, cs:selRef_mainRunLoop ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rax, cs:_NSDefaultRunLoopMode_ptr
                mov     rcx, [rax]
                mov     rsi, cs:selRef_addTimer_forMode_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                mov     r15, r13
                call    r13
                mov     rsi, cs:selRef_fire ; char *
                mov     [rbp+var_30.var0.var0], r14
                mov     rdi, r14        ; void *
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_firmwaerUpdaterButton ; char *
                mov     rdi, r12        ; void *
                call    rbx ; _objc_msgSend ; -[HomeView firmwaerUpdaterButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSImage ; void *
                mov     rsi, cs:selRef_imageNamed_ ; char *
                lea     rdx, cfstr_UpdatebuttonNo ; "updateButton_normal"
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r15
                mov     rdi, r13
                call    r15
                mov     r15, r12
                mov     rdi, r12        ; void *
                mov     r13, cs:selRef_firmwaerUpdaterButton
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend ; -[HomeView firmwaerUpdaterButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSImage ; void *
                lea     rdx, cfstr_UpdatebuttonHi ; "updateButton_highlight"
                mov     rsi, cs:selRef_imageNamed_ ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setAlternateImage_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend ; -[HomeView firmwaerUpdaterButton]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rdx, cfstr_Firmwareupdate ; "firmwareUpdate"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setTitle_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                mov     r13, rbx
                mov     rbx, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, rbx
                mov     r12, cs:selRef_firmwaerUpdaterButton
                mov     rsi, r12
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setImagePosition_
                mov     edx, 5
                mov     rdi, rax
                call    r13
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                mov     rsi, r12
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setImageScaling_
                mov     edx, 2
                mov     rdi, rax
                call    r13
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                mov     rsi, r12
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSFont
                mov     rsi, cs:selRef_systemFontOfSize_
                movsd   xmm0, cs:qword_10002F300
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setFont_
                mov     rdi, r14
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, r14
                mov     r12, r15
                call    r15 ; _objc_release
                mov     edi, 1
                mov     esi, 0Ah
                mov     edx, 0Eh
                xor     ecx, ecx
                call    sub_10002E3C0
                test    eax, eax
                jz      short loc_100021629
                mov     rdi, rbx
                mov     rsi, cs:selRef_firmwaerUpdaterButton
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_colorWithRed_green_blue_alpha_
                movsd   xmm0, cs:qword_10002F328
                movsd   xmm3, cs:qword_10002EFF8
                movaps  xmm1, xmm0
                movaps  xmm2, xmm0
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setContentTintColor_
                mov     rdi, r14
                mov     rdx, rax
                call    r13
                mov     rdi, r15
                call    r12
                mov     rdi, r14
                call    r12

loc_100021629:                          ; CODE XREF: -[HomeView awakeFromNib]+2DC↑j
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_blackColor
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_usb
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setTextColor_
                mov     rdi, rax
                mov     rdx, r14
                call    r13
                mov     rdi, rbx
                call    r12
                mov     rdi, r14
                call    r12
                mov     rdi, [rbp+var_30.var0.var0]
                mov     rax, r12
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__HomeView_awakeFromNib_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView usbAniamtion](HomeView *self, SEL)
__HomeView_usbAniamtion_ proc near      ; DATA XREF: __objc_const:0000000100043CC8↓o

var_40          = byte ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 28h
                mov     rbx, rdi
                mov     rsi, cs:selRef_arrow03 ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[HomeView arrow03]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     esi, 1DCD6500h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_40]
                mov     [rdx], rcx
                mov     ecx, 0C2000000h
                mov     [rdx+8], rcx
                lea     rcx, sub_10002172B
                mov     [rdx+10h], rcx
                lea     rcx, unk_10003A338
                mov     [rdx+18h], rcx
                mov     [rdx+20h], rbx
                mov     rsi, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                call    _dispatch_after
                add     rsp, 28h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
__HomeView_usbAniamtion_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002172B   proc near               ; DATA XREF: -[HomeView usbAniamtion]+67↑o

var_40          = byte ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 28h
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_arrow02 ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     esi, 1DCD6500h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_40]
                mov     [rdx], rcx
                mov     ecx, 0C2000000h
                mov     [rdx+8], rcx
                lea     rcx, sub_1000217CE
                mov     [rdx+10h], rcx
                lea     rcx, unk_10003A338
                mov     [rdx+18h], rcx
                mov     rcx, [rbx+20h]
                mov     [rdx+20h], rcx
                mov     rsi, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                call    _dispatch_after
                add     rsp, 28h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_10002172B   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000217CE   proc near               ; DATA XREF: sub_10002172B+6B↑o

var_40          = byte ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 28h
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_arrow01 ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     esi, 1DCD6500h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_40]
                mov     [rdx], rcx
                mov     ecx, 0C2000000h
                mov     [rdx+8], rcx
                lea     rcx, sub_100021871
                mov     [rdx+10h], rcx
                lea     rcx, unk_10003A338
                mov     [rdx+18h], rcx
                mov     rcx, [rbx+20h]
                mov     [rdx+20h], rcx
                mov     rsi, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                call    _dispatch_after
                add     rsp, 28h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_1000217CE   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100021871   proc near               ; DATA XREF: sub_1000217CE+6B↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_arrow01 ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r14, cs:selRef_setHidden_
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_arrow02 ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_arrow03 ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                mov     edx, 1
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100021871   endp

; ---------------------------------------------------------------------------
                align 10h
                dq 0
                db 4 dup(0)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView findStateUI:](HomeView *self, SEL, char)
__HomeView_findStateUI__ proc near      ; CODE XREF: -[HomeView setState:]+20↑P
                                        ; DATA XREF: __objc_const:0000000100043CE0↓o

var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_38], rdi
                xor     eax, eax
                xor     r12d, r12d
                test    dl, dl
                setz    al
                mov     [rbp+var_2C], eax
                lea     rbx, selRef_helpButton
                lea     r15, selRef_usbView
                mov     rax, r15
                cmovnz  rax, rbx
                setnz   r12b
                mov     rsi, [rax]      ; char *
                mov     r14, cs:_objc_msgSend_ptr
                lea     rax, selRef_usb
                cmovz   r15, rax
                cmovnz  rbx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, r12d
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rsi, [r15]      ; char *
                mov     r15, [rbp+var_38]
                mov     rdi, r15        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setHidden_ ; char *
                mov     edx, r12d
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rsi, [rbx]      ; char *
                mov     rdi, r15        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rbx, cs:selRef_setHidden_
                mov     rsi, rbx        ; char *
                mov     edx, r12d
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_FindsView ; char *
                mov     rdi, r15        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     r13, rbx
                mov     rsi, rbx        ; char *
                mov     ebx, [rbp+var_2C]
                mov     edx, ebx
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_firmwaerUpdaterButton ; char *
                mov     rdi, r15        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r14
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, r13
                mov     edx, ebx
                call    rcx
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__HomeView_findStateUI__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView addS8BitdoDevice:](HomeView *self, SEL, id)
__HomeView_addS8BitdoDevice__ proc near ; DATA XREF: __objc_const:0000000100043CF8↓o

var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r12, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r13, cs:classRef_SHttp
                mov     rsi, cs:selRef_details ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_type ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_recordActivity_ ; char *
                mov     rdi, r13        ; void *
                mov     edx, eax
                call    r14 ; _objc_msgSend ; +[SHttp recordActivity:]
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_devices ; char *
                mov     r13, r12
                mov     rdi, r12        ; void *
                call    r14 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_containsObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     r12d, eax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                test    r12b, r12b
                jz      short loc_100021BA4
                mov     rsi, cs:selRef_refresh ; char *
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend ; -[HomeView refresh]
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_type ; char *
                call    r14 ; _objc_msgSend
                mov     r12d, eax
                mov     rsi, cs:selRef_version ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                movss   [rbp+var_2C], xmm0
                mov     rsi, cs:selRef_beta ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                movzx   ecx, ax
                mov     rsi, cs:selRef_loadNewGameVersion_version_beta_ ; char *
                mov     rdi, r13        ; void *
                mov     edx, r12d
                movss   xmm0, [rbp+var_2C]
                call    r14 ; _objc_msgSend ; -[HomeView loadNewGameVersion:version:beta:]
                mov     rdi, r15
                call    cs:_objc_release_ptr
                jmp     short loc_100021BE2
; ---------------------------------------------------------------------------

loc_100021BA4:                          ; CODE XREF: -[HomeView addS8BitdoDevice:]+A2↑j
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_devices ; char *
                call    r14 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_addObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_refresh ; char *
                mov     rdi, r13        ; void *
                call    r14 ; _objc_msgSend ; -[HomeView refresh]

loc_100021BE2:                          ; CODE XREF: -[HomeView addS8BitdoDevice:]+119↑j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__HomeView_addS8BitdoDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView removeS8BitdoDevice:](HomeView *self, SEL, id)
__HomeView_removeS8BitdoDevice__ proc near
                                        ; DATA XREF: __objc_const:0000000100043D10↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     r15, cs:selRef_devices
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_containsObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r13b, r13b
                jz      short loc_100021C9A
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_removeObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_refresh ; char *
                mov     rdi, r14        ; void *
                call    r12 ; _objc_msgSend ; -[HomeView refresh]

loc_100021C9A:                          ; CODE XREF: -[HomeView removeS8BitdoDevice:]+5E↑j
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__HomeView_removeS8BitdoDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView refresh](HomeView *self, SEL)
__HomeView_refresh_ proc near           ; CODE XREF: -[HomeView addS8BitdoDevice:]+AE↑P
                                        ; -[HomeView addS8BitdoDevice:]+156↑P ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rsi, cs:selRef_FindsView ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[HomeView FindsView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_subviews ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdx, cs:selRef_removeFromSuperview
                mov     rsi, cs:selRef_makeObjectsPerformSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_devices ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setState_ ; char *
                test    r15, r15
                jz      short loc_100021D86
                mov     edx, 1
                mov     rdi, rbx        ; void *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend ; -[HomeView setState:]
                mov     rsi, cs:selRef_addDevicesTextFileld
                mov     rdi, rbx
                mov     rax, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax             ; -[HomeView addDevicesTextFileld]
; ---------------------------------------------------------------------------

loc_100021D86:                          ; CODE XREF: -[HomeView refresh]+A4↑j
                mov     rdi, rbx
                xor     edx, edx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; -[HomeView setState:]
__HomeView_refresh_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView addDevicesTextFileld](HomeView *self, SEL)
__HomeView_addDevicesTextFileld_ proc near
                                        ; CODE XREF: -[HomeView refresh]+D3↑P
                                        ; DATA XREF: __objc_const:0000000100043D40↓o

var_180         = xmmword ptr -180h
var_170         = xmmword ptr -170h
var_160         = xmmword ptr -160h
var_150         = xmmword ptr -150h
var_140         = xmmword ptr -140h
var_130         = xmmword ptr -130h
var_120         = xmmword ptr -120h
anonymous_0     = xmmword ptr -110h
var_100         = xmmword ptr -100h
var_F0          = xmmword ptr -0F0h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 158h
                mov     r12, rdi
                mov     rsi, cs:selRef_FindsView ; char *
                call    cs:_objc_msgSend_ptr ; -[HomeView FindsView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                test    rax, rax
                jz      short loc_100021DF4
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_160]
                mov     rdi, r14
                mov     rsi, rbx
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+8]
                jmp     short loc_100021E08
; ---------------------------------------------------------------------------

loc_100021DF4:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+32↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_150], xmm0
                movaps  [rbp+var_160], xmm0
                xorps   xmm0, xmm0

loc_100021E08:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+53↑j
                movsd   [rbp+var_40], xmm0
                mov     r15, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     r13, cs:selRef_devices
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     r14, rax
                mov     rdi, rbx
                call    r15 ; _objc_release
                test    r14, r14
                jz      loc_1000223D3
                mov     rax, cs:selRef_objectAtIndexedSubscript_
                mov     [rbp+var_D8], rax
                mov     r14, cs:selRef_beta
                mov     rax, cs:selRef_stringWithFormat_
                mov     [rbp+var_60], rax
                mov     rax, cs:selRef_details
                mov     [rbp+var_58], rax
                mov     rax, cs:selRef_name
                mov     [rbp+var_80], rax
                mov     rax, cs:selRef_version
                mov     [rbp+var_88], rax
                mov     rax, cs:selRef_mainBundle
                mov     [rbp+var_78], rax
                mov     rax, cs:selRef_localizedStringForKey_value_table_
                mov     [rbp+var_70], rax
                mov     rax, cs:selRef_type
                mov     [rbp+var_C8], rax
                mov     rax, cs:selRef_init
                mov     [rbp+var_C0], rax
                mov     rax, cs:selRef_setStringValue_
                mov     [rbp+var_B8], rax
                mov     rax, cs:selRef_sizeToFit
                mov     [rbp+var_B0], rax
                mov     rax, cs:selRef_frame
                mov     [rbp+var_68], rax
                mov     rax, cs:selRef_setFrame_
                mov     [rbp+var_A8], rax
                mov     rax, cs:selRef_addSubview_
                mov     [rbp+var_A0], rax
                xor     eax, eax
                mov     [rbp+var_48], r12
                mov     [rbp+var_D0], r14

loc_100021F21:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+61C↓j
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     r13, rax
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_D8] ; char *
                mov     [rbp+var_E0], r13
                mov     rdx, r13
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                lea     rcx, stru_10003A8B8
                test    ax, ax
                mov     r15, [rbp+var_60]
                jz      short loc_100021FB0
                mov     rbx, cs:classRef_NSString
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                movzx   ecx, ax
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                lea     rdx, cfstr_BetaD_1 ; "beta %d"
                xor     eax, eax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, rax

loc_100021FB0:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+1DF↑j
                mov     rbx, r12
                mov     rax, cs:classRef_NSString
                mov     [rbp+var_38], rax
                mov     r15, rcx
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_58] ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_80] ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_88] ; char *
                call    r12 ; _objc_msgSend
                cvtss2sd xmm0, xmm0
                movsd   [rbp+var_50], xmm0
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, [rbp+var_78] ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_90], r13
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_70] ; char *
                lea     rdx, cfstr_Connect ; "Connect"
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, [rbp+var_38]
                mov     rsi, [rbp+var_60]
                lea     rdx, cfstr_V2f_2 ; "%@ V%.2f %@ %@"
                mov     rcx, r14
                movsd   xmm0, [rbp+var_50]
                mov     [rbp+var_50], r15
                mov     r8, r15
                mov     r9, rax
                mov     al, 1
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     rdi, r12
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r13
                mov     r12, [rbp+var_90]
                call    r15 ; _objc_release
                mov     rdi, r14
                mov     r14, r15
                mov     r15, rbx
                call    r14
                mov     rdi, [rbp+var_30]
                call    r14
                mov     rdi, r12
                mov     rsi, [rbp+var_58]
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_C8]
                call    r15
                cmp     eax, 15h
                jnz     loc_1000221CE
                mov     rdi, r12
                mov     rsi, [rbp+var_88]
                call    r15
                movss   dword ptr [rbp+var_30], xmm0
                mov     rdi, rbx
                call    r14
                movss   xmm0, dword ptr [rbp+var_30]
                ucomiss xmm0, cs:dword_10002F338
                jnz     loc_1000223C3
                jp      loc_1000223C3
                mov     rax, cs:classRef_NSString
                mov     [rbp+var_30], rax
                mov     rdi, r12
                mov     rsi, [rbp+var_58]
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_80]
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     [rbp+var_98], rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, [rbp+var_78]
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_70]
                lea     rdx, cfstr_Connect ; "Connect"
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, [rbp+var_30]
                mov     rsi, [rbp+var_60]
                lea     rdx, stru_10003C1D8 ; "%@ %@"
                mov     rcx, r13
                mov     r8, rax
                xor     eax, eax
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, [rbp+var_38]
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_98]
                call    r14 ; _objc_release
                mov     [rbp+var_38], r13

loc_1000221CE:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+32B↑j
                mov     r12, [rbp+var_48]
                mov     r13, cs:selRef_FindsView
                mov     rdi, rbx
                call    r14

loc_1000221DF:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+62F↓j
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, [rbp+var_C0]
                call    r15
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_B8]
                mov     rdx, [rbp+var_38]
                call    r15
                mov     rdi, rbx
                mov     rsi, [rbp+var_B0]
                call    r15
                movsd   xmm0, [rbp+var_40]
                addsd   xmm0, cs:qword_10002F330
                movsd   [rbp+var_40], xmm0
                mov     rdi, r12
                mov     rsi, r13
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100022261
                lea     rdi, [rbp+var_140]
                mov     rsi, r14
                mov     rdx, [rbp+var_68]
                call    _objc_msgSend_stret
                movsd   xmm2, qword ptr [rbp+var_130]
                jmp     short loc_100022278
; ---------------------------------------------------------------------------

loc_100022261:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+4A3↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_130], xmm0
                movapd  [rbp+var_140], xmm0
                xorps   xmm2, xmm2

loc_100022278:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+4C0↑j
                test    rbx, rbx
                jz      short loc_1000222A4
                lea     rdi, [rbp+var_120]
                mov     rsi, rbx
                mov     rdx, [rbp+var_68]
                movsd   [rbp+var_30], xmm2
                call    _objc_msgSend_stret
                movsd   xmm2, [rbp+var_30]
                movsd   xmm0, qword ptr [rbp+anonymous_0+8]
                jmp     short loc_1000222BC
; ---------------------------------------------------------------------------

loc_1000222A4:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+4DC↑j
                xorpd   xmm0, xmm0
                movapd  xmmword ptr [rbp-110h], xmm0
                movapd  [rbp+var_120], xmm0
                xorpd   xmm0, xmm0

loc_1000222BC:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+503↑j
                mov     qword ptr [rbp+var_100], 0
                movsd   xmm1, [rbp+var_40]
                movsd   qword ptr [rbp+var_100+8], xmm1
                movsd   qword ptr [rbp+var_F0], xmm2
                movsd   qword ptr [rbp+var_F0+8], xmm0
                movups  xmm0, [rbp+var_100]
                movups  xmm1, [rbp+var_F0]
                movups  [rsp+180h+var_170], xmm1
                movups  [rsp+180h+var_180], xmm0
                mov     rdi, rbx
                mov     rsi, [rbp+var_A8]
                call    r15
                mov     rdi, r14
                mov     r14, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r12
                mov     rsi, r13
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r14
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, [rbp+var_A0]
                mov     rdx, rbx
                call    rcx
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_38]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_50]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_90]
                call    r15 ; _objc_release
                mov     r14, r12
                mov     r12, [rbp+var_E0]
                inc     r12
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_devices ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_count ; char *
                call    r13 ; _objc_msgSend
                mov     r13, rax
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rax, r12
                mov     r12, r14
                cmp     r13, rax
                mov     r13, cs:selRef_devices
                mov     r14, [rbp+var_D0]
                ja      loc_100021F21
                jmp     short loc_1000223D3
; ---------------------------------------------------------------------------

loc_1000223C3:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+355↑j
                                        ; -[HomeView addDevicesTextFileld]+35B↑j
                mov     r12, [rbp+var_48]
                mov     r13, cs:selRef_FindsView
                jmp     loc_1000221DF
; ---------------------------------------------------------------------------

loc_1000223D3:                          ; CODE XREF: -[HomeView addDevicesTextFileld]+B6↑j
                                        ; -[HomeView addDevicesTextFileld]+622↑j
                add     rsp, 158h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__HomeView_addDevicesTextFileld_ endp


; =============== S U B R O U T I N E =======================================


; void __cdecl -[HomeView loadNewGameVersion:version:beta:](HomeView *self, SEL, int, float, int)
__HomeView_loadNewGameVersion_version_beta__ proc near
                                        ; CODE XREF: -[HomeView addS8BitdoDevice:]+10D↑P
                                        ; DATA XREF: __objc_const:0000000100043D58↓o
                xorps   xmm1, xmm1
                ucomiss xmm0, xmm1
                jnz     short loc_1000223F0
                jp      short loc_1000223F0
                retn
; ---------------------------------------------------------------------------

loc_1000223F0:                          ; CODE XREF: -[HomeView loadNewGameVersion:version:beta:]+6↑j
                                        ; -[HomeView loadNewGameVersion:version:beta:]+8↑j
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     ebx, ecx
                mov     r14d, edx
                mov     r15, rdi
                mov     rdi, cs:classRef_NSString ; void *
                cvtss2sd xmm0, xmm0
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_2lf  ; "%.2lf"
                mov     r13, cs:_objc_msgSend_ptr
                mov     al, 1
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_floatValue ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_SHttp ; void *
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r8, [rbp-50h]
                mov     [r8], rax
                mov     eax, 0C2000000h
                mov     [r8+8], rax
                lea     rax, sub_1000224AC
                mov     [r8+10h], rax
                lea     rax, unk_10003A678
                mov     [r8+18h], rax
                mov     [r8+20h], r15
                mov     rsi, cs:selRef_getNewVersion_version_beta_success_failure_ ; char *
                lea     r9, off_10003A6C8
                mov     edx, r14d
                mov     ecx, ebx
                call    r13 ; _objc_msgSend ; +[SHttp getNewVersion:version:beta:success:failure:]
                mov     rdi, r12
                call    cs:_objc_release_ptr
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__HomeView_loadNewGameVersion_version_beta__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000224AC   proc near               ; DATA XREF: -[HomeView loadNewGameVersion:version:beta:]+7F↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r15, rdi
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     rdi, [r15+20h]  ; void *
                mov     rsi, cs:selRef_delegate ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_hasNewFirmwaerVersion_firmwaer_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r14d, eax
                mov     rdi, r13
                mov     r13, r12
                call    cs:_objc_release_ptr
                test    r14b, r14b
                jz      short loc_10002257E
                mov     rdi, [r15+20h]  ; void *
                mov     rsi, cs:selRef_delegate ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, [r15+20h]  ; void *
                mov     rsi, cs:selRef_devices ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_hasNewFirmwaerVersion_firmwaer_ ; char *
                mov     rdx, rax
                mov     rcx, r13
                call    rbx ; _objc_msgSend
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release

loc_10002257E:                          ; CODE XREF: sub_1000224AC+61↑j
                mov     rdi, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_1000224AC   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100022595   proc near               ; DATA XREF: __const:000000010003A6D8↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_100022595   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView firmwaerUpdateClick:](HomeView *self, SEL, id)
__HomeView_firmwaerUpdateClick__ proc near
                                        ; DATA XREF: __objc_const:0000000100043D70↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     r15, cs:selRef_delegate
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend ; -[HomeView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdx, cs:selRef_firmwaerUpdateClick_from_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r13b, r13b
                jz      short loc_100022667
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend ; -[HomeView delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_devices ; char *
                mov     rdi, r14        ; void *
                call    rbx ; _objc_msgSend ; -[HomeView devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_firmwaerUpdateClick_from_ ; char *
                mov     rdx, rax
                xor     ecx, ecx
                call    rbx ; _objc_msgSend
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r15
                mov     rax, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_100022667:                          ; CODE XREF: -[HomeView firmwaerUpdateClick:]+51↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__HomeView_firmwaerUpdateClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView helpButtonClick:](HomeView *self, SEL, id)
__HomeView_helpButtonClick__ proc near  ; DATA XREF: __objc_const:0000000100043D88↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_38], rdi
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     r12, cs:selRef_mainBundle
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rbx, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Macos ; "MacOS"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     [rbp+var_30], rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSAlert ; void *
                mov     rsi, cs:selRef_new ; char *
                call    r13 ; _objc_msgSend
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                lea     rdx, cfstr_Sure ; "sure"
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_addButtonWithTitle_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setMessageText_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, cs:selRef_mainBundle ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Macostisp ; "MacOSTisp"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setInformativeText_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setAlertStyle_ ; char *
                mov     rdi, r15        ; void *
                xor     edx, edx
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_superview ; char *
                mov     rdi, [rbp+var_38] ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_window ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_beginSheetModalForWindow_completionHandler_ ; char *
                lea     rcx, off_10003A6E8
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__HomeView_helpButtonClick__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100022869   proc near               ; DATA XREF: __const:000000010003A6F8↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_100022869   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; HomeViewDelegate *__cdecl -[HomeView delegate](HomeView *self, SEL)
__HomeView_delegate_ proc near          ; CODE XREF: -[HomeView firmwaerUpdateClick:]+22↑P
                                        ; -[HomeView firmwaerUpdateClick:]+59↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__delegate ; HomeViewDelegate *_delegate;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_delegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setDelegate:](HomeView *self, SEL, id)
__HomeView_setDelegate__ proc near      ; DATA XREF: __objc_const:0000000100043DB8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__delegate ; HomeViewDelegate *_delegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSButton *__cdecl -[HomeView firmwaerUpdaterButton](HomeView *self, SEL)
__HomeView_firmwaerUpdaterButton_ proc near
                                        ; CODE XREF: -[HomeView awakeFromNib]+DF↑P
                                        ; -[HomeView awakeFromNib]+139↑P ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__firmwaerUpdaterButton ; NSButton *_firmwaerUpdaterButton;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_firmwaerUpdaterButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setFirmwaerUpdaterButton:](HomeView *self, SEL, id)
__HomeView_setFirmwaerUpdaterButton__ proc near
                                        ; DATA XREF: __objc_const:0000000100043DE8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__firmwaerUpdaterButton ; NSButton *_firmwaerUpdaterButton;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setFirmwaerUpdaterButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSTextField *__cdecl -[HomeView usb](HomeView *self, SEL)
__HomeView_usb_ proc near               ; DATA XREF: __objc_const:0000000100043E00↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__usb ; NSTextField *_usb;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_usb_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setUsb:](HomeView *self, SEL, id)
__HomeView_setUsb__ proc near           ; DATA XREF: __objc_const:0000000100043E18↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__usb ; NSTextField *_usb;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setUsb__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSView *__cdecl -[HomeView FindsView](HomeView *self, SEL)
__HomeView_FindsView_ proc near         ; CODE XREF: -[HomeView refresh]+1F↑P
                                        ; -[HomeView addDevicesTextFileld]+1E↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__FindsView ; NSView *_FindsView;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_FindsView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setFindsView:](HomeView *self, SEL, id)
__HomeView_setFindsView__ proc near     ; DATA XREF: __objc_const:0000000100043E48↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__FindsView ; NSView *_FindsView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setFindsView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSView *__cdecl -[HomeView usbView](HomeView *self, SEL)
__HomeView_usbView_ proc near           ; DATA XREF: __objc_const:0000000100043E60↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__usbView ; NSView *_usbView;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_usbView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setUsbView:](HomeView *self, SEL, id)
__HomeView_setUsbView__ proc near       ; DATA XREF: __objc_const:0000000100043E78↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__usbView ; NSView *_usbView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setUsbView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSImageView *__cdecl -[HomeView arrow01](HomeView *self, SEL)
__HomeView_arrow01_ proc near           ; DATA XREF: __objc_const:0000000100043E90↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__arrow01 ; NSImageView *_arrow01;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_arrow01_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setArrow01:](HomeView *self, SEL, id)
__HomeView_setArrow01__ proc near       ; DATA XREF: __objc_const:0000000100043EA8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__arrow01 ; NSImageView *_arrow01;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setArrow01__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSImageView *__cdecl -[HomeView arrow02](HomeView *self, SEL)
__HomeView_arrow02_ proc near           ; DATA XREF: __objc_const:0000000100043EC0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__arrow02 ; NSImageView *_arrow02;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_arrow02_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setArrow02:](HomeView *self, SEL, id)
__HomeView_setArrow02__ proc near       ; DATA XREF: __objc_const:0000000100043ED8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__arrow02 ; NSImageView *_arrow02;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setArrow02__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSImageView *__cdecl -[HomeView arrow03](HomeView *self, SEL)
__HomeView_arrow03_ proc near           ; CODE XREF: -[HomeView usbAniamtion]+1E↑P
                                        ; DATA XREF: __objc_const:0000000100043EF0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__arrow03 ; NSImageView *_arrow03;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_arrow03_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setArrow03:](HomeView *self, SEL, id)
__HomeView_setArrow03__ proc near       ; DATA XREF: __objc_const:0000000100043F08↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__arrow03 ; NSImageView *_arrow03;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setArrow03__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSButton *__cdecl -[HomeView helpButton](HomeView *self, SEL)
__HomeView_helpButton_ proc near        ; DATA XREF: __objc_const:0000000100043F20↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__helpButton ; NSButton *_helpButton;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__HomeView_helpButton_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setHelpButton:](HomeView *self, SEL, id)
__HomeView_setHelpButton__ proc near    ; DATA XREF: __objc_const:0000000100043F38↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_HomeView__helpButton ; NSButton *_helpButton;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__HomeView_setHelpButton__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned __int64 __cdecl -[HomeView state](HomeView *self, SEL)
__HomeView_state_ proc near             ; DATA XREF: __objc_const:0000000100043F50↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_HomeView__state ; unsigned __int64 _state;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__HomeView_state_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableArray *__cdecl -[HomeView devices](HomeView *self, SEL)
__HomeView_devices_ proc near           ; CODE XREF: -[HomeView moreDevice]+22↑P
                                        ; -[HomeView moreDevice]+54↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:_OBJC_IVAR_$_HomeView__devices ; NSMutableArray *_devices;
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__HomeView_devices_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView setDevices:](HomeView *self, SEL, id)
__HomeView_setDevices__ proc near       ; CODE XREF: -[HomeView awakeFromNib]+40↑P
                                        ; DATA XREF: __objc_const:0000000100043F80↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_HomeView__devices ; NSMutableArray *_devices;
                pop     rbp
                jmp     _objc_setProperty_atomic
__HomeView_setDevices__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[HomeView .cxx_destruct](HomeView *self, SEL)
__HomeView__cxx_destruct_ proc near     ; DATA XREF: __objc_const:0000000100043F98↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__devices ; NSMutableArray *_devices;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__helpButton ; NSButton *_helpButton;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__arrow03 ; NSImageView *_arrow03;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__arrow02 ; NSImageView *_arrow02;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__arrow01 ; NSImageView *_arrow01;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__usbView ; NSView *_usbView;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__FindsView ; NSView *_FindsView;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__usb ; NSTextField *_usb;
                add     rdi, rbx
                call    _objc_destroyWeak
                mov     rdi, cs:_OBJC_IVAR_$_HomeView__firmwaerUpdaterButton ; NSButton *_firmwaerUpdaterButton;
                add     rdi, rbx
                call    _objc_destroyWeak
                add     rbx, cs:_OBJC_IVAR_$_HomeView__delegate ; HomeViewDelegate *_delegate;
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_destroyWeak
__HomeView__cxx_destruct_ endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100022AF0   proc near               ; CODE XREF: sub_100022BF5+80↓p

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                mov     [rbp+var_38], rcx
                mov     [rbp+var_30], rdx
                cmp     edx, 4
                jl      loc_100022BEA
                mov     rax, [rbp+var_30]
                shr     eax, 2
                mov     [rbp+var_30], rax
                xor     r14d, r14d
                cmp     cs:byte_100075DF0, 0
                mov     ecx, 14h
                cmovz   ecx, r14d
                mov     eax, edi
                shr     eax, cl
                add     eax, edi
                neg     cl
                shl     edi, cl
                add     edi, eax
                cmp     cs:byte_100075DF4, 0
                mov     r9d, 11h
                cmovz   r9d, r14d
                mov     ecx, r9d
                neg     cl
                mov     eax, edi
                shl     eax, cl
                add     eax, edi
                mov     ecx, r9d
                shr     edi, cl
                add     edi, eax
                cmp     cs:byte_100075DF8, 0
                mov     edx, 12h
                cmovz   edx, r14d
                mov     r10d, 20h
                mov     r11d, 20h
                sub     r11d, edx
                movzx   ebx, cs:byte_100075DFC
                shl     ebx, 4
                sub     r10d, ebx
                cmp     cs:byte_100075E00, 0
                mov     r15d, 0EE97FAFAh
                cmovz   r15d, r14d
                xor     r13d, r13d
                mov     r12d, esi

loc_100022B9E:                          ; CODE XREF: sub_100022AF0+F8↓j
                mov     rax, [rbp+var_38]
                mov     ecx, [rax+r14*4]
                mov     eax, ecx
                xor     r13d, edi
                xor     r13d, esi
                xor     r13d, ecx
                mov     r9, r8
                mov     r8d, ecx
                mov     ecx, edx
                shr     r8d, cl
                mov     ecx, r11d
                shl     eax, cl
                mov     ecx, ebx
                shr     esi, cl
                mov     ecx, r10d
                shl     r12d, cl
                add     eax, r8d
                mov     r8, r9
                add     r12d, esi
                mov     [r9+r14*4], r13d
                inc     r14
                add     edi, r15d
                mov     r13d, eax
                mov     esi, r12d
                cmp     [rbp+var_30], r14
                jnz     short loc_100022B9E

loc_100022BEA:                          ; CODE XREF: sub_100022AF0+18↑j
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100022AF0   endp


; =============== S U B R O U T I N E =======================================


sub_100022BF5   proc near               ; CODE XREF: sub_10000CF19+F0↑p
                test    edx, edx
                jle     locret_100022C94
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     ebx, edx
                mov     r14d, esi
                mov     r15, rdi
                lea     r13, word_10002F340

loc_100022C1A:                          ; CODE XREF: sub_100022BF5+8F↓j
                mov     eax, r14d
                sar     eax, 8
                add     eax, r14d
                mov     ecx, r14d
                sar     ecx, 10h
                mov     edx, r14d
                sar     edx, 18h
                add     edx, ecx
                add     edx, eax
                xor     edx, 0B645h
                mov     eax, edx
                mov     ecx, 0FFh
                and     eax, ecx
                movzx   eax, word ptr [r13+rax*2+0]
                shr     edx, 8
                and     edx, ecx
                movzx   esi, word ptr [r13+rdx*2+0]
                shl     esi, 10h
                or      esi, eax
                mov     eax, 200h
                cmp     ebx, eax
                mov     r12d, 200h
                cmovb   r12d, ebx
                mov     edi, r14d
                mov     edx, r12d
                mov     rcx, r15
                mov     r8, r15
                call    sub_100022AF0
                lea     r15, [r15+r12*4]
                add     r14d, r12d
                sub     ebx, r12d
                jg      short loc_100022C1A
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp

locret_100022C94:                       ; CODE XREF: sub_100022BF5+2↑j
                retn
sub_100022BF5   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100022C95   proc near               ; CODE XREF: +[SHIDBoot load]+BC↑j
                push    rbp
                mov     rbp, rsp
                lea     rdi, aMmkey1XMmkey2X ; "mmkey1 %x mmkey2 %x\n"
                mov     esi, 20200309h
                mov     edx, 20130715h
                xor     eax, eax
                call    _printf
                mov     al, 1
                mov     cs:byte_100075DF0, al
                mov     cs:byte_100075DF4, al
                mov     cs:byte_100075DFC, al
                mov     cs:byte_100075DF8, al
                mov     cs:byte_100075E00, al
                pop     rbp
                retn
sub_100022C95   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[AppDelegate applicationDidFinishLaunching:](AppDelegate *self, SEL, id)
__AppDelegate_applicationDidFinishLaunching__ proc near
                                        ; DATA XREF: __objc_const:0000000100044B28↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__AppDelegate_applicationDidFinishLaunching__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[AppDelegate applicationWillTerminate:](AppDelegate *self, SEL, id)
__AppDelegate_applicationWillTerminate__ proc near
                                        ; DATA XREF: __objc_const:0000000100044B40↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__AppDelegate_applicationWillTerminate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SMainMenu getCheckUpdateMenuItem](SMainMenu_meta *self, SEL)
__SMainMenu_getCheckUpdateMenuItem_ proc near
                                        ; CODE XREF: -[ViewController addCheckUpdat]+27↑P
                                        ; DATA XREF: __objc_const:0000000100044BF0↓o

var_120         = ymmword ptr -120h
anonymous_0     = xmmword ptr -100h
anonymous_1     = xmmword ptr -0F0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0F8h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_NSApplication ; void *
                mov     rsi, cs:selRef_sharedApplication ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_mainMenu ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     r15, cs:selRef_itemArray
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_100022EEC
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_submenu ; char *
                mov     [rbp+var_D8], rax
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_120]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     [rbp+var_D0], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_100022EA9
                mov     r12, rax
                mov     [rbp+var_C0], r13
                mov     [rbp+var_C8], r14
                lea     rax, [rbp+var_120]
                mov     rax, [rax+10h]
                mov     r14, [rax]

loc_100022E24:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+1BA↓j
                mov     rbx, cs:selRef_tag
                xor     r15d, r15d

loc_100022E2E:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+18A↓j
                mov     rax, qword ptr [rbp+var_120+10h]
                cmp     [rax], r14
                jz      short loc_100022E46
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_100022E46:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+159↑j
                mov     rax, qword ptr [rbp+var_120+8]
                mov     r13, [rax+r15*8]
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, 1
                jz      short loc_100022EAE
                inc     r15
                cmp     r12, r15
                jnz     short loc_100022E2E
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_120]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r12, rax
                test    rax, rax
                jnz     short loc_100022E24
                mov     r14, [rbp+var_C8]
                mov     r13, [rbp+var_C0]

loc_100022EA9:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+120↑j
                xor     r15d, r15d
                jmp     short loc_100022EC8
; ---------------------------------------------------------------------------

loc_100022EAE:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+182↑j
                mov     rdi, r13
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     r14, [rbp+var_C8]
                mov     r13, [rbp+var_C0]

loc_100022EC8:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+1CD↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_B8]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_D0]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_D8]
                call    rbx ; _objc_release
                jmp     short loc_100022EEF
; ---------------------------------------------------------------------------

loc_100022EEC:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+91↑j
                xor     r15d, r15d

loc_100022EEF:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+20B↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100022F29
                mov     rdi, r15
                add     rsp, 0F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100022F29:                          ; CODE XREF: +[SMainMenu getCheckUpdateMenuItem]+22F↑j
                call    ___stack_chk_fail
__SMainMenu_getCheckUpdateMenuItem_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SMainMenu getBetaMenuItem](SMainMenu_meta *self, SEL)
__SMainMenu_getBetaMenuItem_ proc near  ; CODE XREF: -[ViewController addBetaAction]+7D↑P
                                        ; -[ViewController chengBeta:]+B4↑P ...

var_120         = ymmword ptr -120h
anonymous_0     = xmmword ptr -100h
anonymous_1     = xmmword ptr -0F0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0F8h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_NSApplication ; void *
                mov     rsi, cs:selRef_sharedApplication ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_mainMenu ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     r15, cs:selRef_itemArray
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_10002313B
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_submenu ; char *
                mov     [rbp+var_D8], rax
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_120]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     [rbp+var_D0], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_1000230F8
                mov     r12, rax
                mov     [rbp+var_C0], r13
                mov     [rbp+var_C8], r14
                lea     rax, [rbp+var_120]
                mov     rax, [rax+10h]
                mov     r14, [rax]

loc_100023073:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+1BA↓j
                mov     rbx, cs:selRef_tag
                xor     r15d, r15d

loc_10002307D:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+18A↓j
                mov     rax, qword ptr [rbp+var_120+10h]
                cmp     [rax], r14
                jz      short loc_100023095
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_100023095:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+159↑j
                mov     rax, qword ptr [rbp+var_120+8]
                mov     r13, [rax+r15*8]
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, 3
                jz      short loc_1000230FD
                inc     r15
                cmp     r12, r15
                jnz     short loc_10002307D
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_120]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r12, rax
                test    rax, rax
                jnz     short loc_100023073
                mov     r14, [rbp+var_C8]
                mov     r13, [rbp+var_C0]

loc_1000230F8:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+120↑j
                xor     r15d, r15d
                jmp     short loc_100023117
; ---------------------------------------------------------------------------

loc_1000230FD:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+182↑j
                mov     rdi, r13
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     r14, [rbp+var_C8]
                mov     r13, [rbp+var_C0]

loc_100023117:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+1CD↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_B8]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_D0]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_D8]
                call    rbx ; _objc_release
                jmp     short loc_10002313E
; ---------------------------------------------------------------------------

loc_10002313B:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+91↑j
                xor     r15d, r15d

loc_10002313E:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+20B↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100023178
                mov     rdi, r15
                add     rsp, 0F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100023178:                          ; CODE XREF: +[SMainMenu getBetaMenuItem]+22F↑j
                call    ___stack_chk_fail
__SMainMenu_getBetaMenuItem_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SMainMenu getMoreMenuItem](SMainMenu_meta *self, SEL)
__SMainMenu_getMoreMenuItem_ proc near  ; CODE XREF: -[ViewController S_AddView:]+FB↑P
                                        ; -[ViewController S_AddView:]+13B↑P ...

var_120         = ymmword ptr -120h
anonymous_0     = xmmword ptr -100h
anonymous_1     = xmmword ptr -0F0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0F8h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, cs:classRef_NSApplication ; void *
                mov     rsi, cs:selRef_sharedApplication ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_mainMenu ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     r15, cs:selRef_itemArray
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_10002338A
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_submenu ; char *
                mov     [rbp+var_D8], rax
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_120]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     [rbp+var_D0], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_100023347
                mov     r12, rax
                mov     [rbp+var_C0], r13
                mov     [rbp+var_C8], r14
                lea     rax, [rbp+var_120]
                mov     rax, [rax+10h]
                mov     r14, [rax]

loc_1000232C2:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+1BA↓j
                mov     rbx, cs:selRef_tag
                xor     r15d, r15d

loc_1000232CC:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+18A↓j
                mov     rax, qword ptr [rbp+var_120+10h]
                cmp     [rax], r14
                jz      short loc_1000232E4
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_1000232E4:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+159↑j
                mov     rax, qword ptr [rbp+var_120+8]
                mov     r13, [rax+r15*8]
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, 2
                jz      short loc_10002334C
                inc     r15
                cmp     r12, r15
                jnz     short loc_1000232CC
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_120]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r12, rax
                test    rax, rax
                jnz     short loc_1000232C2
                mov     r14, [rbp+var_C8]
                mov     r13, [rbp+var_C0]

loc_100023347:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+120↑j
                xor     r15d, r15d
                jmp     short loc_100023366
; ---------------------------------------------------------------------------

loc_10002334C:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+182↑j
                mov     rdi, r13
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     r14, [rbp+var_C8]
                mov     r13, [rbp+var_C0]

loc_100023366:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+1CD↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_B8]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_D0]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_D8]
                call    rbx ; _objc_release
                jmp     short loc_10002338D
; ---------------------------------------------------------------------------

loc_10002338A:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+91↑j
                xor     r15d, r15d

loc_10002338D:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+20B↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_1000233C7
                mov     rdi, r15
                add     rsp, 0F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_1000233C7:                          ; CODE XREF: +[SMainMenu getMoreMenuItem]+22F↑j
                call    ___stack_chk_fail
__SMainMenu_getMoreMenuItem_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SMainMenu getMainItem](SMainMenu_meta *self, SEL)
__SMainMenu_getMainItem_ proc near      ; DATA XREF: __objc_const:0000000100044C38↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rdi, cs:classRef_NSApplication ; void *
                mov     rsi, cs:selRef_sharedApplication ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_mainMenu ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_itemArray ; char *
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_firstObject ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SMainMenu_getMainItem_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SMainMenu getMoreMenuItemSelf](SMainMenu_meta *self, SEL)
__SMainMenu_getMoreMenuItemSelf_ proc near
                                        ; DATA XREF: __objc_const:0000000100044C50↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075E08
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__SMainMenu_getMoreMenuItemSelf_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SEL __cdecl +[SMainMenu getMoreMenuItemAction](SMainMenu_meta *self, SEL)
__SMainMenu_getMoreMenuItemAction_ proc near
                                        ; DATA XREF: __objc_const:0000000100044C68↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:qword_100075E10
                pop     rbp
                retn
__SMainMenu_getMoreMenuItemAction_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SMainMenu setMoreMenuItemSelf:](SMainMenu_meta *self, SEL, id)
__SMainMenu_setMoreMenuItemSelf__ proc near
                                        ; CODE XREF: -[ViewController addMoreAction]+D3↑P
                                        ; DATA XREF: __objc_const:0000000100044C80↓o
                push    rbp
                mov     rbp, rsp
                lea     rdi, qword_100075E08
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SMainMenu_setMoreMenuItemSelf__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SMainMenu setMoreMenuItemAction:](SMainMenu_meta *self, SEL, SEL)
__SMainMenu_setMoreMenuItemAction__ proc near
                                        ; CODE XREF: -[ViewController addMoreAction]+E7↑P
                                        ; DATA XREF: __objc_const:0000000100044C98↓o
                push    rbp
                mov     rbp, rsp
                mov     cs:qword_100075E10, rdx
                pop     rbp
                retn
__SMainMenu_setMoreMenuItemAction__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; MJProperty *__cdecl -[MJProperty init](MJProperty *self, SEL)
__MJProperty_init_ proc near            ; DATA XREF: __objc_const:0000000100044DB0↓o

var_30          = qword ptr -30h
anonymous_0     = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 10h
                lea     rax, [rbp+var_30]
                mov     [rax], rdi
                mov     rcx, cs:classRef_MJProperty_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_init
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      short loc_100023537
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     r14, cs:selRef_dictionary
                mov     r15, cs:_objc_msgSend_ptr
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, [rbx+28h]
                mov     [rbx+28h], rax
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, [rbx+30h]
                mov     [rbx+30h], rax
                call    r12 ; _objc_release

loc_100023537:                          ; CODE XREF: -[MJProperty init]+36↑j
                mov     rax, rbx
                add     rsp, 10h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__MJProperty_init_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[MJProperty cachedPropertyWithProperty:](MJProperty_meta *self, SEL, objc_property *)
__MJProperty_cachedPropertyWithProperty__ proc near
                                        ; CODE XREF: sub_100027B8D+C2↓P
                                        ; DATA XREF: __objc_const:0000000100044D48↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdx
                mov     r14, rdi
                mov     rsi, rdx
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jnz     short loc_1000235B2
                mov     rdi, r14
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_setProperty_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                mov     ecx, 1
                mov     rdi, r14
                mov     rsi, rbx
                mov     rdx, r15
                call    _objc_setAssociatedObject

loc_1000235B2:                          ; CODE XREF: +[MJProperty cachedPropertyWithProperty:]+27↑j
                mov     rdi, r15
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__MJProperty_cachedPropertyWithProperty__ endp


; =============== S U B R O U T I N E =======================================


; void __cdecl -[MJProperty setProperty:](MJProperty *self, SEL, objc_property *)
__MJProperty_setProperty__ proc near    ; DATA XREF: __objc_const:0000000100044DC8↓o
                mov     [rdi+8], rdx
                test    rdx, rdx
                jz      locret_10002368A
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdx
                mov     rbx, rdi
                mov     r15, cs:classRef_NSString
                mov     rdi, rdx
                call    _property_getName
                mov     r12, cs:selRef_stringWithUTF8String_
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, [rbx+10h]
                mov     [rbx+10h], rax
                call    cs:_objc_release_ptr
                mov     r15, cs:classRef_NSString
                mov     rdi, r14
                call    _property_getAttributes
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_rangeOfString_ ; char *
                lea     rdx, stru_10003C258 ; ","
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rcx, 7FFFFFFFFFFFFFFFh
                cmp     rax, rcx
                jnz     short loc_10002368B
                mov     rsi, cs:selRef_substringFromIndex_ ; char *
                mov     edx, 1
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                jmp     short loc_1000236AE
; ---------------------------------------------------------------------------

locret_10002368A:                       ; CODE XREF: -[MJProperty setProperty:]+7↑j
                retn
; ---------------------------------------------------------------------------

loc_10002368B:                          ; CODE XREF: -[MJProperty setProperty:]+A7↑j
                dec     rax
                mov     rsi, cs:selRef_substringWithRange_ ; char *
                mov     edx, 1
                mov     rdi, r14        ; void *
                mov     rcx, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue

loc_1000236AE:                          ; CODE XREF: -[MJProperty setProperty:]+C6↑j
                mov     r15, rax
                mov     rdi, cs:classRef_MJPropertyType ; void *
                mov     rsi, cs:selRef_cachedTypeWithCode_ ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr ; +[MJPropertyType cachedTypeWithCode:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, [rbx+18h]
                mov     [rbx+18h], rax
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                mov     rax, rbx
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__MJProperty_setProperty__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[MJProperty valueForObject:](MJProperty *self, SEL, id)
__MJProperty_valueForObject__ proc near ; DATA XREF: __objc_const:0000000100044DE0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_type ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[MJProperty type]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_isKVCDisabled ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r12d, eax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                test    r12b, r12b
                jz      short loc_100023777
                mov     rdi, cs:classRef_NSNull ; void *
                mov     rsi, cs:selRef_null ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                jmp     short loc_1000237B3
; ---------------------------------------------------------------------------

loc_100023777:                          ; CODE XREF: -[MJProperty valueForObject:]+58↑j
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[MJProperty name]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_valueForKey_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_1000237B3:                          ; CODE XREF: -[MJProperty valueForObject:]+79↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__MJProperty_valueForObject__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJProperty setValue:forObject:](MJProperty *self, SEL, id, id)
__MJProperty_setValue_forObject__ proc near
                                        ; DATA XREF: __objc_const:0000000100044DF8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rcx
                mov     r15, rdi
                mov     r12, cs:_objc_retain_ptr
                mov     rdi, rdx
                call    r12 ; _objc_retain
                mov     rbx, rax
                mov     rdi, r14
                call    r12 ; _objc_retain
                mov     r14, rax
                mov     rsi, cs:selRef_type ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[MJProperty type]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_isKVCDisabled ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r12d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    rbx, rbx
                jz      short loc_10002387C
                test    r12b, r12b
                jnz     short loc_10002387C
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, r15        ; void *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[MJProperty name]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setValue_forKey_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                mov     rcx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10002387C:                          ; CODE XREF: -[MJProperty setValue:forObject:]+68↑j
                                        ; -[MJProperty setValue:forObject:]+6D↑j
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__MJProperty_setValue_forObject__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[MJProperty propertyKeysWithStringKey:](MJProperty *self, SEL, id)
__MJProperty_propertyKeysWithStringKey__ proc near
                                        ; CODE XREF: -[MJProperty setOriginKey:forClass:]+77↓P
                                        ; DATA XREF: __objc_const:0000000100044E10↓o

var_190         = xmmword ptr -190h
var_180         = xmmword ptr -180h
anonymous_0     = xmmword ptr -170h
anonymous_1     = xmmword ptr -160h
var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 168h
                mov     rdi, rdx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_length ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      loc_100023D4C
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_array ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_componentsSeparatedByString_ ; char *
                lea     rdx, stru_10003BF78 ; "."
                mov     [rbp+var_F8], rbx
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                xorps   xmm0, xmm0
                lea     rdx, [rbp+var_190]
                movaps  xmmword ptr [rdx], xmm0
                movaps  xmmword ptr [rdx+10h], xmm0
                movaps  xmmword ptr [rdx+20h], xmm0
                movaps  xmmword ptr [rdx+30h], xmm0
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     [rbp+var_E8], rax
                test    rax, rax
                jz      loc_100023D36
                lea     rax, [rbp+var_190]
                mov     rax, [rax+10h]
                mov     r15, [rax]
                mov     [rbp+var_100], r15

loc_10002398B:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+491↓j
                mov     rax, cs:selRef_rangeOfString_
                mov     [rbp+var_120], rax
                mov     rax, cs:selRef_substringToIndex_
                mov     [rbp+var_108], rax
                mov     rax, cs:selRef_init
                mov     [rbp+var_E0], rax
                mov     rax, cs:selRef_setName_
                mov     [rbp+var_D8], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_D0], rax
                mov     rax, cs:selRef_stringByReplacingOccurrencesOfString_withString_
                mov     r12, cs:selRef_count
                xor     ecx, ecx
                mov     [rbp+var_C8], rax
                mov     [rbp+var_F0], r12

loc_1000239EF:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+45C↓j
                mov     rax, qword ptr [rbp+var_180]
                cmp     [rax], r15
                jz      short loc_100023A0D
                mov     rdi, [rbp+var_C0]
                mov     r12, rcx
                call    _objc_enumerationMutation
                mov     rcx, r12

loc_100023A0D:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+15A↑j
                mov     rax, qword ptr [rbp+var_190+8]
                mov     [rbp+var_128], rcx
                mov     r12, [rax+rcx*8]
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_120] ; char *
                lea     rdx, stru_10003C278 ; "["
                call    r14 ; _objc_msgSend
                mov     rcx, 7FFFFFFFFFFFFFFFh
                cmp     rax, rcx
                jnz     short loc_100023A8A
                mov     rdi, cs:classRef_MJPropertyKey
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_E0] ; char *
                call    r14 ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_D8] ; char *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_D0] ; char *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     rax, cs:_objc_release_ptr
                jmp     loc_100023CE5
; ---------------------------------------------------------------------------

loc_100023A8A:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+1A1↑j
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_108] ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_length ; char *
                call    r14 ; _objc_msgSend
                mov     rcx, rbx
                test    rax, rax
                mov     r15, cs:_objc_release_ptr
                lea     rax, stru_10003A8B8
                mov     rsi, [rbp+var_C8]
                jz      loc_100023B63
                mov     rdi, cs:classRef_MJPropertyKey
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_E0] ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_D8] ; char *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_D0] ; char *
                mov     rdx, [rbp+var_B8]
                call    r14 ; _objc_msgSend
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_C8] ; char *
                mov     rdx, rbx
                lea     rcx, stru_10003A8B8
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_B8]
                call    r15 ; _objc_release
                mov     rsi, [rbp+var_C8] ; char *
                lea     rax, stru_10003A8B8
                mov     rcx, r12

loc_100023B63:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+237↑j
                mov     [rbp+var_118], rbx
                mov     [rbp+var_110], rcx
                mov     rdi, rcx        ; void *
                lea     rdx, stru_10003C278 ; "["
                mov     rcx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_componentsSeparatedByString_ ; char *
                lea     rdx, stru_10003C298 ; "]"
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     [rbp+var_B8], r12
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_F0] ; char *
                call    r14 ; _objc_msgSend
                cmp     rax, 1
                jz      loc_100023CC0
                mov     rax, cs:selRef_init
                mov     [rbp+var_150], rax
                mov     rax, cs:selRef_setType_
                mov     [rbp+var_148], rax
                mov     rax, cs:selRef_objectAtIndexedSubscript_
                mov     [rbp+var_140], rax
                mov     rax, cs:selRef_setName_
                mov     [rbp+var_138], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_130], rax
                xor     ebx, ebx

loc_100023C17:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+41B↓j
                mov     rdi, cs:classRef_MJPropertyKey
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_150] ; char *
                call    r14 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_148] ; char *
                mov     edx, 1
                call    r14 ; _objc_msgSend
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, [rbp+var_140] ; char *
                mov     rdx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, r13
                mov     r13, rax
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_138] ; char *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                mov     r13, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_130] ; char *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                mov     r12, [rbp+var_F0]
                call    r15 ; _objc_release
                inc     rbx
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend
                dec     rax
                cmp     rbx, rax
                jb      loc_100023C17

loc_100023CC0:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+32A↑j
                mov     rdi, [rbp+var_B8]
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_110]
                call    r15 ; _objc_release
                mov     rax, r15
                mov     r15, [rbp+var_100]
                mov     rbx, [rbp+var_118]

loc_100023CE5:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+1E6↑j
                mov     rdi, rbx
                call    rax ; _objc_release
                mov     rcx, [rbp+var_128]
                inc     rcx
                cmp     rcx, [rbp+var_E8]
                jnz     loc_1000239EF
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_190]
                lea     rcx, [rbp+var_B0]
                call    r14 ; _objc_msgSend
                mov     [rbp+var_E8], rax
                test    rax, rax
                jnz     loc_10002398B

loc_100023D36:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+D1↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     rbx, [rbp+var_F8]
                jmp     short loc_100023D4F
; ---------------------------------------------------------------------------

loc_100023D4C:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+41↑j
                xor     r13d, r13d

loc_100023D4F:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+4AB↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100023D81
                mov     rdi, r13
                add     rsp, 168h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100023D81:                          ; CODE XREF: -[MJProperty propertyKeysWithStringKey:]+4C7↑j
                call    ___stack_chk_fail
__MJProperty_propertyKeysWithStringKey__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJProperty setOriginKey:forClass:](MJProperty *self, SEL, id, Class)
__MJProperty_setOriginKey_forClass__ proc near
                                        ; DATA XREF: __objc_const:0000000100044E28↓o

var_140         = ymmword ptr -140h
anonymous_0     = xmmword ptr -120h
anonymous_1     = xmmword ptr -110h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = byte ptr -0B8h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 118h
                mov     [rbp+var_D8], rcx
                mov     r13, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rbx, cs:selRef_class
                mov     r12, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     r14, cs:selRef_isKindOfClass_
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      short loc_100023E6E
                mov     rsi, cs:selRef_propertyKeysWithStringKey_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r15
                call    r12 ; _objc_msgSend ; -[MJProperty propertyKeysWithStringKey:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_10002405C
                lea     rdx, [rbp+var_38]
                mov     [rdx], r14
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_count_ ; char *
                mov     ecx, 1
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setPorpertyKeys_forClass_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                mov     rcx, [rbp+var_D8]
                call    r12 ; _objc_msgSend ; -[MJProperty setPorpertyKeys:forClass:]
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                jmp     loc_10002405C
; ---------------------------------------------------------------------------

loc_100023E6E:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+68↑j
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                test    al, al
                jz      loc_100024065
                mov     [rbp+var_E8], r13
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_array ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_E0], rax
                xorps   xmm0, xmm0
                lea     rbx, [rbp+var_140]
                movaps  xmmword ptr [rbx], xmm0
                movaps  xmmword ptr [rbx+10h], xmm0
                movaps  xmmword ptr [rbx+20h], xmm0
                movaps  xmmword ptr [rbx+30h], xmm0
                mov     [rbp+var_D0], r15
                mov     rdi, r15
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B8]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend
                test    rax, rax
                jz      loc_100024000
                mov     rbx, rax
                lea     rax, [rbp+var_140]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_F8], rax

loc_100023F24:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+272↓j
                mov     r12, cs:selRef_propertyKeysWithStringKey_
                mov     rax, cs:selRef_count
                mov     [rbp+var_C8], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_F0], rax
                xor     r13d, r13d

loc_100023F4A:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+242↓j
                mov     rax, qword ptr [rbp+var_140+10h]
                mov     rcx, [rbp+var_F8]
                cmp     [rax], rcx
                jz      short loc_100023F69
                mov     rdi, [rbp+var_C0]
                call    _objc_enumerationMutation

loc_100023F69:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+1D5↑j
                mov     rax, qword ptr [rbp+var_140+8]
                mov     rdx, [rax+r13*8]
                mov     rdi, [rbp+var_E8] ; void *
                mov     rsi, r12        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_C8] ; char *
                call    r14 ; _objc_msgSend
                test    rax, rax
                jz      short loc_100023FB9
                mov     rdi, [rbp+var_E0] ; void *
                mov     rsi, [rbp+var_F0] ; char *
                mov     rdx, r15
                call    r14 ; _objc_msgSend

loc_100023FB9:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+21D↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr
                inc     r13
                cmp     rbx, r13
                jnz     short loc_100023F4A
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_140]
                lea     rcx, [rbp+var_B8]
                call    cs:_objc_msgSend_ptr
                mov     rbx, rax
                test    rax, rax
                jnz     loc_100023F24
                jmp     short loc_10002400E
; ---------------------------------------------------------------------------

loc_100024000:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+180↑j
                mov     rax, cs:selRef_count
                mov     [rbp+var_C8], rax

loc_10002400E:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+278↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     r14, [rbp+var_E0]
                mov     rdi, r14        ; void *
                mov     rsi, [rbp+var_C8] ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      short loc_100024055
                mov     rsi, cs:selRef_setPorpertyKeys_forClass_ ; char *
                mov     rdi, [rbp+var_E8] ; void *
                mov     rdx, r14
                mov     rcx, [rbp+var_D8]
                call    cs:_objc_msgSend_ptr

loc_100024055:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+2AF↑j
                mov     r15, [rbp+var_D0]

loc_10002405C:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+95↑j
                                        ; -[MJProperty setOriginKey:forClass:]+E3↑j
                mov     rdi, r14
                call    cs:_objc_release_ptr

loc_100024065:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+103↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100024090
                add     rsp, 118h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100024090:                          ; CODE XREF: -[MJProperty setOriginKey:forClass:]+2F6↑j
                call    ___stack_chk_fail
__MJProperty_setOriginKey_forClass__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJProperty setPorpertyKeys:forClass:](MJProperty *self, SEL, id, Class)
__MJProperty_setPorpertyKeys_forClass__ proc near
                                        ; CODE XREF: -[MJProperty setOriginKey:forClass:]+D7↑P
                                        ; DATA XREF: __objc_const:0000000100044E40↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     r14, rcx
                mov     r15, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_count ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      short loc_10002411F
                mov     rsi, cs:selRef_propertyKeysDict ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r12 ; _objc_msgSend ; -[MJProperty propertyKeysDict]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r14
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rbx
                mov     rcx, rax
                call    r12 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release

loc_10002411F:                          ; CODE XREF: -[MJProperty setPorpertyKeys:forClass:]+30↑j
                mov     rdi, rbx
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__MJProperty_setPorpertyKeys_forClass__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[MJProperty propertyKeysForClass:](MJProperty *self, SEL, Class)
__MJProperty_propertyKeysForClass__ proc near
                                        ; DATA XREF: __objc_const:0000000100044E58↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdx
                mov     rsi, cs:selRef_propertyKeysDict ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[MJProperty propertyKeysDict]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__MJProperty_propertyKeysForClass__ endp


; =============== S U B R O U T I N E =======================================


; void __cdecl -[MJProperty setObjectClassInArray:forClass:](MJProperty *self, SEL, Class, Class)
__MJProperty_setObjectClassInArray_forClass__ proc near
                                        ; DATA XREF: __objc_const:0000000100044E70↓o
                test    rdx, rdx
                jz      short locret_10002421F
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     r14, rcx
                mov     rbx, rdx
                mov     rsi, cs:selRef_objectClassInArrayDict ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[MJProperty objectClassInArrayDict]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r14
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rbx
                mov     rcx, rax
                call    r12 ; _objc_msgSend
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r15
                mov     rax, rbx
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

locret_10002421F:                       ; CODE XREF: -[MJProperty setObjectClassInArray:forClass:]+3↑j
                retn
__MJProperty_setObjectClassInArray_forClass__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; Class __cdecl -[MJProperty objectClassInArrayForClass:](MJProperty *self, SEL, Class)
__MJProperty_objectClassInArrayForClass__ proc near
                                        ; DATA XREF: __objc_const:0000000100044E88↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdx
                mov     rsi, cs:selRef_objectClassInArrayDict ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; -[MJProperty objectClassInArrayDict]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r12 ; _objc_release
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, r15
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__MJProperty_objectClassInArrayForClass__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; objc_property *__cdecl -[MJProperty property](MJProperty *self, SEL)
__MJProperty_property_ proc near        ; DATA XREF: __objc_const:0000000100044EA0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+8]
                pop     rbp
                retn
__MJProperty_property_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[MJProperty name](MJProperty *self, SEL)
__MJProperty_name_ proc near            ; CODE XREF: -[MJProperty valueForObject:]+85↑P
                                        ; -[MJProperty setValue:forObject:]+80↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+10h]
                pop     rbp
                retn
__MJProperty_name_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; MJPropertyType *__cdecl -[MJProperty type](MJProperty *self, SEL)
__MJProperty_type_ proc near            ; CODE XREF: -[MJProperty valueForObject:]+2E↑P
                                        ; -[MJProperty setValue:forObject:]+3E↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+18h]
                pop     rbp
                retn
__MJProperty_type_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; Class __cdecl -[MJProperty srcClass](MJProperty *self, SEL)
__MJProperty_srcClass_ proc near        ; DATA XREF: __objc_const:0000000100044EE8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+20h]
                pop     rbp
                retn
__MJProperty_srcClass_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJProperty setSrcClass:](MJProperty *self, SEL, Class)
__MJProperty_setSrcClass__ proc near    ; DATA XREF: __objc_const:0000000100044F00↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+20h], rdx
                pop     rbp
                retn
__MJProperty_setSrcClass__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableDictionary *__cdecl -[MJProperty propertyKeysDict](MJProperty *self, SEL)
__MJProperty_propertyKeysDict_ proc near
                                        ; CODE XREF: -[MJProperty setPorpertyKeys:forClass:]+43↑P
                                        ; -[MJProperty propertyKeysForClass:]+1C↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+28h]
                pop     rbp
                retn
__MJProperty_propertyKeysDict_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJProperty setPropertyKeysDict:](MJProperty *self, SEL, id)
__MJProperty_setPropertyKeysDict__ proc near
                                        ; DATA XREF: __objc_const:0000000100044F30↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 28h
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__MJProperty_setPropertyKeysDict__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableDictionary *__cdecl -[MJProperty objectClassInArrayDict](MJProperty *self, SEL)
__MJProperty_objectClassInArrayDict_ proc near
                                        ; CODE XREF: -[MJProperty setObjectClassInArray:forClass:]+24↑P
                                        ; -[MJProperty objectClassInArrayForClass:]+1C↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+30h]
                pop     rbp
                retn
__MJProperty_objectClassInArrayDict_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJProperty setObjectClassInArrayDict:](MJProperty *self, SEL, id)
__MJProperty_setObjectClassInArrayDict__ proc near
                                        ; DATA XREF: __objc_const:0000000100044F60↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 30h
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__MJProperty_setObjectClassInArrayDict__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[MJProperty .cxx_destruct](MJProperty *self, SEL)
__MJProperty__cxx_destruct_ proc near   ; DATA XREF: __objc_const:0000000100044F78↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 30h
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+28h]
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+18h]
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 10h
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__MJProperty__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100024341   proc near               ; DATA XREF: sub_1000246AF+29E↓o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r12, r9
                mov     r14, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_getDeviceWithRef_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                cmp     byte ptr [r12], 22h
                jnz     loc_1000244D2
                test    r15, r15
                jz      loc_10002468C
                mov     [rbp+var_38], r14
                movzx   eax, word ptr [r12+1]
                cvtsi2ss xmm0, eax
                movzx   r14d, word ptr [r12+3]
                mulss   xmm0, cs:dword_10002F540
                mov     rsi, cs:selRef_setVersion_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setBeta_ ; char *
                mov     rdi, r15        ; void *
                mov     edx, r14d
                call    r13 ; _objc_msgSend
                mov     r14, cs:selRef_pid
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 3100h
                jz      short loc_100024419
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 3104h
                jz      short loc_100024419
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 3102h
                jnz     short loc_10002442F

loc_100024419:                          ; CODE XREF: sub_100024341+AA↑j
                                        ; sub_100024341+C0↑j
                movsx   edx, byte ptr [r12+5]
                mov     rsi, cs:selRef_setIsChangeBoot_ ; char *
                mov     rdi, r15        ; void *
                call    cs:_objc_msgSend_ptr

loc_10002442F:                          ; CODE XREF: sub_100024341+D6↑j
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 6002h
                mov     r13, r14
                mov     r14, [rbp+var_38]
                jz      short loc_100024478
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 6000h
                jz      short loc_100024478
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 6001h
                jnz     short loc_1000244BF

loc_100024478:                          ; CODE XREF: sub_100024341+109↑j
                                        ; sub_100024341+11F↑j
                movzx   edx, word ptr [r12+5]
                mov     rsi, cs:selRef_setBootVersion_ ; char *
                mov     rdi, r15        ; void *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_pid ; char *
                call    r13 ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 6002h
                jnz     short loc_1000244BF
                movzx   edx, word ptr [r12+6]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_setBootVersion_ ; char *
                call    cs:_objc_msgSend_ptr

loc_1000244BF:                          ; CODE XREF: sub_100024341+135↑j
                                        ; sub_100024341+166↑j
                mov     rsi, cs:selRef_addS8BitdoDeviceRefreshUI_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr

loc_1000244D2:                          ; CODE XREF: sub_100024341+43↑j
                cmp     byte ptr [r12+1], 22h
                setnz   al
                test    r15, r15
                setz    cl
                or      cl, al
                jnz     loc_10002468C
                mov     [rbp+var_40], rbx
                mov     [rbp+var_38], r14
                movzx   eax, word ptr [r12+2]
                xorps   xmm0, xmm0
                cvtsi2ss xmm0, eax
                movzx   r14d, byte ptr [r12+4]
                mulss   xmm0, cs:dword_10002F540
                mov     rsi, cs:selRef_setVersion_ ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_setBeta_ ; char *
                mov     rdi, r15        ; void *
                mov     edx, r14d
                call    rbx ; _objc_msgSend
                mov     r13, cs:selRef_pid
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 6002h
                jz      short loc_100024573
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 6000h
                jz      short loc_100024573
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 6001h
                jnz     short loc_1000245B3

loc_100024573:                          ; CODE XREF: sub_100024341+204↑j
                                        ; sub_100024341+21A↑j
                movzx   edx, word ptr [r12+5]
                mov     r14, cs:selRef_setBootVersion_
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    rbx ; _objc_msgSend
                movzx   eax, ax
                cmp     eax, 6002h
                jnz     short loc_1000245B3
                movzx   edx, word ptr [r12+6]
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr

loc_1000245B3:                          ; CODE XREF: sub_100024341+230↑j
                                        ; sub_100024341+25E↑j
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                movzx   eax, ax
                cmp     eax, 3109h
                mov     rbx, [rbp+var_40]
                jnz     loc_100024678
                cmp     word ptr [r12+6], 3013h
                jnz     short loc_100024600
                mov     rsi, cs:selRef_setPid_ ; char *
                mov     rdi, r15        ; void *
                mov     edx, 3013h
                call    cs:_objc_msgSend_ptr
                mov     [rbp+var_2C], 2Ch
                lea     r14, cfstr_8bitdoUltimate ; "8BitDo Ultimate 2.4g Adapter"
                jmp     short loc_10002460E
; ---------------------------------------------------------------------------

loc_100024600:                          ; CODE XREF: sub_100024341+298↑j
                mov     [rbp+var_2C], 2Ah
                lea     r14, cfstr_8bitdoUltimate_0 ; "8BitDo Ultimate Adapter"

loc_10002460E:                          ; CODE XREF: sub_100024341+2BD↑j
                mov     rsi, cs:selRef_details ; char *
                mov     rdi, r15        ; void *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setName_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setType_ ; char *
                mov     rdi, rax        ; void *
                mov     edx, [rbp+var_2C]
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rbx, [rbp+var_40]

loc_100024678:                          ; CODE XREF: sub_100024341+28A↑j
                mov     rsi, cs:selRef_addS8BitdoDeviceRefreshUI_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, [rbp+var_38]
                call    cs:_objc_msgSend_ptr

loc_10002468C:                          ; CODE XREF: sub_100024341+4C↑j
                                        ; sub_100024341+1A2↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, rbx
                mov     rax, r14
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100024341   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000246AF   proc near               ; DATA XREF: -[SHIDDinput open]+399↓o

var_1A8         = byte ptr -1A8h
var_180         = byte ptr -180h
var_178         = qword ptr -178h
var_170         = qword ptr -170h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = dword ptr -0F0h
anonymous_0     = word ptr -0ECh
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 188h
                mov     r15, rcx
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rdi, rcx
                call    sub_10002DB0C
                mov     r12, rax
                mov     rdi, r15
                call    sub_10002DBB9
                mov     r14, rax
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     [rbp+var_100], rax
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rbx, rax
                mov     rsi, cs:selRef_setPid_ ; char *
                mov     eax, 0FFFFh
                mov     [rbp+var_118], r14
                mov     edx, r14d
                and     edx, eax
                mov     r14d, 0FFFFh
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setVid_ ; char *
                mov     [rbp+var_120], r12
                mov     edx, r12d
                and     edx, r14d
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend
                lea     rsi, cfstr_Product ; "Product"
                mov     rdi, r15
                call    _IOHIDDeviceGetProperty
                mov     rsi, cs:selRef_setDeviceName_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     [rbp+var_108], rbx
                mov     rdi, rbx        ; void *
                mov     [rbp+var_128], r15
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                pxor    xmm0, xmm0
                lea     rbx, [rbp+var_180]
                movdqa  xmmword ptr [rbx+30h], xmm0
                movdqa  xmmword ptr [rbx+20h], xmm0
                movdqa  xmmword ptr [rbx+10h], xmm0
                movdqa  xmmword ptr [rbx], xmm0
                mov     rsi, cs:selRef_devices ; char *
                mov     rdi, [rbp+var_100] ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_F8], rax
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     [rbp+var_110], rax
                test    rax, rax
                jz      loc_1000248D3
                lea     rax, [rbp+var_180]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_138], rax

loc_10002481B:                          ; CODE XREF: sub_1000246AF+21E↓j
                mov     rbx, r13
                mov     r13, cs:selRef_pid
                mov     rax, cs:selRef_vid
                mov     [rbp+var_130], rax
                xor     r15d, r15d

loc_100024836:                          ; CODE XREF: sub_1000246AF+1EB↓j
                mov     rax, [rbp+var_170]
                mov     rcx, [rbp+var_138]
                cmp     [rax], rcx
                jz      short loc_100024855
                mov     rdi, [rbp+var_F8]
                call    _objc_enumerationMutation

loc_100024855:                          ; CODE XREF: sub_1000246AF+198↑j
                mov     rax, [rbp+var_178]
                mov     r14, [rax+r15*8]
                mov     rdi, r14
                mov     rsi, r13
                mov     r12, rbx
                call    rbx
                movzx   eax, ax
                cmp     eax, 0CDAh
                jnz     short loc_100024890
                mov     rdi, r14
                mov     rsi, [rbp+var_130]
                call    r12
                movzx   eax, ax
                cmp     eax, 54Ch
                jz      loc_100024B0A

loc_100024890:                          ; CODE XREF: sub_1000246AF+1C4↑j
                inc     r15
                cmp     [rbp+var_110], r15
                jnz     short loc_100024836
                mov     r8d, 10h
                mov     rdi, [rbp+var_F8]
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_
                lea     rdx, [rbp+var_180]
                lea     rcx, [rbp+var_B0]
                mov     r13, rbx
                call    rbx
                mov     [rbp+var_110], rax
                test    rax, rax
                jnz     loc_10002481B

loc_1000248D3:                          ; CODE XREF: sub_1000246AF+151↑j
                mov     r14, cs:_objc_release_ptr
                mov     rdi, [rbp+var_F8]
                call    r14 ; _objc_release
                mov     r15, [rbp+var_100]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_devices ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_addObject_ ; char *
                mov     rdi, rax        ; void *
                mov     r12, [rbp+var_108]
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     r14, [rbp+var_128]
                mov     rdi, r14
                xor     esi, esi
                call    _IOHIDDeviceOpen
                lea     rax, _OBJC_IVAR_$_SHIDManager_gpReportBufB ; unsigned __int8 gpReportBufB[64];
                mov     rsi, [rax]
                add     rsi, r15
                lea     rax, _OBJC_IVAR_$_SHIDManager_reportSizeIn ; unsigned __int8 reportSizeIn;
                mov     rax, [rax]
                movzx   edx, byte ptr [r15+rax]
                lea     rcx, sub_100024341
                mov     rdi, r14
                mov     r8, r15
                call    _IOHIDDeviceRegisterInputReportCallback
                mov     rdi, r14
                mov     esi, 97h
                mov     edx, 21h
                xor     ecx, ecx
                call    setReport3206
                mov     rdi, r14
                mov     esi, 97h
                mov     edx, 21h
                xor     ecx, ecx
                call    setReport3206
                mov     esi, 1DCD6500h  ; delta
                xor     edi, edi        ; when
                call    _dispatch_time
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_1A8]
                mov     [rdx], rcx
                mov     ecx, 0C0000000h
                mov     [rdx+8], rcx
                lea     rcx, sub_100024B5D
                mov     [rdx+10h], rcx
                lea     rcx, unk_10003A708
                mov     [rdx+18h], rcx
                mov     [rdx+20h], r14
                mov     rsi, cs:__dispatch_main_q_ptr
                mov     rdi, rax
                call    _dispatch_after
                mov     rdi, [rbp+var_118]
                mov     edx, edi
                mov     r9d, 0FFFFh
                and     edx, r9d
                mov     ecx, edi
                and     ecx, 0FFFEh
                and     edi, 0FFFDh
                lea     eax, [rdx-5111h]
                cmp     eax, 2
                setb    al
                lea     esi, [rdx-6007h]
                cmp     esi, 2
                pinsrd  xmm0, ecx, 0
                pinsrd  xmm0, edx, 2
                pinsrd  xmm1, edi, 1
                setb    cl
                pshufd  xmm2, xmm0, 86h
                pblendw xmm2, xmm1, 0Ch
                pshufd  xmm3, xmm0, 0A0h
                pshufd  xmm0, xmm0, 0AAh
                pblendw xmm1, xmm0, 0F3h
                cmp     edx, 9029h
                setz    sil
                cmp     edx, 3103h
                setz    dil
                cmp     edx, 3018h
                setz    dl
                pcmpeqd xmm0, cs:xmmword_10002F550
                pcmpeqd xmm1, cs:xmmword_10002F560
                pcmpeqd xmm3, cs:xmmword_10002F570
                pcmpeqd xmm2, cs:xmmword_10002F580
                packssdw xmm1, xmm0
                packssdw xmm3, xmm2
                packsswb xmm3, xmm1
                pmovmskb r8d, xmm3
                test    r8d, r8d
                setnz   r8b
                or      dl, dil
                or      dl, sil
                or      dl, al
                or      dl, cl
                or      dl, r8b
                mov     rax, [rbp+var_120]
                and     eax, r9d
                cmp     eax, 2DC8h
                setz    al
                and     al, dl
                cmp     al, 1
                jnz     short loc_100024B25
                lea     rbx, [rbp+var_F0]
                mov     dword ptr [rbx], 21000581h
                mov     word ptr [rbx+4], 1
                mov     rdi, r14
                mov     rsi, rbx
                mov     edx, 40h
                call    setReportOneFrame
                mov     rdi, r14
                mov     rsi, rbx
                mov     edx, 40h
                call    setReportOneFrame
                mov     rdi, r14
                mov     rsi, rbx
                mov     edx, 40h
                call    setReportOneFrame
                mov     rdi, r14
                mov     rsi, rbx
                mov     edx, 40h
                call    setReportOneFrame
                jmp     short loc_100024B25
; ---------------------------------------------------------------------------

loc_100024B0A:                          ; CODE XREF: sub_1000246AF+1DB↑j
                mov     rdi, [rbp+var_F8]
                call    cs:_objc_release_ptr
                mov     r15, [rbp+var_100]
                mov     r12, [rbp+var_108]

loc_100024B25:                          ; CODE XREF: sub_1000246AF+404↑j
                                        ; sub_1000246AF+459↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100024B58
                add     rsp, 188h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100024B58:                          ; CODE XREF: sub_1000246AF+495↑j
                call    ___stack_chk_fail
sub_1000246AF   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100024B5D   proc near               ; DATA XREF: sub_1000246AF+2FE↑o
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+20h]
                mov     esi, 97h
                mov     edx, 21h
                xor     ecx, ecx
                pop     rbp
                jmp     setReport3206
sub_100024B5D   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100024B77   proc near               ; DATA XREF: -[SHIDDinput open]+3B4↓o

var_120         = xmmword ptr -120h
var_110         = xmmword ptr -110h
anonymous_1     = xmmword ptr -100h
anonymous_0     = xmmword ptr -0F0h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0F8h
                mov     rbx, rcx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     rsi, cs:selRef_remove8BitdoDeviceRefreshUI_ ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_120]
                movaps  xmmword ptr [r14+30h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14], xmm0
                mov     rsi, cs:selRef_devices ; char *
                mov     [rbp+var_C0], r15
                mov     rdi, r15        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                mov     r14, rbx
                call    r13 ; _objc_msgSend
                mov     [rbp+var_C8], rax
                test    rax, rax
                jz      loc_100024D1B
                lea     rax, [rbp+var_120]
                mov     rax, [rax+10h]
                mov     r15, [rax]
                mov     [rbp+var_D0], r15

loc_100024C41:                          ; CODE XREF: sub_100024B77+19E↓j
                mov     rax, cs:selRef_deviceRef
                mov     [rbp+var_E0], rax
                mov     rax, cs:selRef_removeObject_
                mov     [rbp+var_D8], rax
                xor     ebx, ebx

loc_100024C5F:                          ; CODE XREF: sub_100024B77+169↓j
                mov     rax, qword ptr [rbp+var_110]
                cmp     [rax], r15
                jz      short loc_100024C77
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_100024C77:                          ; CODE XREF: sub_100024B77+F2↑j
                mov     rax, qword ptr [rbp+var_120+8]
                mov     r12, [rax+rbx*8]
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_E0] ; char *
                call    r13 ; _objc_msgSend
                cmp     rax, r14
                jnz     short loc_100024CD6
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_devices ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, r14
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_D8] ; char *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, r15
                mov     r15, [rbp+var_D0]
                call    cs:_objc_release_ptr

loc_100024CD6:                          ; CODE XREF: sub_100024B77+11B↑j
                inc     rbx
                cmp     [rbp+var_C8], rbx
                jnz     loc_100024C5F
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_120]
                lea     rcx, [rbp+var_B0]
                call    r13 ; _objc_msgSend
                mov     [rbp+var_C8], rax
                test    rax, rax
                jnz     loc_100024C41

loc_100024D1B:                          ; CODE XREF: sub_100024B77+AF↑j
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, [rbp+var_B8]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_C0]
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100024D56
                add     rsp, 0F8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100024D56:                          ; CODE XREF: sub_100024B77+1CB↑j
                call    ___stack_chk_fail
sub_100024B77   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDDinput *__cdecl -[SHIDDinput init](SHIDDinput *self, SEL)
__SHIDDinput_init_ proc near            ; DATA XREF: __objc_const:0000000100045178↓o

var_18          = qword ptr -18h
anonymous_0     = qword ptr -10h

                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                lea     rax, [rbp+var_18]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SHIDDinput_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_init
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      short loc_100024D9C
                lea     rdi, unk_100075E18
                mov     rsi, rbx
                call    _objc_storeStrong

loc_100024D9C:                          ; CODE XREF: -[SHIDDinput init]+30↑j
                mov     rax, rbx
                add     rsp, 18h
                pop     rbx
                pop     rbp
                retn
__SHIDDinput_init_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDDinput open](SHIDDinput *self, SEL)
__SHIDDinput_open_ proc near            ; DATA XREF: __objc_const:0000000100045190↓o

var_160         = xmmword ptr -160h
var_150         = xmmword ptr -150h
anonymous_0     = xmmword ptr -140h
anonymous_1     = xmmword ptr -130h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 138h
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                xor     esi, esi
                call    _IOHIDManagerCreate
                mov     rsi, cs:selRef_setHidManager_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     [rbp+var_E8], rbx
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend ; -[SHIDManager setHidManager:]
                mov     rdi, cs:classRef_S8BitdoDeviceDetailsTools ; void *
                mov     rsi, cs:selRef_get8BitdoDevicePIDVIDAndNAMEs ; char *
                call    r15 ; _objc_msgSend ; +[S8BitdoDeviceDetailsTools get8BitdoDevicePIDVIDAndNAMEs]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     [rbp+var_C0], rax
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_160]
                movaps  xmmword ptr [r14], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+30h], xmm0
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_B8], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r15 ; _objc_msgSend
                mov     [rbp+var_C8], rax
                test    rax, rax
                jz      loc_1000250C0
                lea     rax, [rbp+var_160]
                mov     rax, [rax+10h]
                mov     rax, [rax]
                mov     [rbp+var_F0], rax

loc_100024EA5:                          ; CODE XREF: -[SHIDDinput open]+314↓j
                mov     rax, cs:selRef_dictionary
                mov     [rbp+var_110], rax
                mov     rax, cs:selRef_pid
                mov     [rbp+var_108], rax
                mov     rax, cs:selRef_numberWithLong_
                mov     [rbp+var_E0], rax
                mov     rax, cs:selRef_stringWithUTF8String_
                mov     [rbp+var_D8], rax
                mov     rax, cs:selRef_setObject_forKey_
                mov     [rbp+var_D0], rax
                mov     rax, cs:selRef_vid
                mov     [rbp+var_100], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_F8], rax
                xor     r13d, r13d

loc_100024F0A:                          ; CODE XREF: -[SHIDDinput open]+2DC↓j
                mov     rax, qword ptr [rbp+var_150]
                mov     rcx, [rbp+var_F0]
                cmp     [rax], rcx
                jz      short loc_100024F29
                mov     rdi, [rbp+var_B8]
                call    _objc_enumerationMutation

loc_100024F29:                          ; CODE XREF: -[SHIDDinput open]+175↑j
                mov     rax, qword ptr [rbp+var_160+8]
                mov     r14, [rax+r13*8]
                mov     [rbp+var_120], r14
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, [rbp+var_110] ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     [rbp+var_118], rax
                mov     r12, cs:classRef_NSNumber
                mov     rdi, r14        ; void *
                mov     rsi, [rbp+var_108] ; char *
                call    r15 ; _objc_msgSend
                movzx   edx, ax
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_E0] ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, [rbp+var_D8] ; char *
                lea     rdx, aProductid ; "ProductID"
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx        ; void *
                mov     rsi, [rbp+var_D0] ; char *
                mov     rdx, r12
                mov     rcx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     r14, cs:classRef_NSNumber
                mov     rdi, [rbp+var_120] ; void *
                mov     rsi, [rbp+var_100] ; char *
                call    r15 ; _objc_msgSend
                movzx   edx, ax
                mov     rdi, r14        ; void *
                mov     rsi, [rbp+var_E0] ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, [rbp+var_D8] ; char *
                lea     rdx, aVendorid  ; "VendorID"
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r12, [rbp+var_118]
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_D0] ; char *
                mov     rdx, rbx
                mov     rcx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, [rbp+var_F8] ; char *
                mov     rdx, r12
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                call    r14 ; _objc_release
                inc     r13
                cmp     [rbp+var_C8], r13
                jnz     loc_100024F0A
                mov     r8d, 10h
                mov     rdi, [rbp+var_B8] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_160]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     [rbp+var_C8], rax
                test    rax, rax
                jnz     loc_100024EA5

loc_1000250C0:                          ; CODE XREF: -[SHIDDinput open]+E4↑j
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr
                mov     rbx, cs:selRef_hidManager
                mov     r12, [rbp+var_E8]
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                mov     r15, [rbp+var_C0]
                mov     rsi, r15
                call    _IOHIDManagerSetDeviceMatchingMultiple
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                mov     r14, rax
                call    _CFRunLoopGetCurrent
                mov     rcx, cs:_kCFRunLoopDefaultMode_ptr
                mov     rdx, [rcx]
                mov     rdi, r14
                mov     rsi, rax
                call    _IOHIDManagerScheduleWithRunLoop
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                xor     esi, esi
                call    _IOHIDManagerOpen
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                lea     rsi, sub_1000246AF
                mov     rdi, rax
                mov     rdx, r12
                call    _IOHIDManagerRegisterDeviceMatchingCallback
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                lea     rsi, sub_100024B77
                mov     rdi, rax
                mov     rdx, r12
                call    _IOHIDManagerRegisterDeviceRemovalCallback
                mov     rdi, r15
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_B8]
                call    rbx ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_1000251A3
                add     rsp, 138h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000251A3:                          ; CODE XREF: -[SHIDDinput open]+3E9↑j
                call    ___stack_chk_fail
__SHIDDinput_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHIDDinput boot:](SHIDDinput_meta *self, SEL, __IOHIDDevice *)
__SHIDDinput_boot__ proc near           ; CODE XREF: -[UpdateView changeBoot]+2A8↑P
                                        ; DATA XREF: __objc_const:0000000100045110↓o

var_60          = dword ptr -60h
anonymous_0     = word ptr -5Ch
var_18          = qword ptr -18h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 50h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_18], rax
                test    rdx, rdx
                jz      loc_1000252FD
                mov     rbx, rdx
                mov     rdi, rdx
                mov     esi, 97h
                mov     edx, 50h
                xor     ecx, ecx
                call    setReport3206
                mov     rdi, rbx
                call    sub_10002DB0C
                mov     r14, rax
                mov     rdi, rbx
                call    sub_10002DBB9
                movzx   edx, ax
                mov     esi, eax
                and     esi, 0FFFEh
                and     eax, 0FFFDh
                lea     ecx, [rdx-5111h]
                cmp     ecx, 2
                setb    cl
                lea     edi, [rdx-6007h]
                cmp     edi, 2
                pinsrd  xmm0, esi, 0
                pinsrd  xmm0, edx, 1
                pinsrd  xmm1, eax, 1
                setb    al
                pshufd  xmm2, xmm0, 45h
                pblendw xmm2, xmm1, 0Ch
                pshufd  xmm3, xmm0, 55h
                pblendw xmm1, xmm3, 0F3h
                pshufd  xmm0, xmm0, 44h
                cmp     edx, 9029h
                setz    sil
                cmp     edx, 3103h
                setz    dil
                cmp     edx, 3018h
                setz    dl
                pcmpeqd xmm1, cs:xmmword_10002F560
                pcmpeqd xmm3, cs:xmmword_10002F550
                pcmpeqd xmm2, cs:xmmword_10002F580
                pcmpeqd xmm0, cs:xmmword_10002F590
                packssdw xmm1, xmm3
                packssdw xmm0, xmm2
                packsswb xmm0, xmm1
                pmovmskb r8d, xmm0
                test    r8d, r8d
                setnz   r8b
                or      dl, dil
                or      dl, sil
                or      dl, cl
                or      dl, al
                or      dl, r8b
                cmp     dl, 1
                jnz     short loc_1000252FD
                movzx   eax, r14w
                cmp     eax, 2DC8h
                jnz     short loc_1000252FD
                lea     r14, [rbp+var_60]
                mov     dword ptr [r14], 51000581h
                mov     word ptr [r14+4], 0
                mov     rdi, rbx
                mov     rsi, r14
                mov     edx, 40h
                call    setReportOneFrame
                mov     rdi, rbx
                mov     rsi, r14
                mov     edx, 40h
                call    setReportOneFrame
                mov     rdi, rbx
                mov     rsi, r14
                mov     edx, 40h
                call    setReportOneFrame

loc_1000252FD:                          ; CODE XREF: +[SHIDDinput boot:]+1C↑j
                                        ; +[SHIDDinput boot:]+106↑j ...
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_18]
                jnz     short loc_100025316
                add     rsp, 50h
                pop     rbx
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100025316:                          ; CODE XREF: +[SHIDDinput boot:]+163↑j
                call    ___stack_chk_fail
__SHIDDinput_boot__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDDinput addS8BitdoDeviceRefreshUI:](SHIDDinput *self, SEL, __IOHIDDevice *)
__SHIDDinput_addS8BitdoDeviceRefreshUI__ proc near
                                        ; DATA XREF: __objc_const:00000001000451A8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     r14, rdi
                mov     rsi, cs:selRef_delegate ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_addS8BitdoDevice_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      short loc_1000253D6
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_delegate ; char *
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_getDeviceWithRef_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend ; -[SHIDDinput getDeviceWithRef:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_addS8BitdoDevice_ ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                mov     rax, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_1000253D6:                          ; CODE XREF: -[SHIDDinput addS8BitdoDeviceRefreshUI:]+53↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDDinput_addS8BitdoDeviceRefreshUI__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDDinput remove8BitdoDeviceRefreshUI:](SHIDDinput *self, SEL, __IOHIDDevice *)
__SHIDDinput_remove8BitdoDeviceRefreshUI__ proc near
                                        ; DATA XREF: __objc_const:00000001000451C0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     r14, rdi
                mov     rsi, cs:selRef_delegate ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_removeS8BitdoDevice_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      short loc_1000254A0
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_delegate ; char *
                call    r12 ; _objc_msgSend ; -[SHIDManager delegate]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_getDeviceWithRef_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    r12 ; _objc_msgSend ; -[SHIDDinput getDeviceWithRef:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_removeS8BitdoDevice_ ; char *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, r15
                mov     rax, r14
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
; ---------------------------------------------------------------------------

loc_1000254A0:                          ; CODE XREF: -[SHIDDinput remove8BitdoDeviceRefreshUI:]+53↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__SHIDDinput_remove8BitdoDeviceRefreshUI__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDDinput getDeviceWithRef:](SHIDDinput *self, SEL, __IOHIDDevice *)
__SHIDDinput_getDeviceWithRef__ proc near
                                        ; CODE XREF: -[SHIDDinput addS8BitdoDeviceRefreshUI:]+7A↑P
                                        ; -[SHIDDinput remove8BitdoDeviceRefreshUI:]+7A↑P
                                        ; DATA XREF: ...

var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
anonymous_0     = xmmword ptr -0F0h
anonymous_1     = xmmword ptr -0E0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0E8h
                mov     [rbp+var_C8], rdx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_110]
                movaps  xmmword ptr [r14], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+30h], xmm0
                mov     rsi, cs:selRef_devices ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[SHIDManager devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                test    rax, rax
                jz      loc_1000255F4
                mov     r13, rax
                lea     rax, [rbp+var_110]
                mov     rax, [rax+10h]
                mov     r12, [rax]
                mov     [rbp+var_B8], 0

loc_100025555:                          ; CODE XREF: -[SHIDDinput getDeviceWithRef:]+13D↓j
                mov     r15, cs:selRef_deviceRef
                xor     ebx, ebx

loc_10002555E:                          ; CODE XREF: -[SHIDDinput getDeviceWithRef:]+10D↓j
                mov     rax, qword ptr [rbp+var_100]
                cmp     [rax], r12
                jz      short loc_100025576
                mov     rdi, [rbp+var_C0]
                call    _objc_enumerationMutation

loc_100025576:                          ; CODE XREF: -[SHIDDinput getDeviceWithRef:]+B9↑j
                mov     rax, qword ptr [rbp+var_110+8]
                mov     r14, [rax+rbx*8]
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, [rbp+var_C8]
                jnz     short loc_1000255B6
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr
                mov     [rbp+var_B8], r14

loc_1000255B6:                          ; CODE XREF: -[SHIDDinput getDeviceWithRef:]+E5↑j
                inc     rbx
                cmp     r13, rbx
                jnz     short loc_10002555E
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_110]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                test    rax, rax
                jnz     loc_100025555
                jmp     short loc_1000255FF
; ---------------------------------------------------------------------------

loc_1000255F4:                          ; CODE XREF: -[SHIDDinput getDeviceWithRef:]+84↑j
                mov     [rbp+var_B8], 0

loc_1000255FF:                          ; CODE XREF: -[SHIDDinput getDeviceWithRef:]+143↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100025639
                mov     rdi, [rbp+var_B8]
                add     rsp, 0E8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100025639:                          ; CODE XREF: -[SHIDDinput getDeviceWithRef:]+16B↑j
                call    ___stack_chk_fail
__SHIDDinput_getDeviceWithRef__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDDinput getDeviceWithPID:](SHIDDinput *self, SEL, unsigned __int16)
__SHIDDinput_getDeviceWithPID__ proc near
                                        ; DATA XREF: __objc_const:00000001000451F0↓o

var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
anonymous_0     = xmmword ptr -0F0h
anonymous_1     = xmmword ptr -0E0h
var_C4          = dword ptr -0C4h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0E8h
                mov     [rbp+var_C4], edx
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                xorps   xmm0, xmm0
                lea     r14, [rbp+var_110]
                movaps  xmmword ptr [r14], xmm0
                movaps  xmmword ptr [r14+10h], xmm0
                movaps  xmmword ptr [r14+20h], xmm0
                movaps  xmmword ptr [r14+30h], xmm0
                mov     rsi, cs:selRef_devices ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[SHIDManager devices]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     [rbp+var_C0], rax
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                test    rax, rax
                jz      loc_100025783
                mov     r13, rax
                lea     rax, [rbp+var_110]
                mov     rax, [rax+10h]
                mov     rbx, [rax]
                mov     [rbp+var_B8], 0

loc_1000256E3:                          ; CODE XREF: -[SHIDDinput getDeviceWithPID:]+13D↓j
                mov     r15, cs:selRef_pid
                xor     r12d, r12d

loc_1000256ED:                          ; CODE XREF: -[SHIDDinput getDeviceWithPID:]+10D↓j
                mov     rax, qword ptr [rbp+var_100]
                cmp     [rax], rbx
                jz      short loc_100025705
                mov     rdi, [rbp+var_C0]
                call    _objc_enumerationMutation

loc_100025705:                          ; CODE XREF: -[SHIDDinput getDeviceWithPID:]+B9↑j
                mov     rax, qword ptr [rbp+var_110+8]
                mov     r14, [rax+r12*8]
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     ax, word ptr [rbp+var_C4]
                jnz     short loc_100025745
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rdi, [rbp+var_B8]
                call    cs:_objc_release_ptr
                mov     [rbp+var_B8], r14

loc_100025745:                          ; CODE XREF: -[SHIDDinput getDeviceWithPID:]+E5↑j
                inc     r12
                cmp     r13, r12
                jnz     short loc_1000256ED
                mov     r8d, 10h
                mov     rdi, [rbp+var_C0] ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_110]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r13, rax
                test    rax, rax
                jnz     loc_1000256E3
                jmp     short loc_10002578E
; ---------------------------------------------------------------------------

loc_100025783:                          ; CODE XREF: -[SHIDDinput getDeviceWithPID:]+83↑j
                mov     [rbp+var_B8], 0

loc_10002578E:                          ; CODE XREF: -[SHIDDinput getDeviceWithPID:]+143↑j
                mov     rdi, [rbp+var_C0]
                call    cs:_objc_release_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_1000257C8
                mov     rdi, [rbp+var_B8]
                add     rsp, 0E8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_1000257C8:                          ; CODE XREF: -[SHIDDinput getDeviceWithPID:]+16B↑j
                call    ___stack_chk_fail
__SHIDDinput_getDeviceWithPID__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[NSObject mj_encode:](NSObject *self, SEL, id)
__NSObject_mj_encode__ proc near        ; DATA XREF: __objc_const:0000000100045258↓o

var_70          = qword ptr -70h
anonymous_0     = qword ptr -68h
anonymous_1     = qword ptr -60h
anonymous_2     = qword ptr -58h
anonymous_3     = qword ptr -50h
anonymous_4     = qword ptr -48h
anonymous_5     = qword ptr -40h
anonymous_6     = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                mov     [rbp+var_30], rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     rsi, cs:selRef_class ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rbx, rax
                mov     rsi, cs:selRef_mj_totalAllowedCodingPropertyNames ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_mj_totalIgnoredCodingPropertyNames ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r14, [rbp+var_70]
                mov     [r14], rax
                mov     eax, 0C2000000h
                mov     [r14+8], rax
                lea     rax, sub_1000258E9
                mov     [r14+10h], rax
                lea     rax, unk_10003A728
                mov     [r14+18h], rax
                mov     [r14+20h], r13
                mov     [r14+28h], r15
                mov     rax, [rbp+var_30]
                mov     [r14+30h], rax
                mov     [r14+38h], r12
                mov     rdi, r12
                mov     r12, cs:_objc_retain_ptr
                call    r12 ; _objc_retain
                mov     [rbp+var_30], rax
                mov     rdi, r15
                call    r12 ; _objc_retain
                mov     rcx, r12
                mov     r12, rax
                mov     rdi, r13
                call    rcx
                mov     r13, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_mj_enumerateProperties_ ; char *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, [r14+38h]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [r14+28h]
                call    rbx ; _objc_release
                mov     rdi, [r14+20h]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_30]
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__NSObject_mj_encode__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000258E9   proc near               ; DATA XREF: -[NSObject mj_encode:]+82↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r15, rdi
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     r13, rax
                mov     rdi, [r15+20h]  ; void *
                mov     rsi, cs:selRef_count ; char *
                call    cs:_objc_msgSend_ptr
                mov     rcx, cs:selRef_name
                test    rax, rax
                jz      short loc_100025978
                mov     r14, r13
                mov     r13, [r15+20h]
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rsi, rcx        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, rbx
                mov     rbx, r15
                mov     r15, rax
                mov     r12, cs:selRef_containsObject_
                mov     rdi, r13
                mov     rsi, r12
                mov     rdx, rax
                call    rcx
                mov     r13d, eax
                mov     rdi, r15
                mov     r15, rbx
                call    cs:_objc_release_ptr
                test    r13b, r13b
                mov     r13, r14
                jnz     short loc_10002597F
                jmp     loc_100025A3D
; ---------------------------------------------------------------------------

loc_100025978:                          ; CODE XREF: sub_1000258E9+38↑j
                mov     r12, cs:selRef_containsObject_

loc_10002597F:                          ; CODE XREF: sub_1000258E9+88↑j
                mov     rbx, r15
                mov     r15, [r15+28h]
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_name ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r14
                mov     r14, r13
                mov     r13, rax
                mov     rdi, r15
                mov     rsi, r12
                mov     r12, rcx
                mov     rdx, rax
                call    rcx
                mov     r15d, eax
                mov     rdi, r13
                mov     r13, r14
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jnz     short loc_100025A3D
                mov     r14, rbx
                mov     r15, r12
                mov     rbx, cs:selRef_name
                mov     rdx, [r14+30h]
                mov     rsi, cs:selRef_valueForObject_ ; char *
                mov     rdi, r13        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      short loc_100025A34
                mov     r14, [r14+38h]
                mov     rdi, r13
                mov     rsi, rbx
                mov     rbx, r15
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_encodeObject_forKey_
                mov     rdi, r14
                mov     rdx, r12
                mov     rcx, rax
                call    rbx
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_100025A34:                          ; CODE XREF: sub_1000258E9+113↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_100025A3D:                          ; CODE XREF: sub_1000258E9+8A↑j
                                        ; sub_1000258E9+E2↑j
                mov     rdi, r13
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_1000258E9   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100025A54   proc near               ; DATA XREF: __const:000000010003A738↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     rdi, [rsi+20h]
                mov     r14, cs:_objc_retain_ptr
                call    r14 ; _objc_retain
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+30h]
                call    r14 ; _objc_retain
                mov     rdi, [rbx+38h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_100025A54   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100025A87   proc near               ; DATA XREF: __const:000000010003A740↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, [rdi+38h]
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, [rbx+30h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+28h]
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_100025A87   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[NSObject mj_decode:](NSObject *self, SEL, id)
__NSObject_mj_decode__ proc near        ; DATA XREF: __objc_const:0000000100045270↓o

var_70          = qword ptr -70h
anonymous_0     = qword ptr -68h
anonymous_1     = qword ptr -60h
anonymous_2     = qword ptr -58h
anonymous_3     = qword ptr -50h
anonymous_4     = qword ptr -48h
anonymous_5     = qword ptr -40h
anonymous_6     = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     rbx, rdi
                mov     [rbp+var_30], rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r12, rax
                mov     rsi, cs:selRef_class ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rbx, rax
                mov     rsi, cs:selRef_mj_totalAllowedCodingPropertyNames ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_mj_totalIgnoredCodingPropertyNames ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r14, [rbp+var_70]
                mov     [r14], rax
                mov     eax, 0C2000000h
                mov     [r14+8], rax
                lea     rax, sub_100025BD6
                mov     [r14+10h], rax
                lea     rax, unk_10003A728
                mov     [r14+18h], rax
                mov     [r14+20h], r13
                mov     [r14+28h], r15
                mov     [r14+30h], r12
                mov     rax, [rbp+var_30]
                mov     [r14+38h], rax
                mov     rdi, r12
                mov     r12, cs:_objc_retain_ptr
                call    r12 ; _objc_retain
                mov     [rbp+var_30], rax
                mov     rdi, r15
                call    r12 ; _objc_retain
                mov     rcx, r12
                mov     r12, rax
                mov     rdi, r13
                call    rcx
                mov     r13, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_mj_enumerateProperties_ ; char *
                mov     rdx, r14
                call    cs:_objc_msgSend_ptr
                mov     rdi, [r14+30h]
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [r14+28h]
                call    rbx ; _objc_release
                mov     rdi, [r14+20h]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_30]
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__NSObject_mj_decode__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100025BD6   proc near               ; DATA XREF: -[NSObject mj_decode:]+82↑o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rbx, rdi
                mov     rdi, rsi
                call    cs:_objc_retain_ptr
                mov     [rbp+var_30], rax
                mov     [rbp+var_38], rbx
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_count ; char *
                call    cs:_objc_msgSend_ptr
                mov     rbx, cs:selRef_name
                test    rax, rax
                jz      short loc_100025C6E
                mov     rax, [rbp+var_38]
                mov     r13, [rax+20h]
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, cs:selRef_name ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r14, cs:selRef_containsObject_
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     r13d, eax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rbx, cs:selRef_name
                test    r13b, r13b
                jnz     short loc_100025C75
                jmp     loc_100025D97
; ---------------------------------------------------------------------------

loc_100025C6E:                          ; CODE XREF: sub_100025BD6+40↑j
                mov     r14, cs:selRef_containsObject_

loc_100025C75:                          ; CODE XREF: sub_100025BD6+91↑j
                mov     rax, [rbp+var_38]
                mov     r15, [rax+28h]
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, rax
                mov     r14, r12
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jnz     loc_100025D97
                mov     rax, [rbp+var_38]
                mov     r15, [rax+30h]
                mov     rdi, [rbp+var_30]
                mov     rsi, rbx
                mov     rbx, r14
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r14, cs:selRef_decodeObjectForKey_
                mov     rdi, r15
                mov     rsi, r14
                mov     rdx, rax
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r12, r12
                jnz     short loc_100025D72
                mov     rax, [rbp+var_38]
                mov     r12, [rax+30h]
                mov     rdi, [rbp+var_30]
                mov     rsi, cs:selRef_name
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_stringByAppendingString_
                lea     rdi, stru_10003C2F8 ; "_"
                mov     rdx, rax
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12
                mov     rsi, r14
                mov     rdx, rax
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                test    r12, r12
                jz      short loc_100025D97

loc_100025D72:                          ; CODE XREF: sub_100025BD6+130↑j
                mov     rax, [rbp+var_38]
                mov     rcx, [rax+38h]
                mov     rsi, cs:selRef_setValue_forObject_ ; char *
                mov     rdi, [rbp+var_30] ; void *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                call    cs:_objc_release_ptr

loc_100025D97:                          ; CODE XREF: sub_100025BD6+93↑j
                                        ; sub_100025BD6+E1↑j ...
                mov     rdi, [rbp+var_30]
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100025BD6   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHIDBootHJZ allocWithZone:](SHIDBootHJZ_meta *self, SEL, _NSZone *)
__SHIDBootHJZ_allocWithZone__ proc near ; DATA XREF: __objc_const:0000000100045668↓o

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                mov     [rbp+var_30], rax
                mov     eax, 0C0000000h
                mov     [rbp+var_28], rax
                lea     rax, sub_100025E17
                mov     [rbp+var_20], rax
                lea     rax, unk_10003A258
                mov     [rbp+var_18], rax
                mov     [rbp+var_10], rdx
                mov     [rbp+var_8], rdi
                cmp     cs:qword_100075E20, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_100025E05

loc_100025DF3:                          ; CODE XREF: +[SHIDBootHJZ allocWithZone:]+66↓j
                mov     rdi, cs:qword_100075E28
                add     rsp, 30h
                pop     rbp
                jmp     cs:_objc_retain_ptr
; ---------------------------------------------------------------------------

loc_100025E05:                          ; CODE XREF: +[SHIDBootHJZ allocWithZone:]+42↑j
                lea     rdi, qword_100075E20
                lea     rsi, [rbp+var_30]
                call    _dispatch_once
                jmp     short loc_100025DF3
__SHIDBootHJZ_allocWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100025E17   proc near               ; DATA XREF: +[SHIDBootHJZ allocWithZone:]+1C↑o

var_10          = byte ptr -10h

                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     rdx, [rdi+20h]
                mov     rax, [rdi+28h]
                lea     rdi, [rbp+var_10]
                mov     [rdi], rax
                mov     rax, cs:classRef_SHIDBootHJZ_0
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_allocWithZone_
                call    _objc_msgSendSuper2
                mov     rdi, cs:qword_100075E28
                mov     cs:qword_100075E28, rax
                call    cs:_objc_release_ptr
                add     rsp, 10h
                pop     rbp
                retn
sub_100025E17   endp


; =============== S U B R O U T I N E =======================================


; id __cdecl +[SHIDBootHJZ sharedInstance](SHIDBootHJZ_meta *self, SEL)
__SHIDBootHJZ_sharedInstance_ proc near ; CODE XREF: -[UpdateView changeBoot]+1F5↑P
                                        ; sub_10001652B+11B↑P ...
                mov     rdi, cs:qword_100075E28
                test    rdi, rdi
                jnz     _objc_retainAutoreleaseReturnValue
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:classRef_SHIDBootHJZ
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, cs:qword_100075E28
                mov     cs:qword_100075E28, rax
                call    cs:_objc_release_ptr
                mov     rdi, cs:qword_100075E28
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__SHIDBootHJZ_sharedInstance_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDBootHJZ copyWithZone:](SHIDBootHJZ *self, SEL, _NSZone *)
__SHIDBootHJZ_copyWithZone__ proc near  ; DATA XREF: __objc_const:00000001000456E8↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075E28
                pop     rbp
                jmp     cs:_objc_retain_ptr
__SHIDBootHJZ_copyWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDBootHJZ mutableCopyWithZone:](SHIDBootHJZ *self, SEL, _NSZone *)
__SHIDBootHJZ_mutableCopyWithZone__ proc near
                                        ; DATA XREF: __objc_const:0000000100045700↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075E28
                pop     rbp
                jmp     cs:_objc_retain_ptr
__SHIDBootHJZ_mutableCopyWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableArray *__cdecl -[SHIDBootHJZ blocks](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_blocks_ proc near         ; CODE XREF: -[SHIDBootHJZ addBlock:Cmd:]+34↓P
                                        ; -[SHIDBootHJZ addBlock:Cmd:]+F0↓P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     r14, cs:_OBJC_IVAR_$_SHIDBootHJZ__blocks ; NSMutableArray *_blocks;
                mov     rdi, [rdi+r14]
                test    rdi, rdi
                jnz     short loc_100025F1C
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbx+r14]
                mov     [rbx+r14], rax
                call    cs:_objc_release_ptr
                mov     rdi, [rbx+r14]

loc_100025F1C:                          ; CODE XREF: -[SHIDBootHJZ blocks]+18↑j
                pop     rbx
                pop     r14
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__SHIDBootHJZ_blocks_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100025F25   proc near               ; DATA XREF: sub_100026251+77↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_30], r9
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     r12, cs:selRef_sharedInstance
                mov     r14, cs:_objc_msgSend_ptr
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_blocks ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_lastObject ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_38], rax
                mov     r13, cs:_objc_release_ptr
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_blocks ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_lastObject ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                test    r12, r12
                jz      loc_10002609B
                mov     rbx, cs:selRef_objectForKeyedSubscript_
                lea     rdx, cfstr_Cmd  ; "cmd"
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_intValue ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, r15
                call    cs:_objc_release_ptr
                lea     rdx, cfstr_Block ; "block"
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      short loc_100026092
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    r14 ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_readBlock_Block_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, [rbp+var_30]
                mov     rcx, r13
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_100026092:                          ; CODE XREF: sub_100025F25+132↑j
                mov     rdi, r13
                call    cs:_objc_release_ptr

loc_10002609B:                          ; CODE XREF: sub_100025F25+D6↑j
                mov     rdi, r12
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_38]
                mov     rax, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
sub_100025F25   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ readBlock:Block:](SHIDBootHJZ *self, SEL, char *, id)
__SHIDBootHJZ_readBlock_Block__ proc near
                                        ; DATA XREF: __objc_const:0000000100045730↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rcx+10h]
                mov     rdi, rcx
                mov     rsi, rdx
                pop     rbp
                jmp     rax
__SHIDBootHJZ_readBlock_Block__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ addBlock:Cmd:](SHIDBootHJZ *self, SEL, id, unsigned __int8)
__SHIDBootHJZ_addBlock_Cmd__ proc near  ; CODE XREF: -[SHIDBootHJZ writeDataCMD:block:]+27↓P
                                        ; DATA XREF: __objc_const:0000000100045748↓o

var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_2C], ecx
                mov     rbx, rdi
                mov     r14, cs:selRef_blocks
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     r13, rax
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend ; -[SHIDBootHJZ blocks]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_removeAllObjects ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSMutableDictionary
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, r13
                call    _objc_retainBlock
                mov     r14, rax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     r13, cs:selRef_setObject_forKeyedSubscript_
                lea     rcx, cfstr_Block ; "block"
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, r14
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithUnsignedChar_ ; char *
                mov     edx, [rbp+var_2C]
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rcx, cfstr_Cmd  ; "cmd"
                mov     rdi, r12        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_blocks ; char *
                call    r15 ; _objc_msgSend ; -[SHIDBootHJZ blocks]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_addObject_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r12
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SHIDBootHJZ_addBlock_Cmd__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[SHIDBootHJZ writeDataCMD:block:](SHIDBootHJZ *self, SEL, char *, id)
__SHIDBootHJZ_writeDataCMD_block__ proc near
                                        ; CODE XREF: -[SHIDBootHJZ EraseFlashPage:]+E6↓P
                                        ; -[SHIDBootHJZ send_usb_packet_cut]+151↓P ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     r14, rdi
                movzx   eax, byte ptr [rdx+1]
                mov     rsi, cs:selRef_addBlock_Cmd_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdx, rcx
                mov     ecx, eax
                call    r15 ; _objc_msgSend ; -[SHIDBootHJZ addBlock:Cmd:]
                mov     rsi, cs:selRef_device ; char *
                mov     rdi, r14        ; void *
                call    r15 ; _objc_msgSend ; -[SHIDBootHJZ device]
                mov     rdi, rax
                mov     rsi, rbx
                mov     edx, 40h
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     setReportOneFrame
__SHIDBootHJZ_writeDataCMD_block__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100026251   proc near               ; DATA XREF: -[SHIDBootHJZ open]+1AB↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     r14, rcx
                mov     rbx, rdi
                mov     rdi, rcx
                call    sub_10002DB0C
                mov     [rbp+var_38], rax
                mov     rdi, r14
                call    sub_10002DBB9
                mov     [rbp+var_30], rax
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rsi, cs:selRef_setDevice_ ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, r14
                xor     esi, esi
                call    _IOHIDDeviceOpen
                lea     rax, _OBJC_IVAR_$_SHIDManager_gpReportBufB ; unsigned __int8 gpReportBufB[64];
                mov     rsi, [rax]
                add     rsi, rbx
                lea     rax, _OBJC_IVAR_$_SHIDManager_reportSizeIn ; unsigned __int8 reportSizeIn;
                mov     rax, [rax]
                movzx   edx, byte ptr [rbx+rax]
                lea     rcx, sub_100025F25
                mov     rdi, r14
                mov     r8, rbx
                call    _IOHIDDeviceRegisterInputReportCallback
                mov     rsi, cs:selRef_bootDelegate ; char *
                mov     rdi, rbx        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdx, cs:selRef_SHIDBootHJZUpdate_device_
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r15d, eax
                mov     rdi, r13
                call    cs:_objc_release_ptr
                test    r15b, r15b
                jz      loc_1000263D2
                mov     rdi, cs:classRef_S8BitdoDevice
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     r13, rax
                mov     rsi, cs:selRef_setPid_ ; char *
                mov     r15d, 0FFFFh
                mov     rdx, [rbp+var_30]
                and     edx, r15d
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setVid_ ; char *
                mov     rdx, [rbp+var_38]
                and     edx, r15d
                mov     rdi, r13        ; void *
                call    r12 ; _objc_msgSend
                lea     rsi, cfstr_Product ; "Product"
                mov     rdi, r14
                call    _IOHIDDeviceGetProperty
                mov     rsi, cs:selRef_setDeviceName_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rsi, cs:selRef_setDeviceRef_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r14
                call    r12 ; _objc_msgSend
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_bootDelegate ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_SHIDBootHJZUpdate_device_ ; char *
                mov     rdx, rbx
                mov     rcx, r13
                call    r12 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release

loc_1000263D2:                          ; CODE XREF: sub_100026251+C4↑j
                mov     rdi, rbx
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100026251   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000263E9   proc near               ; DATA XREF: -[SHIDBootHJZ open]+1C6↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_setDevice_
                xor     edx, edx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_1000263E9   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ EraseFlashPage:](SHIDBootHJZ *self, SEL, int)
__SHIDBootHJZ_EraseFlashPage__ proc near
                                        ; CODE XREF: -[SHIDBootHJZ EraseFlashPage:]+53↓P
                                        ; DATA XREF: __objc_const:0000000100045778↓o

var_98          = qword ptr -98h
anonymous_3     = qword ptr -90h
anonymous_4     = qword ptr -88h
anonymous_5     = qword ptr -80h
anonymous_6     = qword ptr -78h
var_70          = xmmword ptr -70h
anonymous_2     = xmmword ptr -60h
anonymous_1     = xmmword ptr -50h
anonymous_0     = xmmword ptr -40h
var_28          = qword ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 80h
                mov     ecx, edx
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_28], rax
                mov     cs:dword_100075D2C, edx
                mov     r14d, dword ptr cs:xmmword_100075D30+8
                mov     r15d, dword ptr cs:xmmword_100075D30+0Ch
                mov     esi, cs:dword_10004A28C
                cmp     esi, edx
                jnz     short loc_100026467
                lea     r12d, [rcx+1]
                mov     rsi, cs:selRef_EraseFlashPage_ ; char *
                mov     rdi, rbx        ; void *
                mov     edx, ecx
                call    cs:_objc_msgSend_ptr ; -[SHIDBootHJZ EraseFlashPage:]
                mov     esi, cs:dword_10004A28C
                mov     edi, dword ptr cs:xmmword_100075D30+0Ch
                mov     ecx, r12d
                jmp     short loc_10002646A
; ---------------------------------------------------------------------------

loc_100026467:                          ; CODE XREF: -[SHIDBootHJZ EraseFlashPage:]+41↑j
                mov     edi, r15d

loc_10002646A:                          ; CODE XREF: -[SHIDBootHJZ EraseFlashPage:]+68↑j
                mov     eax, r14d
                xor     edx, edx
                div     r15d
                cmp     ecx, eax
                cmovnz  esi, ecx
                mov     cs:dword_10004A288, esi
                xorps   xmm0, xmm0
                lea     rdx, [rbp+var_70]
                movaps  xmmword ptr [rdx], xmm0
                movaps  xmmword ptr [rdx+30h], xmm0
                movaps  xmmword ptr [rdx+20h], xmm0
                movaps  xmmword ptr [rdx+10h], xmm0
                mov     dword ptr [rdx], 1C5AE3A5h
                imul    esi, edi
                add     esi, cs:dword_10004A294
                mov     [rdx+4], esi
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+var_98]
                mov     [rcx], rax
                mov     eax, 0C2000000h
                mov     [rcx+8], rax
                lea     rax, sub_10002650E
                mov     [rcx+10h], rax
                lea     rax, unk_10003A2A8
                mov     [rcx+18h], rax
                mov     [rcx+20h], rbx
                mov     rsi, cs:selRef_writeDataCMD_block_ ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootHJZ writeDataCMD:block:]
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_28]
                jnz     short loc_100026509
                add     rsp, 80h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100026509:                          ; CODE XREF: -[SHIDBootHJZ EraseFlashPage:]+FA↑j
                call    ___stack_chk_fail
__SHIDBootHJZ_EraseFlashPage__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002650E   proc near               ; DATA XREF: -[SHIDBootHJZ EraseFlashPage:]+C2↑o

var_78          = qword ptr -78h
anonymous_3     = qword ptr -70h
anonymous_4     = qword ptr -68h
anonymous_5     = qword ptr -60h
anonymous_6     = qword ptr -58h
var_50          = xmmword ptr -50h
anonymous_2     = xmmword ptr -40h
anonymous_1     = xmmword ptr -30h
anonymous_0     = xmmword ptr -20h
var_10          = qword ptr -10h

                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 78h
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_10], rax
                mov     rdi, [rdi+20h]  ; void *
                mov     rsi, cs:selRef_send_usb_packet_cut ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10002659B
                xorps   xmm0, xmm0
                lea     rdx, [rbp+var_50]
                movaps  xmmword ptr [rdx], xmm0
                movaps  xmmword ptr [rdx+30h], xmm0
                movaps  xmmword ptr [rdx+20h], xmm0
                movaps  xmmword ptr [rdx+10h], xmm0
                mov     dword ptr [rdx], 1B5AE4A5h
                mov     rdi, [rbx+20h]  ; void *
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+var_78]
                mov     [rcx], rax
                mov     eax, 0C2000000h
                mov     [rcx+8], rax
                lea     rax, sub_1000265B7
                mov     [rcx+10h], rax
                lea     rax, unk_10003A2A8
                mov     [rcx+18h], rax
                mov     [rcx+20h], rdi
                mov     rsi, cs:selRef_writeDataCMD_block_ ; char *
                call    cs:_objc_msgSend_ptr

loc_10002659B:                          ; CODE XREF: sub_10002650E+2D↑j
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_10]
                jnz     short loc_1000265B2
                add     rsp, 78h
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000265B2:                          ; CODE XREF: sub_10002650E+9B↑j
                call    ___stack_chk_fail
sub_10002650E   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000265B7   proc near               ; DATA XREF: sub_10002650E+66↑o

var_78          = qword ptr -78h
anonymous_3     = qword ptr -70h
anonymous_4     = qword ptr -68h
anonymous_5     = qword ptr -60h
anonymous_6     = qword ptr -58h
var_50          = xmmword ptr -50h
anonymous_2     = xmmword ptr -40h
anonymous_1     = xmmword ptr -30h
anonymous_0     = xmmword ptr -20h
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 80h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                xorps   xmm0, xmm0
                lea     rdx, [rbp+var_50]
                movaps  xmmword ptr [rdx], xmm0
                movaps  xmmword ptr [rdx+30h], xmm0
                movaps  xmmword ptr [rdx+20h], xmm0
                movaps  xmmword ptr [rdx+10h], xmm0
                mov     dword ptr [rdx], 1A5AE5A5h
                mov     eax, dword ptr cs:xmmword_100075D30+0Ch
                imul    eax, cs:dword_10004A288
                add     eax, cs:dword_10004A294
                mov     [rdx+4], al
                mov     byte ptr [rbp+var_50+5], ah
                mov     ecx, eax
                shr     ecx, 10h
                mov     [rdx+6], cl
                shr     eax, 18h
                mov     [rdx+7], al
                mov     byte ptr [rdx+8], 1
                mov     rdi, [rdi+20h]  ; void *
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+var_78]
                mov     [rcx], rax
                mov     eax, 0C2000000h
                mov     [rcx+8], rax
                lea     rax, sub_100026677
                mov     [rcx+10h], rax
                lea     rax, unk_10003A2A8
                mov     [rcx+18h], rax
                mov     [rcx+20h], rdi
                mov     rsi, cs:selRef_writeDataCMD_block_ ; char *
                call    cs:_objc_msgSend_ptr
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_8]
                jnz     short loc_100026672
                add     rsp, 80h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100026672:                          ; CODE XREF: sub_1000265B7+B0↑j
                call    ___stack_chk_fail
sub_1000265B7   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100026677   proc near               ; DATA XREF: sub_1000265B7+7B↑o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     [rbp+var_30], rsi
                mov     rbx, rdi
                mov     eax, cs:dword_10004A288
                lea     r14d, ds:40h[rax*4]
                mov     rdi, [rdi+20h]  ; void *
                mov     r15, cs:selRef_pfile
                mov     r13, cs:_objc_msgSend_ptr
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                movsxd  rdx, r14d
                mov     rsi, cs:selRef_seekToFileOffset_ ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r12
                call    r14 ; _objc_release
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_readDataOfLength_ ; char *
                mov     edx, 4
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r12
                call    _objc_retainAutorelease
                mov     r15, rax
                mov     rsi, cs:selRef_bytes ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     eax, [rax]
                mov     rcx, [rbp+var_30]
                mov     ecx, [rcx+4]
                add     cs:dword_100075D28, ecx
                cmp     eax, ecx
                jnz     short loc_10002675C
                mov     edx, cs:dword_100075D2C
                inc     edx
                mov     cs:dword_100075D2C, edx
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_EraseFlashPage_ ; char *
                call    cs:_objc_msgSend_ptr

loc_10002675C:                          ; CODE XREF: sub_100026677+C4↑j
                mov     rdi, r15
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100026677   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[SHIDBootHJZ send_usb_packet_cut](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_send_usb_packet_cut_ proc near
                                        ; DATA XREF: __objc_const:0000000100045790↓o

var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 78h
                mov     [rbp+var_98], rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                cmp     cs:dword_10004A290, 0
                jle     loc_1000268EF
                mov     rax, cs:selRef_seekToFileOffset_
                mov     [rbp+var_90], rax
                mov     rax, cs:selRef_readDataOfLength_
                mov     [rbp+var_88], rax
                mov     rax, cs:selRef_bytes
                mov     [rbp+var_80], rax
                xor     r13d, r13d
                mov     rax, cs:selRef_writeDataCMD_block_
                mov     [rbp+var_78], rax
                mov     r14, [rbp+var_98]

loc_1000267E2:                          ; CODE XREF: -[SHIDBootHJZ send_usb_packet_cut]+16E↓j
                mov     eax, dword ptr cs:xmmword_100075D30+8
                mov     ecx, dword ptr cs:xmmword_100075D30+0Ch
                xor     edx, edx
                div     ecx
                imul    ecx, cs:dword_10004A288
                mov     edx, r13d
                shl     edx, 6
                lea     eax, [rdx+rax*4]
                lea     r12d, [rcx+rax]
                add     r12d, 40h
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_pfile ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[SHIDBootHJZ pfile]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                movsxd  rdx, r12d
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_90] ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                mov     rax, cs:_objc_release_ptr
                call    rax ; _objc_release
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_pfile ; char *
                call    rbx ; _objc_msgSend ; -[SHIDBootHJZ pfile]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     edx, 40h
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_88] ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, r12
                call    _objc_retainAutorelease
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_80] ; char *
                call    rbx ; _objc_msgSend
                movups  xmm0, xmmword ptr [rax]
                movups  xmm1, xmmword ptr [rax+10h]
                movups  xmm2, xmmword ptr [rax+20h]
                movups  xmm3, xmmword ptr [rax+30h]
                movaps  [rbp+var_70], xmm0
                movaps  [rbp+var_60], xmm1
                movaps  [rbp+var_50], xmm2
                movaps  [rbp+var_40], xmm3
                mov     rdi, r14        ; void *
                mov     rsi, [rbp+var_78] ; char *
                lea     rdx, [rbp+var_70]
                lea     rcx, off_10003A758
                call    rbx ; _objc_msgSend ; -[SHIDBootHJZ writeDataCMD:block:]
                mov     r15d, eax
                mov     rdi, r12
                call    cs:_objc_release_ptr
                test    r15d, r15d
                jnz     short loc_1000268E7
                inc     r13d
                cmp     r13d, cs:dword_10004A290
                jl      loc_1000267E2

loc_1000268E7:                          ; CODE XREF: -[SHIDBootHJZ send_usb_packet_cut]+162↑j
                test    r15d, r15d
                setz    al
                jmp     short loc_1000268F1
; ---------------------------------------------------------------------------

loc_1000268EF:                          ; CODE XREF: -[SHIDBootHJZ send_usb_packet_cut]+2D↑j
                mov     al, 1

loc_1000268F1:                          ; CODE XREF: -[SHIDBootHJZ send_usb_packet_cut]+17A↑j
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_30]
                jnz     short loc_100026913
                movzx   eax, al
                add     rsp, 78h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100026913:                          ; CODE XREF: -[SHIDBootHJZ send_usb_packet_cut]+18C↑j
                call    ___stack_chk_fail
__SHIDBootHJZ_send_usb_packet_cut_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100026918   proc near               ; DATA XREF: __const:000000010003A768↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_100026918   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ EraseFlash](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_EraseFlash_ proc near     ; DATA XREF: __objc_const:00000001000457A8↓o

var_78          = qword ptr -78h
anonymous_1     = qword ptr -70h
anonymous_2     = qword ptr -68h
anonymous_3     = qword ptr -60h
anonymous_4     = qword ptr -58h
var_50          = dword ptr -50h
anonymous_0     = dword ptr -4Ch
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 80h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                lea     rdx, [rbp+var_50]
                mov     eax, dword ptr cs:xmmword_100075D30+0Ch
                imul    eax, cs:dword_10004A288
                add     eax, cs:dword_10004A294
                mov     dword ptr [rdx], 1C5AE3A5h
                movd    xmm0, eax
                pxor    xmm1, xmm1
                psubb   xmm1, xmm0
                movd    dword ptr [rdx+4], xmm1
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rcx, [rbp+var_78]
                mov     [rcx], rax
                mov     eax, 0C2000000h
                mov     [rcx+8], rax
                lea     rax, sub_1000269C1
                mov     [rcx+10h], rax
                lea     rax, unk_10003A2A8
                mov     [rcx+18h], rax
                mov     [rcx+20h], rdi
                mov     rsi, cs:selRef_writeDataCMD_block_ ; char *
                call    cs:_objc_msgSend_ptr ; -[SHIDBootHJZ writeDataCMD:block:]
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_8]
                jnz     short loc_1000269BC
                add     rsp, 80h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1000269BC:                          ; CODE XREF: -[SHIDBootHJZ EraseFlash]+93↑j
                call    ___stack_chk_fail
__SHIDBootHJZ_EraseFlash_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000269C1   proc near               ; DATA XREF: -[SHIDBootHJZ EraseFlash]+5E↑o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                lea     rdi, aEraseFlash ; "erase Flash "
                call    _puts
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_send_usb_packet_cut ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, [rbx+20h]
                mov     rsi, cs:selRef_EraseFlashPage_
                xor     edx, edx
                mov     rax, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     rax
sub_1000269C1   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ startUpdate](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_startUpdate_ proc near    ; DATA XREF: __objc_const:00000001000457C0↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_30], rdi
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r15, cs:selRef_filePath
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r14, cs:_objc_release_ptr
                mov     rdi, rax
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                test    r13, r13
                jz      loc_100026B8E
                mov     r12, cs:classRef_NSFileHandle
                mov     rdi, cs:classRef_SHIDBootHJZ ; void *
                mov     rsi, cs:selRef_sharedInstance ; char *
                call    rbx ; _objc_msgSend ; +[SHIDBootHJZ sharedInstance]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_fileHandleForReadingAtPath_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15
                call    r14 ; _objc_release
                mov     rdi, r13
                call    r14 ; _objc_release
                test    r12, r12
                jz      loc_100026BF4
                mov     rsi, cs:selRef_setPfile_ ; char *
                mov     r15, [rbp+var_30]
                mov     rdi, r15        ; void *
                mov     rdx, r12
                call    rbx ; _objc_msgSend
                mov     rsi, cs:selRef_readDataOfLength_ ; char *
                mov     edx, 40h
                mov     rdi, r12        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, rax
                call    _objc_retainAutorelease
                mov     rsi, cs:selRef_bytes ; char *
                mov     [rbp+var_38], rax
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                movups  xmm0, xmmword ptr [rax]
                movups  xmm1, xmmword ptr [rax+10h]
                movups  xmm2, xmmword ptr [rax+20h]
                movups  xmm3, xmmword ptr [rax+30h]
                movups  cs:xmmword_100075D30, xmm0
                movups  cs:xmmword_100075D40, xmm1
                movups  cs:xmmword_100075D50, xmm2
                movups  cs:xmmword_100075D60, xmm3
                mov     r14, cs:selRef_cur_devId
                mov     rdi, r15        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     r13d, 8003400h
                mov     ecx, 10h
                mov     ebx, 1
                mov     rdi, r15        ; void *
                cmp     eax, 183h
                jz      short loc_100026BC4
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                mov     ecx, 8
                cmp     eax, 182h
                jnz     short loc_100026B9D
                mov     ebx, 10h
                xor     r13d, r13d
                mov     rdi, [rbp+var_30]
                jmp     short loc_100026BC4
; ---------------------------------------------------------------------------

loc_100026B8E:                          ; CODE XREF: -[SHIDBootHJZ startUpdate]+67↑j
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100026B9D:                          ; CODE XREF: -[SHIDBootHJZ startUpdate]+17C↑j
                mov     eax, dword ptr cs:xmmword_100075D30
                cmp     eax, 183h
                mov     rdi, [rbp+var_30] ; void *
                jz      short loc_100026BBF
                cmp     eax, 182h
                jnz     short loc_100026BDD
                mov     ebx, 10h
                xor     r13d, r13d
                jmp     short loc_100026BC4
; ---------------------------------------------------------------------------

loc_100026BBF:                          ; CODE XREF: -[SHIDBootHJZ startUpdate]+1AA↑j
                mov     ecx, 10h

loc_100026BC4:                          ; CODE XREF: -[SHIDBootHJZ startUpdate]+167↑j
                                        ; -[SHIDBootHJZ startUpdate]+18A↑j ...
                mov     cs:dword_10004A288, ebx
                mov     cs:dword_10004A28C, ebx
                mov     cs:dword_10004A290, ecx
                mov     cs:dword_10004A294, r13d

loc_100026BDD:                          ; CODE XREF: -[SHIDBootHJZ startUpdate]+1B1↑j
                mov     rsi, cs:selRef_EraseFlash ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_38]
                call    cs:_objc_release_ptr

loc_100026BF4:                          ; CODE XREF: -[SHIDBootHJZ startUpdate]+CB↑j
                mov     rdi, r12
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__SHIDBootHJZ_startUpdate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ readVersion](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_readVersion_ proc near    ; DATA XREF: __objc_const:00000001000457D8↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__SHIDBootHJZ_readVersion_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ open](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_open_ proc near           ; DATA XREF: __objc_const:00000001000457F0↓o

var_30          = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                xor     esi, esi
                call    _IOHIDManagerCreate
                mov     rsi, cs:selRef_setHidManager_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend ; -[SHIDManager setHidManager:]
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                mov     edx, 3209h
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aProductid ; "ProductID"
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdi, r13        ; void *
                mov     [rbp+var_30.var0.var0], r13
                mov     rdx, r15
                mov     rcx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 2DC8h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, aVendorid  ; "VendorID"
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r15
                mov     rcx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_ ; char *
                mov     rdx, r13
                xor     ecx, ecx
                xor     eax, eax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:selRef_hidManager
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     rdi, rax
                mov     rsi, r15
                call    _IOHIDManagerSetDeviceMatchingMultiple
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     r13, rax
                call    _CFRunLoopGetCurrent
                mov     rcx, cs:_kCFRunLoopDefaultMode_ptr
                mov     rdx, [rcx]
                mov     rdi, r13
                mov     rsi, rax
                call    _IOHIDManagerScheduleWithRunLoop
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     rdi, rax
                xor     esi, esi
                call    _IOHIDManagerOpen
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                lea     rsi, sub_100026251
                mov     rdi, rax
                mov     rdx, rbx
                call    _IOHIDManagerRegisterDeviceMatchingCallback
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                lea     rsi, sub_1000263E9
                mov     rdi, rax
                mov     rdx, rbx
                call    _IOHIDManagerRegisterDeviceRemovalCallback
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30.var0.var0]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SHIDBootHJZ_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __IOHIDDevice *__cdecl -[SHIDBootHJZ device](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_device_ proc near         ; CODE XREF: -[SHIDBootHJZ writeDataCMD:block:]+34↑P
                                        ; DATA XREF: __objc_const:0000000100045808↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootHJZ__device ; __IOHIDDevice *_device;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootHJZ_device_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ setDevice:](SHIDBootHJZ *self, SEL, __IOHIDDevice *)
__SHIDBootHJZ_setDevice__ proc near     ; DATA XREF: __objc_const:0000000100045820↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootHJZ__device ; __IOHIDDevice *_device;
                mov     [rdi+rax], rdx
                pop     rbp
                retn
__SHIDBootHJZ_setDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned int __cdecl -[SHIDBootHJZ cur_devId](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_cur_devId_ proc near      ; DATA XREF: __objc_const:0000000100045838↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootHJZ__cur_devId ; unsigned int _cur_devId;
                mov     eax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootHJZ_cur_devId_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ setCur_devId:](SHIDBootHJZ *self, SEL, unsigned int)
__SHIDBootHJZ_setCur_devId__ proc near  ; DATA XREF: __objc_const:0000000100045850↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootHJZ__cur_devId ; unsigned int _cur_devId;
                mov     [rdi+rax], edx
                pop     rbp
                retn
__SHIDBootHJZ_setCur_devId__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDBootHJZ *__cdecl -[SHIDBootHJZ bootDelegate](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_bootDelegate_ proc near   ; DATA XREF: __objc_const:0000000100045868↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootHJZ__bootDelegate ; SHIDBootHJZ *_bootDelegate;
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SHIDBootHJZ_bootDelegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ setBootDelegate:](SHIDBootHJZ *self, SEL, id)
__SHIDBootHJZ_setBootDelegate__ proc near
                                        ; DATA XREF: __objc_const:0000000100045880↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootHJZ__bootDelegate ; SHIDBootHJZ *_bootDelegate;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__SHIDBootHJZ_setBootDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[SHIDBootHJZ filePath](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_filePath_ proc near       ; DATA XREF: __objc_const:0000000100045898↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootHJZ__filePath ; NSString *_filePath;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootHJZ_filePath_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ setFilePath:](SHIDBootHJZ *self, SEL, id)
__SHIDBootHJZ_setFilePath__ proc near   ; DATA XREF: __objc_const:00000001000458B0↓o
                push    rbp
                mov     rbp, rsp
                mov     rcx, cs:_OBJC_IVAR_$_SHIDBootHJZ__filePath ; NSString *_filePath;
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__SHIDBootHJZ_setFilePath__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSFileHandle *__cdecl -[SHIDBootHJZ pfile](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ_pfile_ proc near          ; CODE XREF: -[SHIDBootHJZ send_usb_packet_cut]+A8↑P
                                        ; -[SHIDBootHJZ send_usb_packet_cut]+DA↑P
                                        ; DATA XREF: ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDBootHJZ__pfile ; NSFileHandle *_pfile;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDBootHJZ_pfile_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ setPfile:](SHIDBootHJZ *self, SEL, id)
__SHIDBootHJZ_setPfile__ proc near      ; DATA XREF: __objc_const:00000001000458E0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootHJZ__pfile ; NSFileHandle *_pfile;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SHIDBootHJZ_setPfile__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ setBlocks:](SHIDBootHJZ *self, SEL, id)
__SHIDBootHJZ_setBlocks__ proc near     ; DATA XREF: __objc_const:00000001000458F8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_SHIDBootHJZ__blocks ; NSMutableArray *_blocks;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__SHIDBootHJZ_setBlocks__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDBootHJZ .cxx_destruct](SHIDBootHJZ *self, SEL)
__SHIDBootHJZ__cxx_destruct_ proc near  ; DATA XREF: __objc_const:0000000100045910↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_SHIDBootHJZ__blocks ; NSMutableArray *_blocks;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SHIDBootHJZ__pfile ; NSFileHandle *_pfile;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_SHIDBootHJZ__filePath ; NSString *_filePath;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, cs:_OBJC_IVAR_$_SHIDBootHJZ__bootDelegate ; SHIDBootHJZ *_bootDelegate;
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_destroyWeak
__SHIDBootHJZ__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject load]_0(NSObject_meta *self, SEL)
__NSObject_load__0 proc near            ; DATA XREF: __objc_const:0000000100045AA8↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rbx, cs:selRef_dictionary
                mov     r14, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E30
                mov     cs:qword_100075E30, rax
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E38
                mov     cs:qword_100075E38, rax
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E40
                mov     cs:qword_100075E40, rax
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E48
                mov     cs:qword_100075E48, rax
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E50
                mov     cs:qword_100075E50, rax
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__NSObject_load__0 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject dictForKey:](NSObject_meta *self, SEL, const void *)
__NSObject_dictForKey__ proc near       ; DATA XREF: __objc_const:0000000100045AC0↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     r14, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, rax
                call    _objc_sync_enter
                lea     rax, unk_10002F5A0
                cmp     r14, rax
                jz      short loc_10002706D
                lea     rax, unk_10002F5A1
                cmp     r14, rax
                jz      short loc_100027076
                lea     rax, unk_10002F5A2
                cmp     r14, rax
                jz      short loc_10002707F
                lea     rax, unk_10002F5A3
                cmp     r14, rax
                jz      short loc_100027088
                lea     rax, unk_10002F5A4
                cmp     r14, rax
                jz      short loc_100027091
                xor     r14d, r14d
                jmp     short loc_1000270A4
; ---------------------------------------------------------------------------

loc_10002706D:                          ; CODE XREF: +[NSObject dictForKey:]+25↑j
                lea     rax, qword_100075E30
                jmp     short loc_100027098
; ---------------------------------------------------------------------------

loc_100027076:                          ; CODE XREF: +[NSObject dictForKey:]+31↑j
                lea     rax, qword_100075E38
                jmp     short loc_100027098
; ---------------------------------------------------------------------------

loc_10002707F:                          ; CODE XREF: +[NSObject dictForKey:]+3D↑j
                lea     rax, qword_100075E40
                jmp     short loc_100027098
; ---------------------------------------------------------------------------

loc_100027088:                          ; CODE XREF: +[NSObject dictForKey:]+49↑j
                lea     rax, qword_100075E48
                jmp     short loc_100027098
; ---------------------------------------------------------------------------

loc_100027091:                          ; CODE XREF: +[NSObject dictForKey:]+55↑j
                lea     rax, qword_100075E50

loc_100027098:                          ; CODE XREF: +[NSObject dictForKey:]+63↑j
                                        ; +[NSObject dictForKey:]+6C↑j ...
                mov     rdi, [rax]
                call    cs:_objc_retain_ptr
                mov     r14, rax

loc_1000270A4:                          ; CODE XREF: +[NSObject dictForKey:]+5A↑j
                mov     rdi, rbx
                call    _objc_sync_exit
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_dictForKey__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject propertyKey:](NSObject_meta *self, SEL, id)
__NSObject_propertyKey__ proc near      ; DATA XREF: __objc_const:0000000100045AD8↓o

var_C0          = ymmword ptr -0C0h
var_A0          = qword ptr -0A0h
anonymous_4     = qword ptr -98h
var_90          = qword ptr -90h
anonymous_5     = qword ptr -88h
anonymous_6     = qword ptr -80h
anonymous_7     = qword ptr -78h
var_70          = qword ptr -70h
anonymous_8     = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
anonymous_0     = qword ptr -48h
anonymous_1     = qword ptr -40h
anonymous_2     = qword ptr -38h
anonymous_3     = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 98h
                mov     r14, rdx
                mov     r15, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                test    rax, rax
                jz      loc_10002740B
                mov     [rbp+var_60], r14
                xor     eax, eax
                lea     r14, [rbp+var_58]
                mov     [r14], rax
                mov     [r14+8], r14
                mov     rcx, 3032000000h
                mov     [r14+10h], rcx
                lea     rcx, sub_100027449
                mov     [r14+18h], rcx
                lea     rcx, sub_10002745F
                mov     [r14+20h], rcx
                mov     [r14+28h], rax
                mov     r13, cs:selRef_mj_replacedKeyFromPropertyName121_
                mov     r12, cs:selRef_respondsToSelector_
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_100027173
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [rbp+var_50]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_100027173:                          ; CODE XREF: +[NSObject propertyKey:]+87↑j
                mov     rdx, cs:selRef_replacedKeyFromPropertyName121_
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_1000271BE
                mov     rdx, cs:selRef_replacedKeyFromPropertyName121
                mov     rsi, cs:selRef_performSelector_withObject_ ; char *
                mov     rdi, r15        ; void *
                mov     rcx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [rbp+var_50]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_1000271BE:                          ; CODE XREF: +[NSObject propertyKey:]+C7↑j
                mov     rax, [rbp+var_50]
                mov     rdi, [rax+28h]
                test    rdi, rdi
                jnz     short loc_10002723A
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r13, [rbp+var_C0]
                mov     [r13+0], rax
                mov     eax, 0C2000000h
                mov     [r13+8], rax
                lea     rax, sub_10002746E
                mov     [r13+10h], rax
                lea     rax, unk_10003A778
                mov     [r13+18h], rax
                mov     [r13+28h], r14
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     [r13+20h], rax
                mov     rsi, cs:selRef_mj_enumerateAllClasses_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_A0]
                call    cs:_objc_release_ptr
                mov     rax, [rbp+var_50]
                mov     rdi, [rax+28h]  ; void *
                test    rdi, rdi
                jz      short loc_10002724E

loc_10002723A:                          ; CODE XREF: +[NSObject propertyKey:]+108↑j
                mov     rsi, cs:selRef_isEqual_ ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_1000272C0

loc_10002724E:                          ; CODE XREF: +[NSObject propertyKey:]+177↑j
                mov     r13, cs:selRef_mj_replacedKeyFromPropertyName
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_1000272C0
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [rbp+var_50]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                mov     r14, r12
                mov     r12, cs:_objc_release_ptr
                call    r12 ; _objc_release
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     r12, r14
                lea     r14, [rbp+var_58]

loc_1000272C0:                          ; CODE XREF: +[NSObject propertyKey:]+18B↑j
                                        ; +[NSObject propertyKey:]+1A5↑j
                mov     rax, [rbp+var_50]
                mov     rdi, [rax+28h]  ; void *
                test    rdi, rdi
                jz      short loc_1000272E1
                mov     rsi, cs:selRef_isEqual_ ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10002733B

loc_1000272E1:                          ; CODE XREF: +[NSObject propertyKey:]+20A↑j
                mov     r13, cs:selRef_replacedKeyFromPropertyName
                mov     rdi, r15        ; void *
                mov     rsi, r12        ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10002733B
                mov     rsi, cs:selRef_performSelector_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [rbp+var_50]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_10002733B:                          ; CODE XREF: +[NSObject propertyKey:]+21E↑j
                                        ; +[NSObject propertyKey:]+238↑j
                mov     rax, [rbp+var_50]
                mov     rdi, [rax+28h]  ; void *
                test    rdi, rdi
                jz      short loc_10002735C
                mov     rsi, cs:selRef_isEqual_ ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_1000273C0

loc_10002735C:                          ; CODE XREF: +[NSObject propertyKey:]+285↑j
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r12, [rbp+var_90]
                mov     [r12], rax
                mov     eax, 0C2000000h
                mov     [r12+8], rax
                lea     rax, sub_100027547
                mov     [r12+10h], rax
                lea     rax, unk_10003A778
                mov     [r12+18h], rax
                mov     [r12+28h], r14
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     [r12+20h], rax
                mov     rsi, cs:selRef_mj_enumerateAllClasses_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_70]
                call    cs:_objc_release_ptr

loc_1000273C0:                          ; CODE XREF: +[NSObject propertyKey:]+299↑j
                mov     rdi, [rbp+var_50]
                mov     rax, [rdi+28h]
                test    rax, rax
                jnz     short loc_1000273E2
                add     rdi, 28h
                mov     rsi, [rbp+var_60]
                call    _objc_storeStrong
                mov     rax, [rbp+var_50]
                mov     rax, [rax+28h]

loc_1000273E2:                          ; CODE XREF: +[NSObject propertyKey:]+30A↑j
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     r14, rax
                lea     r15, [rbp+var_58]
                mov     rdi, r15        ; void *
                mov     esi, 8          ; int
                call    __Block_object_dispose
                mov     rdi, [r15+28h]
                call    cs:_objc_release_ptr
                jmp     short loc_10002740E
; ---------------------------------------------------------------------------

loc_10002740B:                          ; CODE XREF: +[NSObject propertyKey:]+29↑j
                xor     r14d, r14d

loc_10002740E:                          ; CODE XREF: +[NSObject propertyKey:]+348↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                add     rsp, 98h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_propertyKey__ endp

; ---------------------------------------------------------------------------
                mov     rbx, rax
                lea     rdi, [rbp-58h]
                mov     esi, 8
                call    __Block_object_dispose
                mov     rdi, rbx
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100027449   proc near               ; DATA XREF: +[NSObject propertyKey:]+4E↑o
                                        ; +[NSObject propertyObjectClassInArray:]+3C↓o ...
                push    rbp
                mov     rbp, rsp
                mov     rax, [rsi+28h]
                mov     [rdi+28h], rax
                mov     qword ptr [rsi+28h], 0
                pop     rbp
                retn
sub_100027449   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002745F   proc near               ; DATA XREF: +[NSObject propertyKey:]+59↑o
                                        ; +[NSObject propertyObjectClassInArray:]+47↓o ...
                push    rbp
                mov     rbp, rsp
                mov     rdi, [rdi+28h]
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_10002745F   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002746E   proc near               ; DATA XREF: +[NSObject propertyKey:]+125↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     rax, rsi
                mov     r15, rdi
                lea     rsi, unk_10002F5A1
                mov     rdi, rax
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_1000274CB
                mov     rsi, [r15+20h]
                mov     rax, [r14+10h]
                mov     rdi, r14
                call    rax
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [r15+28h]
                mov     rcx, [rcx+8]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_1000274CB:                          ; CODE XREF: sub_10002746E+30↑j
                mov     rax, [r15+28h]
                mov     rax, [rax+8]
                cmp     qword ptr [rax+28h], 0
                jz      short loc_1000274DD
                mov     byte ptr [rbx], 1

loc_1000274DD:                          ; CODE XREF: sub_10002746E+6A↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_10002746E   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1000274F0   proc near               ; DATA XREF: __const:000000010003A788↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rsi
                mov     r14, rdi
                mov     rdi, [rsi+20h]
                call    cs:_objc_retain_ptr
                add     r14, 28h
                mov     rsi, [rbx+28h]  ; void *
                mov     rdi, r14        ; void *
                mov     edx, 8          ; int
                pop     rbx
                pop     r14
                pop     rbp
                jmp     __Block_object_assign
sub_1000274F0   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100027520   proc near               ; DATA XREF: __const:000000010003A790↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, [rdi+28h]  ; void *
                mov     esi, 8          ; int
                call    __Block_object_dispose
                mov     rdi, [rbx+20h]
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100027520   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100027547   proc near               ; DATA XREF: +[NSObject propertyKey:]+2B7↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     rax, rsi
                mov     r15, rdi
                lea     rsi, unk_10002F5A0
                mov     rdi, rax
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_1000275AB
                mov     rdx, [r15+20h]
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [r15+28h]
                mov     rcx, [rcx+8]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_1000275AB:                          ; CODE XREF: sub_100027547+30↑j
                mov     rax, [r15+28h]
                mov     rax, [rax+8]
                mov     rdi, [rax+28h]  ; void *
                test    rdi, rdi
                jz      short loc_1000275D4
                mov     rdx, [r15+20h]
                mov     rsi, cs:selRef_isEqual_ ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jnz     short loc_1000275D4
                mov     byte ptr [rbx], 1

loc_1000275D4:                          ; CODE XREF: sub_100027547+73↑j
                                        ; sub_100027547+88↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100027547   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; Class __cdecl +[NSObject propertyObjectClassInArray:](NSObject_meta *self, SEL, id)
__NSObject_propertyObjectClassInArray__ proc near
                                        ; DATA XREF: __objc_const:0000000100045AF0↓o

anonymous_4     = ymmword ptr -90h
anonymous_5     = qword ptr -70h
var_68          = qword ptr -68h
anonymous_6     = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
anonymous_0     = qword ptr -48h
anonymous_1     = qword ptr -40h
anonymous_2     = qword ptr -38h
anonymous_3     = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 68h
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                xor     eax, eax
                lea     r13, [rbp+var_58]
                mov     [r13+0], rax
                mov     [r13+8], r13
                mov     rcx, 3032000000h
                mov     [r13+10h], rcx
                lea     rcx, sub_100027449
                mov     [r13+18h], rcx
                lea     rcx, sub_10002745F
                mov     [r13+20h], rcx
                mov     [r13+28h], rax
                mov     r12, cs:selRef_mj_objectClassInArray
                mov     r15, cs:selRef_respondsToSelector_
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_1000276B3
                mov     rdi, r14        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [rbp+var_50]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     r15, cs:selRef_respondsToSelector_

loc_1000276B3:                          ; CODE XREF: +[NSObject propertyObjectClassInArray:]+75↑j
                mov     r12, cs:selRef_objectClassInArray
                mov     rdi, r14        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10002770D
                mov     rsi, cs:selRef_performSelector_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [rbp+var_50]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_10002770D:                          ; CODE XREF: +[NSObject propertyObjectClassInArray:]+E4↑j
                mov     rax, [rbp+var_50]
                mov     r15, [rax+28h]
                test    r15, r15
                jnz     short loc_100027780
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r15, [rbp+anonymous_4+8]
                mov     [r15], rax
                mov     eax, 0C2000000h
                mov     [r15+8], rax
                lea     rax, sub_100027838
                mov     [r15+10h], rax
                lea     rax, unk_10003A778
                mov     [r15+18h], rax
                mov     [r15+28h], r13
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     [r15+20h], rax
                mov     rsi, cs:selRef_mj_enumerateAllClasses_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbp+var_68]
                call    cs:_objc_release_ptr
                mov     rax, [rbp+var_50]
                mov     r15, [rax+28h]

loc_100027780:                          ; CODE XREF: +[NSObject propertyObjectClassInArray:]+131↑j
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_class ; char *
                call    cs:_objc_msgSend_ptr
                mov     rsi, cs:selRef_isKindOfClass_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_1000277D2
                mov     rax, [rbp+var_50]
                mov     rdi, [rax+28h]
                call    _NSClassFromString
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [rbp+var_50]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_1000277D2:                          ; CODE XREF: +[NSObject propertyObjectClassInArray:]+1C2↑j
                lea     r14, [rbp+var_58]
                mov     rax, [r14+8]
                mov     rdi, [rax+28h]
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     rdi, r14        ; void *
                mov     esi, 8          ; int
                call    __Block_object_dispose
                mov     rdi, [r14+28h]
                mov     r14, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r15
                add     rsp, 68h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_propertyObjectClassInArray__ endp

; ---------------------------------------------------------------------------
                mov     rbx, rax
                lea     rdi, [rbp-58h]
                mov     esi, 8
                call    __Block_object_dispose
                mov     rdi, rbx
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100027838   proc near               ; DATA XREF: +[NSObject propertyObjectClassInArray:]+14D↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     rax, rsi
                mov     r15, rdi
                lea     rsi, unk_10002F5A3
                mov     rdi, rax
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002789C
                mov     rdx, [r15+20h]
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [r15+28h]
                mov     rcx, [rcx+8]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr

loc_10002789C:                          ; CODE XREF: sub_100027838+30↑j
                mov     rax, [r15+28h]
                mov     rax, [rax+8]
                cmp     qword ptr [rax+28h], 0
                jz      short loc_1000278AE
                mov     byte ptr [rbx], 1

loc_1000278AE:                          ; CODE XREF: sub_100027838+71↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100027838   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_enumerateProperties:](NSObject_meta *self, SEL, id)
__NSObject_mj_enumerateProperties__ proc near
                                        ; DATA XREF: __objc_const:0000000100045B08↓o

var_100         = xmmword ptr -100h
var_F0          = xmmword ptr -0F0h
anonymous_0     = xmmword ptr -0E0h
anonymous_1     = xmmword ptr -0D0h
var_B1          = byte ptr -0B1h
var_B0          = byte ptr -0B0h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0D8h
                mov     r14, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                mov     r15, cs:_objc_retain_ptr
                mov     rdi, rdx
                call    r15 ; _objc_retain
                mov     rbx, rax
                mov     rsi, cs:selRef_properties ; char *
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_B1], 0
                xorps   xmm0, xmm0
                lea     r12, [rbp+var_100]
                movaps  xmmword ptr [r12], xmm0
                movaps  xmmword ptr [r12+10h], xmm0
                movaps  xmmword ptr [r12+20h], xmm0
                movaps  xmmword ptr [r12+30h], xmm0
                mov     rdi, rax
                call    r15 ; _objc_retain
                mov     r14, rax
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rcx, [rbp+var_B0]
                mov     r8d, 10h
                mov     rdi, rax        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      short loc_1000279E2
                mov     r12, rax
                lea     rax, [rbp+var_100]
                mov     rax, [rax+10h]
                mov     r15, [rax]

loc_100027976:                          ; CODE XREF: +[NSObject mj_enumerateProperties:]+11F↓j
                xor     r13d, r13d

loc_100027979:                          ; CODE XREF: +[NSObject mj_enumerateProperties:]+F3↓j
                mov     rax, qword ptr [rbp+var_F0]
                cmp     [rax], r15
                jz      short loc_10002798D
                mov     rdi, r14
                call    _objc_enumerationMutation

loc_10002798D:                          ; CODE XREF: +[NSObject mj_enumerateProperties:]+C2↑j
                mov     rax, qword ptr [rbp+var_100+8]
                mov     rsi, [rax+r13*8]
                mov     rdi, rbx
                lea     rdx, [rbp+var_B1]
                call    qword ptr [rbx+10h]
                cmp     [rbp+var_B1], 0
                jnz     short loc_1000279E2
                inc     r13
                cmp     r12, r13
                jnz     short loc_100027979
                mov     r8d, 10h
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_countByEnumeratingWithState_objects_count_ ; char *
                lea     rdx, [rbp+var_100]
                lea     rcx, [rbp+var_B0]
                call    cs:_objc_msgSend_ptr
                mov     r12, rax
                test    rax, rax
                jnz     short loc_100027976

loc_1000279E2:                          ; CODE XREF: +[NSObject mj_enumerateProperties:]+A2↑j
                                        ; +[NSObject mj_enumerateProperties:]+EB↑j
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_30]
                jnz     short loc_100027A1D
                add     rsp, 0D8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_100027A1D:                          ; CODE XREF: +[NSObject mj_enumerateProperties:]+148↑j
                call    ___stack_chk_fail
__NSObject_mj_enumerateProperties__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject properties](NSObject_meta *self, SEL)
__NSObject_properties_ proc near        ; DATA XREF: __objc_const:0000000100045B20↓o

anonymous_0     = ymmword ptr -60h
anonymous_1     = qword ptr -40h
anonymous_3     = qword ptr -38h
anonymous_2     = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     rbx, rdi
                mov     rsi, cs:selRef_dictForKey_ ; char *
                lea     rdx, unk_10002F5A4
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r14, cs:_objc_release_ptr
                mov     rdi, r13
                call    r14 ; _objc_release
                mov     rdi, r12
                call    r14 ; _objc_release
                test    r15, r15
                jnz     loc_100027B77
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_array ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     r12, [rbp+anonymous_0+8]
                mov     [r12], rcx
                mov     ecx, 0C2000000h
                mov     [r12+8], rcx
                lea     rcx, sub_100027B8D
                mov     [r12+10h], rcx
                lea     rcx, unk_10003A7A8
                mov     [r12+18h], rcx
                mov     [r12+28h], rbx
                mov     rdi, rax
                call    cs:_objc_retain_ptr
                mov     r15, rax
                mov     [r12+20h], rax
                mov     rsi, cs:selRef_mj_enumerateClasses_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r12
                call    r13 ; _objc_msgSend
                lea     rdx, unk_10002F5A4
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_dictForKey_ ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdi, r14        ; void *
                mov     rdx, r15
                mov     rcx, rax
                call    r13 ; _objc_msgSend
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, [r12+20h]
                call    rbx ; _objc_release

loc_100027B77:                          ; CODE XREF: +[NSObject properties]+7B↑j
                mov     rdi, r15
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_properties_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100027B8D   proc near               ; DATA XREF: +[NSObject properties]+BA↑o

var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_2C          = dword ptr -2Ch

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 68h
                mov     [rbp+var_78], rdi
                lea     rbx, [rbp+var_2C]
                mov     dword ptr [rbx], 0
                mov     [rbp+var_80], rsi
                mov     rdi, rsi
                mov     rsi, rbx
                call    _class_copyPropertyList
                mov     r14, rax
                cmp     dword ptr [rbx], 0
                jz      loc_100027D7D
                mov     rax, cs:selRef_srcClass
                mov     [rbp+var_90], rax
                mov     rax, cs:selRef_isClassFromFoundation_
                mov     [rbp+var_88], rax
                mov     rax, cs:selRef_setSrcClass_
                mov     [rbp+var_68], rax
                mov     rax, cs:selRef_name
                mov     [rbp+var_38], rax
                mov     rax, cs:selRef_propertyKey_
                mov     [rbp+var_60], rax
                mov     rax, cs:selRef_setOriginKey_forClass_
                mov     [rbp+var_58], rax
                mov     rax, cs:selRef_propertyObjectClassInArray_
                mov     [rbp+var_50], rax
                mov     rax, cs:selRef_setObjectClassInArray_forClass_
                mov     [rbp+var_48], rax
                mov     rax, cs:selRef_addObject_
                mov     [rbp+var_40], rax
                xor     ebx, ebx
                mov     [rbp+var_70], r14

loc_100027C36:                          ; CODE XREF: sub_100027B8D+1EA↓j
                mov     rdi, cs:classRef_MJProperty ; void *
                mov     rdx, [r14+rbx*8]
                mov     rsi, cs:selRef_cachedPropertyWithProperty_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend ; +[MJProperty cachedPropertyWithProperty:]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r13, cs:classRef_MJFoundation
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_90] ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_88] ; char *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                test    al, al
                jnz     loc_100027D65
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_68] ; char *
                mov     rdx, [rbp+var_80]
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     r14, [rbp+var_78]
                mov     r13, [r14+28h]
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_38] ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_60] ; char *
                mov     rdx, rax
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rcx, [r14+28h]
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_58] ; char *
                mov     rdx, rax
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     r15, [r14+28h]
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_38] ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, r15        ; void *
                mov     rsi, [rbp+var_50] ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     rcx, [r14+28h]
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_48] ; char *
                mov     rdx, rax
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, [r14+20h]  ; void *
                mov     r14, [rbp+var_70]
                mov     rsi, [rbp+var_40] ; char *
                mov     rdx, r12
                call    r15 ; _objc_msgSend

loc_100027D65:                          ; CODE XREF: sub_100027B8D+F6↑j
                mov     rdi, r12
                call    cs:_objc_release_ptr
                inc     rbx
                mov     eax, [rbp+var_2C]
                cmp     rbx, rax
                jb      loc_100027C36

loc_100027D7D:                          ; CODE XREF: sub_100027B8D+34↑j
                mov     rdi, r14        ; void *
                call    _free
                add     rsp, 68h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_100027B8D   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupNewValueFromOldValue:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupNewValueFromOldValue__ proc near
                                        ; DATA XREF: __objc_const:0000000100045B38↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rdi, rdx
                call    _objc_retainBlock
                mov     r14, rax
                lea     rsi, unk_10002F5A2
                mov     ecx, 3
                mov     rdi, rbx
                mov     rdx, rax
                call    _objc_setAssociatedObject
                mov     rdi, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__NSObject_mj_setupNewValueFromOldValue__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_getNewValueFromObject:oldValue:property:](NSObject_meta *self, SEL, id, id, id)
__NSObject_mj_getNewValueFromObject_oldValue_property__ proc near
                                        ; DATA XREF: __objc_const:0000000100045B50↓o

var_A0          = qword ptr -0A0h
anonymous_5     = qword ptr -98h
anonymous_6     = qword ptr -90h
anonymous_7     = qword ptr -88h
anonymous_8     = qword ptr -80h
anonymous_9     = qword ptr -78h
anonymous_10    = qword ptr -70h
anonymous_11    = qword ptr -68h
var_60          = qword ptr -60h
anonymous_0     = qword ptr -58h
anonymous_1     = qword ptr -50h
anonymous_2     = qword ptr -48h
anonymous_3     = qword ptr -40h
anonymous_4     = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 78h
                mov     rbx, r8
                mov     r12, rcx
                mov     r15, rdx
                mov     [rbp+var_30], rdi
                mov     r13, cs:selRef_mj_newValueFromOldValue_property_
                mov     r14, cs:selRef_respondsToSelector_
                mov     rdi, rdx        ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_100027E28
                mov     rdi, r15        ; void *
                mov     rsi, r13        ; char *
                mov     rdx, r12
                mov     rcx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                jmp     short loc_100027E65
; ---------------------------------------------------------------------------

loc_100027E28:                          ; CODE XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+3D↑j
                mov     r13, cs:selRef_newValueFromOldValue_property_
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, r14        ; char *
                mov     rdx, r13
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_100027E7E
                mov     rsi, cs:selRef_performSelector_withObject_withObject_ ; char *
                mov     rdi, [rbp+var_30] ; void *
                mov     rdx, r13
                mov     rcx, r12
                mov     r8, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue

loc_100027E65:                          ; CODE XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+59↑j
                mov     rbx, rax

loc_100027E68:                          ; CODE XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+16A↓j
                mov     rdi, rbx
                add     rsp, 78h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_100027E7E:                          ; CODE XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+74↑j
                lea     r14, [rbp+var_60]
                mov     qword ptr [r14], 0
                mov     [r14+8], r14
                mov     rax, 3032000000h
                mov     [r14+10h], rax
                lea     rax, sub_100027449
                mov     [r14+18h], rax
                lea     rax, sub_10002745F
                mov     [r14+20h], rax
                mov     rdi, r12
                call    cs:_objc_retain_ptr
                mov     [r14+28h], rax
                mov     rcx, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_A0]
                mov     [rdx], rcx
                mov     ecx, 0C2000000h
                mov     [rdx+8], rcx
                lea     rcx, sub_100027F55
                mov     [rdx+10h], rcx
                lea     rcx, unk_10003A7D8
                mov     [rdx+18h], rcx
                mov     [rdx+20h], r14
                mov     [rdx+28h], r15
                mov     [rdx+30h], rax
                mov     [rdx+38h], rbx
                mov     rsi, cs:selRef_mj_enumerateAllClasses_ ; char *
                mov     rdi, [rbp+var_30] ; void *
                call    cs:_objc_msgSend_ptr
                mov     rax, [r14+8]
                mov     rdi, [rax+28h]
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, r14        ; void *
                mov     esi, 8          ; int
                call    __Block_object_dispose
                mov     rdi, [r14+28h]
                call    cs:_objc_release_ptr
                jmp     loc_100027E68
__NSObject_mj_getNewValueFromObject_oldValue_property__ endp

; ---------------------------------------------------------------------------
                mov     rbx, rax
                lea     rdi, [rbp-60h]
                mov     esi, 8
                call    __Block_object_dispose
                mov     rdi, rbx
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_100027F55   proc near               ; DATA XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+10B↑o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdx
                mov     rax, rsi
                mov     r15, rdi
                lea     rsi, unk_10002F5A2
                mov     rdi, rax
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100027FBD
                mov     rsi, [r15+28h]
                mov     rdx, [r15+30h]
                mov     rcx, [r15+38h]
                mov     rax, [r14+10h]
                mov     rdi, r14
                call    rax
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, [r15+20h]
                mov     rcx, [rcx+8]
                mov     rdi, [rcx+28h]
                mov     [rcx+28h], rax
                call    cs:_objc_release_ptr
                mov     byte ptr [rbx], 1

loc_100027FBD:                          ; CODE XREF: sub_100027F55+30↑j
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_100027F55   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupObjectClassInArray:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupObjectClassInArray__ proc near
                                        ; DATA XREF: __objc_const:0000000100045B68↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rsi, cs:selRef_mj_setupBlockReturnValue_key_ ; char *
                lea     rcx, unk_10002F5A3
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_dictForKey_ ; char *
                lea     rdx, unk_10002F5A4
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_removeAllObjects ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__NSObject_mj_setupObjectClassInArray__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupReplacedKeyFromPropertyName:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupReplacedKeyFromPropertyName__ proc near
                                        ; DATA XREF: __objc_const:0000000100045B80↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdi
                mov     rsi, cs:selRef_mj_setupBlockReturnValue_key_ ; char *
                lea     rcx, unk_10002F5A0
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rsi, cs:selRef_dictForKey_ ; char *
                lea     rdx, unk_10002F5A4
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_removeAllObjects ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
__NSObject_mj_setupReplacedKeyFromPropertyName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupReplacedKeyFromPropertyName121:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupReplacedKeyFromPropertyName121__ proc near
                                        ; DATA XREF: __objc_const:0000000100045B98↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, rdx
                call    _objc_retainBlock
                mov     r14, rax
                lea     rsi, unk_10002F5A1
                mov     ecx, 3
                mov     rdi, rbx
                mov     rdx, rax
                call    _objc_setAssociatedObject
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_dictForKey_ ; char *
                lea     rdx, unk_10002F5A4
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_removeAllObjects ; char *
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__NSObject_mj_setupReplacedKeyFromPropertyName121__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject enumerateProperties:](NSObject_meta *self, SEL, id)
__NSObject_enumerateProperties__ proc near
                                        ; DATA XREF: __objc_const:0000000100045BF8↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_enumerateProperties_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_enumerateProperties__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject setupNewValueFromOldValue:](NSObject_meta *self, SEL, id)
__NSObject_setupNewValueFromOldValue__ proc near
                                        ; DATA XREF: __objc_const:0000000100045C10↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupNewValueFromOldValue_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_setupNewValueFromOldValue__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject getNewValueFromObject:oldValue:property:](NSObject_meta *self, SEL, id, id, id)
__NSObject_getNewValueFromObject_oldValue_property__ proc near
                                        ; DATA XREF: __objc_const:0000000100045C28↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_getNewValueFromObject_oldValue_property_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_getNewValueFromObject_oldValue_property__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject setupReplacedKeyFromPropertyName:](NSObject_meta *self, SEL, id)
__NSObject_setupReplacedKeyFromPropertyName__ proc near
                                        ; DATA XREF: __objc_const:0000000100045C40↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupReplacedKeyFromPropertyName_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_setupReplacedKeyFromPropertyName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject setupReplacedKeyFromPropertyName121:](NSObject_meta *self, SEL, id)
__NSObject_setupReplacedKeyFromPropertyName121__ proc near
                                        ; DATA XREF: __objc_const:0000000100045C58↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupReplacedKeyFromPropertyName121_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_setupReplacedKeyFromPropertyName121__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject setupObjectClassInArray:](NSObject_meta *self, SEL, id)
__NSObject_setupObjectClassInArray__ proc near
                                        ; DATA XREF: __objc_const:0000000100045C70↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupObjectClassInArray_
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_setupObjectClassInArray__ endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; DeviceManualView *__cdecl -[DeviceManualView initWithFrame:](DeviceManualView *self, SEL, CGRect)
__DeviceManualView_initWithFrame__ proc near
                                        ; DATA XREF: __objc_const:0000000100045D18↓o

var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_38          = qword ptr -38h
anonymous_0     = qword ptr -30h
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                lea     rax, [rbp+var_38]
                mov     [rax], rdi
                mov     rcx, cs:classRef_DeviceManualView_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_initWithFrame_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+60h+var_50], xmm1
                movups  [rsp+60h+var_60], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      loc_10002873A
                mov     rdi, cs:classRef_NSImageView
                call    _objc_alloc
                mov     r14, cs:selRef_init
                mov     r12, cs:_objc_msgSend_ptr
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend ; -[DeviceManualView setMainImageView:]
                mov     r13, r12
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, r14
                call    r13
                mov     r15, rax
                mov     rsi, cs:selRef_setOneHintLabel_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, r14
                call    r13
                mov     r15, rax
                mov     rsi, cs:selRef_setTwoHintLabel_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_SLabel
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, r14
                call    r13
                mov     r15, rax
                mov     rsi, cs:selRef_setThreeHintLabel_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_mainImageView
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSImage
                mov     rsi, cs:selRef_imageNamed_
                lea     rdx, cfstr_Sn30prosf30pro ; "SN30ProSF30Pro_tx"
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r13
                mov     r13, rax
                mov     rsi, cs:selRef_setImage_
                mov     rdi, r15
                mov     rdx, rax
                call    r14
                mov     rdi, r13
                call    r12 ; _objc_release
                mov     rdi, r15
                call    r12 ; _objc_release
                mov     r13, r12
                mov     rdi, rbx
                mov     r12, cs:selRef_mainImageView
                mov     rsi, r12
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setAlignment_
                mov     edx, 2
                mov     rdi, rax
                call    r14
                mov     rdi, r15
                mov     r15, r13
                call    r13
                mov     rdi, rbx
                mov     rsi, r12
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setImageScaling_
                mov     rdi, rax
                xor     edx, edx
                call    r14
                mov     rdi, r13
                call    r15
                mov     rdi, cs:classRef_NSImageView
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r14
                mov     r13, rax
                mov     rsi, cs:selRef_setSubImageView_
                mov     rdi, rbx
                mov     rdx, rax
                call    r14
                mov     rdi, r13
                call    r15
                mov     rsi, cs:selRef_subImageView
                mov     rdi, rbx
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSImage
                lea     rdx, cfstr_N30prof30prov2 ; "N30ProF30ProV2_tx"
                mov     rsi, cs:selRef_imageNamed_
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13
                mov     rsi, cs:selRef_setImage_
                mov     rdx, rax
                call    r14
                mov     rdi, r12
                call    r15
                mov     rdi, r13
                call    r15
                mov     r13, r15
                mov     rdi, rbx
                mov     r15, cs:selRef_subImageView
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     edx, 2
                mov     rdi, rax
                mov     rsi, cs:selRef_setAlignment_
                call    r14
                mov     rdi, r12
                call    r13
                mov     rdi, rbx
                mov     rsi, r15
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setImageScaling_
                xor     edx, edx
                call    r14
                mov     rdi, r12
                call    r13
                mov     rdi, cs:classRef_NSImageView
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r14
                mov     r12, rax
                mov     rsi, cs:selRef_setSubmainImageView_
                mov     rdi, rbx
                mov     rdx, rax
                call    r14
                mov     rdi, r12
                call    r13
                mov     rsi, cs:selRef_submainImageView
                mov     rdi, rbx
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSImage
                lea     rdx, cfstr_N30prof30proBo ; "N30ProF30Pro_bottom_tx"
                mov     rsi, cs:selRef_imageNamed_
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12
                mov     rsi, cs:selRef_setImage_
                mov     rdx, rax
                call    r14
                mov     rdi, r15
                call    r13
                mov     rdi, r12
                call    r13
                mov     r12, r13
                mov     rdi, rbx
                mov     r13, cs:selRef_submainImageView
                mov     rsi, r13
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     edx, 2
                mov     rdi, rax
                mov     rsi, cs:selRef_setAlignment_
                call    r14
                mov     rdi, r15
                call    r12
                mov     rdi, rbx
                mov     rsi, r13
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setImageScaling_
                xor     edx, edx
                call    r14
                mov     r13, r14
                mov     rdi, r15
                call    r12
                mov     rdi, cs:classRef_NSImageView
                call    _objc_alloc
                mov     rdi, rax
                mov     rsi, cs:selRef_init
                call    r14
                mov     r14, rax
                mov     rsi, cs:selRef_setSubsubImageView_
                mov     rdi, rbx
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r12
                mov     r14, r12
                mov     rsi, cs:selRef_subsubImageView
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSImage
                lea     rdx, cfstr_N30prof30prov2_0 ; "N30ProF30ProV2_bottom_tx"
                mov     rsi, cs:selRef_imageNamed_
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r15
                mov     rsi, cs:selRef_setImage_
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    r14
                mov     rdi, r15
                call    r14
                mov     rdi, rbx
                mov     r12, cs:selRef_subsubImageView
                mov     rsi, r12
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     edx, 2
                mov     rdi, rax
                mov     rsi, cs:selRef_setAlignment_
                call    r13
                mov     rdi, r15
                call    r14
                mov     rdi, rbx
                mov     rsi, r12
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setImageScaling_
                xor     edx, edx
                call    r13
                mov     rdi, r15
                call    r14
                mov     rdi, rbx
                mov     rsi, cs:selRef_mainImageView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     r15, cs:selRef_addSubview_
                mov     rdi, rbx
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    r14
                mov     rsi, cs:selRef_oneHintLabel
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    r14
                mov     rsi, cs:selRef_twoHintLabel
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    r14
                mov     rsi, cs:selRef_threeHintLabel
                mov     rdi, rbx
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    r14
                mov     rdi, rbx
                mov     rsi, cs:selRef_subImageView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                call    r14
                mov     rdi, rbx
                mov     rsi, cs:selRef_submainImageView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r12
                mov     r12, r14
                call    r14
                mov     rdi, rbx
                mov     rsi, cs:selRef_subsubImageView
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rbx
                mov     rsi, r15
                mov     rdx, rax
                call    r13
                mov     rdi, r14
                call    r12

loc_10002873A:                          ; CODE XREF: -[DeviceManualView initWithFrame:]+49↑j
                mov     rax, rbx
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__DeviceManualView_initWithFrame__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView layout](DeviceManualView *self, SEL)
__DeviceManualView_layout_ proc near    ; DATA XREF: __objc_const:0000000100045D30↓o

var_D0          = xmmword ptr -0D0h
var_C0          = xmmword ptr -0C0h
var_A8          = byte ptr -0A8h
anonymous_1     = qword ptr -98h
var_88          = byte ptr -88h
anonymous_2     = qword ptr -70h
var_68          = qword ptr -68h
anonymous_0     = qword ptr -60h
var_58          = qword ptr -58h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0A8h
                mov     rbx, rdi
                lea     rdi, [rbp+var_68]
                mov     [rdi], rbx
                mov     rax, cs:classRef_DeviceManualView_0
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_layout
                call    _objc_msgSendSuper2
                mov     r14, cs:selRef_frame
                lea     r15, [rbp+var_A8]
                mov     rdi, r15
                mov     rsi, rbx
                mov     rdx, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                mov     r12, cs:_OBJC_IVAR_$_DeviceManualView_m_widht ; double m_widht;
                movsd   qword ptr [rbx+r12], xmm0
                lea     r15, [rbp+var_88]
                mov     rdi, r15
                mov     rsi, rbx
                mov     rdx, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView_m_heigh ; double m_heigh;
                movsd   qword ptr [rbx+rax], xmm0
                movsd   xmm1, qword ptr [rbx+r12]
                addsd   xmm1, cs:qword_10002F5A8
                mulsd   xmm1, cs:qword_10002F058
                movsd   [rbp+var_30], xmm1
                mulsd   xmm0, cs:qword_10002F5B0
                addsd   xmm0, cs:qword_10002F5B8
                movsd   [rbp+var_58], xmm0
                mov     r15, cs:selRef_mainImageView
                mov     r13, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[DeviceManualView mainImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                movsd   xmm0, [rbp+var_30]
                movsd   qword ptr [rbp+var_50], xmm0
                movsd   xmm0, [rbp+var_58]
                movsd   qword ptr [rbp+var_50+8], xmm0
                movaps  xmm0, cs:xmmword_10002F5C0
                movups  [rbp+var_40], xmm0
                mov     rsi, cs:selRef_setFrame_ ; char *
                movups  xmm0, [rbp+var_50]
                movups  xmm1, [rbp+var_40]
                movups  [rsp+0D0h+var_C0], xmm1
                movups  [rsp+0D0h+var_D0], xmm0
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, rbx        ; void *
                mov     rsi, r15        ; char *
                call    r13 ; _objc_msgSend ; -[DeviceManualView mainImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_100028899
                lea     rdi, [rbp+var_50]
                mov     rsi, r15
                mov     rdx, r14
                call    _objc_msgSend_stret
                jmp     short loc_1000288A4
; ---------------------------------------------------------------------------

loc_100028899:                          ; CODE XREF: -[DeviceManualView layout]+13A↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_40], xmm0
                movaps  [rbp+var_50], xmm0

loc_1000288A4:                          ; CODE XREF: -[DeviceManualView layout]+14B↑j
                movaps  xmm0, [rbp+var_50]
                movaps  xmm1, [rbp+var_40]
                movups  [rsp+0D0h+var_C0], xmm1
                movups  [rsp+0D0h+var_D0], xmm0
                call    _NSStringFromRect
                mov     rdi, rax
                call    _objc_unsafeClaimAutoreleasedReturnValue
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rsi, cs:selRef_setUI ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[DeviceManualView setUI]
                mov     rsi, cs:selRef_error ; char *
                mov     rdi, rbx        ; void *
                call    r13 ; _objc_msgSend ; -[DeviceManualView error]
                test    al, al
                jz      loc_100028A95
                mov     r14, cs:selRef_oneHintLabel
                mov     rdi, rbx        ; void *
                mov     rsi, r14        ; char *
                call    r13 ; _objc_msgSend ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_stringValue ; char *
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_stringByReplacingOccurrencesOfString_withString_ ; char *
                lea     rdx, cfstr_3    ; "3"
                lea     rcx, cfstr_8    ; "8"
                mov     rdi, rax        ; void *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, r13
                mov     r13, rax
                mov     rdi, rbx
                mov     rsi, r14
                call    r15             ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setStringValue_
                mov     rdi, rax
                mov     rdx, r13
                call    r15
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_redColor ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_oneHintLabel ; char *
                call    r14 ; _objc_msgSend ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     r15, cs:selRef_setTextColor_
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_redColor ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_twoHintLabel ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend ; -[DeviceManualView twoHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, r12
                call    r14 ; _objc_msgSend
                mov     rdi, r13
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     r12, r15
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_redColor ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_threeHintLabel ; char *
                mov     rdi, rbx        ; void *
                call    r14 ; _objc_msgSend ; -[DeviceManualView threeHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setTextColor_ ; char *
                mov     rdx, r15
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    r12
                mov     rdi, r15
                call    r12

loc_100028A95:                          ; CODE XREF: -[DeviceManualView layout]+19B↑j
                add     rsp, 0A8h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__DeviceManualView_layout_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setUI](DeviceManualView *self, SEL)
__DeviceManualView_setUI_ proc near     ; CODE XREF: -[DeviceManualView layout]+189↑P
                                        ; DATA XREF: __objc_const:0000000100045D48↓o

var_E0          = xmmword ptr -0E0h
var_D0          = xmmword ptr -0D0h
var_C0          = xmmword ptr -0C0h
var_B0          = xmmword ptr -0B0h
var_A0          = xmmword ptr -0A0h
var_88          = qword ptr -88h
var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0B8h
                mov     r14, rdi
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_blackColor ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_oneHintLabel ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setTextColor_ ; char *
                mov     rdi, rax        ; void *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_blackColor ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_twoHintLabel ; char *
                mov     rdi, r14        ; void *
                call    r13 ; _objc_msgSend ; -[DeviceManualView twoHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setTextColor_ ; char *
                mov     rdx, rbx
                call    r13 ; _objc_msgSend
                mov     rdi, r12
                mov     r12, r13
                mov     r13, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSColor
                mov     rsi, cs:selRef_blackColor
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_threeHintLabel
                mov     rdi, r14
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_setTextColor_
                mov     rdx, rbx
                call    r12
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_subImageView
                mov     rdi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     r14, cs:selRef_setHidden_
                mov     rdi, rax
                mov     rsi, r14
                mov     edx, 1
                call    r12
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_submainImageView
                mov     rdi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, r14
                mov     edx, 1
                call    r12
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_subsubImageView
                mov     rdi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, r14
                mov     edx, 1
                call    r12
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_device
                mov     rdi, r13
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_details
                mov     rdi, rax
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_type
                mov     rdi, rax
                call    r12
                mov     r15d, eax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     r15d, 9
                mov     [rbp+var_38], r13
                jnz     loc_100028DF2
                mov     rdi, cs:classRef_NSBundle
                mov     r15, cs:selRef_mainBundle
                mov     rsi, r15
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     rbx, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Snprosfpro1 ; "SNProSFPro1"
                lea     r12, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Snprosfpro2 ; "SNProSFPro2"
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Snprosfpro3 ; "SNProSFPro3"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ ; char *
                lea     rdx, cfstr_Sn30prosf30pro ; "SN30ProSF30Pro_tx"
                mov     rdi, [rbp+var_38] ; void *
                mov     rcx, r14
                mov     r8, rbx
                mov     r9, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                mov     r12, cs:_objc_msgSend_ptr
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                mov     r13, [rbp+var_38]

loc_100028DF2:                          ; CODE XREF: -[DeviceManualView setUI]+201↑j
                mov     rdi, r13
                mov     rsi, cs:selRef_device
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_details
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_type
                call    r12
                mov     r15d, eax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     r15d, 0Dh
                jnz     loc_100028F93
                mov     rdi, cs:classRef_NSBundle
                mov     r15, cs:selRef_mainBundle
                mov     rsi, r15
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     rbx, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Snprosfpro1 ; "SNProSFPro1"
                lea     r12, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Snprosfpro2 ; "SNProSFPro2"
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Snprosfpro3 ; "SNProSFPro3"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ ; char *
                lea     rdx, cfstr_N30pro2Tx ; "N30Pro2_tx"
                mov     rdi, [rbp+var_38] ; void *
                mov     rcx, r14
                mov     r8, rbx
                mov     r9, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                mov     r12, cs:_objc_msgSend_ptr
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                mov     r13, [rbp+var_38]

loc_100028F93:                          ; CODE XREF: -[DeviceManualView setUI]+3A2↑j
                mov     rdi, r13
                mov     rsi, cs:selRef_device
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_details
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_type
                call    r12
                mov     r15d, eax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     r15d, 4
                jnz     loc_100029134
                mov     rdi, cs:classRef_NSBundle
                mov     r15, cs:selRef_mainBundle
                mov     rsi, r15
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     rbx, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Snprosfpro1 ; "SNProSFPro1"
                lea     r12, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Snprosfpro2 ; "SNProSFPro2"
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Snprosfpro3 ; "SNProSFPro3"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ ; char *
                lea     rdx, cfstr_NesjoyNimiTx ; "nesjoy_nimi_tx"
                mov     rdi, [rbp+var_38] ; void *
                mov     rcx, r14
                mov     r8, rbx
                mov     r9, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                mov     r12, cs:_objc_msgSend_ptr
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                mov     r13, [rbp+var_38]

loc_100029134:                          ; CODE XREF: -[DeviceManualView setUI]+543↑j
                mov     rdi, r13
                mov     rsi, cs:selRef_device
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_details
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_type
                call    r12
                mov     r15d, eax
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                cmp     r15d, 1
                jnz     loc_100029495
                mov     rdi, r13
                mov     r14, cs:selRef_device
                mov     rsi, r14
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_pid
                mov     rdi, rax
                call    r12
                mov     rdi, r13
                mov     rsi, r14
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_vid
                mov     rdi, rax
                call    r12
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                mov     rdi, cs:classRef_NSBundle
                mov     r15, cs:selRef_mainBundle
                mov     rsi, r15
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     rbx, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_N30prof30pro1 ; "N30ProF30Pro1"
                lea     r12, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_N30prof30pro2 ; "N30ProF30Pro2"
                mov     rdi, rax        ; void *
                mov     rsi, rbx        ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r15        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_N30prof30pron3 ; "N30ProF30ProN30ProV2F30ProV23"
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_localizedStringForKey_value_table_ ; char *
                mov     rcx, r12
                xor     r8d, r8d
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ ; char *
                lea     rdx, cfstr_N30prof30proTx ; "N30ProF30Pro_tx"
                mov     rdi, [rbp+var_38] ; void *
                mov     rcx, r14
                mov     r8, rbx
                mov     r9, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, r12
                mov     r12, cs:_objc_msgSend_ptr
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                mov     r13, [rbp+var_38]
                mov     rbx, cs:selRef_mainImageView
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_100029366
                mov     rdx, cs:selRef_frame
                lea     rdi, [rbp+var_80]
                mov     rsi, r14
                call    _objc_msgSend_stret
                jmp     short loc_100029371
; ---------------------------------------------------------------------------

loc_100029366:                          ; CODE XREF: -[DeviceManualView setUI]+8A8↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_70], xmm0
                movaps  [rbp+var_80], xmm0

loc_100029371:                          ; CODE XREF: -[DeviceManualView setUI]+8BD↑j
                mov     rdi, r14
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                movaps  xmm0, cs:xmmword_10002F5D0
                movaps  [rbp+var_80], xmm0
                movaps  xmm0, cs:xmmword_10002F5E0
                movaps  [rbp+var_70], xmm0
                movaps  xmm0, [rbp+var_80]
                movaps  [rbp+var_C0], xmm0
                movaps  xmm0, [rbp+var_70]
                movaps  [rbp+var_B0], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_setFrame_ ; char *
                movaps  xmm0, [rbp+var_C0]
                movaps  xmm1, [rbp+var_B0]
                movups  [rsp+0E0h+var_D0], xmm1
                movups  [rsp+0E0h+var_E0], xmm0
                mov     rdi, rax        ; void *
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                call    r15 ; _objc_release
                movupd  xmm0, [rbp+var_80+8]
                addpd   xmm0, cs:xmmword_10002F5F0
                movapd  [rbp+var_50], xmm0
                mov     rdi, r13        ; void *
                mov     r14, cs:selRef_submainImageView
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setHidden_ ; char *
                xor     edx, edx
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rax, 406EA00000000000h
                mov     qword ptr [rbp+var_A0], rax
                movaps  xmm0, [rbp+var_50]
                movups  [rbp+var_A0+8], xmm0
                mov     rax, 4059000000000000h
                mov     [rbp+var_88], rax
                movups  xmm0, [rbp+var_A0]
                movups  xmm1, xmmword ptr [rbp-90h]
                movups  [rsp+0E0h+var_D0], xmm1
                movups  [rsp+0E0h+var_E0], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rbx
                call    r15 ; _objc_release

loc_100029495:                          ; CODE XREF: -[DeviceManualView setUI]+6E4↑j
                mov     rdi, r13
                mov     rsi, cs:selRef_device
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_details
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax
                mov     rsi, cs:selRef_type
                call    r12
                mov     r15, r12
                mov     r12d, eax
                mov     rdi, r14
                mov     rax, cs:_objc_release_ptr
                mov     r14, r13
                mov     r13, rax
                call    rax ; _objc_release
                mov     rdi, rbx
                call    r13
                mov     rdi, r14
                mov     rsi, cs:selRef_device
                call    r15
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_isManuanlViewRR
                mov     rdi, rax
                call    r15
                mov     r14d, eax
                mov     rdi, rbx
                call    r13
                cmp     r14w, 1
                sbb     r12d, 0FFFFFFFFh
                lea     eax, [r12-2]
                cmp     eax, 40h        ; switch 65 cases
                ja      loc_10002B5DC   ; jumptable 0000000100029543 default case
                                        ; jumptable 000000010002969A cases 1,4-8
                lea     rcx, off_10002B5F0
                movsxd  rax, dword ptr [rcx+rax*4]
                add     rax, rcx
                jmp     rax             ; switch jump
; ---------------------------------------------------------------------------

loc_100029545:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; -[DeviceManualView setUI]+E54↓j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 cases 40,42,47,50,56
                                        ; jumptable 00000001000298FB cases 12,14
                mov     rbx, cs:selRef_mainBundle
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_ArcadestickRr1 ; "arcadeStick_RR1"
                lea     r15, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r15
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_ArcadestickRr2 ; "arcadeStick_RR2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r15
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_ArcadestickRr3 ; "arcadeStick_RR3"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r14
                mov     r13, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_ArcadestickRrT ; "arcadeStick_RR_tx"
                mov     rdi, [rbp+var_38]
                mov     r14, [rbp+var_40]
                mov     rcx, r14
                mov     r8, r15
                mov     r9, rax
                call    r10
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                lea     eax, [r12-30h]
                cmp     eax, 9          ; switch 10 cases
                ja      loc_100029BDB   ; jumptable 000000010002969A default case
                lea     rcx, off_10002B734
                movsxd  rax, dword ptr [rcx+rax*4]
                add     rax, rcx
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rcx, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rcx
                mov     rbx, cs:selRef_mainBundle
                jmp     rax             ; switch jump
; ---------------------------------------------------------------------------

loc_10002969C:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; -[DeviceManualView setUI]+BF3↑j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 cases 46,64
                                        ; jumptable 000000010002969A case 0
                mov     r13, cs:selRef_mainBundle
                mov     rsi, r13        ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r14, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Homekey ; "HOMEKey"
                lea     rcx, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                xor     r8d, r8d
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Pro2xboxwired2 ; "Pro2XBOXWired2"
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ ; char *
                lea     rdx, cfstr_UltimatecTx ; "UltimateC_tx"
                mov     rdi, [rbp+var_38] ; void *
                mov     [rbp+var_30], rsi
                mov     rcx, rbx
                mov     r8, rax
                lea     r9, stru_10003A8B8
                call    r15 ; _objc_msgSend
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx
                mov     rbx, cs:selRef_mainBundle
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                add     r12d, 0FFFFFFCDh
                cmp     r12d, 9         ; switch 10 cases
                ja      loc_10002B5DC   ; jumptable 0000000100029543 default case
                                        ; jumptable 000000010002969A cases 1,4-8
                lea     rax, off_10002B75C
                movsxd  rcx, dword ptr [rax+r12*4]
                add     rcx, rax
                jmp     rcx             ; switch jump
; ---------------------------------------------------------------------------

loc_1000297A1:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 cases 26,44,45
                mov     rbx, cs:selRef_mainBundle
                mov     rsi, rbx        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r13
                mov     qword ptr [rbp+var_50], rax
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Lite1 ; "Lite1"
                lea     r13, stru_10003A8B8
                mov     rdi, rax
                mov     rsi, r15
                mov     rcx, r13
                xor     r8d, r8d
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_58], rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, rbx
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                lea     rdx, cfstr_Lite2 ; "Lite2"
                mov     rdi, rax
                mov     rsi, r15
                mov     rcx, r13
                xor     r8d, r8d
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, rbx
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Lite3 ; "Lite3"
                mov     rdi, rax
                mov     rsi, r15
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r14
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r14
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_LiteTx ; "lite_tx"
                mov     rdi, [rbp+var_38]
                mov     [rbp+var_30], rsi
                mov     r14, [rbp+var_58]
                mov     rcx, r14
                mov     r8, r13
                mov     r9, rax
                call    r10
                mov     rdi, r15
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                mov     rbx, cs:selRef_mainBundle
                call    cs:_objc_release_ptr
                mov     rdi, r13
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_40]
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                lea     eax, [r12-1Eh]
                cmp     eax, 0Fh        ; switch 16 cases
                ja      loc_10002B5DC   ; jumptable 0000000100029543 default case
                                        ; jumptable 000000010002969A cases 1,4-8
                lea     rcx, off_10002B6F4
                movsxd  rax, dword ptr [rcx+rax*4]
                add     rax, rcx
                jmp     rax             ; switch jump
; ---------------------------------------------------------------------------

loc_1000298FD:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 cases 31,36
                                        ; jumptable 00000001000298FB cases 3,8
                mov     rbx, cs:selRef_mainBundle
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Sn30pro1 ; "SN30Pro+1"
                lea     r15, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r15
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Sn30pro2 ; "SN30Pro+2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r15
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Sn30pro3 ; "SN30Pro+3"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r14
                mov     r13, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_Pro2Tx ; "pro2_tx"
                mov     rdi, [rbp+var_38]
                mov     r14, [rbp+var_40]
                mov     rcx, r14
                mov     r8, r15
                mov     r9, rax
                call    r10
                mov     rdi, r13
                mov     r13, cs:_objc_release_ptr
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     rdi, r15
                call    r13 ; _objc_release
                mov     rdi, [rbp+var_30]
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    r13 ; _objc_release
                cmp     r12d, 24h
                jz      loc_10002B508
                cmp     r12d, 25h
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax
                mov     rbx, cs:selRef_mainBundle
                jz      loc_10002B193   ; jumptable 00000001000298FB case 7
                jmp     loc_10002B5DC   ; jumptable 0000000100029543 default case
                                        ; jumptable 000000010002969A cases 1,4-8
; ---------------------------------------------------------------------------

loc_100029A4F:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 cases 6,19
                mov     rbx, cs:selRef_mainBundle
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Usbrr1 ; "USBRR1"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Usbrr2 ; "USBRR2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     r13, cs:_objc_release_ptr
                mov     rdx, r14
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_UsbrrTx ; "USBRR_tx"
                jmp     loc_10002AEB3
; ---------------------------------------------------------------------------

loc_100029B32:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 cases 39,41
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_100029B4B:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: __text:off_10002B6F4↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB cases 11,13
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Homekey ; "HOMEKey"
                mov     r13, rbx
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Pro2xboxwired2 ; "Pro2XBOXWired2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_UltimateTx ; "Ultimate_tx"
                jmp     loc_10002B5AC
; ---------------------------------------------------------------------------

loc_100029BDB:                          ; CODE XREF: -[DeviceManualView setUI]+BC6↑j
                cmp     r12d, 2Dh       ; jumptable 000000010002969A default case
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax
                mov     rbx, cs:selRef_mainBundle
                jz      loc_100029ED6   ; jumptable 00000001000298FB case 15
                jmp     loc_10002B5DC   ; jumptable 0000000100029543 default case
                                        ; jumptable 000000010002969A cases 1,4-8
; ---------------------------------------------------------------------------

loc_100029C03:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 57
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_100029C1C:                          ; CODE XREF: -[DeviceManualView setUI]+CF8↑j
                                        ; DATA XREF: __text:off_10002B75C↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 000000010002979F case 8
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Mdrr1 ; "MDRR1"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Mdrr2 ; "MDRR2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     r15, r14
                lea     rcx, stru_10003A8B8
                mov     rdx, rcx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_PsrrTx ; "PSRR_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_100029CE9:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 33
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_100029D02:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: __text:off_10002B6F4↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 5
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_ArcadestickRr1 ; "arcadeStick_RR1"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_ArcadestickRr2 ; "arcadeStick_RR2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r15
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_ArcadestickRr3 ; "arcadeStick_RR3"
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_ArcadestickRrT ; "arcadeStick_RR_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_100029DD3:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 29
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_100029DEC:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: __text:off_10002B6F4↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 1
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Xcloud1 ; "xCloud1"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Xcloud2 ; "xCloud2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r15
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Xcloud3 ; "xCloud3"
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_XcloudTx ; "xcloud_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_100029EBD:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 43
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_100029ED6:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; -[DeviceManualView setUI]+1151↑j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 15
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Pro2wired1 ; "Pro2Wired1"
                mov     r13, rbx
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Pro2xboxwired2 ; "Pro2XBOXWired2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_UltimateWiredT ; "Ultimate_Wired_tx"
                jmp     loc_10002B5AC
; ---------------------------------------------------------------------------

loc_100029F66:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 21
                mov     r12, cs:selRef_mainBundle
                mov     rsi, r12        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Md1  ; "MD1"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Md2  ; "MD2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rbx
                mov     rbx, rax
                lea     rdx, cfstr_Md3  ; "MD3"
                mov     rdi, rax
                mov     rsi, r13
                mov     r13, cs:_objc_release_ptr
                mov     rcx, r14
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_M30Tx ; "M30_tx"
                jmp     loc_10002AEB3
; ---------------------------------------------------------------------------

loc_10002A04B:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 28
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002A064:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: __text:off_10002B6F4↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 0
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Zero21 ; "Zero21"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Zero22 ; "Zero22"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r15
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Zero23 ; "Zero23"
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_Zero2Tx ; "zero2_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_10002A135:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 48
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002A14E:                          ; CODE XREF: -[DeviceManualView setUI]+BF3↑j
                                        ; DATA XREF: __text:off_10002B734↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 000000010002969A case 2
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Pro2wired1 ; "Pro2Wired1"
                mov     r13, rbx
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Pro2xboxwired2 ; "Pro2XBOXWired2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_UltimatecWired ; "UltimateC_Wired_tx"
                jmp     loc_10002B5AC
; ---------------------------------------------------------------------------

loc_10002A1DE:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 14
                mov     r14, cs:selRef_mainBundle
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Sn30modkit1 ; "SN30Modkit1"
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_Sn30modkit2 ; "SN30Modkit2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_Sn30modkitTx ; "SN30Modkit_tx"
                jmp     loc_10002B15F
; ---------------------------------------------------------------------------

loc_10002A280:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 38
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002A299:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: __text:off_10002B6F4↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 10
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Pro2wired1 ; "Pro2Wired1"
                mov     r13, rbx
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Pro2xboxwired2 ; "Pro2XBOXWired2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Ultimatexboxwi ; "UltimateXboxWired_tx"
                jmp     loc_10002B5AC
; ---------------------------------------------------------------------------

loc_10002A329:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 58
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002A342:                          ; CODE XREF: -[DeviceManualView setUI]+CF8↑j
                                        ; DATA XREF: __text:off_10002B75C↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 000000010002979F case 9
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Fc301 ; "FC301"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Fc302 ; "FC302"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Fc303 ; "FC303"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     r15, r14
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_MicroTx ; "Micro_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_10002A413:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 34
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax
                jmp     loc_10002B521   ; jumptable 00000001000298FB case 6
; ---------------------------------------------------------------------------

loc_10002A431:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 20
                mov     rbx, cs:selRef_mainBundle
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Mdrr1 ; "MDRR1"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Mdrr2 ; "MDRR2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     r13, cs:_objc_release_ptr
                mov     rdx, r14
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_M30rrTx ; "M30RR_tx"
                jmp     loc_10002AEB3
; ---------------------------------------------------------------------------

loc_10002A514:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 18
                mov     r14, cs:selRef_mainBundle
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Gbros1 ; "GBros1"
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_Gbros2 ; "GBros2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_GbrosTx ; "GBros_tx"
                jmp     loc_10002B15F
; ---------------------------------------------------------------------------

loc_10002A5B6:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 4
                mov     r12, cs:selRef_mainBundle
                mov     rsi, r12        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Mdrr1 ; "MDRR1"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Mdrr2 ; "MDRR2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rbx
                mov     rbx, rax
                mov     rdi, rax
                mov     rsi, r13
                mov     r13, cs:_objc_release_ptr
                mov     rdx, r14
                mov     rcx, r14
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_NesminirrTx ; "NesMiniRR_tx"
                jmp     loc_10002AEB3
; ---------------------------------------------------------------------------

loc_10002A697:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 1
                mov     r12, cs:selRef_mainBundle
                mov     rsi, r12        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Fc301 ; "FC301"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Fc302 ; "FC302"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rbx
                mov     rbx, rax
                lea     rdx, cfstr_Fc303 ; "FC303"
                mov     rdi, rax
                mov     rsi, r13
                mov     r13, cs:_objc_release_ptr
                mov     rcx, r14
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_Sn30sf30Tx ; "SN30SF30_tx"
                jmp     loc_10002AEB3
; ---------------------------------------------------------------------------

loc_10002A77C:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, [rbp+var_38] ; jumptable 0000000100029543 case 5
                mov     rsi, cs:selRef_device ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r15
                mov     r15, rax
                mov     rsi, cs:selRef_containsString_
                lea     rdx, stru_10003C4F8 ; "F"
                mov     rdi, rax
                call    r12
                test    al, al
                lea     rax, cfstr_NesrrTx ; "NESRR_tx"
                lea     rdi, cfstr_SfcrrTx ; "SFCRR_tx"
                cmovz   rdi, rax
                call    cs:_objc_retain_ptr
                mov     [rbp+var_58], rax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSBundle
                mov     r15, cs:selRef_mainBundle
                mov     rsi, r15
                mov     rbx, r12
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r14, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Mdrr1 ; "MDRR1"
                lea     r13, stru_10003A8B8
                mov     rdi, rax
                mov     rsi, r14
                mov     rcx, r13
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, r15
                mov     r12, r15
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Mdrr2 ; "MDRR2"
                mov     rdi, rax
                mov     rsi, r14
                mov     rcx, r13
                xor     r8d, r8d
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, r12
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_60], rax
                mov     rdi, rax
                mov     rsi, r14
                mov     rdx, r13
                jmp     loc_10002AA1F
; ---------------------------------------------------------------------------

loc_10002A8CE:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, [rbp+var_38] ; jumptable 0000000100029543 case 0
                mov     rsi, cs:selRef_device ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_details ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_name ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, r15
                mov     r15, rax
                mov     rsi, cs:selRef_containsString_
                lea     rdx, stru_10003C4F8 ; "F"
                mov     rdi, rax
                call    r12
                test    al, al
                lea     rax, cfstr_N30Tx ; "N30_tx"
                lea     rdi, cfstr_F30Tx ; "F30_tx"
                cmovz   rdi, rax
                call    cs:_objc_retain_ptr
                mov     [rbp+var_58], rax
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, rbx
                call    r15 ; _objc_release
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSBundle
                mov     r15, cs:selRef_mainBundle
                mov     rsi, r15
                mov     rbx, r12
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r14, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Fc301 ; "FC301"
                lea     r13, stru_10003A8B8
                mov     rdi, rax
                mov     rsi, r14
                mov     rcx, r13
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, r15
                mov     r12, r15
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Fc302 ; "FC302"
                mov     rdi, rax
                mov     rsi, r14
                mov     rcx, r13
                xor     r8d, r8d
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle
                mov     rsi, r12
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_60], rax
                lea     rdx, cfstr_Fc303 ; "FC303"
                mov     rdi, rax
                mov     rsi, r14

loc_10002AA1F:                          ; CODE XREF: -[DeviceManualView setUI]+1E22↑j
                mov     rcx, r13
                mov     r13, cs:_objc_release_ptr
                xor     r8d, r8d
                call    rbx
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, rbx
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     rdi, [rbp+var_38]
                mov     r12, [rbp+var_58]
                mov     rdx, r12
                mov     rbx, [rbp+var_40]
                mov     rcx, rbx
                mov     r8, r15
                mov     r9, rax
                call    r10
                mov     rdi, r12
                call    r13 ; _objc_release
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, [rbp+var_60]
                call    r13 ; _objc_release
                mov     r13, [rbp+var_30]
                mov     r12, rbx
                jmp     loc_10002B5C0
; ---------------------------------------------------------------------------

loc_10002AA7D:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 8
                mov     r12, cs:selRef_mainBundle
                mov     rsi, r12        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Fc301 ; "FC301"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Fc302 ; "FC302"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rbx
                mov     rbx, rax
                lea     rdx, cfstr_Fc303 ; "FC303"
                mov     rdi, rax
                mov     rsi, r13
                mov     r13, cs:_objc_release_ptr
                mov     rcx, r14
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_N64Tx ; "N64_tx"
                jmp     loc_10002AEB3
; ---------------------------------------------------------------------------

loc_10002AB62:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 49
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002AB7B:                          ; CODE XREF: -[DeviceManualView setUI]+BF3↑j
                                        ; -[DeviceManualView setUI]+CF8↑j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 000000010002969A case 3
                                        ; jumptable 000000010002979F case 0
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Xcloud1 ; "xCloud1"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Arcadestickxbo_0 ; "arcadeStickXbox2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Arcadestick3 ; "arcadeStick3"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     r15, r14
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_Arcadestickxbo ; "arcadeStickXbox_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_10002AC4C:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 3
                mov     r12, cs:selRef_mainBundle
                mov     rsi, r12        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Snprosfpro1 ; "SNProSFPro1"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Snprosfpro2 ; "SNProSFPro2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rbx
                mov     rbx, rax
                lea     rdx, cfstr_Snprosfpro3 ; "SNProSFPro3"
                mov     rdi, rax
                mov     rsi, r13
                mov     r13, cs:_objc_release_ptr
                mov     rcx, r14
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_NesjoyNimiTx ; "nesjoy_nimi_tx"
                jmp     loc_10002AEB3
; ---------------------------------------------------------------------------

loc_10002AD31:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 22
                mov     r14, cs:selRef_mainBundle
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Psmodkit1 ; "PSModkit1"
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_Psmodkit2 ; "PSModkit2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_PsmodkitTx ; "PSModkit_tx"
                jmp     loc_10002B15F
; ---------------------------------------------------------------------------

loc_10002ADD3:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 23
                mov     r12, cs:selRef_mainBundle
                mov     rsi, r12        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     qword ptr [rbp+var_50], rax
                mov     r13, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_Sn30pro1 ; "SN30Pro+1"
                lea     r14, stru_10003A8B8
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                lea     rdx, cfstr_Sn30pro2 ; "SN30Pro+2"
                mov     rdi, rax        ; void *
                mov     rsi, r13        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r12        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rbx
                mov     rbx, rax
                lea     rdx, cfstr_Sn30pro3 ; "SN30Pro+3"
                mov     rdi, rax
                mov     rsi, r13
                mov     r13, cs:_objc_release_ptr
                mov     rcx, r14
                xor     r8d, r8d
                call    r12
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_Sn30pro ; "SN30Pro+"

loc_10002AEB3:                          ; CODE XREF: -[DeviceManualView setUI]+1086↑j
                                        ; -[DeviceManualView setUI]+159F↑j ...
                mov     rdi, [rbp+var_38]
                mov     r12, [rbp+var_40]
                mov     rcx, r12
                mov     r8, r15
                mov     r9, rax
                call    r10
                mov     rdi, r14
                call    r13 ; _objc_release
                mov     rdi, rbx
                call    r13 ; _objc_release
                mov     r13, [rbp+var_30]
                jmp     loc_10002B5C0
; ---------------------------------------------------------------------------

loc_10002AEDC:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 13
                mov     r14, cs:selRef_mainBundle
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_N30modkit1 ; "N30Modkit1"
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_N30modkit2 ; "N30Modkit2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_N30modkitTx ; "N30Modkit_tx"
                jmp     loc_10002B15F
; ---------------------------------------------------------------------------

loc_10002AF7E:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 12
                mov     r14, cs:selRef_mainBundle
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_M30modkit1 ; "M30Modkit1"
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_M30modkit2 ; "M30Modkit2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_M30modkitTx ; "M30Modkit_tx"
                jmp     loc_10002B15F
; ---------------------------------------------------------------------------

loc_10002B020:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 25
                mov     r14, cs:selRef_mainBundle
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_S30modkit1 ; "S30Modkit1"
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_S30modkit2 ; "S30Modkit2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                lea     rdx, cfstr_SsdTx ; "ssd_tx"
                jmp     loc_10002B15F
; ---------------------------------------------------------------------------

loc_10002B0C2:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 0000000100029543 case 24
                mov     r14, cs:selRef_mainBundle
                mov     rsi, r14        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                lea     rdx, cfstr_N30modkit1 ; "N30Modkit1"
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r14        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                lea     rdx, cfstr_N30modkit2 ; "N30Modkit2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rsi, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ ; char *
                lea     rdx, cfstr_DogboneTx ; "dogbone_tx"

loc_10002B15F:                          ; CODE XREF: -[DeviceManualView setUI]+17D4↑j
                                        ; -[DeviceManualView setUI]+1B0A↑j ...
                mov     rdi, [rbp+var_38] ; void *
                mov     rcx, r13
                mov     r8, rax
                mov     r9, rbx
                call    r12 ; _objc_msgSend
                mov     r12, r13
                mov     r13, r14
                jmp     loc_10002B5C0
; ---------------------------------------------------------------------------

loc_10002B17A:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 35
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002B193:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; -[DeviceManualView setUI]+F9D↑j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 7
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Pro2wired1 ; "Pro2Wired1"
                mov     r13, rbx
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Pro2wired2 ; "Pro2Wired2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_ProwiredTx ; "proWired_tx"
                jmp     loc_10002B5AC
; ---------------------------------------------------------------------------

loc_10002B223:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 32
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002B23C:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: __text:off_10002B6F4↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 4
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Arcadestick1 ; "arcadeStick1"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Arcadestick2 ; "arcadeStick2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r15
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Arcadestick3 ; "arcadeStick3"
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_ArcadestickTx ; "arcadeStick_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_10002B30D:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 37
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002B326:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; DATA XREF: __text:off_10002B6F4↓o
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 9
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Usbrr1 ; "USBRR1"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Usbrr2 ; "USBRR2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, r15
                mov     r15, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                lea     rcx, stru_10003A8B8
                mov     rdx, rcx
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_UsbrrTx ; "USBRR_tx"
                jmp     loc_10002B4D8
; ---------------------------------------------------------------------------

loc_10002B3F3:                          ; CODE XREF: -[DeviceManualView setUI]+A9C↑j
                                        ; DATA XREF: __text:off_10002B5F0↓o
                mov     rbx, cs:selRef_mainBundle ; jumptable 0000000100029543 case 55
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax

loc_10002B40C:                          ; CODE XREF: -[DeviceManualView setUI]+BF3↑j
                                        ; -[DeviceManualView setUI]+CF8↑j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 000000010002969A case 9
                                        ; jumptable 000000010002979F case 6
                mov     rsi, rbx        ; char *
                mov     r12, cs:_objc_msgSend_ptr
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Fc301 ; "FC301"
                lea     r14, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_40], rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Fc302 ; "FC302"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, r14
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, rbx        ; char *
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                lea     rdx, cfstr_Fc303 ; "FC303"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     r15, r14
                lea     rcx, stru_10003A8B8
                xor     r8d, r8d
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r10, r12
                mov     r14, rax
                lea     rdx, cfstr_NeogeoTx ; "NeoGeo_tx"

loc_10002B4D8:                          ; CODE XREF: -[DeviceManualView setUI]+123D↑j
                                        ; -[DeviceManualView setUI]+1327↑j ...
                mov     rdi, [rbp+var_38]
                mov     rsi, [rbp+var_30]
                mov     r12, [rbp+var_40]
                mov     rcx, r12
                mov     r8, r15
                mov     r9, rax
                call    r10
                mov     rdi, r14
                mov     r14, cs:_objc_release_ptr
                call    r14 ; _objc_release
                mov     rdi, rbx
                call    r14 ; _objc_release
                jmp     loc_10002B5C0
; ---------------------------------------------------------------------------

loc_10002B508:                          ; CODE XREF: -[DeviceManualView setUI]+F7A↑j
                mov     r15, cs:selRef_localizedStringForKey_value_table_
                mov     rax, cs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                mov     [rbp+var_30], rax
                mov     rbx, cs:selRef_mainBundle

loc_10002B521:                          ; CODE XREF: -[DeviceManualView setUI]+E54↑j
                                        ; -[DeviceManualView setUI]+1985↑j
                                        ; DATA XREF: ...
                mov     rdi, cs:classRef_NSBundle ; jumptable 00000001000298FB case 6
                mov     rsi, rbx        ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                lea     rdx, cfstr_Pro2wired1 ; "Pro2Wired1"
                mov     r13, rbx
                lea     rbx, stru_10003A8B8
                mov     qword ptr [rbp+var_50], rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, cs:classRef_NSBundle ; void *
                mov     rsi, r13        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                lea     rdx, cfstr_Pro2xboxwired2 ; "Pro2XBOXWired2"
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rcx, rbx
                xor     r8d, r8d
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                lea     rdx, cfstr_Pro2xboxwiredT ; "pro2XboxWired_tx"

loc_10002B5AC:                          ; CODE XREF: -[DeviceManualView setUI]+112F↑j
                                        ; -[DeviceManualView setUI]+14BA↑j ...
                mov     rdi, [rbp+var_38] ; void *
                mov     rsi, [rbp+var_30] ; char *
                mov     rcx, r12
                mov     r8, rax
                mov     r9, rbx
                call    r14 ; _objc_msgSend

loc_10002B5C0:                          ; CODE XREF: -[DeviceManualView setUI]+1FD1↑j
                                        ; -[DeviceManualView setUI]+2430↑j ...
                mov     rdi, r15
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, qword ptr [rbp+var_50]
                call    rbx ; _objc_release

loc_10002B5DC:                          ; CODE XREF: -[DeviceManualView setUI]+A88↑j
                                        ; -[DeviceManualView setUI]+A9C↑j ...
                add     rsp, 0B8h       ; jumptable 0000000100029543 default case
                                        ; jumptable 000000010002969A cases 1,4-8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__DeviceManualView_setUI_ endp

; ---------------------------------------------------------------------------
                align 10h
off_10002B5F0   dd offset loc_10002A8CE - 10002B5F0h, offset loc_10002A697 - 10002B5F0h
                                        ; DATA XREF: -[DeviceManualView setUI]+A8E↑o
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_10002AC4C - 10002B5F0h ; jump table for switch statement
                dd offset loc_10002A5B6 - 10002B5F0h, offset loc_10002A77C - 10002B5F0h
                dd offset loc_100029A4F - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002AA7D - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002AF7E - 10002B5F0h, offset loc_10002AEDC - 10002B5F0h
                dd offset loc_10002A1DE - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002A514 - 10002B5F0h, offset loc_100029A4F - 10002B5F0h
                dd offset loc_10002A431 - 10002B5F0h, offset loc_100029F66 - 10002B5F0h
                dd offset loc_10002AD31 - 10002B5F0h, offset loc_10002ADD3 - 10002B5F0h
                dd offset loc_10002B0C2 - 10002B5F0h, offset loc_10002B020 - 10002B5F0h
                dd offset loc_1000297A1 - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002A04B - 10002B5F0h, offset loc_100029DD3 - 10002B5F0h
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_1000298FD - 10002B5F0h
                dd offset loc_10002B223 - 10002B5F0h, offset loc_100029CE9 - 10002B5F0h
                dd offset loc_10002A413 - 10002B5F0h, offset loc_10002B17A - 10002B5F0h
                dd offset loc_1000298FD - 10002B5F0h, offset loc_10002B30D - 10002B5F0h
                dd offset loc_10002A280 - 10002B5F0h, offset loc_100029B32 - 10002B5F0h
                dd offset loc_100029545 - 10002B5F0h, offset loc_100029B32 - 10002B5F0h
                dd offset loc_100029545 - 10002B5F0h, offset loc_100029EBD - 10002B5F0h
                dd offset loc_1000297A1 - 10002B5F0h, offset loc_1000297A1 - 10002B5F0h
                dd offset loc_10002969C - 10002B5F0h, offset loc_100029545 - 10002B5F0h
                dd offset loc_10002A135 - 10002B5F0h, offset loc_10002AB62 - 10002B5F0h
                dd offset loc_100029545 - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_10002B3F3 - 10002B5F0h
                dd offset loc_100029545 - 10002B5F0h, offset loc_100029C03 - 10002B5F0h
                dd offset loc_10002A329 - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002B5DC - 10002B5F0h, offset loc_10002B5DC - 10002B5F0h
                dd offset loc_10002969C - 10002B5F0h
off_10002B6F4   dd offset loc_10002A064 - 10002B6F4h
                                        ; DATA XREF: -[DeviceManualView setUI]+E46↑o
                dd offset loc_100029DEC - 10002B6F4h ; jump table for switch statement
                dd offset loc_10002B5DC - 10002B6F4h
                dd offset loc_1000298FD - 10002B6F4h
                dd offset loc_10002B23C - 10002B6F4h
                dd offset loc_100029D02 - 10002B6F4h
                dd offset loc_10002B521 - 10002B6F4h
                dd offset loc_10002B193 - 10002B6F4h
                dd offset loc_1000298FD - 10002B6F4h
                dd offset loc_10002B326 - 10002B6F4h
                dd offset loc_10002A299 - 10002B6F4h
                dd offset loc_100029B4B - 10002B6F4h
                dd offset loc_100029545 - 10002B6F4h
                dd offset loc_100029B4B - 10002B6F4h
                dd offset loc_100029545 - 10002B6F4h
                dd offset loc_100029ED6 - 10002B6F4h
off_10002B734   dd offset loc_10002969C - 10002B734h
                                        ; DATA XREF: -[DeviceManualView setUI]+BCC↑o
                dd offset loc_10002B5DC - 10002B734h ; jump table for switch statement
                dd offset loc_10002A14E - 10002B734h
                dd offset loc_10002AB7B - 10002B734h
                dd offset loc_10002B5DC - 10002B734h
                dd offset loc_10002B5DC - 10002B734h
                dd offset loc_10002B5DC - 10002B734h
                dd offset loc_10002B5DC - 10002B734h
                dd offset loc_10002B5DC - 10002B734h
                dd offset loc_10002B40C - 10002B734h
off_10002B75C   dd offset loc_10002AB7B - 10002B75Ch
                                        ; DATA XREF: -[DeviceManualView setUI]+CEA↑o
                dd offset loc_10002B5DC - 10002B75Ch ; jump table for switch statement
                dd offset loc_10002B5DC - 10002B75Ch
                dd offset loc_10002B5DC - 10002B75Ch
                dd offset loc_10002B5DC - 10002B75Ch
                dd offset loc_10002B5DC - 10002B75Ch
                dd offset loc_10002B40C - 10002B75Ch
                dd offset loc_10002B5DC - 10002B75Ch
                dd offset loc_100029C1C - 10002B75Ch
                dd offset loc_10002A342 - 10002B75Ch

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:](DeviceManualView *self, SEL, id, id, id, id)
__DeviceManualView_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel__ proc near
                                        ; DATA XREF: __objc_const:0000000100045D60↓o

var_2C0         = xmmword ptr -2C0h
var_2B0         = xmmword ptr -2B0h
var_2A0         = xmmword ptr -2A0h
var_290         = xmmword ptr -290h
var_280         = xmmword ptr -280h
var_270         = xmmword ptr -270h
var_260         = xmmword ptr -260h
var_250         = xmmword ptr -250h
var_240         = xmmword ptr -240h
var_230         = xmmword ptr -230h
var_220         = xmmword ptr -220h
var_210         = xmmword ptr -210h
var_200         = xmmword ptr -200h
var_1F0         = xmmword ptr -1F0h
var_1E0         = xmmword ptr -1E0h
var_1D0         = xmmword ptr -1D0h
var_1C0         = xmmword ptr -1C0h
var_1B0         = xmmword ptr -1B0h
var_1A0         = xmmword ptr -1A0h
var_190         = xmmword ptr -190h
var_180         = xmmword ptr -180h
var_170         = xmmword ptr -170h
var_160         = xmmword ptr -160h
var_150         = xmmword ptr -150h
var_140         = xmmword ptr -140h
var_130         = xmmword ptr -130h
var_120         = xmmword ptr -120h
var_110         = xmmword ptr -110h
var_100         = xmmword ptr -100h
var_F0          = xmmword ptr -0F0h
var_E0          = xmmword ptr -0E0h
var_D0          = xmmword ptr -0D0h
var_C0          = xmmword ptr -0C0h
var_B0          = xmmword ptr -0B0h
var_A0          = qword ptr -0A0h
var_98          = xmmword ptr -98h
var_88          = xmmword ptr -88h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = xmmword ptr -40h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 298h
                mov     r14, r8
                mov     rbx, rcx
                mov     r12, rdx
                mov     r15, rdi
                mov     [rbp+var_A0], rdi
                mov     r13, cs:_objc_retain_ptr
                mov     rdi, r9
                call    r13 ; _objc_retain
                mov     qword ptr [rbp+var_40], rax
                mov     rdi, r14
                call    r13 ; _objc_retain
                mov     qword ptr [rbp+var_70], rax
                mov     rdi, rbx
                call    r13 ; _objc_retain
                mov     [rbp+var_50], rax
                mov     rdi, r12
                call    r13 ; _objc_retain
                mov     r12, rax
                mov     rbx, cs:_objc_msgSend_ptr
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_mainImageView ; char *
                call    rbx ; _objc_msgSend ; -[DeviceManualView mainImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSImage ; void *
                mov     rsi, cs:selRef_imageNamed_ ; char *
                mov     rdx, r12
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rsi, cs:selRef_setImage_ ; char *
                mov     rdi, r13        ; void *
                mov     rdx, r14
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     r12, r15
                mov     rsi, cs:selRef_oneHintLabel ; char *
                mov     r13, [rbp+var_A0]
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     rdi, rax        ; void *
                mov     r15, [rbp+var_50]
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, r14
                call    r12
                mov     rsi, cs:selRef_twoHintLabel ; char *
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend ; -[DeviceManualView twoHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     r15, qword ptr [rbp+var_70]
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, r14
                call    r12
                mov     rsi, cs:selRef_threeHintLabel ; char *
                mov     rdi, r13        ; void *
                call    rbx ; _objc_msgSend ; -[DeviceManualView threeHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setStringValue_ ; char *
                mov     r15, qword ptr [rbp+var_40]
                mov     rdx, r15
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, r14
                call    r12
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_oneHintLabel ; char *
                call    rbx ; _objc_msgSend ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r14, cs:selRef_sizeToFit
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_twoHintLabel ; char *
                call    rbx ; _objc_msgSend ; -[DeviceManualView twoHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_threeHintLabel ; char *
                call    rbx ; _objc_msgSend ; -[DeviceManualView threeHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    rbx ; _objc_msgSend
                mov     rdi, r15
                call    r12
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_oneHintLabel ; char *
                mov     r12, rsi
                call    rbx ; _objc_msgSend ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002B99F
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_2A0]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10002B9B3
; ---------------------------------------------------------------------------

loc_10002B99F:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+1F8↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_290], xmm0
                movaps  [rbp+var_2A0], xmm0
                xorps   xmm0, xmm0

loc_10002B9B3:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+219↑j
                movsd   qword ptr [rbp+var_40], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_twoHintLabel ; char *
                call    cs:_objc_msgSend_ptr ; -[DeviceManualView twoHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                mov     rbx, r12
                jz      short loc_10002BA05
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_280]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10002BA19
; ---------------------------------------------------------------------------

loc_10002BA05:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+25E↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_270], xmm0
                movaps  [rbp+var_280], xmm0
                xorps   xmm0, xmm0

loc_10002BA19:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+27F↑j
                movsd   qword ptr [rbp+var_70], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr
                movsd   xmm0, qword ptr [rbp+var_70]
                ucomisd xmm0, qword ptr [rbp+var_40]
                jbe     short loc_10002BA9A
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_twoHintLabel ; char *
                call    cs:_objc_msgSend_ptr ; -[DeviceManualView twoHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002BA74
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_260]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10002BA8C
; ---------------------------------------------------------------------------

loc_10002BA74:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+2CD↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_250], xmm0
                movapd  [rbp+var_260], xmm0
                xorpd   xmm0, xmm0

loc_10002BA8C:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+2EE↑j
                movsd   qword ptr [rbp+var_40], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr

loc_10002BA9A:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+2AD↑j
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_threeHintLabel ; char *
                call    cs:_objc_msgSend_ptr ; -[DeviceManualView threeHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002BADB
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_240]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10002BAF3
; ---------------------------------------------------------------------------

loc_10002BADB:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+334↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_230], xmm0
                movapd  [rbp+var_240], xmm0
                xorpd   xmm0, xmm0

loc_10002BAF3:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+355↑j
                movsd   qword ptr [rbp+var_70], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr
                movsd   xmm1, qword ptr [rbp+var_40]
                movsd   xmm0, qword ptr [rbp+var_70]
                ucomisd xmm0, xmm1
                jbe     short loc_10002BB7D
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_threeHintLabel ; char *
                call    cs:_objc_msgSend_ptr ; -[DeviceManualView threeHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002BB52
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_220]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10002BB6A
; ---------------------------------------------------------------------------

loc_10002BB52:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+3AB↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_210], xmm0
                movapd  [rbp+var_220], xmm0
                xorpd   xmm0, xmm0

loc_10002BB6A:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+3CC↑j
                movsd   qword ptr [rbp+var_40], xmm0
                mov     rdi, r14
                call    cs:_objc_release_ptr
                movsd   xmm1, qword ptr [rbp+var_40]

loc_10002BB7D:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+38B↑j
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView_m_widht ; double m_widht;
                movsd   xmm0, qword ptr [r13+rax+0]
                subsd   xmm0, xmm1
                mulsd   xmm0, cs:qword_10002F058
                cvttpd2dq xmm0, xmm0
                cvtdq2pd xmm0, xmm0
                movaps  [rbp+var_70], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_mainImageView ; char *
                call    cs:_objc_msgSend_ptr ; -[DeviceManualView mainImageView]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     qword ptr [rbp+var_40], rax
                jz      short loc_10002BBEF
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_200]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                cvttsd2si eax, qword ptr [r14+8]
                add     eax, 0FFFFFFC4h
                xorps   xmm0, xmm0
                cvtsi2sd xmm0, eax
                jmp     short loc_10002BC08
; ---------------------------------------------------------------------------

loc_10002BBEF:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+43E↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_1F0], xmm0
                movaps  [rbp+var_200], xmm0
                movsd   xmm0, cs:qword_10002F060

loc_10002BC08:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+469↑j
                movsd   [rbp+var_50], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002BC4A
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_1E0]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10002BC62
; ---------------------------------------------------------------------------

loc_10002BC4A:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+4A3↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_1D0], xmm0
                movapd  [rbp+var_1E0], xmm0
                xorpd   xmm0, xmm0

loc_10002BC62:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+4C4↑j
                movsd   [rbp+var_58], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10002BCA5
                mov     rdx, cs:selRef_frame
                lea     r12, [rbp+var_1C0]
                mov     rdi, r12
                mov     rsi, r15
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r12+18h]
                jmp     short loc_10002BCBD
; ---------------------------------------------------------------------------

loc_10002BCA5:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+4FD↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_1B0], xmm0
                movapd  [rbp+var_1C0], xmm0
                xorpd   xmm0, xmm0

loc_10002BCBD:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+51F↑j
                movsd   [rbp+var_48], xmm0
                mov     rdi, r13        ; void *
                mov     rsi, rbx        ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend ; -[DeviceManualView oneHintLabel]
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                movaps  xmm0, [rbp+var_70]
                movsd   qword ptr [rbp+var_98], xmm0
                movsd   xmm0, [rbp+var_50]
                movsd   qword ptr [rbp+var_98+8], xmm0
                movsd   xmm0, [rbp+var_58]
                movsd   qword ptr [rbp+var_88], xmm0
                movsd   xmm0, [rbp+var_48]
                movsd   qword ptr [rbp+var_88+8], xmm0
                mov     rsi, cs:selRef_setFrame_ ; char *
                movupd  xmm0, [rbp+var_98]
                movups  xmm1, [rbp+var_88]
                movups  [rsp+2C0h+var_2B0], xmm1
                movupd  [rsp+2C0h+var_2C0], xmm0
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     r13, rbx
                mov     rdi, r12
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, qword ptr [rbp+var_40]
                call    rbx ; _objc_release
                mov     rbx, [rbp+var_A0]
                mov     rdi, rbx
                mov     rsi, cs:selRef_oneHintLabel
                call    r13
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_50], rax
                jz      short loc_10002BD9E
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_1A0]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+8]
                cvttpd2dq xmm0, xmm0
                cvtdq2pd xmm0, xmm0
                jmp     short loc_10002BDB6
; ---------------------------------------------------------------------------

loc_10002BD9E:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+5EF↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_190], xmm0
                movapd  [rbp+var_1A0], xmm0
                xorpd   xmm0, xmm0

loc_10002BDB6:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+618↑j
                movapd  [rbp+var_40], xmm0
                mov     r12, cs:selRef_twoHintLabel
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_58], rax
                jz      short loc_10002BE00
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_180]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                jmp     short loc_10002BE18
; ---------------------------------------------------------------------------

loc_10002BE00:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+659↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_170], xmm0
                movapd  [rbp+var_180], xmm0
                xorpd   xmm0, xmm0

loc_10002BE18:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+67A↑j
                movapd  xmm1, [rbp+var_40]
                subsd   xmm1, xmm0
                movapd  [rbp+var_40], xmm1
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002BE63
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_160]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+10h]
                jmp     short loc_10002BE7B
; ---------------------------------------------------------------------------

loc_10002BE63:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+6BC↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_150], xmm0
                movapd  [rbp+var_160], xmm0
                xorpd   xmm0, xmm0

loc_10002BE7B:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+6DD↑j
                movsd   [rbp+var_48], xmm0
                movapd  xmm0, [rbp+var_40]
                addsd   xmm0, cs:qword_10002F098
                movapd  [rbp+var_40], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10002BEDC
                mov     rdx, cs:selRef_frame
                lea     r12, [rbp+var_140]
                mov     rdi, r12
                mov     rsi, r15
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r12+18h]
                movsd   [rbp+var_78], xmm0
                mov     r12, cs:selRef_twoHintLabel
                jmp     short loc_10002BEF9
; ---------------------------------------------------------------------------

loc_10002BEDC:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+728↑j
                xorpd   xmm0, xmm0
                movapd  [rbp+var_130], xmm0
                movapd  [rbp+var_140], xmm0
                xorpd   xmm0, xmm0
                movsd   [rbp+var_78], xmm0

loc_10002BEF9:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+756↑j
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, r13
                mov     r13, r12
                mov     r12, rax
                movaps  xmm0, [rbp+var_70]
                movsd   qword ptr [rbp+var_98], xmm0
                movaps  xmm0, [rbp+var_40]
                movsd   qword ptr [rbp+var_98+8], xmm0
                movsd   xmm0, [rbp+var_48]
                movsd   qword ptr [rbp+var_88], xmm0
                movsd   xmm0, [rbp+var_78]
                movsd   qword ptr [rbp+var_88+8], xmm0
                movups  xmm0, [rbp+var_98]
                movups  xmm1, [rbp+var_88]
                movups  [rsp+2C0h+var_2B0], xmm1
                movups  [rsp+2C0h+var_2C0], xmm0
                mov     rdi, rax
                mov     rsi, cs:selRef_setFrame_
                call    rcx
                mov     rdi, r12
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_58]
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_50]
                call    rbx ; _objc_release
                mov     rbx, [rbp+var_A0]
                mov     rdi, rbx        ; void *
                mov     rsi, r13        ; char *
                mov     rax, cs:_objc_msgSend_ptr
                call    rax ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                test    rax, rax
                mov     [rbp+var_50], rax
                jz      short loc_10002BFDE
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_120]
                mov     rdi, r14
                mov     rsi, rax
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+8]
                cvttpd2dq xmm0, xmm0
                cvtdq2pd xmm0, xmm0
                jmp     short loc_10002BFF2
; ---------------------------------------------------------------------------

loc_10002BFDE:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+82F↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_110], xmm0
                movaps  [rbp+var_120], xmm0
                xorps   xmm0, xmm0

loc_10002BFF2:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+858↑j
                movaps  [rbp+var_40], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_threeHintLabel ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                test    rax, rax
                jz      short loc_10002C037
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_100]
                mov     rdi, r14
                mov     rsi, r12
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+18h]
                jmp     short loc_10002C04B
; ---------------------------------------------------------------------------

loc_10002C037:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+890↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_F0], xmm0
                movaps  [rbp+var_100], xmm0
                xorps   xmm0, xmm0

loc_10002C04B:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+8B1↑j
                movsd   [rbp+var_58], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_threeHintLabel ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    rax, rax
                jz      short loc_10002C091
                mov     rdx, cs:selRef_frame
                lea     r14, [rbp+var_E0]
                mov     rdi, r14
                mov     rsi, r13
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r14+10h]
                jmp     short loc_10002C0A5
; ---------------------------------------------------------------------------

loc_10002C091:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+8EA↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_D0], xmm0
                movaps  [rbp+var_E0], xmm0
                xorps   xmm0, xmm0

loc_10002C0A5:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+90B↑j
                movsd   [rbp+var_48], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_threeHintLabel ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002C0EB
                mov     rdx, cs:selRef_frame
                lea     r15, [rbp+var_C0]
                mov     rdi, r15
                mov     rsi, r14
                call    _objc_msgSend_stret
                movsd   xmm0, qword ptr [r15+18h]
                jmp     short loc_10002C0FF
; ---------------------------------------------------------------------------

loc_10002C0EB:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+944↑j
                xorps   xmm0, xmm0
                movaps  [rbp+var_B0], xmm0
                movaps  [rbp+var_C0], xmm0
                xorps   xmm0, xmm0

loc_10002C0FF:                          ; CODE XREF: -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+965↑j
                movsd   [rbp+var_78], xmm0
                movapd  xmm0, [rbp+var_40]
                subsd   xmm0, [rbp+var_58]
                addsd   xmm0, cs:qword_10002F098
                movapd  [rbp+var_40], xmm0
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_threeHintLabel ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                movaps  xmm0, [rbp+var_70]
                movsd   qword ptr [rbp+var_98], xmm0
                movaps  xmm0, [rbp+var_40]
                movsd   qword ptr [rbp+var_98+8], xmm0
                movsd   xmm0, [rbp+var_48]
                movsd   qword ptr [rbp+var_88], xmm0
                movsd   xmm0, [rbp+var_78]
                movsd   qword ptr [rbp+var_88+8], xmm0
                movups  xmm0, [rbp+var_98]
                movups  xmm1, [rbp+var_88]
                movups  [rsp+2C0h+var_2B0], xmm1
                movups  [rsp+2C0h+var_2C0], xmm0
                mov     rdi, rax        ; void *
                mov     rsi, cs:selRef_setFrame_ ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                call    rbx ; _objc_release
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r12
                call    rbx ; _objc_release
                mov     rdi, [rbp+var_50]
                call    rbx ; _objc_release
                add     rsp, 298h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__DeviceManualView_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setError:](DeviceManualView *self, SEL, char)
__DeviceManualView_setError__ proc near ; DATA XREF: __objc_const:0000000100045D78↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__error ; char _error;
                mov     [rdi+rax], dl
                pop     rbp
                retn
__DeviceManualView_setError__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; S8BitdoDevice *__cdecl -[DeviceManualView device](DeviceManualView *self, SEL)
__DeviceManualView_device_ proc near    ; DATA XREF: __objc_const:0000000100045D90↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__device ; S8BitdoDevice *_device;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_device_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setDevice:](DeviceManualView *self, SEL, id)
__DeviceManualView_setDevice__ proc near
                                        ; DATA XREF: __objc_const:0000000100045DA8↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__device ; S8BitdoDevice *_device;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setDevice__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[DeviceManualView error](DeviceManualView *self, SEL)
__DeviceManualView_error_ proc near     ; CODE XREF: -[DeviceManualView layout]+196↑P
                                        ; DATA XREF: __objc_const:0000000100045DC0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__error ; char _error;
                movsx   eax, byte ptr [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_error_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSImageView *__cdecl -[DeviceManualView mainImageView](DeviceManualView *self, SEL)
__DeviceManualView_mainImageView_ proc near
                                        ; CODE XREF: -[DeviceManualView layout]+CF↑P
                                        ; -[DeviceManualView layout]+129↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__mainImageView ; NSImageView *_mainImageView;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_mainImageView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setMainImageView:](DeviceManualView *self, SEL, id)
__DeviceManualView_setMainImageView__ proc near
                                        ; CODE XREF: -[DeviceManualView initWithFrame:]+82↑P
                                        ; DATA XREF: __objc_const:0000000100045DF0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__mainImageView ; NSImageView *_mainImageView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setMainImageView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[DeviceManualView oneHintLabel](DeviceManualView *self, SEL)
__DeviceManualView_oneHintLabel_ proc near
                                        ; CODE XREF: -[DeviceManualView layout]+1AE↑P
                                        ; -[DeviceManualView layout]+204↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__oneHintLabel ; SLabel *_oneHintLabel;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_oneHintLabel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setOneHintLabel:](DeviceManualView *self, SEL, id)
__DeviceManualView_setOneHintLabel__ proc near
                                        ; DATA XREF: __objc_const:0000000100045E20↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__oneHintLabel ; SLabel *_oneHintLabel;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setOneHintLabel__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[DeviceManualView twoHintLabel](DeviceManualView *self, SEL)
__DeviceManualView_twoHintLabel_ proc near
                                        ; CODE XREF: -[DeviceManualView layout]+2C9↑P
                                        ; -[DeviceManualView setUI]+9B↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__twoHintLabel ; SLabel *_twoHintLabel;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_twoHintLabel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setTwoHintLabel:](DeviceManualView *self, SEL, id)
__DeviceManualView_setTwoHintLabel__ proc near
                                        ; DATA XREF: __objc_const:0000000100045E50↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__twoHintLabel ; SLabel *_twoHintLabel;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setTwoHintLabel__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[DeviceManualView threeHintLabel](DeviceManualView *self, SEL)
__DeviceManualView_threeHintLabel_ proc near
                                        ; CODE XREF: -[DeviceManualView layout]+31F↑P
                                        ; -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]+139↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__threeHintLabel ; SLabel *_threeHintLabel;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_threeHintLabel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setThreeHintLabel:](DeviceManualView *self, SEL, id)
__DeviceManualView_setThreeHintLabel__ proc near
                                        ; DATA XREF: __objc_const:0000000100045E80↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__threeHintLabel ; SLabel *_threeHintLabel;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setThreeHintLabel__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSImageView *__cdecl -[DeviceManualView subImageView](DeviceManualView *self, SEL)
__DeviceManualView_subImageView_ proc near
                                        ; DATA XREF: __objc_const:0000000100045E98↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__subImageView ; NSImageView *_subImageView;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_subImageView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setSubImageView:](DeviceManualView *self, SEL, id)
__DeviceManualView_setSubImageView__ proc near
                                        ; DATA XREF: __objc_const:0000000100045EB0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__subImageView ; NSImageView *_subImageView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setSubImageView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSImageView *__cdecl -[DeviceManualView submainImageView](DeviceManualView *self, SEL)
__DeviceManualView_submainImageView_ proc near
                                        ; DATA XREF: __objc_const:0000000100045EC8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__submainImageView ; NSImageView *_submainImageView;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_submainImageView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setSubmainImageView:](DeviceManualView *self, SEL, id)
__DeviceManualView_setSubmainImageView__ proc near
                                        ; DATA XREF: __objc_const:0000000100045EE0↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__submainImageView ; NSImageView *_submainImageView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setSubmainImageView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSImageView *__cdecl -[DeviceManualView subsubImageView](DeviceManualView *self, SEL)
__DeviceManualView_subsubImageView_ proc near
                                        ; DATA XREF: __objc_const:0000000100045EF8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_DeviceManualView__subsubImageView ; NSImageView *_subsubImageView;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__DeviceManualView_subsubImageView_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView setSubsubImageView:](DeviceManualView *self, SEL, id)
__DeviceManualView_setSubsubImageView__ proc near
                                        ; DATA XREF: __objc_const:0000000100045F10↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, cs:_OBJC_IVAR_$_DeviceManualView__subsubImageView ; NSImageView *_subsubImageView;
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView_setSubsubImageView__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[DeviceManualView .cxx_destruct](DeviceManualView *self, SEL)
__DeviceManualView__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:0000000100045F28↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rdi, cs:_OBJC_IVAR_$_DeviceManualView__subsubImageView ; NSImageView *_subsubImageView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_DeviceManualView__submainImageView ; NSImageView *_submainImageView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_DeviceManualView__subImageView ; NSImageView *_subImageView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_DeviceManualView__threeHintLabel ; SLabel *_threeHintLabel;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_DeviceManualView__twoHintLabel ; SLabel *_twoHintLabel;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_DeviceManualView__oneHintLabel ; SLabel *_oneHintLabel;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                mov     rdi, cs:_OBJC_IVAR_$_DeviceManualView__mainImageView ; NSImageView *_mainImageView;
                add     rdi, rbx
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, cs:_OBJC_IVAR_$_DeviceManualView__device ; S8BitdoDevice *_device;
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__DeviceManualView__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject load]_1(NSObject_meta *self, SEL)
__NSObject_load__1 proc near            ; DATA XREF: __objc_const:0000000100046190↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rbx, cs:selRef_dictionary
                mov     r14, cs:_objc_msgSend_ptr
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E58
                mov     cs:qword_100075E58, rax
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E60
                mov     cs:qword_100075E60, rax
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E68
                mov     cs:qword_100075E68, rax
                call    r15 ; _objc_release
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, rbx        ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rdi, cs:qword_100075E70
                mov     cs:qword_100075E70, rax
                mov     rax, r15
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__NSObject_load__1 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject dictForKey:]_0(NSObject_meta *self, SEL, const void *)
__NSObject_dictForKey___0 proc near     ; DATA XREF: __objc_const:00000001000461A8↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     r14, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                mov     rdi, rax
                call    _objc_sync_enter
                lea     rax, unk_10002F600
                cmp     r14, rax
                jz      short loc_10002C4B3
                lea     rax, unk_10002F601
                cmp     r14, rax
                jz      short loc_10002C4BC
                lea     rax, unk_10002F602
                cmp     r14, rax
                jz      short loc_10002C4C5
                lea     rax, unk_10002F603
                cmp     r14, rax
                jz      short loc_10002C4CE
                xor     r14d, r14d
                jmp     short loc_10002C4E1
; ---------------------------------------------------------------------------

loc_10002C4B3:                          ; CODE XREF: +[NSObject dictForKey:]_0+25↑j
                lea     rax, qword_100075E58
                jmp     short loc_10002C4D5
; ---------------------------------------------------------------------------

loc_10002C4BC:                          ; CODE XREF: +[NSObject dictForKey:]_0+31↑j
                lea     rax, qword_100075E60
                jmp     short loc_10002C4D5
; ---------------------------------------------------------------------------

loc_10002C4C5:                          ; CODE XREF: +[NSObject dictForKey:]_0+3D↑j
                lea     rax, qword_100075E68
                jmp     short loc_10002C4D5
; ---------------------------------------------------------------------------

loc_10002C4CE:                          ; CODE XREF: +[NSObject dictForKey:]_0+49↑j
                lea     rax, qword_100075E70

loc_10002C4D5:                          ; CODE XREF: +[NSObject dictForKey:]_0+57↑j
                                        ; +[NSObject dictForKey:]_0+60↑j ...
                mov     rdi, [rax]
                call    cs:_objc_retain_ptr
                mov     r14, rax

loc_10002C4E1:                          ; CODE XREF: +[NSObject dictForKey:]_0+4E↑j
                mov     rdi, rbx
                call    _objc_sync_exit
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_dictForKey___0 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_enumerateClasses:](NSObject_meta *self, SEL, id)
__NSObject_mj_enumerateClasses__ proc near
                                        ; DATA XREF: __objc_const:00000001000461C0↓o

var_29          = byte ptr -29h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                test    rax, rax
                jz      short loc_10002C56C
                lea     r15, [rbp+var_29]
                mov     byte ptr [r15], 0
                mov     r12, cs:selRef_isClassFromFoundation_
                mov     r13, cs:_objc_msgSend_ptr

loc_10002C536:                          ; CODE XREF: +[NSObject mj_enumerateClasses:]+6C↓j
                test    r14, r14
                jz      short loc_10002C56C
                cmp     [rbp+var_29], 0
                jnz     short loc_10002C56C
                mov     rdi, rbx
                mov     rsi, r14
                mov     rdx, r15
                call    qword ptr [rbx+10h]
                mov     rdi, r14
                call    _class_getSuperclass
                mov     r14, rax
                mov     rdi, cs:classRef_MJFoundation ; void *
                mov     rsi, r12        ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend ; +[MJFoundation isClassFromFoundation:]
                test    al, al
                jz      short loc_10002C536

loc_10002C56C:                          ; CODE XREF: +[NSObject mj_enumerateClasses:]+20↑j
                                        ; +[NSObject mj_enumerateClasses:]+3B↑j ...
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
__NSObject_mj_enumerateClasses__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_enumerateAllClasses:](NSObject_meta *self, SEL, id)
__NSObject_mj_enumerateAllClasses__ proc near
                                        ; DATA XREF: __objc_const:00000001000461D8↓o

var_19          = byte ptr -19h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rdi, rdx
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                test    rax, rax
                jz      short loc_10002C5D1
                mov     [rbp+var_19], 0
                test    r14, r14
                jz      short loc_10002C5D1
                lea     r15, [rbp+var_19]

loc_10002C5AF:                          ; CODE XREF: +[NSObject mj_enumerateAllClasses:]+4B↓j
                mov     rdi, rbx
                mov     rsi, r14
                mov     rdx, r15
                call    qword ptr [rbx+10h]
                mov     rdi, r14
                call    _class_getSuperclass
                test    rax, rax
                jz      short loc_10002C5D1
                mov     r14, rax
                cmp     [rbp+var_19], 0
                jz      short loc_10002C5AF

loc_10002C5D1:                          ; CODE XREF: +[NSObject mj_enumerateAllClasses:]+1C↑j
                                        ; +[NSObject mj_enumerateAllClasses:]+25↑j ...
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
__NSObject_mj_enumerateAllClasses__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupIgnoredPropertyNames:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupIgnoredPropertyNames__ proc near
                                        ; DATA XREF: __objc_const:00000001000461F0↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupBlockReturnValue_key_
                lea     rcx, unk_10002F601
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_setupIgnoredPropertyNames__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_totalIgnoredPropertyNames](NSObject_meta *self, SEL)
__NSObject_mj_totalIgnoredPropertyNames_ proc near
                                        ; DATA XREF: __objc_const:0000000100046208↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:selRef_mj_ignoredPropertyNames
                mov     rsi, cs:selRef_mj_totalObjectsWithSelector_key_
                lea     rcx, unk_10002F601
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_totalIgnoredPropertyNames_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupIgnoredCodingPropertyNames:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupIgnoredCodingPropertyNames__ proc near
                                        ; DATA XREF: __objc_const:0000000100046220↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupBlockReturnValue_key_
                lea     rcx, unk_10002F603
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_setupIgnoredCodingPropertyNames__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_totalIgnoredCodingPropertyNames](NSObject_meta *self, SEL)
__NSObject_mj_totalIgnoredCodingPropertyNames_ proc near
                                        ; DATA XREF: __objc_const:0000000100046238↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:selRef_mj_ignoredCodingPropertyNames
                mov     rsi, cs:selRef_mj_totalObjectsWithSelector_key_
                lea     rcx, unk_10002F603
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_totalIgnoredCodingPropertyNames_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupAllowedPropertyNames:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupAllowedPropertyNames__ proc near
                                        ; DATA XREF: __objc_const:0000000100046250↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupBlockReturnValue_key_
                lea     rcx, unk_10002F600
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_setupAllowedPropertyNames__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_totalAllowedPropertyNames](NSObject_meta *self, SEL)
__NSObject_mj_totalAllowedPropertyNames_ proc near
                                        ; DATA XREF: __objc_const:0000000100046268↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:selRef_mj_allowedPropertyNames
                mov     rsi, cs:selRef_mj_totalObjectsWithSelector_key_
                lea     rcx, unk_10002F600
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_totalAllowedPropertyNames_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupAllowedCodingPropertyNames:](NSObject_meta *self, SEL, id)
__NSObject_mj_setupAllowedCodingPropertyNames__ proc near
                                        ; DATA XREF: __objc_const:0000000100046280↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_setupBlockReturnValue_key_
                lea     rcx, unk_10002F602
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_setupAllowedCodingPropertyNames__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_totalAllowedCodingPropertyNames](NSObject_meta *self, SEL)
__NSObject_mj_totalAllowedCodingPropertyNames_ proc near
                                        ; DATA XREF: __objc_const:0000000100046298↓o
                push    rbp
                mov     rbp, rsp
                mov     rdx, cs:selRef_mj_allowedCodingPropertyNames
                mov     rsi, cs:selRef_mj_totalObjectsWithSelector_key_
                lea     rcx, unk_10002F602
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSObject_mj_totalAllowedCodingPropertyNames_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[NSObject mj_setupBlockReturnValue:key:](NSObject_meta *self, SEL, id, const char *)
__NSObject_mj_setupBlockReturnValue_key__ proc near
                                        ; DATA XREF: __objc_const:00000001000462B0↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r14, rdi
                test    rdx, rdx
                jz      short loc_10002C710
                mov     rax, [rdx+10h]
                mov     rdi, rdx
                call    rax
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     ecx, 1
                mov     rdi, r14
                mov     rsi, rbx
                mov     rdx, rax
                call    _objc_setAssociatedObject
                mov     rdi, r15
                call    cs:_objc_release_ptr
                jmp     short loc_10002C722
; ---------------------------------------------------------------------------

loc_10002C710:                          ; CODE XREF: +[NSObject mj_setupBlockReturnValue:key:]+13↑j
                mov     ecx, 1
                mov     rdi, r14
                mov     rsi, rbx
                xor     edx, edx
                call    _objc_setAssociatedObject

loc_10002C722:                          ; CODE XREF: +[NSObject mj_setupBlockReturnValue:key:]+45↑j
                mov     rsi, cs:selRef_dictForKey_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                mov     rdi, r14        ; void *
                mov     rdx, rbx
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_removeAllObjects ; char *
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
__NSObject_mj_setupBlockReturnValue_key__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[NSObject mj_totalObjectsWithSelector:key:](NSObject_meta *self, SEL, SEL, const char *)
__NSObject_mj_totalObjectsWithSelector_key__ proc near
                                        ; DATA XREF: __objc_const:00000001000462C8↓o

anonymous_0     = ymmword ptr -70h
anonymous_1     = qword ptr -50h
anonymous_3     = qword ptr -48h
anonymous_2     = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 48h
                mov     [rbp+var_38], rdx
                mov     r14, rdi
                mov     rsi, cs:selRef_dictForKey_ ; char *
                mov     r12, cs:_objc_msgSend_ptr
                mov     [rbp+var_30], rcx
                mov     rdx, rcx
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r14
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_objectForKeyedSubscript_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    r12 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rbx, cs:_objc_release_ptr
                mov     rdi, r13
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                test    r12, r12
                jz      short loc_10002C7F4
                mov     rdi, r12
                call    cs:_objc_retain_ptr
                mov     rbx, rax
                jmp     loc_10002C933
; ---------------------------------------------------------------------------

loc_10002C7F4:                          ; CODE XREF: +[NSObject mj_totalObjectsWithSelector:key:]+7D↑j
                mov     rdi, cs:classRef_NSMutableArray ; void *
                mov     rsi, cs:selRef_array ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_dictForKey_ ; char *
                mov     rdx, [rbp+var_30]
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r14
                call    _NSStringFromClass
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_setObject_forKeyedSubscript_ ; char *
                mov     rdi, r15        ; void *
                mov     rdx, r12
                mov     rcx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r13
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r15
                call    rbx ; _objc_release
                mov     rsi, cs:selRef_respondsToSelector_ ; char *
                mov     rdi, r14        ; void *
                mov     r15, [rbp+var_38]
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                test    al, al
                mov     rbx, r14
                jz      short loc_10002C8C4
                mov     rsi, cs:selRef_performSelector_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                test    rax, rax
                jz      short loc_10002C8BB
                mov     rsi, cs:selRef_addObjectsFromArray_ ; char *
                mov     rdi, r12        ; void *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr

loc_10002C8BB:                          ; CODE XREF: +[NSObject mj_totalObjectsWithSelector:key:]+142↑j
                mov     rdi, r15
                call    cs:_objc_release_ptr

loc_10002C8C4:                          ; CODE XREF: +[NSObject mj_totalObjectsWithSelector:key:]+11F↑j
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     r15, [rbp+anonymous_0+8]
                mov     [r15], rax
                mov     eax, 0C2000000h
                mov     [r15+8], rax
                lea     rax, sub_10002C952
                mov     [r15+10h], rax
                lea     rax, unk_10003A7A8
                mov     [r15+18h], rax
                mov     rax, [rbp+var_30]
                mov     [r15+28h], rax
                mov     r13, cs:_objc_retain_ptr
                mov     rdi, r12
                call    r13 ; _objc_retain
                mov     r14, rax
                mov     [r15+20h], rax
                mov     rsi, cs:selRef_mj_enumerateAllClasses_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, r15
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                call    r13 ; _objc_retain
                mov     rbx, rax
                mov     rdi, [r15+20h]
                call    cs:_objc_release_ptr

loc_10002C933:                          ; CODE XREF: +[NSObject mj_totalObjectsWithSelector:key:]+8B↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                add     rsp, 48h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSObject_mj_totalObjectsWithSelector_key__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002C952   proc near               ; DATA XREF: +[NSObject mj_totalObjectsWithSelector:key:]+177↑o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rax, rsi
                mov     rbx, rdi
                mov     rsi, [rdi+28h]
                mov     rdi, rax
                call    _objc_getAssociatedObject
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, [rbx+20h]  ; void *
                mov     rsi, cs:selRef_addObjectsFromArray_ ; char *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                pop     rbx
                pop     r14
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_10002C952   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString mj_underlineFromCamel](NSString *self, SEL)
__NSString_mj_underlineFromCamel_ proc near
                                        ; DATA XREF: __objc_data:00000001000490C0↓o

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 28h
                mov     r12, rdi
                mov     rbx, cs:selRef_length
                mov     rsi, rbx        ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      loc_10002CADF
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_string ; char *
                mov     r13, cs:_objc_msgSend_ptr
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, r12        ; void *
                mov     rsi, rbx        ; char *
                call    r13 ; _objc_msgSend
                test    rax, rax
                jz      loc_10002CAEB
                mov     [rbp+var_30], r14
                mov     rax, cs:selRef_stringWithFormat_
                mov     [rbp+var_50], rax
                mov     rax, cs:selRef_lowercaseString
                mov     [rbp+var_48], rax
                mov     rax, cs:selRef_isEqualToString_
                mov     [rbp+var_40], rax
                mov     rax, cs:selRef_appendString_
                mov     [rbp+var_38], rax
                xor     r14d, r14d

loc_10002CA2C:                          ; CODE XREF: -[NSString mj_underlineFromCamel]+13C↓j
                mov     rdi, r12        ; void *
                mov     rsi, cs:selRef_characterAtIndex_ ; char *
                mov     rdx, r14
                call    r13 ; _objc_msgSend
                mov     rdi, cs:classRef_NSString ; void *
                movzx   ecx, ax
                mov     rsi, [rbp+var_50] ; char *
                lea     rdx, cfstr_C_1  ; "%c"
                xor     eax, eax
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, r12
                mov     r12, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_48] ; char *
                call    r13 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, r12        ; void *
                mov     rsi, [rbp+var_40] ; char *
                mov     rdx, rax
                call    r13 ; _objc_msgSend
                test    al, al
                jnz     short loc_10002CA9C
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_38] ; char *
                lea     rdx, stru_10003C2F8 ; "_"
                call    r13 ; _objc_msgSend

loc_10002CA9C:                          ; CODE XREF: -[NSString mj_underlineFromCamel]+F1↑j
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_38] ; char *
                mov     rdx, r15
                call    r13 ; _objc_msgSend
                mov     rdi, r15
                mov     r15, cs:_objc_release_ptr
                call    r15 ; _objc_release
                mov     rdi, r12
                call    r15 ; _objc_release
                inc     r14
                mov     rdi, rbx        ; void *
                mov     rsi, cs:selRef_length ; char *
                call    r13 ; _objc_msgSend
                cmp     r14, rax
                mov     r12, rbx
                jb      loc_10002CA2C
                mov     r14, [rbp+var_30]
                jmp     short loc_10002CAEB
; ---------------------------------------------------------------------------

loc_10002CADF:                          ; CODE XREF: -[NSString mj_underlineFromCamel]+27↑j
                mov     rdi, r12
                call    cs:_objc_retain_ptr
                mov     r14, rax

loc_10002CAEB:                          ; CODE XREF: -[NSString mj_underlineFromCamel]+5C↑j
                                        ; -[NSString mj_underlineFromCamel]+146↑j
                mov     rdi, r14
                add     rsp, 28h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSString_mj_underlineFromCamel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString mj_camelFromUnderline](NSString *self, SEL)
__NSString_mj_camelFromUnderline_ proc near
                                        ; DATA XREF: __objc_data:00000001000490D8↓o

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     rbx, rdi
                mov     rsi, cs:selRef_length ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      loc_10002CCEE
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_string ; char *
                mov     r15, cs:_objc_msgSend_ptr
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     [rbp+var_30], rax
                mov     rsi, cs:selRef_componentsSeparatedByString_ ; char *
                lea     rdx, stru_10003C2F8 ; "_"
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rsi, cs:selRef_count ; char *
                mov     [rbp+var_40], rax
                mov     rdi, rax        ; void *
                call    r15 ; _objc_msgSend
                test    rax, rax
                jz      loc_10002CCDE
                mov     rax, cs:selRef_characterAtIndex_
                mov     [rbp+var_60], rax
                mov     rax, cs:selRef_stringWithFormat_
                mov     [rbp+var_58], rax
                mov     rax, cs:selRef_uppercaseString
                mov     [rbp+var_50], rax
                mov     rax, cs:selRef_appendString_
                mov     [rbp+var_38], rax
                mov     rax, cs:selRef_substringFromIndex_
                mov     [rbp+var_48], rax
                xor     r12d, r12d

loc_10002CBBF:                          ; CODE XREF: -[NSString mj_camelFromUnderline]+1D7↓j
                mov     rdi, [rbp+var_40] ; void *
                mov     rsi, cs:selRef_objectAtIndexedSubscript_ ; char *
                mov     rdx, r12
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                test    r12, r12
                jz      loc_10002CCAA
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_length ; char *
                call    r15 ; _objc_msgSend
                test    rax, rax
                jz      loc_10002CCAA
                mov     r14, cs:classRef_NSString
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_60] ; char *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                movzx   ecx, ax
                mov     rdi, r14        ; void *
                mov     rsi, [rbp+var_58] ; char *
                lea     rdx, cfstr_C_1  ; "%c"
                xor     eax, eax
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, [rbp+var_50] ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_38] ; char *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, rbx
                mov     rbx, cs:_objc_release_ptr
                call    rbx ; _objc_release
                mov     rdi, r14
                mov     r14, cs:selRef_length
                call    rbx ; _objc_release
                mov     rdi, r13        ; void *
                mov     rsi, r14        ; char *
                call    r15 ; _objc_msgSend
                cmp     rax, 2
                jb      short loc_10002CCBF
                mov     edx, 1
                mov     rdi, r13        ; void *
                mov     rsi, [rbp+var_48] ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_38] ; char *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    rbx ; _objc_release
                jmp     short loc_10002CCBF
; ---------------------------------------------------------------------------

loc_10002CCAA:                          ; CODE XREF: -[NSString mj_camelFromUnderline]+E0↑j
                                        ; -[NSString mj_camelFromUnderline]+F6↑j
                mov     rdi, [rbp+var_30] ; void *
                mov     rsi, [rbp+var_38] ; char *
                mov     rdx, r13
                call    r15 ; _objc_msgSend
                mov     rbx, cs:_objc_release_ptr

loc_10002CCBF:                          ; CODE XREF: -[NSString mj_camelFromUnderline]+178↑j
                                        ; -[NSString mj_camelFromUnderline]+1A7↑j
                mov     rdi, r13
                call    rbx ; _objc_release
                inc     r12
                mov     rdi, [rbp+var_40] ; void *
                mov     rsi, cs:selRef_count ; char *
                call    r15 ; _objc_msgSend
                cmp     r12, rax
                jb      loc_10002CBBF

loc_10002CCDE:                          ; CODE XREF: -[NSString mj_camelFromUnderline]+7E↑j
                mov     rdi, [rbp+var_40]
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30]
                jmp     short loc_10002CCFA
; ---------------------------------------------------------------------------

loc_10002CCEE:                          ; CODE XREF: -[NSString mj_camelFromUnderline]+24↑j
                mov     rdi, rbx
                call    cs:_objc_retain_ptr
                mov     rdi, rax

loc_10002CCFA:                          ; CODE XREF: -[NSString mj_camelFromUnderline]+1EB↑j
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSString_mj_camelFromUnderline_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString mj_firstCharLower](NSString *self, SEL)
__NSString_mj_firstCharLower_ proc near ; DATA XREF: __objc_data:00000001000490F0↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rsi, cs:selRef_length ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      loc_10002CE1A
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_string ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:classRef_NSString
                mov     rsi, cs:selRef_characterAtIndex_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                movzx   ecx, ax
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_C_1  ; "%c"
                mov     rdi, r12        ; void *
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_lowercaseString ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_appendString_ ; char *
                mov     [rbp+var_30], r15
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_length ; char *
                call    rbx ; _objc_msgSend
                cmp     rax, 2
                jb      short loc_10002CE28
                mov     rsi, cs:selRef_substringFromIndex_ ; char *
                mov     edx, 1
                mov     rdi, r14        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, [rbp+var_30]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_appendString_ ; char *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r15
                jmp     short loc_10002CE2C
; ---------------------------------------------------------------------------

loc_10002CE1A:                          ; CODE XREF: -[NSString mj_firstCharLower]+21↑j
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     rdi, rax
                jmp     short loc_10002CE2C
; ---------------------------------------------------------------------------

loc_10002CE28:                          ; CODE XREF: -[NSString mj_firstCharLower]+CE↑j
                mov     rdi, [rbp+var_30]

loc_10002CE2C:                          ; CODE XREF: -[NSString mj_firstCharLower]+10B↑j
                                        ; -[NSString mj_firstCharLower]+119↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSString_mj_firstCharLower_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString mj_firstCharUpper](NSString *self, SEL)
__NSString_mj_firstCharUpper_ proc near ; DATA XREF: __objc_data:0000000100049108↓o

var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     r14, rdi
                mov     rsi, cs:selRef_length ; char *
                call    cs:_objc_msgSend_ptr
                test    rax, rax
                jz      loc_10002CF4C
                mov     rdi, cs:classRef_NSMutableString ; void *
                mov     rsi, cs:selRef_string ; char *
                mov     rbx, cs:_objc_msgSend_ptr
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:classRef_NSString
                mov     rsi, cs:selRef_characterAtIndex_ ; char *
                mov     rdi, r14        ; void *
                xor     edx, edx
                call    rbx ; _objc_msgSend
                movzx   ecx, ax
                mov     rsi, cs:selRef_stringWithFormat_ ; char *
                lea     rdx, cfstr_C_1  ; "%c"
                mov     rdi, r12        ; void *
                xor     eax, eax
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rsi, cs:selRef_uppercaseString ; char *
                mov     rdi, rax        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_appendString_ ; char *
                mov     [rbp+var_30], r15
                mov     rdi, r15        ; void *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     r15, cs:_objc_release_ptr
                mov     rdi, r12
                call    r15 ; _objc_release
                mov     rdi, r13
                call    r15 ; _objc_release
                mov     rdi, r14        ; void *
                mov     rsi, cs:selRef_length ; char *
                call    rbx ; _objc_msgSend
                cmp     rax, 2
                jb      short loc_10002CF5A
                mov     rsi, cs:selRef_substringFromIndex_ ; char *
                mov     edx, 1
                mov     rdi, r14        ; void *
                call    rbx ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     r15, [rbp+var_30]
                mov     rdi, r15        ; void *
                mov     rsi, cs:selRef_appendString_ ; char *
                mov     rdx, rax
                call    rbx ; _objc_msgSend
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, r15
                jmp     short loc_10002CF5E
; ---------------------------------------------------------------------------

loc_10002CF4C:                          ; CODE XREF: -[NSString mj_firstCharUpper]+21↑j
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     rdi, rax
                jmp     short loc_10002CF5E
; ---------------------------------------------------------------------------

loc_10002CF5A:                          ; CODE XREF: -[NSString mj_firstCharUpper]+CE↑j
                mov     rdi, [rbp+var_30]

loc_10002CF5E:                          ; CODE XREF: -[NSString mj_firstCharUpper]+10B↑j
                                        ; -[NSString mj_firstCharUpper]+119↑j
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSString_mj_firstCharUpper_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[NSString mj_isPureInt](NSString *self, SEL)
__NSString_mj_isPureInt_ proc near      ; DATA XREF: __objc_data:0000000100049120↓o

anonymous_0     = ymmword ptr -20h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 10h
                mov     rdx, rdi
                mov     rdi, cs:classRef_NSScanner ; void *
                mov     rsi, cs:selRef_scannerWithString_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_scanInt_ ; char *
                lea     rdx, [rbp+anonymous_0+0Ch]
                mov     rdi, rax        ; void *
                call    r14 ; _objc_msgSend
                test    al, al
                jz      short loc_10002CFCF
                mov     rsi, cs:selRef_isAtEnd ; char *
                mov     rdi, rbx        ; void *
                call    cs:_objc_msgSend_ptr
                test    al, al
                setnz   r14b
                jmp     short loc_10002CFD2
; ---------------------------------------------------------------------------

loc_10002CFCF:                          ; CODE XREF: -[NSString mj_isPureInt]+44↑j
                xor     r14d, r14d

loc_10002CFD2:                          ; CODE XREF: -[NSString mj_isPureInt]+5C↑j
                mov     rdi, rbx
                call    cs:_objc_release_ptr
                movzx   eax, r14b
                add     rsp, 10h
                pop     rbx
                pop     r14
                pop     rbp
                retn
__NSString_mj_isPureInt_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString mj_url](NSString *self, SEL)
__NSString_mj_url_ proc near            ; DATA XREF: __objc_data:0000000100049138↓o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rsi, rdi
                mov     rbx, cs:classRef_NSURL
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                lea     rdx, stru_10003D118 ; "!$&'()*+,-./:;=?@_~%#[]"
                xor     ecx, ecx
                mov     r8d, 8000100h
                call    _CFURLCreateStringByAddingPercentEscapes
                mov     r14, rax
                mov     rsi, cs:selRef_URLWithString_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rdi, r14
                call    cs:_objc_release_ptr
                mov     rdi, rbx
                pop     rbx
                pop     r14
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__NSString_mj_url_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString underlineFromCamel](NSString *self, SEL)
__NSString_underlineFromCamel_ proc near
                                        ; DATA XREF: __objc_data:0000000100049030↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_underlineFromCamel
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSString_underlineFromCamel_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString camelFromUnderline](NSString *self, SEL)
__NSString_camelFromUnderline_ proc near
                                        ; DATA XREF: __objc_data:0000000100049048↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_camelFromUnderline
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSString_camelFromUnderline_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString firstCharLower](NSString *self, SEL)
__NSString_firstCharLower_ proc near    ; DATA XREF: __objc_data:0000000100049060↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_firstCharLower
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSString_firstCharLower_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString firstCharUpper](NSString *self, SEL)
__NSString_firstCharUpper_ proc near    ; DATA XREF: __objc_data:0000000100049078↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_firstCharUpper
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSString_firstCharUpper_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl -[NSString isPureInt](NSString *self, SEL)
__NSString_isPureInt_ proc near         ; DATA XREF: __objc_data:0000000100049090↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_isPureInt
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSString_isPureInt_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[NSString url](NSString *self, SEL)
__NSString_url_ proc near               ; DATA XREF: __objc_data:00000001000490A8↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_mj_url
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
__NSString_url_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SLabel *__cdecl -[SLabel initWithFrame:](SLabel *self, SEL, CGRect)
__SLabel_initWithFrame__ proc near      ; DATA XREF: __objc_const:00000001000463B0↓o

var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = qword ptr -30h
anonymous_0     = qword ptr -28h
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 30h
                lea     rax, [rbp+var_30]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SLabel_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_initWithFrame_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+50h+var_40], xmm1
                movups  [rsp+50h+var_50], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      loc_10002D1E2
                mov     rdi, cs:classRef_NSFont ; void *
                mov     rsi, cs:selRef_systemFontOfSize_ ; char *
                mov     r15, cs:_objc_msgSend_ptr
                movsd   xmm0, cs:qword_10002F2B0
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setFont_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     r12, cs:_objc_release_ptr
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rsi, cs:selRef_setAlignment_ ; char *
                mov     edx, 2
                mov     rdi, rbx        ; void *
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setBordered_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rsi, cs:selRef_setEditable_ ; char *
                mov     rdi, rbx        ; void *
                xor     edx, edx
                call    r15 ; _objc_msgSend
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_clearColor ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setBackgroundColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release
                mov     rdi, cs:classRef_NSColor ; void *
                mov     rsi, cs:selRef_blackColor ; char *
                call    r15 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rsi, cs:selRef_setTextColor_ ; char *
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r15 ; _objc_msgSend
                mov     rdi, r14
                call    r12 ; _objc_release

loc_10002D1E2:                          ; CODE XREF: -[SLabel initWithFrame:]+47↑j
                mov     rax, rbx
                add     rsp, 30h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__SLabel_initWithFrame__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SLabel drawRect:](SLabel *self, SEL, CGRect)
__SLabel_drawRect__ proc near           ; DATA XREF: __objc_const:00000001000463C8↓o

var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
anonymous_0     = qword ptr -8
arg_0           = CGRect ptr  10h

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                lea     rax, [rbp+var_10]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SLabel_0
                mov     [rax+8], rcx
                mov     rsi, cs:selRef_drawRect_
                movaps  xmm0, xmmword ptr [rbp+arg_0.var0.var0]
                movaps  xmm1, xmmword ptr [rbp+arg_0.var1.var0]
                movups  [rsp+30h+var_20], xmm1
                movups  [rsp+30h+var_30], xmm0
                mov     rdi, rax
                call    _objc_msgSendSuper2
                add     rsp, 30h
                pop     rbp
                retn
__SLabel_drawRect__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[FirmwareMessage mj_objectClassInArray](FirmwareMessage_meta *self, SEL)
__FirmwareMessage_mj_objectClassInArray_ proc near
                                        ; DATA XREF: __objc_const:0000000100046430↓o

var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 20h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_18], rax
                lea     rax, cfstr_List_0 ; "List"
                lea     rbx, [rbp+var_28]
                mov     [rbx], rax
                mov     rdi, cs:classRef_Firmware ; void *
                mov     rsi, cs:selRef_class ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                lea     rdx, [rbp+var_20]
                mov     [rdx], rax
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     rsi, cs:selRef_dictionaryWithObjects_forKeys_count_ ; char *
                mov     r8d, 1
                mov     rcx, rbx
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_18]
                jnz     short loc_10002D2BA
                mov     rdi, rax
                add     rsp, 20h
                pop     rbx
                pop     r14
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
; ---------------------------------------------------------------------------

loc_10002D2BA:                          ; CODE XREF: +[FirmwareMessage mj_objectClassInArray]+76↑j
                call    ___stack_chk_fail
__FirmwareMessage_mj_objectClassInArray_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[FirmwareMessage objectForKeyedSubscript:](FirmwareMessage *self, SEL, id)
__FirmwareMessage_objectForKeyedSubscript__ proc near
                                        ; DATA XREF: __objc_const:0000000100046498↓o
                push    rbp
                mov     rbp, rsp
                xor     eax, eax
                pop     rbp
                retn
__FirmwareMessage_objectForKeyedSubscript__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[FirmwareMessage msgState](FirmwareMessage *self, SEL)
__FirmwareMessage_msgState_ proc near   ; DATA XREF: __objc_const:00000001000464B0↓o
                push    rbp
                mov     rbp, rsp
                mov     eax, [rdi+8]
                pop     rbp
                retn
__FirmwareMessage_msgState_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwareMessage setMsgState:](FirmwareMessage *self, SEL, int)
__FirmwareMessage_setMsgState__ proc near
                                        ; DATA XREF: __objc_const:00000001000464C8↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+8], edx
                pop     rbp
                retn
__FirmwareMessage_setMsgState__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[FirmwareMessage error](FirmwareMessage *self, SEL)
__FirmwareMessage_error_ proc near      ; DATA XREF: __objc_const:00000001000464E0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+10h]
                pop     rbp
                retn
__FirmwareMessage_error_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwareMessage setError:](FirmwareMessage *self, SEL, id)
__FirmwareMessage_setError__ proc near  ; DATA XREF: __objc_const:00000001000464F8↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 10h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__FirmwareMessage_setError__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSArray *__cdecl -[FirmwareMessage List](FirmwareMessage *self, SEL)
__FirmwareMessage_List_ proc near       ; DATA XREF: __objc_const:0000000100046510↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+18h]
                pop     rbp
                retn
__FirmwareMessage_List_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwareMessage setList:](FirmwareMessage *self, SEL, id)
__FirmwareMessage_setList__ proc near   ; DATA XREF: __objc_const:0000000100046528↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 18h
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeStrong
__FirmwareMessage_setList__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[FirmwareMessage .cxx_destruct](FirmwareMessage *self, SEL)
__FirmwareMessage__cxx_destruct_ proc near
                                        ; DATA XREF: __objc_const:0000000100046540↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 18h
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 10h
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__FirmwareMessage__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[Firmware fileName](Firmware *self, SEL)
__Firmware_fileName_ proc near          ; DATA XREF: __objc_const:0000000100046690↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:classRef_S8BitdoDeviceDetailsTools
                mov     edx, [rdi+10h]
                mov     r8, [rdi+28h]
                mov     rsi, cs:selRef_getNameWith_pid_name_
                mov     rdi, rax
                xor     ecx, ecx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr ; +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]
__Firmware_fileName_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[Firmware date](Firmware *self, SEL)
__Firmware_date_ proc near              ; DATA XREF: __objc_const:00000001000466A8↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+20h]
                pop     rbp
                retn
__Firmware_date_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setDate:](Firmware *self, SEL, id)
__Firmware_setDate__ proc near          ; DATA XREF: __objc_const:00000001000466C0↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 20h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__Firmware_setDate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setFileName:](Firmware *self, SEL, id)
__Firmware_setFileName__ proc near      ; DATA XREF: __objc_const:00000001000466D8↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 28h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__Firmware_setFileName__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[Firmware fileSize](Firmware *self, SEL)
__Firmware_fileSize_ proc near          ; DATA XREF: __objc_const:00000001000466F0↓o
                push    rbp
                mov     rbp, rsp
                mov     eax, [rdi+8]
                pop     rbp
                retn
__Firmware_fileSize_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setFileSize:](Firmware *self, SEL, int)
__Firmware_setFileSize__ proc near      ; DATA XREF: __objc_const:0000000100046708↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+8], edx
                pop     rbp
                retn
__Firmware_setFileSize__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[Firmware fileURL](Firmware *self, SEL)
__Firmware_fileURL_ proc near           ; DATA XREF: __objc_const:0000000100046720↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+30h]
                pop     rbp
                retn
__Firmware_fileURL_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setFileURL:](Firmware *self, SEL, id)
__Firmware_setFileURL__ proc near       ; DATA XREF: __objc_const:0000000100046738↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 30h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__Firmware_setFileURL__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[Firmware readme_en](Firmware *self, SEL)
__Firmware_readme_en_ proc near         ; DATA XREF: __objc_const:0000000100046750↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+38h]
                pop     rbp
                retn
__Firmware_readme_en_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setReadme_en:](Firmware *self, SEL, id)
__Firmware_setReadme_en__ proc near     ; DATA XREF: __objc_const:0000000100046768↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 38h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__Firmware_setReadme_en__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[Firmware id](Firmware *self, SEL)
__Firmware_id_  proc near               ; DATA XREF: __objc_const:0000000100046780↓o
                push    rbp
                mov     rbp, rsp
                mov     eax, [rdi+0Ch]
                pop     rbp
                retn
__Firmware_id_  endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setId:](Firmware *self, SEL, int)
__Firmware_setId__ proc near            ; DATA XREF: __objc_const:0000000100046798↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+0Ch], edx
                pop     rbp
                retn
__Firmware_setId__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[Firmware readme](Firmware *self, SEL)
__Firmware_readme_ proc near            ; DATA XREF: __objc_const:00000001000467B0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+40h]
                pop     rbp
                retn
__Firmware_readme_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setReadme:](Firmware *self, SEL, id)
__Firmware_setReadme__ proc near        ; DATA XREF: __objc_const:00000001000467C8↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 40h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__Firmware_setReadme__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[Firmware type](Firmware *self, SEL)
__Firmware_type_ proc near              ; DATA XREF: __objc_const:00000001000467E0↓o
                push    rbp
                mov     rbp, rsp
                mov     eax, [rdi+10h]
                pop     rbp
                retn
__Firmware_type_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setType:](Firmware *self, SEL, int)
__Firmware_setType__ proc near          ; DATA XREF: __objc_const:00000001000467F8↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+10h], edx
                pop     rbp
                retn
__Firmware_setType__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSString *__cdecl -[Firmware md5](Firmware *self, SEL)
__Firmware_md5_ proc near               ; DATA XREF: __objc_const:0000000100046810↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+48h]
                pop     rbp
                retn
__Firmware_md5_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setMd5:](Firmware *self, SEL, id)
__Firmware_setMd5__ proc near           ; DATA XREF: __objc_const:0000000100046828↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 48h
                pop     rbp
                jmp     _objc_setProperty_nonatomic_copy
__Firmware_setMd5__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; float __cdecl -[Firmware version](Firmware *self, SEL)
__Firmware_version_ proc near           ; DATA XREF: __objc_const:0000000100046840↓o
                push    rbp
                mov     rbp, rsp
                movss   xmm0, dword ptr [rdi+14h]
                pop     rbp
                retn
__Firmware_version_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setVersion:](Firmware *self, SEL, float)
__Firmware_setVersion__ proc near       ; DATA XREF: __objc_const:0000000100046858↓o
                push    rbp
                mov     rbp, rsp
                movss   dword ptr [rdi+14h], xmm0
                pop     rbp
                retn
__Firmware_setVersion__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl -[Firmware beta](Firmware *self, SEL)
__Firmware_beta_ proc near              ; DATA XREF: __objc_const:0000000100046870↓o
                push    rbp
                mov     rbp, rsp
                mov     eax, [rdi+18h]
                pop     rbp
                retn
__Firmware_beta_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware setBeta:](Firmware *self, SEL, int)
__Firmware_setBeta__ proc near          ; DATA XREF: __objc_const:0000000100046888↓o
                push    rbp
                mov     rbp, rsp
                mov     [rdi+18h], edx
                pop     rbp
                retn
__Firmware_setBeta__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[Firmware .cxx_destruct](Firmware *self, SEL)
__Firmware__cxx_destruct_ proc near     ; DATA XREF: __objc_const:00000001000468A0↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 48h
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+40h]
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+38h]
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+30h]
                xor     esi, esi
                call    _objc_storeStrong
                lea     rdi, [rbx+28h]
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 20h
                mov     rdi, rbx
                xor     esi, esi
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_storeStrong
__Firmware__cxx_destruct_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl +[SHIDHJZ allocWithZone:](SHIDHJZ_meta *self, SEL, _NSZone *)
__SHIDHJZ_allocWithZone__ proc near     ; DATA XREF: __objc_const:0000000100046B28↓o

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, cs:__NSConcreteStackBlock_ptr
                mov     [rbp+var_30], rax
                mov     eax, 0C0000000h
                mov     [rbp+var_28], rax
                lea     rax, sub_10002D500
                mov     [rbp+var_20], rax
                lea     rax, unk_10003A258
                mov     [rbp+var_18], rax
                mov     [rbp+var_10], rdx
                mov     [rbp+var_8], rdi
                cmp     cs:qword_100075E78, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10002D4EE

loc_10002D4DC:                          ; CODE XREF: +[SHIDHJZ allocWithZone:]+66↓j
                mov     rdi, cs:qword_100075E80
                add     rsp, 30h
                pop     rbp
                jmp     cs:_objc_retain_ptr
; ---------------------------------------------------------------------------

loc_10002D4EE:                          ; CODE XREF: +[SHIDHJZ allocWithZone:]+42↑j
                lea     rdi, qword_100075E78
                lea     rsi, [rbp+var_30]
                call    _dispatch_once
                jmp     short loc_10002D4DC
__SHIDHJZ_allocWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002D500   proc near               ; DATA XREF: +[SHIDHJZ allocWithZone:]+1C↑o

var_10          = byte ptr -10h

                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     rdx, [rdi+20h]
                mov     rax, [rdi+28h]
                lea     rdi, [rbp+var_10]
                mov     [rdi], rax
                mov     rax, cs:classRef_SHIDHJZ_0
                mov     [rdi+8], rax
                mov     rsi, cs:selRef_allocWithZone_
                call    _objc_msgSendSuper2
                mov     rdi, cs:qword_100075E80
                mov     cs:qword_100075E80, rax
                call    cs:_objc_release_ptr
                add     rsp, 10h
                pop     rbp
                retn
sub_10002D500   endp


; =============== S U B R O U T I N E =======================================


; id __cdecl +[SHIDHJZ sharedInstance](SHIDHJZ_meta *self, SEL)
__SHIDHJZ_sharedInstance_ proc near     ; DATA XREF: __objc_const:0000000100046B40↓o
                mov     rdi, cs:qword_100075E80
                test    rdi, rdi
                jnz     _objc_retainAutoreleaseReturnValue
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:classRef_SHIDHJZ
                call    _objc_alloc
                mov     rsi, cs:selRef_init ; char *
                mov     rdi, rax        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, cs:qword_100075E80
                mov     cs:qword_100075E80, rax
                call    cs:_objc_release_ptr
                mov     rdi, cs:qword_100075E80
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__SHIDHJZ_sharedInstance_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDHJZ copyWithZone:](SHIDHJZ *self, SEL, _NSZone *)
__SHIDHJZ_copyWithZone__ proc near      ; DATA XREF: __objc_const:0000000100046BA8↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075E80
                pop     rbp
                jmp     cs:_objc_retain_ptr
__SHIDHJZ_copyWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; id __cdecl -[SHIDHJZ mutableCopyWithZone:](SHIDHJZ *self, SEL, _NSZone *)
__SHIDHJZ_mutableCopyWithZone__ proc near
                                        ; DATA XREF: __objc_const:0000000100046BC0↓o
                push    rbp
                mov     rbp, rsp
                mov     rdi, cs:qword_100075E80
                pop     rbp
                jmp     cs:_objc_retain_ptr
__SHIDHJZ_mutableCopyWithZone__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002D5BD   proc near               ; DATA XREF: sub_10002D5C3+68↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
sub_10002D5BD   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002D5C3   proc near               ; DATA XREF: -[SHIDHJZ open]+1AB↓o
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                mov     rbx, rcx
                mov     r14, rdi
                mov     rdi, rcx
                call    sub_10002DB0C
                mov     rdi, rbx
                call    sub_10002DBB9
                mov     r15, cs:selRef_setDevice_
                mov     rdi, r14
                call    cs:_objc_retain_ptr
                mov     r14, rax
                mov     rdi, rax        ; void *
                mov     rsi, r15        ; char *
                mov     rdx, rbx
                call    cs:_objc_msgSend_ptr
                mov     rdi, rbx
                xor     esi, esi
                call    _IOHIDDeviceOpen
                lea     rax, _OBJC_IVAR_$_SHIDManager_gpReportBufB ; unsigned __int8 gpReportBufB[64];
                mov     rsi, [rax]
                add     rsi, r14
                lea     rax, _OBJC_IVAR_$_SHIDManager_reportSizeIn ; unsigned __int8 reportSizeIn;
                mov     rax, [rax]
                movzx   edx, byte ptr [r14+rax]
                lea     rcx, sub_10002D5BD
                mov     rdi, rbx
                mov     r8, r14
                call    _IOHIDDeviceRegisterInputReportCallback
                mov     rdi, r14
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     cs:_objc_release_ptr
sub_10002D5C3   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002D650   proc near               ; DATA XREF: -[SHIDHJZ open]+1C6↓o
                push    rbp
                mov     rbp, rsp
                mov     rsi, cs:selRef_setDevice_
                xor     edx, edx
                pop     rbp
                jmp     cs:_objc_msgSend_ptr
sub_10002D650   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDHJZ open](SHIDHJZ *self, SEL)
__SHIDHJZ_open_ proc near               ; DATA XREF: __objc_const:0000000100046BD8↓o

var_30          = CGRect ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                push    rax
                mov     rbx, rdi
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                xor     esi, esi
                call    _IOHIDManagerCreate
                mov     rsi, cs:selRef_setHidManager_ ; char *
                mov     r14, cs:_objc_msgSend_ptr
                mov     rdi, rbx        ; void *
                mov     rdx, rax
                call    r14 ; _objc_msgSend ; -[SHIDManager setHidManager:]
                mov     rdi, cs:classRef_NSMutableDictionary ; void *
                mov     rsi, cs:selRef_dictionary ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r13, rax
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                mov     edx, 2007h
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                lea     rdx, aProductid ; "ProductID"
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdi, r13        ; void *
                mov     [rbp+var_30.var0.var0], r13
                mov     rdx, r15
                mov     rcx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSNumber ; void *
                mov     edx, 2DC8h
                mov     rsi, cs:selRef_numberWithLong_ ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     rdi, cs:classRef_NSString ; void *
                lea     rdx, aVendorid  ; "VendorID"
                mov     rsi, cs:selRef_stringWithUTF8String_ ; char *
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r12, rax
                mov     rdi, r13        ; void *
                mov     rsi, cs:selRef_setObject_forKey_ ; char *
                mov     rdx, r15
                mov     rcx, rax
                call    r14 ; _objc_msgSend
                mov     rdi, r12
                call    cs:_objc_release_ptr
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, cs:selRef_arrayWithObjects_ ; char *
                mov     rdx, r13
                xor     ecx, ecx
                xor     eax, eax
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r15, rax
                mov     r12, cs:selRef_hidManager
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     rdi, rax
                mov     rsi, r15
                call    _IOHIDManagerSetDeviceMatchingMultiple
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     r13, rax
                call    _CFRunLoopGetCurrent
                mov     rcx, cs:_kCFRunLoopDefaultMode_ptr
                mov     rdx, [rcx]
                mov     rdi, r13
                mov     rsi, rax
                call    _IOHIDManagerScheduleWithRunLoop
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                mov     rdi, rax
                xor     esi, esi
                call    _IOHIDManagerOpen
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                lea     rsi, sub_10002D5C3
                mov     rdi, rax
                mov     rdx, rbx
                call    _IOHIDManagerRegisterDeviceMatchingCallback
                mov     rdi, rbx        ; void *
                mov     rsi, r12        ; char *
                call    r14 ; _objc_msgSend ; -[SHIDManager hidManager]
                lea     rsi, sub_10002D650
                mov     rdi, rax
                mov     rdx, rbx
                call    _IOHIDManagerRegisterDeviceRemovalCallback
                mov     rdi, r15
                call    cs:_objc_release_ptr
                mov     rdi, [rbp+var_30.var0.var0]
                mov     rax, cs:_objc_release_ptr
                add     rsp, 8
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     rax
__SHIDHJZ_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __IOHIDDevice *__cdecl -[SHIDHJZ device](SHIDHJZ *self, SEL)
__SHIDHJZ_device_ proc near             ; DATA XREF: __objc_const:0000000100046BF0↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDHJZ__device ; __IOHIDDevice *_device;
                mov     rax, [rdi+rax]
                pop     rbp
                retn
__SHIDHJZ_device_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDHJZ setDevice:](SHIDHJZ *self, SEL, __IOHIDDevice *)
__SHIDHJZ_setDevice__ proc near         ; DATA XREF: __objc_const:0000000100046C08↓o
                push    rbp
                mov     rbp, rsp
                mov     rax, cs:_OBJC_IVAR_$_SHIDHJZ__device ; __IOHIDDevice *_device;
                mov     [rdi+rax], rdx
                pop     rbp
                retn
__SHIDHJZ_setDevice__ endp


; =============== S U B R O U T I N E =======================================


; id __cdecl +[MJFoundation foundationClasses](MJFoundation_meta *self, SEL)
__MJFoundation_foundationClasses_ proc near
                                        ; DATA XREF: __objc_const:0000000100046CB0↓o
                mov     rdi, cs:qword_100075E88
                test    rdi, rdi
                jnz     _objc_retainAutoreleaseReturnValue
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 38h
                mov     rax, cs:classRef_NSSet
                mov     [rbp-58h], rax
                mov     rdi, cs:classRef_NSURL ; void *
                mov     r15, cs:selRef_class
                mov     r14, cs:_objc_msgSend_ptr
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp-50h], rax
                mov     rdi, cs:classRef_NSDate ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp-48h], rax
                mov     rdi, cs:classRef_NSValue ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp-40h], rax
                mov     rdi, cs:classRef_NSData ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp-38h], rax
                mov     rdi, cs:classRef_NSError ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     [rbp-30h], rax
                mov     rdi, cs:classRef_NSArray ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     r12, rax
                mov     rdi, cs:classRef_NSDictionary ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     r13, rax
                mov     rdi, cs:classRef_NSString ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     rbx, rax
                mov     rdi, cs:classRef_NSAttributedString ; void *
                mov     rsi, r15        ; char *
                call    r14 ; _objc_msgSend
                mov     r10, rax
                mov     rsi, cs:selRef_setWithObjects_ ; char *
                mov     rdi, [rbp-58h]  ; void *
                mov     rdx, [rbp-50h]
                mov     rcx, [rbp-48h]
                mov     r8, [rbp-40h]
                mov     r9, [rbp-38h]
                xor     eax, eax
                push    0
                push    r10
                push    rbx
                push    r13
                push    r12
                push    qword ptr [rbp-30h]
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                add     rsp, 30h
                mov     rdi, cs:qword_100075E88
                mov     cs:qword_100075E88, rax
                call    cs:_objc_release_ptr
                mov     rdi, cs:qword_100075E88
                add     rsp, 38h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_retainAutoreleaseReturnValue
__MJFoundation_foundationClasses_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; char __cdecl +[MJFoundation isClassFromFoundation:](MJFoundation_meta *self, SEL, Class)
__MJFoundation_isClassFromFoundation__ proc near
                                        ; CODE XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+AB↑P
                                        ; -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+7B↑P ...

var_70          = qword ptr -70h
anonymous_3     = qword ptr -68h
anonymous_4     = qword ptr -60h
anonymous_5     = qword ptr -58h
anonymous_7     = qword ptr -50h
anonymous_6     = qword ptr -48h
var_40          = qword ptr -40h
anonymous_0     = qword ptr -38h
anonymous_1     = qword ptr -30h
anonymous_2     = byte ptr -28h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 50h
                mov     rbx, rdx
                mov     r14, rdi
                mov     rdi, cs:classRef_NSObject ; void *
                mov     r15, cs:selRef_class
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                mov     r12b, 1
                cmp     rax, rbx
                jz      loc_10002DAA9
                mov     rdi, cs:classRef_NSManagedObject ; void *
                mov     rsi, r15        ; char *
                call    cs:_objc_msgSend_ptr
                cmp     rax, rbx
                jz      loc_10002DAA9
                lea     r15, [rbp+var_40]
                mov     qword ptr [r15], 0
                mov     [r15+8], r15
                mov     rax, 2020000000h
                mov     [r15+10h], rax
                mov     byte ptr [r15+18h], 0
                mov     rsi, cs:selRef_foundationClasses ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     r14, rax
                mov     rax, cs:__NSConcreteStackBlock_ptr
                lea     rdx, [rbp+var_70]
                mov     [rdx], rax
                mov     eax, 0C2000000h
                mov     [rdx+8], rax
                lea     rax, sub_10002DAD3
                mov     [rdx+10h], rax
                lea     rax, unk_10003A888
                mov     [rdx+18h], rax
                mov     [rdx+28h], rbx
                mov     [rdx+20h], r15
                mov     rsi, cs:selRef_enumerateObjectsUsingBlock_ ; char *
                mov     rdi, r14        ; void *
                call    cs:_objc_msgSend_ptr
                mov     rdi, r14
                call    cs:_objc_release_ptr
                lea     rdi, [rbp+var_40] ; void *
                mov     rax, [rdi+8]
                mov     r12b, [rax+18h]
                mov     esi, 8          ; int
                call    __Block_object_dispose

loc_10002DAA9:                          ; CODE XREF: +[MJFoundation isClassFromFoundation:]+32↑j
                                        ; +[MJFoundation isClassFromFoundation:]+4B↑j
                movsx   eax, r12b
                add     rsp, 50h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                retn
__MJFoundation_isClassFromFoundation__ endp

; ---------------------------------------------------------------------------
                mov     rbx, rax
                lea     rdi, [rbp-40h]
                mov     esi, 8
                call    __Block_object_dispose
                mov     rdi, rbx
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002DAD3   proc near               ; DATA XREF: +[MJFoundation isClassFromFoundation:]+A5↑o
                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                mov     rbx, rdx
                mov     rdx, rsi
                mov     r14, rdi
                mov     rdi, [rdi+28h]  ; void *
                mov     rsi, cs:selRef_isSubclassOfClass_ ; char *
                call    cs:_objc_msgSend_ptr
                test    al, al
                jz      short loc_10002DB07
                mov     rax, [r14+20h]
                mov     rax, [rax+8]
                mov     cl, 1
                mov     [rax+18h], cl
                mov     [rbx], cl

loc_10002DB07:                          ; CODE XREF: sub_10002DAD3+23↑j
                pop     rbx
                pop     r14
                pop     rbp
                retn
sub_10002DAD3   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002DB0C   proc near               ; CODE XREF: sub_100006CCA+19C↑p
                                        ; sub_1000076C6+14↑p ...

var_10          = qword ptr -10h

                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                lea     rbx, [rbp+var_10]
                mov     qword ptr [rbx], 0
                lea     rsi, cfstr_Vendorid ; "VendorID"
                mov     rdx, rbx
                call    sub_10002DB36
                mov     rax, [rbx]
                add     rsp, 8
                pop     rbx
                pop     rbp
                retn
sub_10002DB0C   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002DB36   proc near               ; CODE XREF: sub_10002DB0C+1B↑p
                                        ; sub_10002DBB9+1B↓p ...
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                push    rax
                test    rdi, rdi
                setz    al
                test    rsi, rsi
                setz    cl
                or      cl, al
                test    rdx, rdx
                setz    al
                or      al, cl
                jnz     short loc_10002DB8D
                mov     rbx, rdx
                call    _IOHIDDeviceGetProperty
                mov     r14, rax
                test    rax, rax
                jz      short loc_10002DB8D
                call    _CFNumberGetTypeID
                mov     r15, rax
                mov     rdi, r14
                call    _CFGetTypeID
                cmp     r15, rax
                jnz     short loc_10002DB8D
                mov     esi, 3
                mov     rdi, r14
                mov     rdx, rbx
                call    _CFNumberGetValue

loc_10002DB8D:                          ; CODE XREF: sub_10002DB36+20↑j
                                        ; sub_10002DB36+30↑j ...
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
sub_10002DB36   endp

; ---------------------------------------------------------------------------
                mov     rdi, rax
                cmp     edx, 1
                jnz     short loc_10002DBB4
                call    _objc_begin_catch
                add     rsp, 8
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _objc_end_catch
; ---------------------------------------------------------------------------

loc_10002DBB4:                          ; CODE XREF: __text:000000010002DB9E↑j
                call    __Unwind_Resume

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002DBB9   proc near               ; CODE XREF: sub_100006CCA+1A7↑p
                                        ; sub_1000076C6+1F↑p ...

var_10          = qword ptr -10h

                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                lea     rbx, [rbp+var_10]
                mov     qword ptr [rbx], 0
                lea     rsi, cfstr_Productid ; "ProductID"
                mov     rdx, rbx
                call    sub_10002DB36
                mov     rax, [rbx]
                add     rsp, 8
                pop     rbx
                pop     rbp
                retn
sub_10002DBB9   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

setReport151    proc near               ; CODE XREF: -[UpdateView switchBoot]+31C↑p
                                        ; -[UpdateView macBoot]+1C8↑p ...

var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                xorps   xmm0, xmm0
                movaps  [rbp+var_50], xmm0
                movaps  [rbp+var_20], xmm0
                movaps  [rbp+var_30], xmm0
                movaps  [rbp+var_40], xmm0
                mov     byte ptr [rbp+var_50], cl
                mov     word ptr [rbp+var_50+1], 0AA66h
                mov     byte ptr [rbp+var_50+4], dl
                mov     byte ptr [rbp+var_50+5], 1
                mov     byte ptr [rbp+var_50+7], 0
                mov     eax, 0E00002BCh
                cmp     esi, 97h
                jnz     short loc_10002DC4C
                test    rdi, rdi
                jz      short loc_10002DC4A
                lea     rcx, [rbp+var_50]
                mov     r8d, 40h
                mov     esi, 1
                xor     edx, edx
                call    _IOHIDDeviceSetReport
                jmp     short loc_10002DC4C
; ---------------------------------------------------------------------------

loc_10002DC4A:                          ; CODE XREF: setReport151+4D↑j
                xor     eax, eax

loc_10002DC4C:                          ; CODE XREF: setReport151+48↑j
                                        ; setReport151+65↑j
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_8]
                jnz     short loc_10002DC62
                add     rsp, 50h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10002DC62:                          ; CODE XREF: setReport151+77↑j
                call    ___stack_chk_fail
setReport151    endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

setReportOneFrame proc near             ; CODE XREF: sub_100006F09+4D1↑p
                                        ; sub_1000074F5+7C↑p ...
                push    rbp
                mov     rbp, rsp
                test    rdi, rdi
                jz      short loc_10002DC86
                mov     rcx, rsi
                mov     r8d, 40h
                mov     esi, 1
                xor     edx, edx
                pop     rbp
                jmp     _IOHIDDeviceSetReport
; ---------------------------------------------------------------------------

loc_10002DC86:                          ; CODE XREF: setReportOneFrame+7↑j
                xor     eax, eax
                pop     rbp
                retn
setReportOneFrame endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

setReport151OneFrame1 proc near         ; CODE XREF: -[UpdateView switchBoot]+222↑p
                                        ; -[UpdateView macBoot]+180↑p

var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_8           = qword ptr -8

                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_8], rax
                xorps   xmm0, xmm0
                movaps  [rbp+var_50], xmm0
                movaps  [rbp+var_20], xmm0
                movaps  [rbp+var_30], xmm0
                movaps  [rbp+var_40], xmm0
                mov     byte ptr [rbp+var_50], cl
                mov     word ptr [rbp+var_50+1], 0AA66h
                mov     byte ptr [rbp+var_50+4], dl
                mov     byte ptr [rbp+var_50+5], r8b
                mov     byte ptr [rbp+var_50+7], 0
                mov     eax, 0E00002BCh
                cmp     esi, 97h
                jnz     short loc_10002DCF3
                test    rdi, rdi
                jz      short loc_10002DCF1
                lea     rcx, [rbp+var_50]
                mov     r8d, 40h
                mov     esi, 1
                xor     edx, edx
                call    _IOHIDDeviceSetReport
                jmp     short loc_10002DCF3
; ---------------------------------------------------------------------------

loc_10002DCF1:                          ; CODE XREF: setReport151OneFrame1+4D↑j
                xor     eax, eax

loc_10002DCF3:                          ; CODE XREF: setReport151OneFrame1+48↑j
                                        ; setReport151OneFrame1+65↑j
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_8]
                jnz     short loc_10002DD09
                add     rsp, 50h
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10002DD09:                          ; CODE XREF: setReport151OneFrame1+77↑j
                call    ___stack_chk_fail
setReport151OneFrame1 endp


; =============== S U B R O U T I N E =======================================


sub_10002DD0E   proc near
                test    esi, esi
                jz      short loc_10002DD4D
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                mov     rbx, rdi
                movzx   r15d, si
                lea     r14, a02x_1     ; "%02X "
                xor     r12d, r12d

loc_10002DD2E:                          ; CODE XREF: sub_10002DD0E+35↓j
                movzx   esi, byte ptr [rbx+r12]
                mov     rdi, r14        ; char *
                xor     eax, eax
                call    _printf
                inc     r12
                cmp     r15, r12
                jnz     short loc_10002DD2E
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp

loc_10002DD4D:                          ; CODE XREF: sub_10002DD0E+2↑j
                mov     edi, 0Ah        ; int
                jmp     _putchar
sub_10002DD0E   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

setReport3206   proc near               ; CODE XREF: sub_100006F09+2EA↑j
                                        ; sub_1000076C6+102↑p ...

var_31          = xmmword ptr -31h
var_20          = qword ptr -20h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 48h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_20], rax
                mov     eax, 0E00002BCh
                cmp     esi, 97h
                jnz     loc_10002DE59
                mov     r14d, ecx
                mov     r15d, edx
                mov     rbx, rdi
                mov     byte ptr cs:xmmword_100075D70, 6
                call    sub_10002DE79
                test    al, al
                jz      short loc_10002DDA3
                mov     byte ptr cs:xmmword_100075D70, 5

loc_10002DDA3:                          ; CODE XREF: setReport3206+43↑j
                mov     byte ptr cs:xmmword_100075D70+1, 0
                mov     byte ptr cs:xmmword_100075D70+2, r15b
                mov     word ptr cs:xmmword_100075D70+3, 1
                mov     byte ptr cs:xmmword_100075D70+5, r14b
                mov     rdi, rbx
                call    checkPIDVIDIS3206
                test    al, al
                jz      short loc_10002DE1C
                movups  xmm0, cs:xmmword_100075D90+0Fh
                movups  [rbp+var_31], xmm0
                movaps  xmm0, cs:xmmword_100075D90
                movaps  xmmword ptr [rbp-40h], xmm0
                movaps  xmm0, cs:xmmword_100075D80
                movaps  xmm1, cs:xmmword_100075D70
                mov     byte ptr cs:xmmword_100075D70, 81h
                movups  cs:xmmword_100075D70+1, xmm1
                movups  cs:xmmword_100075D80+1, xmm0
                movaps  xmm0, xmmword ptr [rbp-40h]
                movups  cs:xmmword_100075D90+1, xmm0
                movups  xmm0, [rbp+var_31]
                movups  cs:xmmword_100075DA0, xmm0

loc_10002DE1C:                          ; CODE XREF: setReport3206+74↑j
                test    rbx, rbx
                jz      short loc_10002DE57
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rbp+var_20]
                jnz     short loc_10002DE74
                lea     rcx, xmmword_100075D70
                mov     r8d, 40h
                mov     rdi, rbx
                mov     esi, 1
                xor     edx, edx
                add     rsp, 48h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                jmp     _IOHIDDeviceSetReport
; ---------------------------------------------------------------------------

loc_10002DE57:                          ; CODE XREF: setReport3206+C8↑j
                xor     eax, eax

loc_10002DE59:                          ; CODE XREF: setReport3206+26↑j
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_20]
                jnz     short loc_10002DE74
                add     rsp, 48h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10002DE74:                          ; CODE XREF: setReport3206+D8↑j
                                        ; setReport3206+110↑j
                call    ___stack_chk_fail
setReport3206   endp


; =============== S U B R O U T I N E =======================================


sub_10002DE79   proc near               ; CODE XREF: setReport3206+3C↑p
                test    rdi, rdi
                jz      short loc_10002DEEA
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 10h
                mov     rbx, rdi
                xor     r15d, r15d
                lea     r14, [rbp-28h]
                mov     [r14], r15
                lea     rsi, cfstr_Vendorid ; "VendorID"
                mov     rdx, r14
                call    sub_10002DB36
                mov     rax, [r14]
                movzx   r12d, ax
                mov     [r14], r15
                lea     rsi, cfstr_Productid ; "ProductID"
                mov     rdi, rbx
                mov     rdx, r14
                call    sub_10002DB36
                movzx   eax, word ptr [r14]
                xor     rax, 9018h
                xor     r12, 2DC8h
                or      r12, rax
                setz    al
                add     rsp, 10h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     short loc_10002DEEC
; ---------------------------------------------------------------------------

loc_10002DEEA:                          ; CODE XREF: sub_10002DE79+3↑j
                xor     eax, eax

loc_10002DEEC:                          ; CODE XREF: sub_10002DE79+6F↑j
                movzx   eax, al
                retn
sub_10002DE79   endp


; =============== S U B R O U T I N E =======================================


checkPIDVIDIS3206 proc near             ; CODE XREF: setReport3206+6D↑p
                                        ; flashfirmware+37↓p ...
                test    rdi, rdi
                jz      short loc_10002DF61
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r12
                push    rbx
                sub     rsp, 10h
                mov     rbx, rdi
                xor     r15d, r15d
                lea     r14, [rbp-28h]
                mov     [r14], r15
                lea     rsi, cfstr_Vendorid ; "VendorID"
                mov     rdx, r14
                call    sub_10002DB36
                mov     rax, [r14]
                movzx   r12d, ax
                mov     [r14], r15
                lea     rsi, cfstr_Productid ; "ProductID"
                mov     rdi, rbx
                mov     rdx, r14
                call    sub_10002DB36
                movzx   eax, word ptr [r14]
                xor     rax, 3206h
                xor     r12, 2DC8h
                or      r12, rax
                setz    al
                add     rsp, 10h
                pop     rbx
                pop     r12
                pop     r14
                pop     r15
                pop     rbp
                jmp     short loc_10002DF63
; ---------------------------------------------------------------------------

loc_10002DF61:                          ; CODE XREF: checkPIDVIDIS3206+3↑j
                xor     eax, eax

loc_10002DF63:                          ; CODE XREF: checkPIDVIDIS3206+6F↑j
                movzx   eax, al
                retn
checkPIDVIDIS3206 endp


; =============== S U B R O U T I N E =======================================

; rdi --buff
; Attributes: bp-based frame

flashfirmware   proc near               ; CODE XREF: sub_100006B20+7C↑p
                                        ; sub_100006C6A+31↑p ...

var_478         = dword ptr -478h
var_474         = dword ptr -474h
var_441         = xmmword ptr -441h
var_430         = word ptr -430h
var_42E         = byte ptr -42Eh
var_42D         = byte ptr -42Dh
var_42C         = byte ptr -42Ch
anonymous_0     = word ptr -42Bh
var_429         = byte ptr -429h
var_30          = qword ptr -30h

                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 458h
                mov     r14d, r8d
                mov     r12, rcx
                mov     [rbp+var_478], edx
                mov     [rbp+var_474], esi
                mov     rbx, rdi
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rbp+var_30], rax
                call    checkPIDVIDIS3206
                cmp     al, 1
                mov     r15d, 8
                sbb     r15d, 0
                mov     [rbp+var_430], 1600h
                test    r14d, r14d
                jle     short loc_10002DFE9
                mov     rsi, r12
                lea     r12d, [r14+3]
                mov     r13d, r12d
                shr     r13d, 8
                lea     rdi, [rbp+var_429]
                mov     [rdi-2], r14w
                mov     edx, r14d
                mov     ecx, 3F9h
                call    ___memcpy_chk
                add     r14d, r15d
                jmp     short loc_10002DFF5
; ---------------------------------------------------------------------------

loc_10002DFE9:                          ; CODE XREF: flashfirmware+54↑j
                mov     r14d, 5
                mov     r12b, 1
                xor     r13d, r13d

loc_10002DFF5:                          ; CODE XREF: flashfirmware+80↑j
                mov     [rbp+var_42E], r12b
                mov     [rbp+var_42D], r13b
                mov     ecx, [rbp+var_478]
                mov     [rbp+var_42C], cl
                mov     eax, 0E00002BCh
                cmp     byte ptr [rbp+var_474], 97h
                jnz     loc_10002E1F8
                test    cl, cl
                jz      loc_10002E0DC
                mov     byte ptr cs:xmmword_100075D70, r14b
                mov     edx, r14d
                lea     rdi, xmmword_100075D70+1
                lea     rsi, [rbp+var_430]
                mov     ecx, 3Fh
                call    ___memcpy_chk
                mov     rdi, rbx
                call    checkPIDVIDIS3206
                test    al, al
                jz      short loc_10002E0B2
                movups  xmm0, cs:xmmword_100075D90+0Fh
                movups  [rbp+var_441], xmm0
                movaps  xmm0, cs:xmmword_100075D90
                movaps  xmmword ptr [rbp-450h], xmm0
                movaps  xmm0, cs:xmmword_100075D80
                movaps  xmm1, cs:xmmword_100075D70
                mov     byte ptr cs:xmmword_100075D70, 81h
                movups  cs:xmmword_100075D70+1, xmm1
                movups  cs:xmmword_100075D80+1, xmm0
                movaps  xmm0, xmmword ptr [rbp-450h]
                movups  cs:xmmword_100075D90+1, xmm0
                movups  xmm0, [rbp+var_441]
                movups  cs:xmmword_100075DA0, xmm0

loc_10002E0B2:                          ; CODE XREF: flashfirmware+EE↑j
                test    rbx, rbx
                jz      loc_10002E1AD
                lea     rcx, xmmword_100075D70
                mov     r8d, 40h
                mov     rdi, rbx
                mov     esi, 1
                xor     edx, edx
                call    _IOHIDDeviceSetReport
                jmp     loc_10002E1F8
; ---------------------------------------------------------------------------

loc_10002E0DC:                          ; CODE XREF: flashfirmware+BC↑j
                or      r15d, 20h
                xor     r12d, r12d

loc_10002E0E3:                          ; CODE XREF: flashfirmware+23E↓j
                cmp     r14d, r15d
                mov     r13d, r15d
                cmovl   r13d, r14d
                mov     byte ptr cs:xmmword_100075D70, r13b
                mov     eax, r12d
                lea     rsi, [rbp+rax+var_430]
                mov     ecx, 3Fh
                lea     rdi, xmmword_100075D70+1
                mov     rdx, r13
                call    ___memcpy_chk
                mov     rdi, rbx
                call    checkPIDVIDIS3206
                test    al, al
                jz      short loc_10002E17A
                movups  xmm0, cs:xmmword_100075D90+0Fh
                movups  [rbp+var_441], xmm0
                movaps  xmm0, cs:xmmword_100075D90
                movaps  xmmword ptr [rbp-450h], xmm0
                movaps  xmm0, cs:xmmword_100075D80
                movaps  xmm1, cs:xmmword_100075D70
                mov     byte ptr cs:xmmword_100075D70, 81h
                movups  cs:xmmword_100075D70+1, xmm1
                movups  cs:xmmword_100075D80+1, xmm0
                movaps  xmm0, xmmword ptr [rbp-450h]
                movups  cs:xmmword_100075D90+1, xmm0
                movups  xmm0, [rbp+var_441]
                movups  cs:xmmword_100075DA0, xmm0

loc_10002E17A:                          ; CODE XREF: flashfirmware+1B6↑j
                test    rbx, rbx
                jz      short loc_10002E19F
                mov     r8d, 40h
                mov     rdi, rbx
                mov     esi, 1
                xor     edx, edx
                lea     rcx, xmmword_100075D70
                call    _IOHIDDeviceSetReport
                test    eax, eax
                jnz     short loc_10002E1B1

loc_10002E19F:                          ; CODE XREF: flashfirmware+216↑j
                add     r12d, r13d
                sub     r14d, r13d
                jg      loc_10002E0E3
                jmp     short loc_10002E1F3
; ---------------------------------------------------------------------------

loc_10002E1AD:                          ; CODE XREF: flashfirmware+14E↑j
                xor     eax, eax
                jmp     short loc_10002E1F8
; ---------------------------------------------------------------------------

loc_10002E1B1:                          ; CODE XREF: flashfirmware+236↑j
                mov     rdi, cs:classRef_NSNotificationCenter ; void *
                mov     rsi, cs:selRef_defaultCenter ; char *
                mov     r14, cs:_objc_msgSend_ptr
                call    r14 ; _objc_msgSend
                mov     rdi, rax
                call    _objc_retainAutoreleasedReturnValue
                mov     rbx, rax
                mov     rsi, cs:selRef_postNotificationName_object_ ; char *
                lea     rdx, cfstr_Updateerrornot ; "updateErrorNotification"
                mov     rdi, rax        ; void *
                xor     ecx, ecx
                call    r14 ; _objc_msgSend
                mov     rdi, rbx
                call    cs:_objc_release_ptr

loc_10002E1F3:                          ; CODE XREF: flashfirmware+244↑j
                mov     eax, 0E00002BCh

loc_10002E1F8:                          ; CODE XREF: flashfirmware+B4↑j
                                        ; flashfirmware+170↑j ...
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rbp+var_30]
                jnz     short loc_10002E21A
                add     rsp, 458h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10002E21A:                          ; CODE XREF: flashfirmware+29F↑j
                call    ___stack_chk_fail
flashfirmware   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; SHIDManager *__cdecl -[SHIDManager init](SHIDManager *self, SEL)
__SHIDManager_init_ proc near           ; DATA XREF: __objc_const:0000000100046DE0↓o

var_20          = qword ptr -20h
anonymous_0     = qword ptr -18h

                push    rbp
                mov     rbp, rsp
                push    r14
                push    rbx
                sub     rsp, 10h
                lea     rax, [rbp+var_20]
                mov     [rax], rdi
                mov     rcx, cs:classRef_SHIDManager
                mov     [rax+8], rcx
                mov     r14, cs:selRef_init
                mov     rdi, rax
                mov     rsi, r14
                call    _objc_msgSendSuper2
                mov     rbx, rax
                test    rax, rax
                jz      short loc_10002E295
                mov     rax, cs:_kCFAllocatorDefault_ptr
                mov     rdi, [rax]
                xor     esi, esi
                call    _IOHIDManagerCreate
                mov     [rbx+50h], rax
                mov     byte ptr [rbx+48h], 40h
                mov     rdi, cs:classRef_NSMutableArray
                call    _objc_alloc
                mov     rdi, rax        ; void *
                mov     rsi, r14        ; char *
                call    cs:_objc_msgSend_ptr
                mov     rdi, [rbx+60h]
                mov     [rbx+60h], rax
                call    cs:_objc_release_ptr

loc_10002E295:                          ; CODE XREF: -[SHIDManager init]+35↑j
                mov     rax, rbx
                add     rsp, 10h
                pop     rbx
                pop     r14
                pop     rbp
                retn
__SHIDManager_init_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDManager open](SHIDManager *self, SEL)
__SHIDManager_open_ proc near           ; DATA XREF: __objc_const:0000000100046DF8↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__SHIDManager_open_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl +[SHIDManager boot:](SHIDManager_meta *self, SEL, __IOHIDDevice *)
__SHIDManager_boot__ proc near          ; DATA XREF: __objc_const:0000000100046D78↓o
                push    rbp
                mov     rbp, rsp
                pop     rbp
                retn
__SHIDManager_boot__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __IOHIDManager *__cdecl -[SHIDManager hidManager](SHIDManager *self, SEL)
__SHIDManager_hidManager_ proc near     ; CODE XREF: -[SHIDBoot open]+2CB↑P
                                        ; -[SHIDBoot open]+2DE↑P ...
                push    rbp
                mov     rbp, rsp
                mov     rax, [rdi+50h]
                pop     rbp
                retn
__SHIDManager_hidManager_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDManager setHidManager:](SHIDManager *self, SEL, __IOHIDManager *)
__SHIDManager_setHidManager__ proc near ; CODE XREF: -[SHIDBoot open]+44↑P
                                        ; -[SHIDBootPro2 open]+3D↑P ...
                push    rbp
                mov     rbp, rsp
                mov     [rdi+50h], rdx
                pop     rbp
                retn
__SHIDManager_setHidManager__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; DeviceDelegate *__cdecl -[SHIDManager delegate](SHIDManager *self, SEL)
__SHIDManager_delegate_ proc near       ; CODE XREF: -[SHIDSwitchAndMac addS8BitdoDeviceRefreshUI:]+22↑P
                                        ; -[SHIDSwitchAndMac addS8BitdoDeviceRefreshUI:]+5F↑P ...
                push    rbp
                mov     rbp, rsp
                add     rdi, 58h
                call    _objc_loadWeakRetained
                mov     rdi, rax
                pop     rbp
                jmp     _objc_autoreleaseReturnValue
__SHIDManager_delegate_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDManager setDelegate:](SHIDManager *self, SEL, id)
__SHIDManager_setDelegate__ proc near   ; DATA XREF: __objc_const:0000000100046E58↓o
                push    rbp
                mov     rbp, rsp
                add     rdi, 58h
                mov     rsi, rdx
                pop     rbp
                jmp     _objc_storeWeak
__SHIDManager_setDelegate__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; NSMutableArray *__cdecl -[SHIDManager devices](SHIDManager *self, SEL)
__SHIDManager_devices_ proc near        ; CODE XREF: -[SHIDSwitchAndMac getDeviceWithRef:]+54↑P
                                        ; -[SHIDDinput getDeviceWithRef:]+54↑P ...
                push    rbp
                mov     rbp, rsp
                mov     edx, 60h
                mov     ecx, 1
                pop     rbp
                jmp     _objc_getProperty
__SHIDManager_devices_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDManager setDevices:](SHIDManager *self, SEL, id)
__SHIDManager_setDevices__ proc near    ; DATA XREF: __objc_const:0000000100046E88↓o
                push    rbp
                mov     rbp, rsp
                mov     ecx, 60h
                pop     rbp
                jmp     _objc_setProperty_atomic
__SHIDManager_setDevices__ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __cdecl -[SHIDManager .cxx_destruct](SHIDManager *self, SEL)
__SHIDManager__cxx_destruct_ proc near  ; DATA XREF: __objc_const:0000000100046EA0↓o
                push    rbp
                mov     rbp, rsp
                push    rbx
                push    rax
                mov     rbx, rdi
                add     rdi, 60h
                xor     esi, esi
                call    _objc_storeStrong
                add     rbx, 58h
                mov     rdi, rbx
                add     rsp, 8
                pop     rbx
                pop     rbp
                jmp     _objc_destroyWeak
__SHIDManager__cxx_destruct_ endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_10002E340   proc near
                cmp     cs:predicate, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10002E37B
                mov     ecx, cs:dword_100075E98
                mov     eax, 1
                cmp     ecx, edi
                jg      short locret_10002E37A

loc_10002E359:                          ; CODE XREF: sub_10002E340+63↓j
                cmp     ecx, edi
                jge     short loc_10002E360
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------

loc_10002E360:                          ; CODE XREF: sub_10002E340+1B↑j
                cmp     cs:dword_100075E9C, esi
                jg      short locret_10002E37A
                mov     eax, 0
                jl      short locret_10002E37A
                xor     eax, eax
                cmp     cs:dword_100075EA0, edx
                setnl   al

locret_10002E37A:                       ; CODE XREF: sub_10002E340+17↑j
                                        ; sub_10002E340+26↑j ...
                retn
; ---------------------------------------------------------------------------

loc_10002E37B:                          ; CODE XREF: sub_10002E340+8↑j
                push    rbp
                push    r14
                push    rbx
                mov     ebx, edx
                mov     r14d, esi
                mov     ebp, edi
                call    sub_10002EA00
                mov     edi, ebp
                mov     esi, r14d
                mov     edx, ebx
                pop     rbx
                pop     r14
                pop     rbp
                mov     ecx, cs:dword_100075E98
                mov     eax, 1
                cmp     ecx, edi
                jle     short loc_10002E359
                jmp     short locret_10002E37A
sub_10002E340   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


; void __cdecl function(void *)
function        proc near               ; DATA XREF: sub_10002EA00+7↓o
                                        ; sub_10002EA60+7↓o
; __unwind {
                mov     edi, 1
                jmp     sub_10002E690
; } // starts at 10002E3B0
function        endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_10002E3C0   proc near               ; CODE XREF: -[HomeView awakeFromNib]+2D5↑p

var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h

                push    rbp
                push    r15
                push    r14
                push    rbx
                sub     rsp, 18h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rsp+38h+var_28], rax
                cmp     cs:qword_100075EA8, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10002E418
                cmp     cs:qword_100075EB0, 0
                jz      short loc_10002E43B

loc_10002E3ED:                          ; CODE XREF: sub_10002E3C0+79↓j
                mov     [rsp+38h+var_30], edi
                shl     esi, 10h
                shl     edx, 8
                movzx   eax, dx
                or      eax, esi
                movzx   ecx, cl
                or      ecx, eax
                mov     [rsp+38h+var_2C], ecx
                lea     rsi, [rsp+38h+var_30]
                mov     edi, 1
                call    __availability_version_check
                mov     ebx, eax
                jmp     short loc_10002E471
; ---------------------------------------------------------------------------

loc_10002E418:                          ; CODE XREF: sub_10002E3C0+21↑j
                mov     ebx, ecx
                mov     r14d, edx
                mov     ebp, esi
                mov     r15d, edi
                call    sub_10002EA20
                mov     edi, r15d
                mov     esi, ebp
                mov     edx, r14d
                mov     ecx, ebx
                cmp     cs:qword_100075EB0, 0
                jnz     short loc_10002E3ED

loc_10002E43B:                          ; CODE XREF: sub_10002E3C0+2B↑j
                mov     bl, 1
                cmp     edi, 1
                jnz     short loc_10002E471
                cmp     cs:predicate, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10002E490
                mov     eax, cs:dword_100075E98
                cmp     eax, esi
                jg      short loc_10002E471

loc_10002E456:                          ; CODE XREF: sub_10002E3C0+ED↓j
                jge     short loc_10002E45C

loc_10002E458:                          ; CODE XREF: sub_10002E3C0+A6↓j
                xor     ebx, ebx
                jmp     short loc_10002E471
; ---------------------------------------------------------------------------

loc_10002E45C:                          ; CODE XREF: sub_10002E3C0:loc_10002E456↑j
                mov     eax, cs:dword_100075E9C
                cmp     eax, edx
                jg      short loc_10002E471
                jl      short loc_10002E458
                cmp     cs:dword_100075EA0, ecx
                setnl   bl

loc_10002E471:                          ; CODE XREF: sub_10002E3C0+56↑j
                                        ; sub_10002E3C0+80↑j ...
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rsp+38h+var_28]
                jnz     short loc_10002E4B1
                movzx   eax, bl
                add     rsp, 18h
                pop     rbx
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10002E490:                          ; CODE XREF: sub_10002E3C0+8A↑j
                mov     ebp, ecx
                mov     r15d, edx
                mov     r14d, esi
                call    sub_10002EA00
                mov     esi, r14d
                mov     edx, r15d
                mov     ecx, ebp
                mov     eax, cs:dword_100075E98
                cmp     eax, esi
                jle     short loc_10002E456
                jmp     short loc_10002E471
; ---------------------------------------------------------------------------

loc_10002E4B1:                          ; CODE XREF: sub_10002E3C0+C0↑j
                call    ___stack_chk_fail
sub_10002E3C0   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


; void __cdecl sub_10002E4C0(void *)
sub_10002E4C0   proc near               ; DATA XREF: sub_10002EA20+7↓o
; __unwind {
                xor     edi, edi
                jmp     sub_10002E690
; } // starts at 10002E4C0
sub_10002E4C0   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_10002E4D0   proc near

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
arg_0           = dword ptr  8
arg_8           = dword ptr  10h

                push    rbp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 18h
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rsp+48h+var_38], rax
                cmp     cs:qword_100075EA8, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10002E573
                mov     ebx, [rsp+48h+arg_8]
                mov     ebp, [rsp+48h+arg_0]
                cmp     cs:qword_100075EB0, 0
                jz      loc_10002E5B0

loc_10002E50D:                          ; CODE XREF: sub_10002E4D0+DA↓j
                mov     [rsp+48h+var_48], edi
                shl     esi, 10h
                shl     edx, 8
                movzx   eax, dx
                or      eax, esi
                movzx   ecx, cl
                or      ecx, eax
                mov     [rsp+48h+var_44], ecx
                mov     [rsp+48h+var_40], r8d
                shl     r9d, 10h
                shl     ebp, 8
                movzx   eax, bp
                or      eax, r9d
                movzx   ecx, bl
                or      ecx, eax
                mov     [rsp+48h+var_3C], ecx
                mov     rsi, rsp
                mov     edi, 2
                call    __availability_version_check

loc_10002E54C:                          ; CODE XREF: sub_10002E4D0+F9↓j
                                        ; sub_10002E4D0+105↓j ...
                mov     rcx, cs:___stack_chk_guard_ptr
                mov     rcx, [rcx]
                cmp     rcx, [rsp+48h+var_38]
                jnz     loc_10002E67E
                movzx   eax, al
                add     rsp, 18h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10002E573:                          ; CODE XREF: sub_10002E4D0+25↑j
                mov     ebx, r9d
                mov     r15d, ecx
                mov     ebp, edx
                mov     r12d, esi
                mov     r14d, r8d
                mov     r13d, edi
                call    sub_10002EA20
                mov     edi, r13d
                mov     r8d, r14d
                mov     esi, r12d
                mov     edx, ebp
                mov     ecx, r15d
                mov     r9d, ebx
                mov     ebx, [rsp+48h+arg_8]
                mov     ebp, [rsp+48h+arg_0]
                cmp     cs:qword_100075EB0, 0
                jnz     loc_10002E50D

loc_10002E5B0:                          ; CODE XREF: sub_10002E4D0+37↑j
                cmp     edi, 1
                jnz     short loc_10002E5EB
                cmp     cs:predicate, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10002E633
                mov     edi, cs:dword_100075E98
                mov     al, 1
                cmp     edi, esi
                jg      short loc_10002E54C

loc_10002E5CB:                          ; CODE XREF: sub_10002E4D0+186↓j
                jl      short loc_10002E60E
                mov     esi, cs:dword_100075E9C
                cmp     esi, edx
                jg      loc_10002E54C
                jl      short loc_10002E60E
                cmp     cs:dword_100075EA0, ecx
                setnl   al
                jmp     loc_10002E54C
; ---------------------------------------------------------------------------

loc_10002E5EB:                          ; CODE XREF: sub_10002E4D0+E3↑j
                cmp     r8d, 1
                jnz     short loc_10002E65B
                cmp     cs:predicate, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_10002E660
                mov     ecx, cs:dword_100075E98
                mov     al, 1
                cmp     ecx, r9d
                jg      loc_10002E54C

loc_10002E60C:                          ; CODE XREF: sub_10002E4D0+1AC↓j
                jge     short loc_10002E615

loc_10002E60E:                          ; CODE XREF: sub_10002E4D0:loc_10002E5CB↑j
                                        ; sub_10002E4D0+10B↑j ...
                xor     eax, eax
                jmp     loc_10002E54C
; ---------------------------------------------------------------------------

loc_10002E615:                          ; CODE XREF: sub_10002E4D0:loc_10002E60C↑j
                mov     ecx, cs:dword_100075E9C
                cmp     ecx, ebp
                jg      loc_10002E54C
                jl      short loc_10002E60E
                cmp     cs:dword_100075EA0, ebx
                setnl   al
                jmp     loc_10002E54C
; ---------------------------------------------------------------------------

loc_10002E633:                          ; CODE XREF: sub_10002E4D0+ED↑j
                mov     ebx, ecx
                mov     r14d, edx
                mov     ebp, esi
                call    sub_10002EA60
                mov     esi, ebp
                mov     edx, r14d
                mov     ecx, ebx
                mov     edi, cs:dword_100075E98
                mov     al, 1
                cmp     edi, esi
                jg      loc_10002E54C
                jmp     loc_10002E5CB
; ---------------------------------------------------------------------------

loc_10002E65B:                          ; CODE XREF: sub_10002E4D0+11F↑j
                call    sub_10002EA40
; ---------------------------------------------------------------------------

loc_10002E660:                          ; CODE XREF: sub_10002E4D0+129↑j
                mov     r14d, r9d
                call    sub_10002EA00
                mov     r9d, r14d
                mov     ecx, cs:dword_100075E98
                mov     al, 1
                cmp     ecx, r9d
                jg      loc_10002E54C
                jmp     short loc_10002E60C
; ---------------------------------------------------------------------------

loc_10002E67E:                          ; CODE XREF: sub_10002E4D0+8B↑j
                call    ___stack_chk_fail
sub_10002E4D0   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_10002E690   proc near               ; CODE XREF: function+5↑j
                                        ; sub_10002E4C0+2↑j

var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = byte ptr -58h
var_38          = qword ptr -38h

                push    rbp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 68h
                xor     dil, 1
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                mov     [rsp+98h+var_38], rax
                mov     rax, cs:qword_100075EB0
                test    rax, rax
                setnz   cl
                test    cl, dil
                jnz     loc_10002E9AB
                cmp     cs:__imp___availability_version_check_ptr, 0
                jz      short loc_10002E6DF
                mov     rax, cs:__imp___availability_version_check_ptr
                mov     cs:qword_100075EB0, rax

loc_10002E6DF:                          ; CODE XREF: sub_10002E690+3F↑j
                test    rax, rax
                setnz   al
                test    al, dil
                jnz     loc_10002E9AB
                lea     rsi, symbol     ; "kCFAllocatorNull"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                test    rax, rax
                jz      loc_10002E9AB
                mov     rbx, [rax]
                lea     rsi, aCfdatacreatewi ; "CFDataCreateWithBytesNoCopy"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                test    rax, rax
                jz      loc_10002E9AB
                mov     r14, rax
                lea     rsi, aCfpropertylist ; "CFPropertyListCreateWithData"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                mov     r15, rax
                lea     rsi, aCfpropertylist_0 ; "CFPropertyListCreateFromXMLData"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                mov     r13, rax
                mov     rax, r15
                or      rax, r13
                jz      loc_10002E9AB
                lea     rsi, aCfstringcreate ; "CFStringCreateWithCStringNoCopy"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                test    rax, rax
                jz      loc_10002E9AB
                mov     rbp, rax
                lea     rsi, aCfdictionaryge ; "CFDictionaryGetValue"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                test    rax, rax
                jz      loc_10002E9AB
                mov     r12, rax
                lea     rsi, aCfgettypeid ; "CFGetTypeID"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                mov     [rsp+98h+var_60], rax
                test    rax, rax
                jz      loc_10002E9AB
                lea     rsi, aCfstringgettyp ; "CFStringGetTypeID"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                mov     [rsp+98h+var_68], rax
                test    rax, rax
                jz      loc_10002E9AB
                lea     rsi, aCfstringgetcst ; "CFStringGetCString"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                mov     [rsp+98h+var_70], rax
                test    rax, rax
                jz      loc_10002E9AB
                lea     rsi, aCfrelease ; "CFRelease"
                mov     rdi, 0FFFFFFFFFFFFFFFEh ; handle
                call    _dlsym
                mov     [rsp+98h+var_78], rax
                test    rax, rax
                jz      loc_10002E9AB
                lea     rdi, aSystemLibraryC ; "/System/Library/CoreServices/SystemVers"...
                lea     rsi, aR         ; "r"
                call    _fopen
                test    rax, rax
                jz      loc_10002E9AB
                mov     rdi, rax        ; FILE *
                mov     [rsp+98h+var_80], rax
                xor     esi, esi        ; __int64
                mov     edx, 2          ; int
                call    _fseek
                mov     rdi, [rsp+98h+var_80] ; FILE *
                call    _ftell
                xor     edi, edi
                mov     [rsp+98h+var_88], rax
                test    rax, rax
                js      loc_10002E99C
                mov     rdi, [rsp+98h+var_80] ; FILE *
                call    _rewind
                mov     rdi, [rsp+98h+var_88] ; size_t
                call    _malloc
                test    rax, rax
                jz      short loc_10002E8E4
                mov     esi, 1          ; size_t
                mov     rdi, rax        ; void *
                mov     [rsp+98h+var_90], rax
                mov     rdx, [rsp+98h+var_88] ; size_t
                mov     rcx, [rsp+98h+var_80] ; FILE *
                call    _fread
                cmp     rax, [rsp+98h+var_88]
                jnz     loc_10002E997
                xor     edi, edi
                mov     rsi, [rsp+98h+var_90]
                mov     rdx, [rsp+98h+var_88]
                mov     rcx, rbx
                call    r14
                test    rax, rax
                jz      loc_10002E997
                mov     r14, rax
                xor     edi, edi
                mov     rsi, rax
                xor     edx, edx
                xor     ecx, ecx
                test    r15, r15
                jz      short loc_10002E8EB
                xor     r8d, r8d
                call    r15
                jmp     short loc_10002E8EE
; ---------------------------------------------------------------------------

loc_10002E8E4:                          ; CODE XREF: sub_10002E690+1F7↑j
                xor     edi, edi
                jmp     loc_10002E99C
; ---------------------------------------------------------------------------

loc_10002E8EB:                          ; CODE XREF: sub_10002E690+24A↑j
                call    r13

loc_10002E8EE:                          ; CODE XREF: sub_10002E690+252↑j
                mov     r15, rax
                mov     r13, [rsp+98h+var_78]
                test    rax, rax
                jz      loc_10002E991
                lea     rsi, aProductversion ; "ProductVersion"
                xor     edi, edi
                mov     edx, 600h
                mov     rcx, rbx
                call    rbp
                test    rax, rax
                jz      short loc_10002E98B
                mov     rdi, r15
                mov     rsi, rax
                mov     r13, rax
                call    r12
                mov     rbx, rax
                mov     rdi, r13
                mov     r13, [rsp+98h+var_78]
                call    r13
                test    rbx, rbx
                jz      short loc_10002E98B
                mov     rdi, rbx
                call    [rsp+98h+var_60]
                mov     r12, rax
                call    [rsp+98h+var_68]
                cmp     r12, rax
                jnz     short loc_10002E98B
                lea     rsi, [rsp+98h+var_58]
                mov     edx, 20h
                mov     rdi, rbx
                mov     ecx, 8000100h
                call    [rsp+98h+var_70]
                test    al, al
                jz      short loc_10002E98B
                lea     rsi, aDDD       ; "%d.%d.%d"
                lea     rdx, dword_100075E98
                lea     rcx, dword_100075E9C
                lea     r8, dword_100075EA0
                lea     rdi, [rsp+98h+var_58] ; char *
                xor     eax, eax
                call    _sscanf

loc_10002E98B:                          ; CODE XREF: sub_10002E690+285↑j
                                        ; sub_10002E690+2A4↑j ...
                mov     rdi, r15
                call    r13

loc_10002E991:                          ; CODE XREF: sub_10002E690+269↑j
                mov     rdi, r14
                call    r13

loc_10002E997:                          ; CODE XREF: sub_10002E690+21A↑j
                                        ; sub_10002E690+235↑j
                mov     rdi, [rsp+98h+var_90] ; void *

loc_10002E99C:                          ; CODE XREF: sub_10002E690+1DA↑j
                                        ; sub_10002E690+256↑j
                call    _free
                mov     rdi, [rsp+98h+var_80] ; FILE *
                call    _fclose

loc_10002E9AB:                          ; CODE XREF: sub_10002E690+31↑j
                                        ; sub_10002E690+58↑j ...
                mov     rax, cs:___stack_chk_guard_ptr
                mov     rax, [rax]
                cmp     rax, [rsp+98h+var_38]
                jnz     short loc_10002E9CB
                add     rsp, 68h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_10002E9CB:                          ; CODE XREF: sub_10002E690+32A↑j
                call    ___stack_chk_fail
sub_10002E690   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_10002E9D0   proc near               ; CODE XREF: +[UpDaterManager shared]+1A↑p
                push    rbp
                mov     rbp, rsp
                lea     rdi, qword_100075DD8
                lea     rsi, off_10003A598
                pop     rbp
                jmp     _dispatch_once
sub_10002E9D0   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_10002E9F0   proc near
                push    rax
                xor     edi, edi
                call    _CFBundleGetVersionNumber
                ud2
sub_10002E9F0   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_10002EA00   proc near               ; CODE XREF: sub_10002E340+46↑p
                                        ; sub_10002E3C0+D8↑p ...
; __unwind {
                lea     rdi, predicate  ; predicate
                lea     rdx, function   ; function
                xor     esi, esi        ; context
                jmp     _dispatch_once_f
; } // starts at 10002EA00
sub_10002EA00   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_10002EA20   proc near               ; CODE XREF: sub_10002E3C0+62↑p
                                        ; sub_10002E4D0+B4↑p
; __unwind {
                lea     rdi, qword_100075EA8 ; predicate
                lea     rdx, sub_10002E4C0 ; function
                xor     esi, esi        ; context
                jmp     _dispatch_once_f
; } // starts at 10002EA20
sub_10002EA20   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_10002EA40   proc near               ; CODE XREF: sub_10002E4D0:loc_10002E65B↑p
                push    rax
                lea     rdi, aIsplatformorva ; "__isPlatformOrVariantPlatformVersionAtL"...
                lea     rsi, aOsVersionCheck ; "os_version_check.c"
                lea     rcx, aPlatform2Platf ; "Platform2 == PLATFORM_MACOS && \"unexpe"...
                mov     edx, 135h       ; int
                call    ___assert_rtn
sub_10002EA40   endp


; =============== S U B R O U T I N E =======================================


sub_10002EA60   proc near               ; CODE XREF: sub_10002E4D0+16A↑p
; __unwind {
                lea     rdi, predicate  ; predicate
                lea     rdx, function   ; function
                xor     esi, esi        ; context
                jmp     _dispatch_once_f
; } // starts at 10002EA60
sub_10002EA60   endp

__text          ends

; ===========================================================================

; Segment type: Pure code
__stubs         segment byte public 'CODE' use64
                assume cs:__stubs
                ;org 10002EA75h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
; [00000006 BYTES: COLLAPSED FUNCTION _CC_MD5. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CFBundleGetVersionNumber. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CFGetTypeID. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CFNumberGetTypeID. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CFNumberGetValue. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CFRunLoopGetCurrent. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CFURLCreateStringByAddingPercentEscapes. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CGRectGetMaxX. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CGRectGetMaxY. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDDeviceGetProperty. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDDeviceOpen. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDDeviceRegisterInputReportCallback. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDDeviceSetReport. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDManagerCreate. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDManagerOpen. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDManagerRegisterDeviceMatchingCallback. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDManagerRegisterDeviceRemovalCallback. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDManagerScheduleWithRunLoop. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _IOHIDManagerSetDeviceMatchingMultiple. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _NSApplicationMain. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _NSClassFromString. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _NSLog. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _NSRectFill. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _NSSearchPathForDirectoriesInDomains. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _NSStringFromClass. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _NSStringFromRect. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __Block_object_assign. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __Block_object_dispose. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __Unwind_Resume. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION ___assert_rtn. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION ___memcpy_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION ___stack_chk_fail. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __availability_version_check. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _class_copyPropertyList. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _class_getSuperclass. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _dispatch_after. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _dispatch_async. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _dispatch_once. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _dispatch_once_f. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _dispatch_sync. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _dispatch_time. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _dlsym. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _exit. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _fclose. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _fopen. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _fread. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _free. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _fseek. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _ftell. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _malloc. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _memcpy. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_alloc. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_autorelease. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_autoreleaseReturnValue. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_begin_catch. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_destroyWeak. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_end_catch. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_enumerationMutation. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_getAssociatedObject. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_getProperty. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_loadWeak. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_loadWeakRetained. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_msgSendSuper2. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_msgSend_stret. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_retainAutorelease. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_retainAutoreleaseReturnValue. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_retainAutoreleasedReturnValue. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_retainBlock. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_setAssociatedObject. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_setProperty_atomic. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_setProperty_nonatomic_copy. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_storeStrong. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_storeWeak. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_sync_enter. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_sync_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _objc_unsafeClaimAutoreleasedReturnValue. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _printf. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _property_getAttributes. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _property_getName. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _putchar. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _puts. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _rewind. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _sscanf. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _strlen. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
; ===========================================================================

; Segment type: Pure code
__stub_helper   segment byte public 'CODE' use64
                assume cs:__stub_helper
                ;org 10002EC6Dh
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

loc_10002EC6D:                          ; CODE XREF: __stub_helper:000000010002EC82↓j
                                        ; __stub_helper:000000010002EC8C↓j ...
                lea     r11, unk_100049BF0
                push    r11
                jmp     cs:dyld_stub_binder_ptr
; ---------------------------------------------------------------------------
                db 90h
; ---------------------------------------------------------------------------
                push    0
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    10h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    32h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    47h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    62h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    7Ch
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    99h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    0CAh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    0E1h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    0F8h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    118h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    131h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    161h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    17Fh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    19Bh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    1B5h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    1E9h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    21Ch
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    245h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    274h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    28Fh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    2AAh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    2B9h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    2CDh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    2FAh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    315h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    32Fh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    34Dh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    36Ch
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    384h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    39Ah
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    3B0h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    3CAh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    3EFh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    40Fh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    42Ch
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    444h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    45Ch
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    473h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    48Ch
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    4A3h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    4BAh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    4C9h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    4D7h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    4E7h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    4F6h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    505h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    513h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    522h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    531h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    541h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    551h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    565h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    57Fh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    5A4h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    5BEh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    5D8h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    5F0h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    612h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    634h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    64Eh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    665h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    684h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    6A0h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    6BCh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    6DCh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    707h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    733h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    74Dh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    76Fh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    790h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    7B9h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    7D3h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    7EBh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    804h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    81Ch
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    84Dh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    85Dh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    87Dh
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    897h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    8A8h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    8B6h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    8C6h
                jmp     loc_10002EC6D
; ---------------------------------------------------------------------------
                push    8D6h
                jmp     loc_10002EC6D
__stub_helper   ends

; ===========================================================================

; Segment type: Pure data
__const         segment para public 'DATA' use64
                assume cs:__const
                ;org 10002EFD0h
dword_10002EFD0 dd 3FA00000h            ; DATA XREF: -[S8BitdoDevice setVersion:]+346↑r
dword_10002EFD4 dd 3F91EB85h            ; DATA XREF: -[S8BitdoDevice setVersion:]+3B4↑r
qword_10002EFD8 dq 3FF0A3D70A3D70A4h    ; DATA XREF: -[S8BitdoDevice setVersion:]+433↑r
qword_10002EFE0 dq 40F5180000000000h    ; DATA XREF: +[SHttp recordActivity:]+10F↑r
qword_10002EFE8 dq 40B3880000000000h    ; DATA XREF: +[SHttp HttpGetPageHtml:URL:encoding:]+8A↑r
qword_10002EFF0 dq 3FED9D9D9D9D9D9Eh    ; DATA XREF: -[ViewController updateView]+D3↑r
                                        ; -[ViewController moreView]+D3↑r ...
qword_10002EFF8 dq 3FF0000000000000h    ; DATA XREF: -[ViewController updateView]+DB↑r
                                        ; -[ViewController moreView]+DB↑r ...
qword_10002F000 dq 0C024000000000000h   ; DATA XREF: -[ViewController viewDidLoad]+3E4↑r
                                        ; -[UpdateView loadViews]+1187↑r ...
qword_10002F008 dq 402E000000000000h    ; DATA XREF: -[ViewController viewDidLoad]+3F3↑r
                                        ; -[UpdateView loadViews]+13AB↑r ...
xmmword_10002F010 xmmword 8F67DFC98C2571D4F14AA66CD4284DEBh
                                        ; DATA XREF: +[SHIDBoot load]+9F↑r
                                        ; sub_100006AF7+B↑r ...
xmmword_10002F020 xmmword 0C4936167BFF8CF431F8FFA5CB75B7753h
                                        ; DATA XREF: +[SHIDBoot load]+AD↑r
                                        ; sub_100006AF7+1C↑r ...
xmmword_10002F030 xmmword 0C0D0E0F08090A0B0405060700010203h
                                        ; DATA XREF: sub_100006CCA+1C9↑r
dword_10002F040 dd 42C80000h            ; DATA XREF: sub_100006F09+235↑r
                                        ; sub_10000AF5A+A8↑r ...
                align 8
qword_10002F048 dq 403E000000000000h    ; DATA XREF: -[SBackButton initWithFrame:]+BF↑r
; _WORD word_10002F050[4]
word_10002F050  dw 0, 0A001h, 2 dup(0)  ; DATA XREF: sub_100008AC4+C↑o
                                        ; sub_10000CF19+110↑o
qword_10002F058 dq 3FE0000000000000h    ; DATA XREF: -[UpdateView loadViews]+AD↑r
                                        ; -[UpdateView loadViews]+52E↑r ...
qword_10002F060 dq 0C04E000000000000h   ; DATA XREF: -[UpdateView loadViews]+F9↑r
                                        ; -[UpdateView refreshFirmwaerList]:loc_1000121B1↑r ...
qword_10002F068 dq 405CC00000000000h    ; DATA XREF: -[UpdateView loadViews]:loc_10000EE98↑r
qword_10002F070 dq 0C069000000000000h   ; DATA XREF: -[UpdateView loadViews]+88C↑r
qword_10002F078 dq 0C030000000000000h   ; DATA XREF: -[UpdateView loadViews]+963↑r
qword_10002F080 dq 4049000000000000h    ; DATA XREF: -[UpdateView loadViews]+99E↑r
                                        ; -[UpdateView loadViews]+A46↑r
qword_10002F088 dq 0C054000000000000h   ; DATA XREF: -[UpdateView loadViews]+A15↑r
qword_10002F090 dq 0C03E000000000000h   ; DATA XREF: -[UpdateView loadViews]+A29↑r
                                        ; -[UpdateView loadViews]+1272↑r ...
qword_10002F098 dq 0C034000000000000h   ; DATA XREF: -[UpdateView loadViews]+CAD↑r
                                        ; -[UpdateView refreshFirmwaerList]+1377↑r ...
qword_10002F0A0 dq 0C066800000000000h   ; DATA XREF: -[UpdateView loadViews]+E12↑r
qword_10002F0A8 dq 0C075E00000000000h   ; DATA XREF: -[UpdateView loadViews]+1110↑r
qword_10002F0B0 dq 0C06A400000000000h   ; DATA XREF: -[UpdateView loadViews]+121D↑r
qword_10002F0B8 dq 0C043000000000000h   ; DATA XREF: -[UpdateView loadViews]+126A↑r
qword_10002F0C0 dq 0C051000000000000h   ; DATA XREF: -[UpdateView loadViews]+1290↑r
qword_10002F0C8 dq 0C059000000000000h   ; DATA XREF: -[UpdateView loadViews]+1324↑r
qword_10002F0D0 dq 0C02E000000000000h   ; DATA XREF: -[UpdateView loadViews]+132C↑r
                                        ; -[UpdateView changeUIWithState:]+82B↑r
qword_10002F0D8 dq 4034000000000000h    ; DATA XREF: -[UpdateView initFindNewVersion]+5B↑r
                                        ; -[UpdateView refreshFirmwaerList]+1A86↑r ...
qword_10002F0E0 dq 402C000000000000h    ; DATA XREF: -[UpdateView initFindNewVersion]+13B↑r
qword_10002F0E8 dq 401C000000000000h    ; DATA XREF: -[UpdateView refreshFirmwaerList]:loc_1000108F4↑r
qword_10002F0F0 dq 0C044000000000000h   ; DATA XREF: -[UpdateView refreshFirmwaerList]+3CD↑r
                                        ; -[MoreView addProduct]+770↑r
qword_10002F0F8 dq 3FE0101010101010h    ; DATA XREF: -[UpdateView refreshFirmwaerList]+10E4↑r
                                        ; -[UpdateView refreshFirmwaerList]+1CE4↑r
qword_10002F100 dq 402F000000000000h    ; DATA XREF: -[UpdateView refreshFirmwaerList]+112E↑r
qword_10002F108 dq 4044000000000000h    ; DATA XREF: -[UpdateView refreshFirmwaerList]:loc_100011772↑r
                                        ; -[UpdateView refreshFirmwaerList]:loc_1000120A2↑r
qword_10002F110 dq 3FEB3B3B3B3B3B3Bh    ; DATA XREF: -[UpdateView refreshFirmwaerList]+19B1↑r
qword_10002F118 dq 3FD6161616161616h    ; DATA XREF: -[UpdateView refreshFirmwaerList]+19B9↑r
qword_10002F120 dq 4041800000000000h    ; DATA XREF: -[UpdateView refreshFirmwaerList]+1C6E↑r
                                        ; -[UpdateView changeUIWithState:]+B00↑r
qword_10002F128 dq 3FCA1A1A1A1A1A1Ah    ; DATA XREF: -[UpdateView changeUIWithState:]+1A7↑r
                                        ; -[UpdateView changeUIWithState:]+28A↑r ...
qword_10002F130 dq 3FD6969696969697h    ; DATA XREF: -[UpdateView changeUIWithState:]+1AF↑r
                                        ; -[UpdateView changeUIWithState:]+292↑r ...
qword_10002F138 dq 0C041800000000000h   ; DATA XREF: -[UpdateView changeUIWithState:]+9F1↑r
qword_10002F140 dq 3FE4141414141414h    ; DATA XREF: -[UpdateView changeUIWithState:]+210↑r
                                        ; -[SButton initWithFrame:]+12E↑r ...
qword_10002F148 dq 3FED3D3D3D3D3D3Dh    ; DATA XREF: -[UpdateView changeUIWithState:]+218↑r
                                        ; -[SMiniImageView mouseEntered:]+95↑r ...
qword_10002F150 dq 3FF4CCCCCCCCCCCDh    ; DATA XREF: -[UpdateView switchBoot]+1DD↑r
                                        ; -[UpdateView macBoot]+13C↑r
qword_10002F158 dq 4008000000000000h    ; DATA XREF: -[UpdateView initTimer]+65↑r
                                        ; -[MoreView addProduct]+1FB↑r
qword_10002F160 dq 408F400000000000h    ; DATA XREF: -[UpdateView gs_getCurrentTimeToMilliSecond]+3B↑r
qword_10002F168 dq 3FE6565656565656h    ; DATA XREF: -[UpdateView SHIDBootStartUpdateed:]+B4↑r
                                        ; -[FirmwaerUpdateLog windowDidLoad]+C6↑r
qword_10002F170 dq 3FBF1F1F1F1F1F1Fh    ; DATA XREF: -[UpdateView SHIDBootStartUpdateed:]+BC↑r
                                        ; -[FirmwaerUpdateLog windowDidLoad]+CE↑r
                align 20h
xmmword_10002F180 xmmword 0C056800000000000C05B800000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+A5↑r
xmmword_10002F190 xmmword 0C0240000000000000000000000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+B9↑r
                                        ; -[UpdateView loadViews]+53A↑r
xmmword_10002F1A0 xmmword 4056800000000000405B800000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+142↑r
                                        ; -[UpdateView loadViews]+3E2↑r ...
xmmword_10002F1B0 xmmword 0C071600000000000C087100000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+523↑r
xmmword_10002F1C0 xmmword 40716000000000004087100000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+54E↑r
                                        ; -[UpdateView loadViews]+5D5↑r
xmmword_10002F1D0 xmmword 0C0340000000000004059000000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+91D↑r
xmmword_10002F1E0 xmmword 40300000000000004030000000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+9D7↑r
xmmword_10002F1F0 xmmword 403E0000000000004054000000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+A7F↑r
xmmword_10002F200 xmmword 4043000000000000406A400000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+12D9↑r
xmmword_10002F210 xmmword 40430000000000004059000000000000h
                                        ; DATA XREF: -[UpdateView loadViews]+1365↑r
                                        ; -[UpdateView loadViews]+13E4↑r
xmmword_10002F220 xmmword 40340000000000004024000000000000h
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+1387↑r
dword_10002F230 dd 40A0A3D7h            ; DATA XREF: -[UpdateView refreshFirmwaerList]+106↑r
dword_10002F234 dd 3FAF5C29h            ; DATA XREF: -[UpdateView refreshFirmwaerList]+1F4↑r
dword_10002F238 dd 3F83D70Ah            ; DATA XREF: -[UpdateView refreshFirmwaerList]+27F↑r
dword_10002F23C dd 3A83126Fh            ; DATA XREF: sub_1000125F7+5F↑r
                                        ; sub_1000125F7+8F↑r
qword_10002F240 dq 3FEB7B7B80000000h    ; DATA XREF: -[SMiniImageView setIsSelect:]+76↑r
qword_10002F248 dq 3FE3737380000000h    ; DATA XREF: -[SMiniImageView setIsSelect:]+7E↑r
qword_10002F250 dq 3FE4141420000000h    ; DATA XREF: -[SMiniImageView mouseEntered:]+8D↑r
                align 20h
xmmword_10002F260 xmmword 35DBF787040100000000000000000601h
                                        ; DATA XREF: -[SHIDSwitchAndMac stopChangeMode:]+3E↑r
xmmword_10002F270 xmmword 35DC1635E800000035DC082B88000000h
                                        ; DATA XREF: -[SHIDSwitchAndMac stopChangeMode:]+33↑r
xmmword_10002F280 xmmword 35DBF212C80000006DD2BFDB10000000h
                                        ; DATA XREF: -[SHIDSwitchAndMac stopChangeMode:]+28↑r
xmmword_10002F290 xmmword 0             ; DATA XREF: -[SHIDSwitchAndMac stopChangeMode:]+19↑r
unk_10002F2A0   db    0                 ; DATA XREF: +[NSObject mj_error]+4↑o
                                        ; +[NSObject setMj_error:]+4↑o
unk_10002F2A1   db    0                 ; DATA XREF: +[NSObject mj_referenceReplacedKeyWhenCreatingKeyValues:]+29↑o
                                        ; +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]+41↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
qword_10002F2A8 dq 3F847AE147AE147Bh    ; DATA XREF: -[SButton drawRect:]+61↑r
qword_10002F2B0 dq 4030000000000000h    ; DATA XREF: -[SButton drawRect:]+E9↑r
                                        ; -[SLabel initWithFrame:]+62↑r
qword_10002F2B8 dq 0C05E000000000000h   ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+2D6↑r
xmmword_10002F2C0 xmmword 405E000000000000403E000000000000h
                                        ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+32C↑r
qword_10002F2D0 dq 0C042000000000000h   ; DATA XREF: -[MoreView layout]+CC↑r
                                        ; -[MoreView layout]+239↑r ...
qword_10002F2D8 dq 0C032000000000000h   ; DATA XREF: -[MoreView layout]+14E↑r
                                        ; -[MoreView layout]+30E↑r
qword_10002F2E0 dq 0C010000000000000h   ; DATA XREF: -[MoreView layout]+205↑r
                                        ; -[MoreView layout]+220↑r
qword_10002F2E8 dq 0C04B000000000000h   ; DATA XREF: -[MoreView addProduct]+96↑r
qword_10002F2F0 dq 0C04A800000000000h   ; DATA XREF: -[MoreView addProduct]+B9↑r
qword_10002F2F8 dq 4065E00000000000h    ; DATA XREF: -[MoreView addProduct]+40B↑r
                                        ; -[MoreView addProduct]+7DB↑r
qword_10002F300 dq 4032000000000000h    ; DATA XREF: -[MoreView addProduct]+433↑r
                                        ; -[HomeView awakeFromNib]+28F↑r
qword_10002F308 dq 4024000000000000h    ; DATA XREF: -[MoreView addProduct]+778↑r
xmmword_10002F310 xmmword 40320000000000004032000000000000h
                                        ; DATA XREF: -[MoreView layout]+384↑r
qword_10002F320 dq 3FFCCCCCCCCCCCCDh    ; DATA XREF: -[HomeView awakeFromNib]+67↑r
qword_10002F328 dq 3FE1717180000000h    ; DATA XREF: -[HomeView awakeFromNib]+304↑r
qword_10002F330 dq 0C039000000000000h   ; DATA XREF: -[HomeView addDevicesTextFileld]+47F↑r
dword_10002F338 dd 0                    ; DATA XREF: -[HomeView addDevicesTextFileld]+34E↑r
                align 20h
; unsigned __int16 word_10002F340[256]
word_10002F340  dw 9E49h, 0C11Bh, 9972h, 199Ah, 0AC4Eh, 0D224h, 0E9h, 0CE36h
                                        ; DATA XREF: sub_100022BF5+1E↑o
                dw 0BBB5h, 1F47h, 96B7h, 2484h, 0D364h, 39B2h, 2F14h, 412Eh
                dw 6687h, 539Ah, 0D6Ah, 0F492h, 37B4h, 320Dh, 8835h, 6FC3h
                dw 0C515h, 26BCh, 0EACDh, 0E6ECh, 1EDCh, 0EDB9h, 0A9C8h
                dw 495Bh, 0A207h, 0E406h, 173Eh, 0F800h, 0D23Dh, 7F07h
                dw 0F0D2h, 547Ah, 1A62h, 0DB9Ch, 182Eh, 327Bh, 5DDFh, 9DDh
                dw 0FCC2h, 0C02Eh, 1E81h, 0ED93h, 0CDCh, 82DCh, 0E405h
                dw 0E24Fh, 0C620h, 7118h, 53E9h, 240Bh, 0F6C2h, 0BE4h
                dw 82AFh, 1C1Dh, 0DD34h, 3E0Ah, 0E8Ch, 101Ch, 45A3h, 17BFh
                dw 2486h, 4251h, 1484h, 0B4Ah, 2912h, 0F156h, 8D55h, 0FB91h
                dw 0E293h, 0A478h, 2205h, 2129h, 2066h, 1981h, 56C8h, 93F4h
                dw 0F8C9h, 5B9Ah, 0A8DDh, 5CFCh, 1908h, 4CBEh, 352Bh, 91D5h
                dw 1872h, 0C9A5h, 8FC3h, 991Eh, 6521h, 9605h, 0C814h, 0DBBDh
                dw 608Ah, 39BCh, 2B3h, 5968h, 0D2D0h, 0ED7Dh, 0DBCAh, 9E2Dh
                dw 7120h, 0BCDh, 0E436h, 0FA37h, 3A9Ch, 6801h, 0A647h
                dw 5C33h, 93CFh, 6C86h, 9972h, 0F5F6h, 9C1Ch, 0E1Fh, 388Ch
                dw 8274h, 0AD3h, 8BB7h, 885Fh, 8268h, 43ADh, 4D90h, 8BD4h
                dw 7A74h, 0C04Fh, 0AF30h, 5E54h, 53B4h, 0D7E2h, 5E0Bh
                dw 802Dh, 5A8h, 16B2h, 0E119h, 0C56Ah, 16ACh, 0D416h, 615Bh
                dw 0B51h, 5BCCh, 5041h, 0D68Bh, 2D6Eh, 0C15Bh, 456Fh, 2D48h
                dw 0B7F0h, 0D3E3h, 95D1h, 0B7C8h, 0A342h, 0EC16h, 6BC8h
                dw 510Ah, 0A47Ch, 417Ah, 46B3h, 147h, 3AD3h, 3C9Ch, 7022h
                dw 12AEh, 0D223h, 886Ch, 0B5CDh, 0F3ECh, 5DD3h, 46Fh, 0C9F0h
                dw 50C3h, 1E4Eh, 722Ah, 0B66Ch, 3071h, 0F428h, 5B3Eh, 0E3BBh
                dw 0DD7h, 5C44h, 848Dh, 0ACCFh, 949Fh, 56EFh, 5BFDh, 434Dh
                dw 0DC8h, 0FDEh, 5537h, 0E9E5h, 1552h, 0D7C3h, 7243h, 8B55h
                dw 4E96h, 601Eh, 0A2B9h, 8BE7h, 0AA02h, 0A00Ah, 2E39h
                dw 7CD0h, 470Bh, 0EAC2h, 2EA0h, 0BA88h, 4142h, 0F02Ah
                dw 7982h, 9C15h, 424Fh, 9B5h, 56ECh, 5BD1h, 0C59Dh, 1361h
                dw 0ACC0h, 157Dh, 4FD0h, 0ECC2h, 71C5h, 0E013h, 42AEh
                dw 7705h, 1E71h, 9237h, 0BFF0h, 8693h, 5004h, 8562h, 931Eh
                dw 3330h, 0D7F7h, 993Eh, 6F88h, 1660h, 3814h, 0D4F4h, 367Eh
                dw 0DB56h, 2227h, 12A5h, 184Eh, 0E9A1h, 4E53h, 9AC7h, 833Fh
                dw 24h, 504h
dword_10002F540 dd 3C23D70Ah            ; DATA XREF: sub_100024341+66↑r
                                        ; sub_100024341+1C3↑r
                align 10h
xmmword_10002F550 xmmword 3016000090260000500600006000h
                                        ; DATA XREF: sub_1000246AF+3A9↑r
                                        ; +[SHIDDinput boot:]+C6↑r
xmmword_10002F560 xmmword 9020000090250000301500003109h
                                        ; DATA XREF: sub_1000246AF+3B1↑r
                                        ; +[SHIDDinput boot:]+BE↑r
xmmword_10002F570 xmmword 3010000060060000210000006002h
                                        ; DATA XREF: sub_1000246AF+3B9↑r
xmmword_10002F580 xmmword 3011000030120000310500003100h
                                        ; DATA XREF: sub_1000246AF+3C1↑r
                                        ; +[SHIDDinput boot:]+CE↑r
xmmword_10002F590 xmmword 3010000021000000600600006002h
                                        ; DATA XREF: +[SHIDDinput boot:]+D6↑r
unk_10002F5A0   db    0                 ; DATA XREF: +[NSObject dictForKey:]+1B↑o
                                        ; sub_100027547+13↑o ...
unk_10002F5A1   db    0                 ; DATA XREF: +[NSObject dictForKey:]+27↑o
                                        ; sub_10002746E+13↑o ...
unk_10002F5A2   db    0                 ; DATA XREF: +[NSObject dictForKey:]+33↑o
                                        ; +[NSObject mj_setupNewValueFromOldValue:]+15↑o ...
unk_10002F5A3   db    0                 ; DATA XREF: +[NSObject dictForKey:]+3F↑o
                                        ; sub_100027838+13↑o ...
unk_10002F5A4   db    0                 ; DATA XREF: +[NSObject dictForKey:]+4B↑o
                                        ; +[NSObject properties]+1B↑o ...
                db    0
                db    0
                db    0
qword_10002F5A8 dq 0C081300000000000h   ; DATA XREF: -[DeviceManualView layout]+91↑r
qword_10002F5B0 dq 3FECCCCCC0000000h    ; DATA XREF: -[DeviceManualView layout]+A6↑r
qword_10002F5B8 dq 0C070400000000000h   ; DATA XREF: -[DeviceManualView layout]+AE↑r
xmmword_10002F5C0 xmmword 40704000000000004081300000000000h
                                        ; DATA XREF: -[DeviceManualView layout]+F1↑r
xmmword_10002F5D0 xmmword 4075E00000000000406B800000000000h
                                        ; DATA XREF: -[DeviceManualView setUI]+8D7↑r
xmmword_10002F5E0 xmmword 40690000000000004077200000000000h
                                        ; DATA XREF: -[DeviceManualView setUI]+8E2↑r
xmmword_10002F5F0 xmmword 0C049000000000000C059000000000000h
                                        ; DATA XREF: -[DeviceManualView setUI]+946↑r
unk_10002F600   db    0                 ; DATA XREF: +[NSObject dictForKey:]_0+1B↑o
                                        ; +[NSObject mj_setupAllowedPropertyNames:]+B↑o ...
unk_10002F601   db    0                 ; DATA XREF: +[NSObject dictForKey:]_0+27↑o
                                        ; +[NSObject mj_setupIgnoredPropertyNames:]+B↑o ...
unk_10002F602   db    0                 ; DATA XREF: +[NSObject dictForKey:]_0+33↑o
                                        ; +[NSObject mj_setupAllowedCodingPropertyNames:]+B↑o ...
unk_10002F603   db    0                 ; DATA XREF: +[NSObject dictForKey:]_0+3F↑o
                                        ; +[NSObject mj_setupIgnoredCodingPropertyNames:]+B↑o ...
__const         ends

; ===========================================================================

; Segment type: Pure data
__cstring       segment byte public 'DATA' use64
                assume cs:__cstring
                ;org 10002F604h
asc_10002F604   db 0                    ; DATA XREF: __cfstring:stru_10003A8B8↓o
aProController  db 'Pro Controller',0   ; DATA XREF: __cfstring:cfstr_ProController↓o
aWirelessContro db 'Wireless Controller',0
                                        ; DATA XREF: __cfstring:cfstr_WirelessContro↓o
aDevicePid0xXVi db 'device:%@ PID:0x%x VID:0x%x Version:%lf Beta:%hu Ref:%d ChangeBoo'
                                        ; DATA XREF: __cfstring:cfstr_DevicePid0xXVi↓o
                db 't:%hhd',0
aHttpDl8bitdoCo db 'http://dl.8bitdo.com:8080/',0
                                        ; DATA XREF: __cfstring:cfstr_HttpDl8bitdoCo↓o
aHttpDl8bitdoCn db 'http://dl.8bitdo.cn:8080/',0
                                        ; DATA XREF: __cfstring:cfstr_HttpDl8bitdoCn↓o
aUserdefaultsIs db 'UserDefaults_isBeta',0
                                        ; DATA XREF: __cfstring:cfstr_UserdefaultsIs↓o
aHttpBeta8bitdo db 'http://beta.8bitdo.com:8080/',0
                                        ; DATA XREF: __cfstring:cfstr_HttpBeta8bitdo↓o
aFirmwareSelect db '%@firmware/select',0
                                        ; DATA XREF: __cfstring:cfstr_FirmwareSelect↓o
aPost           db 'POST',0             ; DATA XREF: __cfstring:cfstr_Post↓o
aD              db '%d',0               ; DATA XREF: __cfstring:cfstr_D↓o
aType           db 'type',0             ; DATA XREF: __cfstring:cfstr_Type↓o
a1              db '1',0                ; DATA XREF: __cfstring:cfstr_1↓o
aBeta           db 'beta',0             ; DATA XREF: __cfstring:cfstr_Beta↓o
aMsgstate       db 'msgState',0         ; DATA XREF: __cfstring:cfstr_Msgstate↓o
aList           db 'list',0             ; DATA XREF: __cfstring:cfstr_List↓o
aV80            db 'v8@?0',0            ; DATA XREF: __const:000000010003A0B8↓o
                                        ; __const:000000010003A248↓o ...
aV320Nsdata8Nsu db 'v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24',0
                                        ; DATA XREF: __const:000000010003A0E8↓o
                                        ; __const:000000010003A148↓o ...
asc_10002F73F   db '%@%@%@',0           ; DATA XREF: __cfstring:stru_10003AAD8↓o
aFirmwarefileUp db 'firmwareFile/upload/',0
                                        ; DATA XREF: __cfstring:cfstr_FirmwarefileUp↓o
asc_10002F75B   db '%@/%@',0            ; DATA XREF: __cfstring:stru_10003AB18↓o
a8bitdoFirmware db '8Bitdo FirmwareUpdater',0
                                        ; DATA XREF: __cfstring:cfstr_8bitdoFirmware↓o
aDownloadError  db 'Download Error',0   ; DATA XREF: __cfstring:cfstr_DownloadError↓o
aV320Nsurl8Nsur db 'v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24',0
                                        ; DATA XREF: __const:000000010003A118↓o
aFirmwareLoadne db '%@firmware/loadNewVersion',0
                                        ; DATA XREF: __cfstring:cfstr_FirmwareLoadne↓o
aLf             db '%lf',0              ; DATA XREF: __cfstring:cfstr_Lf↓o
aVersion        db 'version',0          ; DATA XREF: __cfstring:cfstr_Version↓o
aIsloadbeta     db 'isLoadBeta',0       ; DATA XREF: __cfstring:cfstr_Isloadbeta↓o
aFirmwareStatis db '%@firmware/StatisticsFirmware',0
                                        ; DATA XREF: __cfstring:cfstr_FirmwareStatis↓o
aGet            db 'GET',0              ; DATA XREF: __cfstring:cfstr_Get↓o
aId             db 'id',0               ; DATA XREF: __cfstring:cfstr_Id↓o
aLocalactivityt db 'localActivityTimer',0
                                        ; DATA XREF: __cfstring:cfstr_Localactivityt↓o
aLocalactivityc db 'localActivityController',0
                                        ; DATA XREF: __cfstring:cfstr_Localactivityc↓o
a0000           db '0.0.0.0',0          ; DATA XREF: __cfstring:cfstr_0000↓o
a0001           db '0.0.0.1',0          ; DATA XREF: __cfstring:cfstr_0001↓o
aV160Nsstring8  db 'v16@?0@"NSString"8',0
                                        ; DATA XREF: __const:000000010003A1A8↓o
                                        ; __const:000000010003A4C8↓o
aHttpWwwNetCnSt db 'http://www.net.cn/static/customercare/yourip.asp',0
                                        ; DATA XREF: __cfstring:cfstr_HttpWwwNetCnSt↓o
aHttpIp111Cn    db 'http://ip111.cn/',0 ; DATA XREF: __cfstring:cfstr_HttpIp111Cn↓o
aFirmwareActivi db '%@firmware/Activity',0
                                        ; DATA XREF: __cfstring:cfstr_FirmwareActivi↓o
aMac            db 'mac',0              ; DATA XREF: __cfstring:cfstr_Mac↓o
aMacname        db 'macName',0          ; DATA XREF: __cfstring:cfstr_Macname↓o
a2              db '2',0                ; DATA XREF: __cfstring:cfstr_2↓o
aPlatform       db 'platform',0         ; DATA XREF: __cfstring:cfstr_Platform↓o
aController     db 'controller',0       ; DATA XREF: __cfstring:cfstr_Controller↓o
aIp             db 'ip',0               ; DATA XREF: __cfstring:cfstr_Ip↓o
aRegion         db 'region',0           ; DATA XREF: __cfstring:cfstr_Region↓o
aD_0            db '%@%d,',0            ; DATA XREF: __cfstring:cfstr_D_0↓o
aRd1            db '-rd1',0             ; DATA XREF: __cfstring:cfstr_Rd1↓o
aC              db '-c',0               ; DATA XREF: __cfstring:cfstr_C↓o
aIoplatformexpe db 'IOPlatformExpertDevice',0
                                        ; DATA XREF: __cfstring:cfstr_Ioplatformexpe↓o
asc_10002F900   db '|',0                ; DATA XREF: __cfstring:stru_10003AE98↓o
aGrep           db 'grep',0             ; DATA XREF: __cfstring:cfstr_Grep↓o
aModel          db 'model',0            ; DATA XREF: __cfstring:cfstr_Model↓o
aUsrSbinIoreg   db '/usr/sbin/ioreg',0  ; DATA XREF: __cfstring:cfstr_UsrSbinIoreg↓o
aIoplatformuuid db '/IOPlatformUUID/ { split($0, line, "\""); printf("%s\n", line[4])'
                                        ; DATA XREF: __cfstring:cfstr_Ioplatformuuid↓o
                db '; }',0
aUsrBinAwk      db '/usr/bin/awk',0     ; DATA XREF: __cfstring:cfstr_UsrBinAwk↓o
asc_10002F96F   db 0Ah,0                ; DATA XREF: __cfstring:stru_10003AF58↓o
aLibraryPrefere db '/Library/Preferences/SystemConfiguration/preferences.plist',0
                                        ; DATA XREF: __cfstring:cfstr_LibraryPrefere↓o
aSystem         db 'System',0           ; DATA XREF: __cfstring:cfstr_System↓o
aComputername   db 'ComputerName',0     ; DATA XREF: __cfstring:cfstr_Computername↓o
asc_10002F9C0   db '%@',0               ; DATA XREF: __cfstring:stru_10003AFD8↓o
aUX             db '\u%x',0             ; DATA XREF: __cfstring:cfstr_UX↓o
a00             db '00',0               ; DATA XREF: __cfstring:cfstr_00↓o
a0              db '0',0                ; DATA XREF: __cfstring:cfstr_0↓o
a2505204D1D219D db '(?:(?:(25[0-5])|(2[0-4]\d)|((1\d{2})|([1-9]?\d)))\.){3}(?:(25[0-5'
                                        ; DATA XREF: __cfstring:cfstr_2505204D1D219D↓o
                db '])|(2[0-4]\d)|((1\d{2})|([1-9]?\d)))',0
asc_10002FA33   db '<',0                ; DATA XREF: __cfstring:stru_10003B078↓o
a02x            db '%02X',0             ; DATA XREF: __cfstring:cfstr_02x↓o
aUpdateviewback db 'updateViewBack',0   ; DATA XREF: __cfstring:cfstr_Updateviewback↓o
aHomeview       db 'HomeView',0         ; DATA XREF: __cfstring:cfstr_Homeview↓o
aUpdateerrornot db 'updateErrorNotification',0
                                        ; DATA XREF: __cfstring:cfstr_Updateerrornot↓o
aCheckforupdate db 'Checkforupdate',0   ; DATA XREF: __cfstring:cfstr_Checkforupdate↓o
aUpdateManually db 'Update Manually',0  ; DATA XREF: __cfstring:cfstr_UpdateManually↓o
aIncludebetabui db 'Includebetabuilds',0
                                        ; DATA XREF: __cfstring:cfstr_Includebetabui↓o
asc_10002FA9B   db '  :    %@',0        ; DATA XREF: __cfstring:stru_10003B178↓o
aOn             db 'on',0               ; DATA XREF: __cfstring:cfstr_On↓o
aOff            db 'off',0              ; DATA XREF: __cfstring:cfstr_Off↓o
aSure           db 'sure',0             ; DATA XREF: __cfstring:cfstr_Sure↓o
aCancel         db 'cancel',0           ; DATA XREF: __cfstring:cfstr_Cancel↓o
aIsbeta         db 'isBeta',0           ; DATA XREF: __cfstring:cfstr_Isbeta↓o
aV160q8         db 'v16@?0q8',0         ; DATA XREF: __const:000000010003A228↓o
                                        ; __const:000000010003A4E8↓o
aNswindow       db 'NSWindow',0         ; DATA XREF: __cfstring:cfstr_Nswindow↓o
aN30            db 'N30',0              ; DATA XREF: __cfstring:cfstr_N30↓o
aProduct        db 'Product',0          ; DATA XREF: __cfstring:cfstr_Product↓o
aProductid      db 'ProductID',0        ; DATA XREF: -[SHIDBoot open]+7F↑o
                                        ; -[SHIDBoot open]+119↑o ...
aVendorid       db 'VendorID',0         ; DATA XREF: -[SHIDBoot open]+C3↑o
                                        ; -[SHIDBoot open]+160↑o ...
aBack           db 'back',0             ; DATA XREF: __cfstring:cfstr_Back↓o
aNamePid02xVid0 db 'name:%@ pid:%02x vid:%02x type:%d order:%ld',0
                                        ; DATA XREF: __cfstring:cfstr_NamePid02xVid0↓o
aS8bitdodeviceP db 'S8BitdoDevice.plist',0
                                        ; DATA XREF: __cfstring:cfstr_S8bitdodeviceP↓o
a8bitdoS30Modki db '8BitDo S30 Modkit',0
                                        ; DATA XREF: __cfstring:cfstr_8bitdoS30Modki↓o
aCmd            db 'cmd',0              ; DATA XREF: __cfstring:cfstr_Cmd↓o
aBlock          db 'block',0            ; DATA XREF: __cfstring:cfstr_Block↓o
aCrcErrorCrcXFi db 'CRC Error: ',0Ah    ; DATA XREF: __cfstring:cfstr_CrcErrorCrcXFi↓o
                db ' crc : %x file_crc: %x ',0
aV1608          db 'v16@?0*8',0         ; DATA XREF: __const:000000010003A298↓o
                                        ; __const:000000010003A2C8↓o ...
aFirmwareErrorP db 'Firmware Error: ',0Ah
                                        ; DATA XREF: __cfstring:cfstr_FirmwareErrorP↓o
                db ' pid : %x m_firmwareHeader.pid: %x ',0
; char a02x_0[]
a02x_0          db '%02x ',0            ; DATA XREF: sub_10000CD6C+5B↑o
; char asc_10002FBB9[]
asc_10002FBB9   db 0Ah                  ; DATA XREF: sub_10000CD6C:loc_10000CE03↑o
                db ' --- ',0
; char asc_10002FBC0[]
asc_10002FBC0   db '--- ',0             ; DATA XREF: sub_10000CD6C+46↑o
aV2f            db '%@ v%.2f',0         ; DATA XREF: __cfstring:cfstr_V2f↓o
aNewversion     db 'newversion',0       ; DATA XREF: __cfstring:cfstr_Newversion↓o
aV2fBetaD       db '%@ v%.2f beta %d',0 ; DATA XREF: __cfstring:cfstr_V2fBetaD↓o
aF30Mini        db 'f30_mini',0         ; DATA XREF: __cfstring:cfstr_F30Mini↓o
aReload         db 'reload',0           ; DATA XREF: __cfstring:cfstr_Reload↓o
aUpdate         db 'update',0           ; DATA XREF: __cfstring:cfstr_Update↓o
aOther          db 'other',0            ; DATA XREF: __cfstring:cfstr_Other↓o
aUltimaterr     db 'UltimateRR',0       ; DATA XREF: __cfstring:cfstr_Ultimaterr↓o
aUltimatecrr    db 'UltimateCRR',0      ; DATA XREF: __cfstring:cfstr_Ultimatecrr↓o
aUltimaterrBloc db 'UltimateRR_Block',0 ; DATA XREF: __cfstring:cfstr_UltimaterrBloc↓o
aEmptyfirmwaer  db 'emptyFirmwaer',0    ; DATA XREF: __cfstring:cfstr_Emptyfirmwaer↓o
aNotfirmware    db 'notFirmware',0      ; DATA XREF: __cfstring:cfstr_Notfirmware↓o
aQ240Firmware8F db 'q24@?0@"Firmware"8@"Firmware"16',0
                                        ; DATA XREF: __const:000000010003A418↓o
aN30ModkitV2f   db 'N30 Modkit_V%.2f %@',0
                                        ; DATA XREF: __cfstring:cfstr_N30ModkitV2f↓o
aSn30ModkitV2f  db 'SN30 Modkit_V%.2f %@',0
                                        ; DATA XREF: __cfstring:cfstr_Sn30ModkitV2f↓o
aSf30ModkitV2f  db 'SF30 Modkit_V%.2f %@',0
                                        ; DATA XREF: __cfstring:cfstr_Sf30ModkitV2f↓o
aM30ModkitV2f   db 'M30 Modkit_V%.2f %@',0
                                        ; DATA XREF: __cfstring:cfstr_M30ModkitV2f↓o
aV              db '_V',0               ; DATA XREF: __cfstring:cfstr_V↓o
aV2f_0          db '%@  %@ V%.2f',0     ; DATA XREF: __cfstring:cfstr_V2f_0↓o
aBetaD          db '%@ beta %d',0       ; DATA XREF: __cfstring:cfstr_BetaD↓o
aCheckboxNomal  db 'checkbox_nomal',0   ; DATA XREF: __cfstring:cfstr_CheckboxNomal↓o
aCheckboxHighli db 'checkbox_highlight',0
                                        ; DATA XREF: __cfstring:cfstr_CheckboxHighli↓o
aLog            db 'log',0              ; DATA XREF: __cfstring:cfstr_Log↓o
aNew            db 'NEW',0              ; DATA XREF: __cfstring:cfstr_New↓o
aWillupdatefirm db 'willUpdateFirmwaer',0
                                        ; DATA XREF: __cfstring:cfstr_Willupdatefirm↓o
aWillupdatefirm_0 db 'willUpdateFirmwaered',0
                                        ; DATA XREF: __cfstring:cfstr_Willupdatefirm_0↓o
aWillupdatefirm_1 db 'willUpdateFirmwaering',0
                                        ; DATA XREF: __cfstring:cfstr_Willupdatefirm_1↓o
a2f             db '%.2f',0             ; DATA XREF: __cfstring:cfstr_2f↓o
aHu             db ' %hu',0             ; DATA XREF: __cfstring:cfstr_Hu↓o
aTo             db 'to',0               ; DATA XREF: __cfstring:cfstr_To↓o
aV2f_1          db ' v%.2f',0           ; DATA XREF: __cfstring:cfstr_V2f_1↓o
aBetaD_0        db ' beta %d ',0        ; DATA XREF: __cfstring:cfstr_BetaD_0↓o
asc_10002FD5C   db '%@%@%@%@%@%@%@',0   ; DATA XREF: __cfstring:stru_10003BA78↓o
aClose          db 'close',0            ; DATA XREF: __cfstring:cfstr_Close↓o
aUpdatenext     db 'updateNext',0       ; DATA XREF: __cfstring:cfstr_Updatenext↓o
aSbackbutton    db 'SBackButton',0      ; DATA XREF: __cfstring:cfstr_Sbackbutton↓o
aCheckboxSelect db 'checkbox_selected',0
                                        ; DATA XREF: __cfstring:cfstr_CheckboxSelect↓o
aFirmwaerupdate db 'FirmwaerUpdateLog',0
                                        ; DATA XREF: __cfstring:cfstr_Firmwaerupdate↓o
aN30modkit      db 'N30Modkit',0        ; DATA XREF: __cfstring:cfstr_N30modkit↓o
aSn30modkit     db 'SN30Modkit',0       ; DATA XREF: __cfstring:cfstr_Sn30modkit↓o
aSf30modkit     db 'SF30Modkit',0       ; DATA XREF: __cfstring:cfstr_Sf30modkit↓o
aM30modkit      db 'M30Modkit',0        ; DATA XREF: __cfstring:cfstr_M30modkit↓o
aV2lf           db '%@  %@ V%.2lf',0    ; DATA XREF: __cfstring:cfstr_V2lf↓o
asc_10002FDE4   db 0Ah                  ; DATA XREF: __cfstring:stru_10003BBD8↓o
                db 0Ah,0
aV160Nsmutablea db 'v16@?0@"NSMutableArray"8',0
                                        ; DATA XREF: __const:000000010003A468↓o
aV160Nserror8   db 'v16@?0@"NSError"8',0
                                        ; DATA XREF: __const:000000010003A498↓o
                                        ; __const:000000010003A6B8↓o
aPrepareupdate  db 'prepareUpdate',0    ; DATA XREF: __cfstring:cfstr_Prepareupdate↓o
aError          db 'Error',0            ; DATA XREF: __cfstring:cfstr_Error↓o
aSuccess        db 'success',0          ; DATA XREF: __cfstring:cfstr_Success↓o
aNotsupport     db 'NotSupport',0       ; DATA XREF: __cfstring:cfstr_Notsupport↓o
asc_10002FE39   db '%@"',0              ; DATA XREF: __cfstring:stru_10003BC98↓o
aMousedown      db 'mouseDown-',0       ; DATA XREF: __cfstring:cfstr_Mousedown↓o
aMouseentered   db 'mouseEntered-',0    ; DATA XREF: __cfstring:cfstr_Mouseentered↓o
aMouseexited    db 'mouseExited-',0     ; DATA XREF: __cfstring:cfstr_Mouseexited↓o
aSettingSparkle db 'Setting Sparkle language to: %@',0
                                        ; DATA XREF: __cfstring:cfstr_SettingSparkle↓o
aApplelanguages db 'AppleLanguages',0   ; DATA XREF: __cfstring:cfstr_Applelanguages↓o
aNoPreferredLan db 'No preferred language found, defaulting to en',0
                                        ; DATA XREF: __cfstring:cfstr_NoPreferredLan↓o
aEn             db 'en',0               ; DATA XREF: __cfstring:cfstr_En↓o
aNoLanguageCode db 'No language code found in %@, defaulting to en',0
                                        ; DATA XREF: __cfstring:cfstr_NoLanguageCode↓o
aZh             db 'zh',0               ; DATA XREF: __cfstring:cfstr_Zh↓o
aHans           db 'Hans',0             ; DATA XREF: __cfstring:cfstr_Hans↓o
aZhHans         db 'zh-Hans',0          ; DATA XREF: __cfstring:cfstr_ZhHans↓o
aUpdatedSparkle db 'Updated Sparkle language',0
                                        ; DATA XREF: __cfstring:cfstr_UpdatedSparkle↓o
aTriggeredCheck db 'Triggered check for updates',0
                                        ; DATA XREF: __cfstring:cfstr_TriggeredCheck↓o
aHttpDl8bitdoCo_0 db 'http://dl.8bitdo.com/Firmware-Updater/appcast.xml',0
                                        ; DATA XREF: __cfstring:cfstr_HttpDl8bitdoCo_0↓o
aHttpDl8bitdoCn_0 db 'http://dl.8bitdo.cn/Firmware-Updater/appcast.xml',0
                                        ; DATA XREF: __cfstring:cfstr_HttpDl8bitdoCn_0↓o
aV240816        db 'v24@?0#8*16',0      ; DATA XREF: __const:000000010003A5D8↓o
                                        ; __const:000000010003A798↓o ...
aYes            db 'yes',0              ; DATA XREF: __cfstring:cfstr_Yes↓o
aTrue           db 'true',0             ; DATA XREF: __cfstring:cfstr_True↓o
aNo             db 'no',0               ; DATA XREF: __cfstring:cfstr_No↓o
aFalse          db 'false',0            ; DATA XREF: __cfstring:cfstr_False↓o
aV240Mjproperty db 'v24@?0@"MJProperty"8*16',0
                                        ; DATA XREF: __const:000000010003A608↓o
                                        ; __const:000000010003A668↓o ...
asc_10002FFD0   db '.',0                ; DATA XREF: __cfstring:stru_10003BF78↓o
aV320Mjproperty db 'v32@?0@"MJPropertyKey"8Q16*24',0
                                        ; DATA XREF: __const:000000010003A638↓o
aArial          db 'Arial',0            ; DATA XREF: __cfstring:cfstr_Arial↓o
aOk             db 'OK',0               ; DATA XREF: __cfstring:cfstr_Ok↓o
aZhHansCn       db 'zh-Hans-CN',0       ; DATA XREF: __cfstring:cfstr_ZhHansCn↓o
aZhHansUs       db 'zh-Hans-US',0       ; DATA XREF: __cfstring:cfstr_ZhHansUs↓o
aChooseproduct  db 'chooseProduct',0    ; DATA XREF: __cfstring:cfstr_Chooseproduct↓o
a8bitdo         db '8BitDo',0           ; DATA XREF: __cfstring:cfstr_8bitdo↓o
asc_100030024   db '@"',0               ; DATA XREF: __cfstring:stru_10003C0F8↓o
aUpdatebuttonNo db 'updateButton_normal',0
                                        ; DATA XREF: __cfstring:cfstr_UpdatebuttonNo↓o
aUpdatebuttonHi db 'updateButton_highlight',0
                                        ; DATA XREF: __cfstring:cfstr_UpdatebuttonHi↓o
aFirmwareupdate db 'firmwareUpdate',0   ; DATA XREF: __cfstring:cfstr_Firmwareupdate↓o
aBetaD_1        db 'beta %d',0          ; DATA XREF: __cfstring:cfstr_BetaD_1↓o
aV2f_2          db '%@ V%.2f %@ %@',0   ; DATA XREF: __cfstring:cfstr_V2f_2↓o
aConnect        db 'Connect',0          ; DATA XREF: __cfstring:cfstr_Connect↓o
asc_100030080   db '%@ %@',0            ; DATA XREF: __cfstring:stru_10003C1D8↓o
a2lf            db '%.2lf',0            ; DATA XREF: __cfstring:cfstr_2lf↓o
aV160Firmware8  db 'v16@?0@"Firmware"8',0
                                        ; DATA XREF: __const:000000010003A698↓o
aMacos          db 'MacOS',0            ; DATA XREF: __cfstring:cfstr_Macos↓o
aMacostisp      db 'MacOSTisp',0        ; DATA XREF: __cfstring:cfstr_Macostisp↓o
; char aMmkey1XMmkey2X[]
aMmkey1XMmkey2X db 'mmkey1 %x mmkey2 %x',0Ah,0
                                        ; DATA XREF: sub_100022C95+4↑o
asc_1000300C4   db ',',0                ; DATA XREF: __cfstring:stru_10003C258↓o
asc_1000300C6   db '[',0                ; DATA XREF: __cfstring:stru_10003C278↓o
asc_1000300C8   db ']',0                ; DATA XREF: __cfstring:stru_10003C298↓o
a8bitdoUltimate db '8BitDo Ultimate 2.4g Adapter',0
                                        ; DATA XREF: __cfstring:cfstr_8bitdoUltimate↓o
a8bitdoUltimate_0 db '8BitDo Ultimate Adapter',0
                                        ; DATA XREF: __cfstring:cfstr_8bitdoUltimate_0↓o
asc_1000300FF   db '_',0                ; DATA XREF: __cfstring:stru_10003C2F8↓o
; char aEraseFlash[]
aEraseFlash     db 'erase Flash ',0     ; DATA XREF: sub_1000269C1+A↑o
aSn30prosf30pro db 'SN30ProSF30Pro_tx',0
                                        ; DATA XREF: __cfstring:cfstr_Sn30prosf30pro↓o
aN30prof30prov2 db 'N30ProF30ProV2_tx',0
                                        ; DATA XREF: __cfstring:cfstr_N30prof30prov2↓o
aN30prof30proBo db 'N30ProF30Pro_bottom_tx',0
                                        ; DATA XREF: __cfstring:cfstr_N30prof30proBo↓o
aN30prof30prov2_0 db 'N30ProF30ProV2_bottom_tx',0
                                        ; DATA XREF: __cfstring:cfstr_N30prof30prov2_0↓o
a3              db '3',0                ; DATA XREF: __cfstring:cfstr_3↓o
a8              db '8',0                ; DATA XREF: __cfstring:cfstr_8↓o
aSnprosfpro1    db 'SNProSFPro1',0      ; DATA XREF: __cfstring:cfstr_Snprosfpro1↓o
aSnprosfpro2    db 'SNProSFPro2',0      ; DATA XREF: __cfstring:cfstr_Snprosfpro2↓o
aSnprosfpro3    db 'SNProSFPro3',0      ; DATA XREF: __cfstring:cfstr_Snprosfpro3↓o
aN30pro2Tx      db 'N30Pro2_tx',0       ; DATA XREF: __cfstring:cfstr_N30pro2Tx↓o
aNesjoyNimiTx   db 'nesjoy_nimi_tx',0   ; DATA XREF: __cfstring:cfstr_NesjoyNimiTx↓o
aN30prof30proTx db 'N30ProF30Pro_tx',0  ; DATA XREF: __cfstring:cfstr_N30prof30proTx↓o
aN30prof30pro1  db 'N30ProF30Pro1',0    ; DATA XREF: __cfstring:cfstr_N30prof30pro1↓o
aN30prof30pro2  db 'N30ProF30Pro2',0    ; DATA XREF: __cfstring:cfstr_N30prof30pro2↓o
aN30prof30pron3 db 'N30ProF30ProN30ProV2F30ProV23',0
                                        ; DATA XREF: __cfstring:cfstr_N30prof30pron3↓o
asc_1000301EE   db 'F',0                ; DATA XREF: __cfstring:stru_10003C4F8↓o
aF30Tx          db 'F30_tx',0           ; DATA XREF: __cfstring:cfstr_F30Tx↓o
aN30Tx          db 'N30_tx',0           ; DATA XREF: __cfstring:cfstr_N30Tx↓o
aFc301          db 'FC301',0            ; DATA XREF: __cfstring:cfstr_Fc301↓o
aFc302          db 'FC302',0            ; DATA XREF: __cfstring:cfstr_Fc302↓o
aFc303          db 'FC303',0            ; DATA XREF: __cfstring:cfstr_Fc303↓o
aSn30sf30Tx     db 'SN30SF30_tx',0      ; DATA XREF: __cfstring:cfstr_Sn30sf30Tx↓o
aN64Tx          db 'N64_tx',0           ; DATA XREF: __cfstring:cfstr_N64Tx↓o
aNesminirrTx    db 'NesMiniRR_tx',0     ; DATA XREF: __cfstring:cfstr_NesminirrTx↓o
aMdrr1          db 'MDRR1',0            ; DATA XREF: __cfstring:cfstr_Mdrr1↓o
aMdrr2          db 'MDRR2',0            ; DATA XREF: __cfstring:cfstr_Mdrr2↓o
aSfcrrTx        db 'SFCRR_tx',0         ; DATA XREF: __cfstring:cfstr_SfcrrTx↓o
aNesrrTx        db 'NESRR_tx',0         ; DATA XREF: __cfstring:cfstr_NesrrTx↓o
aSn30modkitTx   db 'SN30Modkit_tx',0    ; DATA XREF: __cfstring:cfstr_Sn30modkitTx↓o
aSn30modkit1    db 'SN30Modkit1',0      ; DATA XREF: __cfstring:cfstr_Sn30modkit1↓o
aSn30modkit2    db 'SN30Modkit2',0      ; DATA XREF: __cfstring:cfstr_Sn30modkit2↓o
aN30modkitTx    db 'N30Modkit_tx',0     ; DATA XREF: __cfstring:cfstr_N30modkitTx↓o
aN30modkit1     db 'N30Modkit1',0       ; DATA XREF: __cfstring:cfstr_N30modkit1↓o
aN30modkit2     db 'N30Modkit2',0       ; DATA XREF: __cfstring:cfstr_N30modkit2↓o
aM30modkitTx    db 'M30Modkit_tx',0     ; DATA XREF: __cfstring:cfstr_M30modkitTx↓o
aM30modkit1     db 'M30Modkit1',0       ; DATA XREF: __cfstring:cfstr_M30modkit1↓o
aM30modkit2     db 'M30Modkit2',0       ; DATA XREF: __cfstring:cfstr_M30modkit2↓o
aGbrosTx        db 'GBros_tx',0         ; DATA XREF: __cfstring:cfstr_GbrosTx↓o
aGbros1         db 'GBros1',0           ; DATA XREF: __cfstring:cfstr_Gbros1↓o
aGbros2         db 'GBros2',0           ; DATA XREF: __cfstring:cfstr_Gbros2↓o
aUsbrrTx        db 'USBRR_tx',0         ; DATA XREF: __cfstring:cfstr_UsbrrTx↓o
aUsbrr1         db 'USBRR1',0           ; DATA XREF: __cfstring:cfstr_Usbrr1↓o
aUsbrr2         db 'USBRR2',0           ; DATA XREF: __cfstring:cfstr_Usbrr2↓o
aM30rrTx        db 'M30RR_tx',0         ; DATA XREF: __cfstring:cfstr_M30rrTx↓o
aM30Tx          db 'M30_tx',0           ; DATA XREF: __cfstring:cfstr_M30Tx↓o
aMd1            db 'MD1',0              ; DATA XREF: __cfstring:cfstr_Md1↓o
aMd2            db 'MD2',0              ; DATA XREF: __cfstring:cfstr_Md2↓o
aMd3            db 'MD3',0              ; DATA XREF: __cfstring:cfstr_Md3↓o
aPsmodkitTx     db 'PSModkit_tx',0      ; DATA XREF: __cfstring:cfstr_PsmodkitTx↓o
aPsmodkit1      db 'PSModkit1',0        ; DATA XREF: __cfstring:cfstr_Psmodkit1↓o
aPsmodkit2      db 'PSModkit2',0        ; DATA XREF: __cfstring:cfstr_Psmodkit2↓o
aSn30pro        db 'SN30Pro+',0         ; DATA XREF: __cfstring:cfstr_Sn30pro↓o
aSn30pro1       db 'SN30Pro+1',0        ; DATA XREF: __cfstring:cfstr_Sn30pro1↓o
aSn30pro2       db 'SN30Pro+2',0        ; DATA XREF: __cfstring:cfstr_Sn30pro2↓o
aSn30pro3       db 'SN30Pro+3',0        ; DATA XREF: __cfstring:cfstr_Sn30pro3↓o
aDogboneTx      db 'dogbone_tx',0       ; DATA XREF: __cfstring:cfstr_DogboneTx↓o
aSsdTx          db 'ssd_tx',0           ; DATA XREF: __cfstring:cfstr_SsdTx↓o
aS30modkit1     db 'S30Modkit1',0       ; DATA XREF: __cfstring:cfstr_S30modkit1↓o
aS30modkit2     db 'S30Modkit2',0       ; DATA XREF: __cfstring:cfstr_S30modkit2↓o
aLiteTx         db 'lite_tx',0          ; DATA XREF: __cfstring:cfstr_LiteTx↓o
aLite1          db 'Lite1',0            ; DATA XREF: __cfstring:cfstr_Lite1↓o
aLite2          db 'Lite2',0            ; DATA XREF: __cfstring:cfstr_Lite2↓o
aLite3          db 'Lite3',0            ; DATA XREF: __cfstring:cfstr_Lite3↓o
aZero2Tx        db 'zero2_tx',0         ; DATA XREF: __cfstring:cfstr_Zero2Tx↓o
aZero21         db 'Zero21',0           ; DATA XREF: __cfstring:cfstr_Zero21↓o
aZero22         db 'Zero22',0           ; DATA XREF: __cfstring:cfstr_Zero22↓o
aZero23         db 'Zero23',0           ; DATA XREF: __cfstring:cfstr_Zero23↓o
aXcloudTx       db 'xcloud_tx',0        ; DATA XREF: __cfstring:cfstr_XcloudTx↓o
aXcloud1        db 'xCloud1',0          ; DATA XREF: __cfstring:cfstr_Xcloud1↓o
aXcloud2        db 'xCloud2',0          ; DATA XREF: __cfstring:cfstr_Xcloud2↓o
aXcloud3        db 'xCloud3',0          ; DATA XREF: __cfstring:cfstr_Xcloud3↓o
aArcadestickTx  db 'arcadeStick_tx',0   ; DATA XREF: __cfstring:cfstr_ArcadestickTx↓o
aArcadestick1   db 'arcadeStick1',0     ; DATA XREF: __cfstring:cfstr_Arcadestick1↓o
aArcadestick2   db 'arcadeStick2',0     ; DATA XREF: __cfstring:cfstr_Arcadestick2↓o
aArcadestick3   db 'arcadeStick3',0     ; DATA XREF: __cfstring:cfstr_Arcadestick3↓o
aArcadestickRrT db 'arcadeStick_RR_tx',0
                                        ; DATA XREF: __cfstring:cfstr_ArcadestickRrT↓o
aArcadestickRr1 db 'arcadeStick_RR1',0  ; DATA XREF: __cfstring:cfstr_ArcadestickRr1↓o
aArcadestickRr2 db 'arcadeStick_RR2',0  ; DATA XREF: __cfstring:cfstr_ArcadestickRr2↓o
aArcadestickRr3 db 'arcadeStick_RR3',0  ; DATA XREF: __cfstring:cfstr_ArcadestickRr3↓o
aPro2Tx         db 'pro2_tx',0          ; DATA XREF: __cfstring:cfstr_Pro2Tx↓o
aProwiredTx     db 'proWired_tx',0      ; DATA XREF: __cfstring:cfstr_ProwiredTx↓o
aPro2wired1     db 'Pro2Wired1',0       ; DATA XREF: __cfstring:cfstr_Pro2wired1↓o
aPro2wired2     db 'Pro2Wired2',0       ; DATA XREF: __cfstring:cfstr_Pro2wired2↓o
aPro2xboxwiredT db 'pro2XboxWired_tx',0 ; DATA XREF: __cfstring:cfstr_Pro2xboxwiredT↓o
aPro2xboxwired2 db 'Pro2XBOXWired2',0   ; DATA XREF: __cfstring:cfstr_Pro2xboxwired2↓o
aUltimatexboxwi db 'UltimateXboxWired_tx',0
                                        ; DATA XREF: __cfstring:cfstr_Ultimatexboxwi↓o
aUltimateTx     db 'Ultimate_tx',0      ; DATA XREF: __cfstring:cfstr_UltimateTx↓o
aHomekey        db 'HOMEKey',0          ; DATA XREF: __cfstring:cfstr_Homekey↓o
aUltimateWiredT db 'Ultimate_Wired_tx',0
                                        ; DATA XREF: __cfstring:cfstr_UltimateWiredT↓o
aUltimatecWired db 'UltimateC_Wired_tx',0
                                        ; DATA XREF: __cfstring:cfstr_UltimatecWired↓o
aUltimatecTx    db 'UltimateC_tx',0     ; DATA XREF: __cfstring:cfstr_UltimatecTx↓o
aArcadestickxbo db 'arcadeStickXbox_tx',0
                                        ; DATA XREF: __cfstring:cfstr_Arcadestickxbo↓o
aArcadestickxbo_0 db 'arcadeStickXbox2',0
                                        ; DATA XREF: __cfstring:cfstr_Arcadestickxbo_0↓o
aNeogeoTx       db 'NeoGeo_tx',0        ; DATA XREF: __cfstring:cfstr_NeogeoTx↓o
aPsrrTx         db 'PSRR_tx',0          ; DATA XREF: __cfstring:cfstr_PsrrTx↓o
aMicroTx        db 'Micro_tx',0         ; DATA XREF: __cfstring:cfstr_MicroTx↓o
aI              db 'i',0                ; DATA XREF: __cfstring:cfstr_I↓o
aS              db 's',0                ; DATA XREF: __cfstring:cfstr_S↓o
asc_10003052D   db 'f',0                ; DATA XREF: __cfstring:stru_10003CF58↓o
aD_1            db 'd',0                ; DATA XREF: __cfstring:cfstr_D_1↓o
asc_100030531   db 'l',0                ; DATA XREF: __cfstring:stru_10003CF98↓o
aQ              db 'q',0                ; DATA XREF: __cfstring:cfstr_Q↓o
aC_0            db 'c',0                ; DATA XREF: __cfstring:cfstr_C_0↓o
aB              db 'b',0                ; DATA XREF: __cfstring:cfstr_B↓o
asc_100030539   db '*',0                ; DATA XREF: __cfstring:stru_10003D018↓o
aObjcIvar       db '^{objc_ivar=}',0    ; DATA XREF: __cfstring:cfstr_ObjcIvar↓o
aObjcMethod     db '^{objc_method=}',0  ; DATA XREF: __cfstring:cfstr_ObjcMethod↓o
asc_100030559   db '@?',0               ; DATA XREF: __cfstring:stru_10003D078↓o
asc_10003055C   db '#',0                ; DATA XREF: __cfstring:stru_10003D098↓o
asc_10003055E   db ':',0                ; DATA XREF: __cfstring:stru_10003D0B8↓o
asc_100030560   db '@',0                ; DATA XREF: __cfstring:stru_10003D0D8↓o
aC_1            db '%c',0               ; DATA XREF: __cfstring:cfstr_C_1↓o
asc_100030565   db '!$&',27h,'()*+,-./:;=?@_~%#[]',0
                                        ; DATA XREF: __cfstring:stru_10003D118↓o
aList_0         db 'List',0             ; DATA XREF: __cfstring:cfstr_List_0↓o
; char a02x_1[]
a02x_1          db '%02X ',0            ; DATA XREF: sub_10002DD0E+16↑o
; char aIsplatformorva[]
aIsplatformorva db '__isPlatformOrVariantPlatformVersionAtLeast',0
                                        ; DATA XREF: sub_10002EA40+1↑o
; char aOsVersionCheck[]
aOsVersionCheck db 'os_version_check.c',0
                                        ; DATA XREF: sub_10002EA40+8↑o
; char aPlatform2Platf[]
aPlatform2Platf db 'Platform2 == PLATFORM_MACOS && "unexpected platform"',0
                                        ; DATA XREF: sub_10002EA40+F↑o
; char symbol[]
symbol          db 'kCFAllocatorNull',0 ; DATA XREF: sub_10002E690+5E↑o
; char aCfdatacreatewi[]
aCfdatacreatewi db 'CFDataCreateWithBytesNoCopy',0
                                        ; DATA XREF: sub_10002E690+7D↑o
; char aCfpropertylist[]
aCfpropertylist db 'CFPropertyListCreateWithData',0
                                        ; DATA XREF: sub_10002E690+9C↑o
; char aCfpropertylist_0[]
aCfpropertylist_0 db 'CFPropertyListCreateFromXMLData',0
                                        ; DATA XREF: sub_10002E690+B2↑o
; char aCfstringcreate[]
aCfstringcreate db 'CFStringCreateWithCStringNoCopy',0
                                        ; DATA XREF: sub_10002E690+D4↑o
; char aCfdictionaryge[]
aCfdictionaryge db 'CFDictionaryGetValue',0
                                        ; DATA XREF: sub_10002E690+F3↑o
; char aCfgettypeid[]
aCfgettypeid    db 'CFGetTypeID',0      ; DATA XREF: sub_10002E690+112↑o
; char aCfstringgettyp[]
aCfstringgettyp db 'CFStringGetTypeID',0
                                        ; DATA XREF: sub_10002E690+133↑o
; char aCfstringgetcst[]
aCfstringgetcst db 'CFStringGetCString',0
                                        ; DATA XREF: sub_10002E690+154↑o
; char aCfrelease[]
aCfrelease      db 'CFRelease',0        ; DATA XREF: sub_10002E690+175↑o
; char aSystemLibraryC[]
aSystemLibraryC db '/System/Library/CoreServices/SystemVersion.plist',0
                                        ; DATA XREF: sub_10002E690+196↑o
; char aR[]
aR              db 'r',0                ; DATA XREF: sub_10002E690+19D↑o
aProductversion db 'ProductVersion',0   ; DATA XREF: sub_10002E690+26F↑o
; char aDDD[]
aDDD            db '%d.%d.%d',0         ; DATA XREF: sub_10002E690+2D3↑o
__cstring       ends

; ===========================================================================

; Segment type: Pure data
__objc_methname segment byte public 'DATA' use64
                assume cs:__objc_methname
                ;org 100030721h
sel_CGColor     db 'CGColor',0          ; DATA XREF: __objc_selrefs:selRef_CGColor↓o
sel_AllHidden_  db 'AllHidden:',0       ; DATA XREF: __objc_const:0000000100040260↓o
                                        ; __objc_selrefs:selRef_AllHidden_↓o
aTNVSrcclass    db 'T#,N,V_srcClass',0  ; DATA XREF: __objc_const:00000001000450B0↓o
sel_EraseFlash  db 'EraseFlash',0       ; DATA XREF: __objc_const:00000001000457A8↓o
                                        ; __objc_selrefs:selRef_EraseFlash↓o
aTNsscrollviewV db 'T@"NSScrollView",&,V_scrollView',0
                                        ; DATA XREF: __objc_const:0000000100041028↓o
sel_Flash_CRC_crcIndex_ db 'Flash_CRC:crcIndex:',0
                                        ; DATA XREF: __objc_const:000000010003F248↓o
                                        ; __objc_selrefs:selRef_Flash_CRC_crcIndex_↓o
aTUpdateviewNVU db 'T@"UpdateView",&,N,V_updateView',0
                                        ; DATA XREF: __objc_const:000000010003E420↓o
sel_Get_key_data db 'Get_key_data',0    ; DATA XREF: __objc_const:000000010003F1E8↓o
                                        ; __objc_selrefs:selRef_Get_key_data↓o
aTObjcPropertyN db 'T^{objc_property=},N,V_property',0
                                        ; DATA XREF: __objc_const:0000000100045080↓o
sel_JSONData    db 'JSONData',0         ; DATA XREF: __objc_const:0000000100042A10↓o
aTfVMProgress   db 'Tf,V_m_progress',0  ; DATA XREF: __objc_const:00000001000430C0↓o
sel_JSONObjectWithData_options_error_ db 'JSONObjectWithData:options:error:',0
                                        ; DATA XREF: __objc_selrefs:selRef_JSONObjectWithData_options_error_↓o
aTiNVFilesize   db 'Ti,N,V_fileSize',0  ; DATA XREF: __objc_const:0000000100046A48↓o
aKvcdisabled    db 'KVCDisabled',0      ; DATA XREF: __objc_const:0000000100043BD8↓o
aBlocks         db '_blocks',0          ; DATA XREF: __objc_const:000000010003F518↓o
                                        ; __objc_const:00000001000459D0↓o
sel_MoreViewClick_View_ db 'MoreViewClick:View:',0
                                        ; DATA XREF: __objc_const:000000010003DE18↓o
                                        ; __objc_const:000000010003E140↓o ...
aDinput         db '_dinput',0          ; DATA XREF: __objc_const:000000010003E308↓o
sel_SHIDBootAddDevice_hid_ db 'SHIDBootAddDevice:hid:',0
                                        ; DATA XREF: __objc_const:000000010003FF38↓o
                                        ; __objc_const:0000000100040488↓o ...
aId_0           db '_id',0              ; DATA XREF: __objc_const:00000001000468E0↓o
sel_SHIDBootErrorString_msg_ db 'SHIDBootErrorString:msg:',0
                                        ; DATA XREF: __objc_const:000000010003FF00↓o
                                        ; __objc_const:0000000100040560↓o ...
aMorescrollview db '_moreScrollView',0  ; DATA XREF: __objc_const:0000000100043848↓o
sel_SHIDBootGetVersion_hid_ db 'SHIDBootGetVersion:hid:',0
                                        ; DATA XREF: __objc_const:000000010003FE70↓o
                                        ; __objc_const:00000001000404D0↓o ...
aReadme         db '_readme',0          ; DATA XREF: __objc_const:00000001000469E0↓o
sel_SHIDBootHJZUpdate_device_ db 'SHIDBootHJZUpdate:device:',0
                                        ; DATA XREF: __objc_const:0000000100040000↓o
                                        ; __objc_const:00000001000405A8↓o ...
sel_application_delegateHandlesKey_ db 'application:delegateHandlesKey:',0
                                        ; DATA XREF: __objc_const:0000000100044790↓o
sel_SHIDBootRemoveDevice_hid_ db 'SHIDBootRemoveDevice:hid:',0
                                        ; DATA XREF: __objc_const:000000010003FE58↓o
                                        ; __objc_const:00000001000404B8↓o ...
sel_arrayWithArray_ db 'arrayWithArray:',0
                                        ; DATA XREF: __objc_selrefs:selRef_arrayWithArray_↓o
sel_SHIDBootStartUpdateed_ db 'SHIDBootStartUpdateed:',0
                                        ; DATA XREF: __objc_const:000000010003FED0↓o
                                        ; __objc_const:0000000100040518↓o ...
sel_arrow02     db 'arrow02',0          ; DATA XREF: __objc_const:0000000100043EC0↓o
                                        ; __objc_const:0000000100044170↓o ...
sel_SMiniImageViewClick_ db 'SMiniImageViewClick:',0
                                        ; DATA XREF: __objc_const:000000010003FFC0↓o
                                        ; __objc_const:0000000100040590↓o ...
sel_checkForUpdates db 'checkForUpdates',0
                                        ; DATA XREF: __objc_const:0000000100041E10↓o
                                        ; __objc_selrefs:selRef_checkForUpdates↓o
sel_S_RemoveView_ db 'S_RemoveView:',0  ; DATA XREF: __objc_const:000000010003DFC0↓o
                                        ; __objc_selrefs:selRef_S_RemoveView_↓o
sel_containsObject_ db 'containsObject:',0
                                        ; DATA XREF: __objc_selrefs:selRef_containsObject_↓o
aTR             db 'T#,R',0             ; DATA XREF: __objc_const:000000010003DC80↓o
                                        ; __objc_const:000000010003E470↓o ...
sel_content     db 'content',0          ; DATA XREF: __objc_const:0000000100043378↓o
                                        ; __objc_const:00000001000434B0↓o ...
aTDevicedelegat db 'T@"<DeviceDelegate>",W,V_delegate',0
                                        ; DATA XREF: __objc_const:0000000100046F78↓o
sel_details     db 'details',0          ; DATA XREF: __objc_const:000000010003D400↓o
                                        ; __objc_const:000000010003D840↓o ...
aTShidbootdeleg db 'T@"<SHIDBootDelegate>",W,N,V_addDelegate',0
                                        ; DATA XREF: __objc_const:000000010003E748↓o
sel_eraseFlashJL_len_TotalEraseLen_ db 'eraseFlashJL:len:TotalEraseLen:',0
                                        ; DATA XREF: __objc_const:000000010003F038↓o
                                        ; __objc_selrefs:selRef_eraseFlashJL_len_TotalEraseLen_↓o
aTShidboothjzWN db 'T@"<SHIDBootHJZ>",W,N,V_bootDelegate',0
                                        ; DATA XREF: __objc_const:0000000100045A28↓o
sel_findBackButton_ db 'findBackButton:',0
                                        ; DATA XREF: __objc_const:0000000100040320↓o
aTDevicemanualv db 'T@"DeviceManualView",&,N,V_manualView',0
                                        ; DATA XREF: __objc_const:0000000100041158↓o
sel_getComputerName db 'getComputerName',0
                                        ; DATA XREF: __objc_const:000000010003D970↓o
                                        ; __objc_selrefs:selRef_getComputerName↓o
aTMjpropertytyp db 'T@"MJPropertyType",R,N,V_type',0
                                        ; DATA XREF: __objc_const:00000001000450A0↓o
sel_getNameWithPid_ db 'getNameWithPid:',0
                                        ; DATA XREF: __objc_const:000000010003D398↓o
                                        ; __objc_selrefs:selRef_getNameWithPid_↓o
aTNsarrayNVList db 'T@"NSArray",&,N,V_List',0
                                        ; DATA XREF: __objc_const:00000001000465E8↓o
sel_hasNewFirmwaerVersion_firmwaer_ db 'hasNewFirmwaerVersion:firmwaer:',0
                                        ; DATA XREF: __objc_const:000000010003DDE8↓o
                                        ; __objc_const:000000010003E128↓o ...
aTNsbuttonVSele db 'T@"NSButton",&,V_selectButton',0
                                        ; DATA XREF: __objc_const:0000000100041108↓o
sel_isClick     db 'isClick',0          ; DATA XREF: __objc_const:0000000100041350↓o
                                        ; __objc_const:0000000100041448↓o ...
aTNsbuttonWVHel db 'T@"NSButton",W,V_helpButton',0
                                        ; DATA XREF: __objc_const:0000000100044190↓o
sel_isProxy     db 'isProxy',0          ; DATA XREF: __objc_const:000000010003DB10↓o
                                        ; __objc_const:000000010003F6B0↓o ...
aTNscolorNVMHig db 'T@"NSColor",&,N,V_m_highlightColor',0
                                        ; DATA XREF: __objc_const:00000001000430F0↓o
sel_keyValuesWithIgnoredKeys_error_ db 'keyValuesWithIgnoredKeys:error:',0
                                        ; DATA XREF: __objc_const:00000001000429F8↓o
aTNscolorNVMTit db 'T@"NSColor",&,N,V_m_titleHighlighColor',0
                                        ; DATA XREF: __objc_const:0000000100043110↓o
aMHeigh         db 'm_heigh',0          ; DATA XREF: __objc_const:0000000100045F68↓o
aTNscolorNVMTmp db 'T@"NSColor",&,N,V_m_tmpbg',0
                                        ; DATA XREF: __objc_const:00000001000430A0↓o
sel_m_title     db 'm_title',0          ; DATA XREF: __objc_const:0000000100042E50↓o
                                        ; __objc_const:00000001000430D0↓o ...
aTNsfilehandleN db 'T@"NSFileHandle",&,N,V_pfile',0
                                        ; DATA XREF: __objc_const:0000000100045A48↓o
sel_m_tmpbg     db 'm_tmpbg',0          ; DATA XREF: __objc_const:0000000100042EF8↓o
                                        ; __objc_const:00000001000430A0↓o ...
aTNsimageviewNV db 'T@"NSImageView",&,N,V_subImageView',0
                                        ; DATA XREF: __objc_const:00000001000460F0↓o
aMWidth         db 'm_width',0          ; DATA XREF: __objc_const:0000000100040B50↓o
aTNsimageviewNV_0 db 'T@"NSImageView",&,N,V_subsubImageView',0
                                        ; DATA XREF: __objc_const:0000000100046110↓o
sel_md5         db 'md5',0              ; DATA XREF: __objc_const:0000000100046810↓o
                                        ; __objc_const:0000000100046AA8↓o
aTNsimageviewWV db 'T@"NSImageView",W,V_arrow02',0
                                        ; DATA XREF: __objc_const:0000000100044170↓o
sel_mj_objectWithKeyValues_context_ db 'mj_objectWithKeyValues:context:',0
                                        ; DATA XREF: __objc_const:0000000100042370↓o
                                        ; __objc_selrefs:selRef_mj_objectWithKeyValues_context_↓o
aTNsinputstream db 'T@"NSInputStream",&,N,V_pfile',0
                                        ; DATA XREF: __objc_const:000000010003F580↓o
sel_numberWithBool_ db 'numberWithBool:',0
                                        ; DATA XREF: __objc_selrefs:selRef_numberWithBool_↓o
aTNsmutablearra db 'T@"NSMutableArray",&,V_devices',0
                                        ; DATA XREF: __objc_const:00000001000441B0↓o
                                        ; __objc_const:0000000100046F88↓o
sel_objectWithFile_ db 'objectWithFile:',0
                                        ; DATA XREF: __objc_const:0000000100042B98↓o
aTNsmutablearra_0 db 'T@"NSMutableArray",&,V_views',0
                                        ; DATA XREF: __objc_const:000000010003E450↓o
sel_read_maxLength_ db 'read:maxLength:',0
                                        ; DATA XREF: __objc_selrefs:selRef_read_maxLength_↓o
aTNsmutabledict db 'T@"NSMutableDictionary",&,N,V_propertyKeysDict',0
                                        ; DATA XREF: __objc_const:0000000100045060↓o
sel_readPID     db 'readPID',0          ; DATA XREF: __objc_const:000000010003F080↓o
                                        ; __objc_selrefs:selRef_readPID↓o
aTNsscrollviewN db 'T@"NSScrollView",&,N,V_moreScrollView',0
                                        ; DATA XREF: __objc_const:00000001000438B0↓o
sel_refresh     db 'refresh',0          ; DATA XREF: __objc_const:0000000100043D28↓o
                                        ; __objc_selrefs:selRef_refresh↓o
aTNsstringNVDev db 'T@"NSString",&,N,V_deviceName',0
                                        ; DATA XREF: __objc_const:000000010003D7F0↓o
sel_removeObserver_ db 'removeObserver:',0
                                        ; DATA XREF: __objc_selrefs:selRef_removeObserver_↓o
aTNsstringVSave db 'T@"NSString",&,V_savePath',0
                                        ; DATA XREF: __objc_const:0000000100041118↓o
sel_requestWithURL_ db 'requestWithURL:',0
                                        ; DATA XREF: __objc_selrefs:selRef_requestWithURL_↓o
aTNsstringCNVCo db 'T@"NSString",C,N,V_code',0
                                        ; DATA XREF: __objc_const:0000000100043B78↓o
sel_setAppZoneAddr_ db 'setAppZoneAddr:',0
                                        ; DATA XREF: __objc_const:000000010003F398↓o
                                        ; __objc_selrefs:selRef_setAppZoneAddr_↓o
aTNsstringCNVEr db 'T@"NSString",C,N,V_error',0
                                        ; DATA XREF: __objc_const:00000001000465D8↓o
sel_setBootVersion_ db 'setBootVersion:',0
                                        ; DATA XREF: __objc_const:000000010003D568↓o
                                        ; __objc_selrefs:selRef_setBootVersion_↓o
aTNsstringCNVFi db 'T@"NSString",C,N,V_filePath',0
                                        ; DATA XREF: __objc_const:000000010003E758↓o
                                        ; __objc_const:000000010003F570↓o ...
sel_setBorderWidth_ db 'setBorderWidth:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setBorderWidth_↓o
aTNsstringCNVMT db 'T@"NSString",C,N,V_m_title',0
                                        ; DATA XREF: __objc_const:00000001000430D0↓o
sel_setFill     db 'setFill',0          ; DATA XREF: __objc_selrefs:selRef_setFill↓o
aTNsstringCNVMi db 'T@"NSString",C,N,V_miniImageName',0
                                        ; DATA XREF: __objc_const:000000010003ED10↓o
sel_setMd5_     db 'setMd5:',0          ; DATA XREF: __objc_const:0000000100046828↓o
aTNsstringCNVMo db 'T@"NSString",C,N,V_moreImagehighlight',0
                                        ; DATA XREF: __objc_const:000000010003ED20↓o
sel_setNeedsDisplay db 'setNeedsDisplay',0
                                        ; DATA XREF: __objc_selrefs:selRef_setNeedsDisplay↓o
aTNsstringCNVRe db 'T@"NSString",C,N,V_readme',0
                                        ; DATA XREF: __objc_const:0000000100046A88↓o
sel_setNotFirmware_ db 'setNotFirmware:',0
                                        ; DATA XREF: __objc_const:0000000100040890↓o
                                        ; __objc_selrefs:selRef_setNotFirmware_↓o
aTNsstringRC    db 'T@"NSString",R,C',0 ; DATA XREF: __objc_const:000000010003DC90↓o
                                        ; __objc_const:000000010003E480↓o ...
sel_setPid_     db 'setPid:',0          ; DATA XREF: __objc_const:000000010003D460↓o
                                        ; __objc_const:000000010003EA70↓o ...
aTNstextfieldWV db 'T@"NSTextField",W,V_content',0
                                        ; DATA XREF: __objc_const:00000001000434B0↓o
sel_setStringValue_ db 'setStringValue:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setStringValue_↓o
aTNstextfieldWV_0 db 'T@"NSTextField",W,V_usb',0
                                        ; DATA XREF: __objc_const:0000000100044130↓o
sel_setTitleString_ db 'setTitleString:',0
                                        ; DATA XREF: __objc_const:00000001000432E8↓o
                                        ; __objc_selrefs:selRef_setTitleString_↓o
aTNstimerNVUpda db 'T@"NSTimer",&,N,V_updateTimer',0
                                        ; DATA XREF: __objc_const:0000000100041168↓o
sel_setUsb_     db 'setUsb:',0          ; DATA XREF: __objc_const:0000000100043E18↓o
aTNsviewWVUsbvi db 'T@"NSView",W,V_usbView',0
                                        ; DATA XREF: __objc_const:0000000100044150↓o
sel_setWithObjects_ db 'setWithObjects:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setWithObjects_↓o
aTS8bitdodevice db 'T@"S8BitdoDevice",&,N,V_device',0
                                        ; DATA XREF: __objc_const:0000000100041188↓o
                                        ; __objc_const:0000000100046120↓o
sel_stopChangeMode_ db 'stopChangeMode:',0
                                        ; DATA XREF: __objc_const:0000000100041538↓o
                                        ; __objc_selrefs:selRef_stopChangeMode_↓o
aTSbackbuttonNV db 'T@"SBackButton",&,N,V_backButton',0
                                        ; DATA XREF: __objc_const:000000010003E430↓o
sel_subsubImageView db 'subsubImageView',0
                                        ; DATA XREF: __objc_const:0000000100045EF8↓o
                                        ; __objc_const:0000000100046110↓o ...
aTSbuttonVOkbut db 'T@"SButton",&,V_okButton',0
                                        ; DATA XREF: __objc_const:00000001000434C0↓o
sel_textView_clickedOnLink_atIndex_ db 'textView:clickedOnLink:atIndex:',0
                                        ; DATA XREF: __objc_const:000000010003F9D0↓o
aTSbuttonVUpdat db 'T@"SButton",&,V_updateButton',0
                                        ; DATA XREF: __objc_const:00000001000410C8↓o
sel_updateFirmwaers db 'updateFirmwaers',0
                                        ; DATA XREF: __objc_const:0000000100040998↓o
                                        ; __objc_const:00000001000410F8↓o ...
aTShiddinputVDi db 'T@"SHIDDinput",&,V_dinput',0
                                        ; DATA XREF: __objc_const:000000010003E3F0↓o
sel_updater_userDidSkipThisVersion_ db 'updater:userDidSkipThisVersion:',0
                                        ; DATA XREF: __objc_const:0000000100041C10↓o
aTSlabelNVOnehi db 'T@"SLabel",&,N,V_oneHintLabel',0
                                        ; DATA XREF: __objc_const:00000001000460C0↓o
sel_uppercaseString db 'uppercaseString',0
                                        ; DATA XREF: __objc_selrefs:selRef_uppercaseString↓o
aTSlabelNVTwohi db 'T@"SLabel",&,N,V_twoHintLabel',0
                                        ; DATA XREF: __objc_const:00000001000460D0↓o
sel_usb         db 'usb',0              ; DATA XREF: __objc_const:0000000100043E00↓o
                                        ; __objc_const:0000000100044130↓o ...
aTSlabelVFirmwa db 'T@"SLabel",&,V_firmwaerHintLabel',0
                                        ; DATA XREF: __objc_const:00000001000410B8↓o
sel_valueForObject_ db 'valueForObject:',0
                                        ; DATA XREF: __objc_const:0000000100044DE0↓o
                                        ; __objc_selrefs:selRef_valueForObject_↓o
aTSlabelVNotfir db 'T@"SLabel",&,V_notFirmware',0
                                        ; DATA XREF: __objc_const:0000000100041098↓o
sel_vid         db 'vid',0              ; DATA XREF: __objc_const:000000010003D478↓o
                                        ; __objc_const:000000010003D7C0↓o ...
aTSminiimagevie db 'T@"SMiniImageView",&,V_miniRRImageView',0
                                        ; DATA XREF: __objc_const:0000000100040FF8↓o
sel__cxx_destruct db '.cxx_destruct',0  ; DATA XREF: __objc_const:000000010003D628↓o
                                        ; __objc_const:000000010003E2A8↓o ...
sel_EraseFlashPage_ db 'EraseFlashPage:',0
                                        ; DATA XREF: __objc_const:0000000100045778↓o
                                        ; __objc_selrefs:selRef_EraseFlashPage_↓o
sel_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ db 'BootReadFlash:Len:Address:Total_Len:Cmd:Block:',0
                                        ; DATA XREF: __objc_const:000000010003EFC0↓o
                                        ; __objc_selrefs:selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_↓o
aTNsmutablearra_1 db 'T@"NSMutableArray",&,N,V_blocks',0
                                        ; DATA XREF: __objc_const:000000010003F540↓o
                                        ; __objc_const:00000001000459F8↓o
sel_FindsView   db 'FindsView',0        ; DATA XREF: __objc_const:0000000100043E30↓o
                                        ; __objc_const:0000000100044140↓o ...
aTSlabelNVThree db 'T@"SLabel",&,N,V_threeHintLabel',0
                                        ; DATA XREF: __objc_const:00000001000460E0↓o
sel_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params_ db 'Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params'
                                        ; DATA XREF: __objc_const:000000010003EF78↓o
                                        ; __objc_selrefs:selRef_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params_↓o
                db ':',0
aTbNVIsselect   db 'TB,N,V_isSelect',0  ; DATA XREF: __objc_const:0000000100041438↓o
sel_HttpGetPageHtml_URL_encoding_ db 'HttpGetPageHtml:URL:encoding:',0
                                        ; DATA XREF: __objc_const:000000010003D9A0↓o
                                        ; __objc_selrefs:selRef_HttpGetPageHtml_URL_encoding_↓o
aTcVIsloaddata  db 'Tc,V_isloadData',0  ; DATA XREF: __objc_const:0000000100041068↓o
sel_JSONObject  db 'JSONObject',0       ; DATA XREF: __objc_const:0000000100042A28↓o
aTiNVBoottype   db 'Ti,N,V_bootType',0  ; DATA XREF: __objc_const:000000010003F590↓o
sel_JSONString  db 'JSONString',0       ; DATA XREF: __objc_const:0000000100042A40↓o
aTiNVMsgstate   db 'Ti,N,V_msgState',0  ; DATA XREF: __objc_const:00000001000465C8↓o
sel_List        db 'List',0             ; DATA XREF: __objc_const:0000000100046510↓o
                                        ; __objc_const:00000001000465E8↓o
aDevice         db '_device',0          ; DATA XREF: __objc_const:000000010003F498↓o
                                        ; __objc_const:0000000100040C70↓o ...
sel_SButtonClick_ db 'SButtonClick:',0  ; DATA XREF: __objc_const:000000010003FE18↓o
                                        ; __objc_const:0000000100040470↓o ...
aFromfoundation db '_fromFoundation',0  ; DATA XREF: __objc_const:0000000100043AF0↓o
sel_SHIDBootErrorNOEqualPID_gamepadType_pid_ db 'SHIDBootErrorNOEqualPID:gamepadType:pid:',0
                                        ; DATA XREF: __objc_const:000000010003FF18↓o
                                        ; __objc_const:0000000100040548↓o ...
aIdtype         db '_idType',0          ; DATA XREF: __objc_const:0000000100043A90↓o
sel_SHIDBootGetFirmwaerType_hid_ db 'SHIDBootGetFirmwaerType:hid:',0
                                        ; DATA XREF: __objc_const:000000010003FE88↓o
                                        ; __objc_const:00000001000404A0↓o ...
aOffset         db '_offset',0          ; DATA XREF: __objc_const:000000010003F478↓o
sel_SHIDBootHJZGetVersion_ db 'SHIDBootHJZGetVersion:',0
                                        ; DATA XREF: __objc_const:0000000100040018↓o
                                        ; __objc_const:00000001000405C0↓o
aThreehintlabel db '_threeHintLabel',0  ; DATA XREF: __objc_const:0000000100046028↓o
sel_SHIDBootNotSupportFirmware_ db 'SHIDBootNotSupportFirmware:',0
                                        ; DATA XREF: __objc_const:000000010003FEE8↓o
                                        ; __objc_const:0000000100040530↓o ...
sel_applicationWillFinishLaunching_ db 'applicationWillFinishLaunching:',0
                                        ; DATA XREF: __objc_const:00000001000447C0↓o
sel_SHIDBootStartUpdate_ db 'SHIDBootStartUpdate:',0
                                        ; DATA XREF: __objc_const:000000010003FEA0↓o
                                        ; __objc_const:00000001000404E8↓o ...
sel_arrow01     db 'arrow01',0          ; DATA XREF: __objc_const:0000000100043E90↓o
                                        ; __objc_const:0000000100044160↓o ...
sel_SHIDBootStartUpdateing_shid_ db 'SHIDBootStartUpdateing:shid:',0
                                        ; DATA XREF: __objc_const:000000010003FEB8↓o
                                        ; __objc_const:0000000100040500↓o ...
sel_arrow03     db 'arrow03',0          ; DATA XREF: __objc_const:0000000100043EF0↓o
                                        ; __objc_const:0000000100044180↓o ...
sel_S_AddView_  db 'S_AddView:',0       ; DATA XREF: __objc_const:000000010003DFA8↓o
                                        ; __objc_selrefs:selRef_S_AddView_↓o
sel_chengeboxClick_ db 'chengeboxClick:',0
                                        ; DATA XREF: __objc_const:0000000100040380↓o
                                        ; __objc_selrefs:selRef_chengeboxClick_↓o
sel_StatistcsFirmware_ID_ db 'StatistcsFirmware:ID:',0
                                        ; DATA XREF: __objc_const:000000010003D8F8↓o
                                        ; __objc_selrefs:selRef_StatistcsFirmware_ID_↓o
sel_containsString_ db 'containsString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_containsString_↓o
aTRNVTypeclass  db 'T#,R,N,V_typeClass',0
                                        ; DATA XREF: __objc_const:0000000100043BB8↓o
sel_dealloc     db 'dealloc',0          ; DATA XREF: __objc_const:000000010003E050↓o
                                        ; __objc_selrefs:selRef_dealloc↓o
aTHomeviewdeleg db 'T@"<HomeViewDelegate>",W,V_delegate',0
                                        ; DATA XREF: __objc_const:00000001000441C0↓o
sel_devices     db 'devices',0          ; DATA XREF: __objc_const:0000000100043F68↓o
                                        ; __objc_const:00000001000441B0↓o ...
aTShidbootdeleg_0 db 'T@"<SHIDBootDelegate>",W,N,V_bootDelegate',0
                                        ; DATA XREF: __objc_const:000000010003E738↓o
                                        ; __objc_const:000000010003F560↓o
sel_fileURL     db 'fileURL',0          ; DATA XREF: __objc_const:0000000100046720↓o
                                        ; __objc_const:0000000100046A58↓o ...
aTSminiimagevie_0 db 'T@"<SMiniImageViewDelegate>",W,N,V_delegate',0
                                        ; DATA XREF: __objc_const:0000000100041458↓o
sel_getBetaMenuItem db 'getBetaMenuItem',0
                                        ; DATA XREF: __objc_const:0000000100044C08↓o
                                        ; __objc_selrefs:selRef_getBetaMenuItem↓o
aTHomeviewVHome db 'T@"HomeView",&,V_homeView',0
                                        ; DATA XREF: __objc_const:000000010003E410↓o
sel_getMoreMenuItem db 'getMoreMenuItem',0
                                        ; DATA XREF: __objc_const:0000000100044C20↓o
                                        ; __objc_selrefs:selRef_getMoreMenuItem↓o
aTMoreviewNVMor db 'T@"MoreView",&,N,V_moreView',0
                                        ; DATA XREF: __objc_const:000000010003E440↓o
sel_goHome_     db 'goHome:',0          ; DATA XREF: __objc_const:000000010003DE98↓o
                                        ; __objc_const:000000010003E170↓o ...
aTNsbuttonVRelo db 'T@"NSButton",&,V_reloadButton',0
                                        ; DATA XREF: __objc_const:0000000100041088↓o
sel_isAtEnd     db 'isAtEnd',0          ; DATA XREF: __objc_selrefs:selRef_isAtEnd↓o
aTNsbuttonWVFir db 'T@"NSButton",W,V_firmwaerUpdaterButton',0
                                        ; DATA XREF: __objc_const:0000000100044120↓o
sel_isManuanlViewRR db 'isManuanlViewRR',0
                                        ; DATA XREF: __objc_const:000000010003D5B0↓o
                                        ; __objc_const:000000010003D830↓o ...
aTNscolorNVMBac db 'T@"NSColor",&,N,V_m_backgroundColor',0
                                        ; DATA XREF: __objc_const:00000001000430E0↓o
sel_isUltmateWired_ db 'isUltmateWired:',0
                                        ; DATA XREF: __objc_const:000000010003EFD8↓o
                                        ; __objc_selrefs:selRef_isUltmateWired_↓o
aTNscolorNVMTit_0 db 'T@"NSColor",&,N,V_m_titleColor',0
                                        ; DATA XREF: __objc_const:0000000100043100↓o
sel_lowercaseString db 'lowercaseString',0
                                        ; DATA XREF: __objc_selrefs:selRef_lowercaseString↓o
aTNscolorNVMTmp_0 db 'T@"NSColor",&,N,V_m_tmpTitleColor',0
                                        ; DATA XREF: __objc_const:00000001000430B0↓o
aMTargerversion db 'm_targerVersion',0  ; DATA XREF: __objc_const:0000000100040BD0↓o
aTNscolorVSback db 'T@"NSColor",&,V_sBackgroundColor',0
                                        ; DATA XREF: __objc_const:000000010003E8B8↓o
sel_m_tmpTitleColor db 'm_tmpTitleColor',0
                                        ; DATA XREF: __objc_const:0000000100042F28↓o
                                        ; __objc_const:00000001000430B0↓o ...
aTNsimageviewNV_1 db 'T@"NSImageView",&,N,V_mainImageView',0
                                        ; DATA XREF: __objc_const:00000001000460B0↓o
aMWidht         db 'm_widht',0          ; DATA XREF: __objc_const:000000010003E2C8↓o
                                        ; __objc_const:00000001000437A8↓o ...
aTNsimageviewNV_2 db 'T@"NSImageView",&,N,V_submainImageView',0
                                        ; DATA XREF: __objc_const:0000000100046100↓o
sel_macBoot     db 'macBoot',0          ; DATA XREF: __objc_const:00000001000402D8↓o
                                        ; __objc_selrefs:selRef_macBoot↓o
aTNsimageviewWV_0 db 'T@"NSImageView",W,V_arrow01',0
                                        ; DATA XREF: __objc_const:0000000100044160↓o
sel_miniRRImageView db 'miniRRImageView',0
                                        ; DATA XREF: __objc_const:0000000100040698↓o
                                        ; __objc_const:0000000100040FF8↓o ...
aTNsimageviewWV_1 db 'T@"NSImageView",W,V_arrow03',0
                                        ; DATA XREF: __objc_const:0000000100044180↓o
sel_new         db 'new',0              ; DATA XREF: __objc_selrefs:selRef_new↓o
aTNsmutablearra_2 db 'T@"NSMutableArray",&,N,V_moreS8BitdoDatails',0
                                        ; DATA XREF: __objc_const:00000001000438C0↓o
sel_numberWithLong_ db 'numberWithLong:',0
                                        ; DATA XREF: __objc_selrefs:selRef_numberWithLong_↓o
aTNsmutablearra_3 db 'T@"NSMutableArray",&,V_updateFirmwaers',0
                                        ; DATA XREF: __objc_const:00000001000410F8↓o
sel_pid         db 'pid',0              ; DATA XREF: __objc_const:000000010003D448↓o
                                        ; __objc_const:000000010003D7B0↓o ...
aTNsmutabledict_0 db 'T@"NSMutableDictionary",&,N,V_objectClassInArrayDict',0
                                        ; DATA XREF: __objc_const:0000000100045070↓o
sel_readBoot_Serial db 'readBoot_Serial',0
                                        ; DATA XREF: __objc_const:000000010003F098↓o
                                        ; __objc_selrefs:selRef_readBoot_Serial↓o
aTNsprogressind db 'T@"NSProgressIndicator",&,V_progress',0
                                        ; DATA XREF: __objc_const:0000000100041078↓o
sel_recordActivity_ db 'recordActivity:',0
                                        ; DATA XREF: __objc_const:000000010003D910↓o
                                        ; __objc_selrefs:selRef_recordActivity_↓o
aTNsstringNVCon db 'T@"NSString",&,N,V_contentString',0
                                        ; DATA XREF: __objc_const:00000001000434E0↓o
sel_release     db 'release',0          ; DATA XREF: __objc_const:000000010003DBA0↓o
                                        ; __objc_const:000000010003F740↓o ...
aTNsstringNVTit db 'T@"NSString",&,N,V_titleString',0
                                        ; DATA XREF: __objc_const:00000001000434D0↓o
sel_replacedKeyFromPropertyName121_ db 'replacedKeyFromPropertyName121:',0
                                        ; DATA XREF: __objc_selrefs:selRef_replacedKeyFromPropertyName121_↓o
aTNsstringRC_0  db 'T@"NSString",?,R,C',0
                                        ; DATA XREF: __objc_const:000000010003DCA0↓o
                                        ; __objc_const:000000010003E490↓o ...
sel_setAddDelegate_ db 'setAddDelegate:',0
                                        ; DATA XREF: __objc_const:000000010003E5B8↓o
aTNsstringCNVDa db 'T@"NSString",C,N,V_date',0
                                        ; DATA XREF: __objc_const:0000000100046A28↓o
sel_setBool_forKey_ db 'setBool:forKey:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setBool_forKey_↓o
aTNsstringCNVFi_0 db 'T@"NSString",C,N,V_fileName',0
                                        ; DATA XREF: __objc_const:0000000100046A38↓o
sel_setBorderColor_ db 'setBorderColor:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setBorderColor_↓o
aTNsstringCNVFi_1 db 'T@"NSString",C,N,V_fileURL',0
                                        ; DATA XREF: __objc_const:0000000100046A58↓o
sel_setControlSize_ db 'setControlSize:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setControlSize_↓o
aTNsstringCNVMd db 'T@"NSString",C,N,V_md5',0
                                        ; DATA XREF: __objc_const:0000000100046AA8↓o
sel_setFrameOrigin_ db 'setFrameOrigin:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setFrameOrigin_↓o
aTNsstringCNVMo_0 db 'T@"NSString",C,N,V_moreImage',0
                                        ; DATA XREF: __objc_const:000000010003ED30↓o
sel_setMessageText_ db 'setMessageText:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setMessageText_↓o
aTNsstringCNVNa db 'T@"NSString",C,N,V_name',0
                                        ; DATA XREF: __objc_const:000000010003ECD0↓o
                                        ; __objc_const:00000001000420E0↓o
sel_setNewFirmwaer_ db 'setNewFirmwaer:',0
                                        ; DATA XREF: __objc_const:0000000100040110↓o
                                        ; __objc_selrefs:selRef_setNewFirmwaer_↓o
aTNsstringCNVRe_0 db 'T@"NSString",C,N,V_readme_en',0
                                        ; DATA XREF: __objc_const:0000000100046A68↓o
sel_setObjectClassInArray_forClass_ db 'setObjectClassInArray:forClass:',0
                                        ; DATA XREF: __objc_const:0000000100044E70↓o
                                        ; __objc_selrefs:selRef_setObjectClassInArray_forClass_↓o
aTNsstringRNVNa db 'T@"NSString",R,N,V_name',0
                                        ; DATA XREF: __objc_const:0000000100045090↓o
sel_setRightButton_ db 'setRightButton:',0
                                        ; DATA XREF: __objc_const:0000000100040980↓o
                                        ; __objc_selrefs:selRef_setRightButton_↓o
aTNstextfieldWV_1 db 'T@"NSTextField",W,V_title',0
                                        ; DATA XREF: __objc_const:00000001000434A0↓o
sel_setTag_     db 'setTag:',0          ; DATA XREF: __objc_selrefs:selRef_setTag_↓o
aTNstextviewVFi db 'T@"NSTextView",&,V_findNewVersionLogTextView',0
                                        ; DATA XREF: __objc_const:0000000100041058↓o
sel_setUpdateTimer_ db 'setUpdateTimer:',0
                                        ; DATA XREF: __objc_const:0000000100040AE8↓o
                                        ; __objc_selrefs:selRef_setUpdateTimer_↓o
aTNsviewWVFinds db 'T@"NSView",W,V_FindsView',0
                                        ; DATA XREF: __objc_const:0000000100044140↓o
sel_setVid_     db 'setVid:',0          ; DATA XREF: __objc_const:000000010003D490↓o
                                        ; __objc_const:000000010003EAA0↓o ...
aTS8bitdodatade db 'T@"S8BitdoDataDetails",&,V_details',0
                                        ; DATA XREF: __objc_const:000000010003D840↓o
sel_startAnimation_ db 'startAnimation:',0
                                        ; DATA XREF: __objc_selrefs:selRef_startAnimation_↓o
aTS8bitdodevice_0 db 'T@"S8BitdoDevice",R',0
                                        ; DATA XREF: __objc_const:00000001000441D0↓o
sel_submenu     db 'submenu',0          ; DATA XREF: __objc_selrefs:selRef_submenu↓o
aTSbuttonVLeftb db 'T@"SButton",&,V_leftButton',0
                                        ; DATA XREF: __objc_const:00000001000410D8↓o
sel_tag         db 'tag',0              ; DATA XREF: __objc_selrefs:selRef_tag↓o
aTSbuttonVRight db 'T@"SButton",&,V_rightButton',0
                                        ; DATA XREF: __objc_const:00000001000410E8↓o
sel_textView_menu_forEvent_atIndex_ db 'textView:menu:forEvent:atIndex:',0
                                        ; DATA XREF: __objc_const:000000010003FB68↓o
aTShidbootVShid db 'T@"SHIDBoot",&,V_shidBoot',0
                                        ; DATA XREF: __objc_const:0000000100041128↓o
sel_updater     db 'updater',0          ; DATA XREF: __objc_const:0000000100041E70↓o
                                        ; __objc_const:0000000100041F18↓o ...
aTShidswitchand db 'T@"SHIDSwitchAndMac",&,V_switchAndMac',0
                                        ; DATA XREF: __objc_const:000000010003E400↓o
sel_updaterWillRelaunchApplication_ db 'updaterWillRelaunchApplication:',0
                                        ; DATA XREF: __objc_const:0000000100041B38↓o
aTSlabelNVTitle db 'T@"SLabel",&,N,V_title',0
                                        ; DATA XREF: __objc_const:0000000100043890↓o
sel_url         db 'url',0              ; DATA XREF: __objc_data:00000001000490A8↓o
aTSlabelVFindne db 'T@"SLabel",&,V_findNewVersionLabel',0
                                        ; DATA XREF: __objc_const:0000000100041048↓o
sel_usbView     db 'usbView',0          ; DATA XREF: __objc_const:0000000100043E60↓o
                                        ; __objc_const:0000000100044150↓o ...
aTSlabelVHintla db 'T@"SLabel",&,V_hintLabel',0
                                        ; DATA XREF: __objc_const:00000001000410A8↓o
sel_version     db 'version',0          ; DATA XREF: __objc_const:000000010003D4A8↓o
                                        ; __objc_const:000000010003D7D0↓o ...
aTSminiimagevie_1 db 'T@"SMiniImageView",&,V_miniImageView',0
                                        ; DATA XREF: __objc_const:0000000100040FE8↓o
sel_writeFirmwareJL db 'writeFirmwareJL',0
                                        ; DATA XREF: __objc_const:000000010003F020↓o
                                        ; __objc_selrefs:selRef_writeFirmwareJL↓o
aTSpustandardup db 'T@"SPUStandardUpdaterController",&,N,V_controller',0
                                        ; DATA XREF: __objc_const:0000000100041F08↓o
aTSpuupdaterNVU db 'T@"SPUUpdater",&,N,V_updater',0
                                        ; DATA XREF: __objc_const:0000000100041F18↓o
aTSviewNVLine   db 'T@"SView",&,N,V_line',0
                                        ; DATA XREF: __objc_const:00000001000438A0↓o
aTSviewVFindnew db 'T@"SView",&,V_findNewVersionListView',0
                                        ; DATA XREF: __objc_const:0000000100041038↓o
aTSviewVFirmwae db 'T@"SView",&,V_firmwaerListVist',0
                                        ; DATA XREF: __objc_const:0000000100041018↓o
aTNVDelegate    db 'T@,&,N,V_delegate',0
                                        ; DATA XREF: __objc_const:0000000100043120↓o
aTWNVDelegate   db 'T@,W,N,V_delegate',0
                                        ; DATA XREF: __objc_const:00000001000411A8↓o
                                        ; __objc_const:00000001000438D0↓o
aTbNVIsclick    db 'TB,N,V_isClick',0   ; DATA XREF: __objc_const:0000000100041448↓o
aTiNVAppzoneadd db 'TI,N,V_appZoneAddr',0
                                        ; DATA XREF: __objc_const:000000010003F5B0↓o
aTiNVBoottypePi db 'TI,N,V_bootType_PID',0
                                        ; DATA XREF: __objc_const:000000010003F5A0↓o
aTiNVCurDevid   db 'TI,N,V_cur_devId',0 ; DATA XREF: __objc_const:0000000100045A18↓o
aTiNVOffset     db 'TI,N,V_offset',0    ; DATA XREF: __objc_const:000000010003F5C0↓o
aTqNVState      db 'TQ,N,V_state',0     ; DATA XREF: __objc_const:0000000100041198↓o
                                        ; __objc_const:00000001000441A0↓o
aTqR            db 'TQ,R',0             ; DATA XREF: __objc_const:000000010003DC70↓o
                                        ; __objc_const:000000010003E460↓o ...
aTqVBootstate   db 'TQ,V_bootState',0   ; DATA XREF: __objc_const:0000000100041138↓o
aTsNVPid        db 'TS,N,V_pid',0       ; DATA XREF: __objc_const:000000010003ECE0↓o
aTsNVVid        db 'TS,N,V_vid',0       ; DATA XREF: __objc_const:000000010003ECF0↓o
aTsVBeta        db 'TS,V_beta',0        ; DATA XREF: __objc_const:000000010003D7E0↓o
aTsVBootversion db 'TS,V_bootVersion',0 ; DATA XREF: __objc_const:000000010003D810↓o
aTsVIscarryrr   db 'TS,V_isCarryRR',0   ; DATA XREF: __objc_const:000000010003D820↓o
aTsVIsmanuanlvi db 'TS,V_isManuanlViewRR',0
                                        ; DATA XREF: __objc_const:000000010003D830↓o
aTsVPid         db 'TS,V_pid',0         ; DATA XREF: __objc_const:000000010003D7B0↓o
aTsVVid         db 'TS,V_vid',0         ; DATA XREF: __objc_const:000000010003D7C0↓o
aTIohiddeviceVB db 'T^{__IOHIDDevice=},V_bootDeviceRef',0
                                        ; DATA XREF: __objc_const:0000000100041148↓o
aTIohiddeviceVD db 'T^{__IOHIDDevice=},V_device',0
                                        ; DATA XREF: __objc_const:000000010003F550↓o
                                        ; __objc_const:0000000100045A08↓o ...
aTIohiddeviceVD_0 db 'T^{__IOHIDDevice=},V_deviceRef',0
                                        ; DATA XREF: __objc_const:000000010003D800↓o
aTIohidmanagerN db 'T^{__IOHIDManager=},N,V_hidManager',0
                                        ; DATA XREF: __objc_const:0000000100046F68↓o
aTcNVError      db 'Tc,N,V_error',0     ; DATA XREF: __objc_const:0000000100046130↓o
aTcNVIssetnewfi db 'Tc,N,V_isSetNewFirmware',0
                                        ; DATA XREF: __objc_const:0000000100040FD8↓o
aTcNVIsshowmini db 'Tc,N,V_isShowMiniRRImage',0
                                        ; DATA XREF: __objc_const:0000000100041008↓o
aTcNVIsusbrrPsC db 'Tc,N,V_isUSBRR_PS_classic',0
                                        ; DATA XREF: __objc_const:000000010003E768↓o
aTcRNGisbooltyp db 'Tc,R,N,GisBoolType,V_boolType',0
                                        ; DATA XREF: __objc_const:0000000100043BA8↓o
aTcRNGisfromfou db 'Tc,R,N,GisFromFoundation,V_fromFoundation',0
                                        ; DATA XREF: __objc_const:0000000100043BC8↓o
aTcRNGisidtypeV db 'Tc,R,N,GisIdType,V_idType',0
                                        ; DATA XREF: __objc_const:0000000100043B88↓o
aTcRNGiskvcdisa db 'Tc,R,N,GisKVCDisabled,V_KVCDisabled',0
                                        ; DATA XREF: __objc_const:0000000100043BD8↓o
aTcRNGisnumbert db 'Tc,R,N,GisNumberType,V_numberType',0
                                        ; DATA XREF: __objc_const:0000000100043B98↓o
aTcVIschangeboo db 'Tc,V_isChangeBoot',0
                                        ; DATA XREF: __objc_const:000000010003D850↓o
aTfNVVersion    db 'Tf,N,V_version',0   ; DATA XREF: __objc_const:0000000100046AB8↓o
aTfVVersion     db 'Tf,V_version',0     ; DATA XREF: __objc_const:000000010003D7D0↓o
aTiNVBeta       db 'Ti,N,V_beta',0      ; DATA XREF: __objc_const:0000000100046AC8↓o
aTiNVId         db 'Ti,N,V_id',0        ; DATA XREF: __objc_const:0000000100046A78↓o
aTiNVType       db 'Ti,N,V_type',0      ; DATA XREF: __objc_const:000000010003ED00↓o
                                        ; __objc_const:00000001000420F0↓o ...
aTiVLastprogres db 'Ti,V_lastProgress',0
                                        ; DATA XREF: __objc_const:000000010003E728↓o
aTqNVLasttimer  db 'Tq,N,V_lastTimer',0 ; DATA XREF: __objc_const:0000000100041178↓o
aTqNVOrder      db 'Tq,N,V_order',0     ; DATA XREF: __objc_const:000000010003ED40↓o
sel_URLWithString_ db 'URLWithString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_URLWithString_↓o
sel_UTF8String  db 'UTF8String',0       ; DATA XREF: __objc_selrefs:selRef_UTF8String↓o
aFindsview_0    db '_FindsView',0       ; DATA XREF: __objc_const:0000000100044018↓o
aKvcdisabled_0  db '_KVCDisabled',0     ; DATA XREF: __objc_const:0000000100043B10↓o
aList_2         db '_List',0            ; DATA XREF: __objc_const:00000001000465A0↓o
aAdddelegate    db '_addDelegate',0     ; DATA XREF: __objc_const:000000010003E6E0↓o
aAppzoneaddr    db '_appZoneAddr',0     ; DATA XREF: __objc_const:000000010003F458↓o
aArrow01_0      db '_arrow01',0         ; DATA XREF: __objc_const:0000000100044058↓o
aArrow02_0      db '_arrow02',0         ; DATA XREF: __objc_const:0000000100044078↓o
aArrow03_0      db '_arrow03',0         ; DATA XREF: __objc_const:0000000100044098↓o
aBackbutton     db '_backButton',0      ; DATA XREF: __objc_const:000000010003E388↓o
aBeta_0         db '_beta',0            ; DATA XREF: __objc_const:000000010003D6A8↓o
                                        ; __objc_const:0000000100046940↓o
aBooltype       db '_boolType',0        ; DATA XREF: __objc_const:0000000100043AD0↓o
aBootdelegate   db '_bootDelegate',0    ; DATA XREF: __objc_const:000000010003E6C0↓o
                                        ; __objc_const:000000010003F4B8↓o ...
aBootdeviceref  db '_bootDeviceRef',0   ; DATA XREF: __objc_const:0000000100040F50↓o
aBootstate      db '_bootState',0       ; DATA XREF: __objc_const:0000000100040F30↓o
aBoottype       db '_bootType',0        ; DATA XREF: __objc_const:000000010003F418↓o
aBoottypePid    db '_bootType_PID',0    ; DATA XREF: __objc_const:000000010003F438↓o
aBootversion    db '_bootVersion',0     ; DATA XREF: __objc_const:000000010003D6C8↓o
aCode           db '_code',0            ; DATA XREF: __objc_const:0000000100043B30↓o
aContent_0      db '_content',0         ; DATA XREF: __objc_const:0000000100043458↓o
aContentstring  db '_contentString',0   ; DATA XREF: __objc_const:0000000100043418↓o
aController_0   db '_controller',0      ; DATA XREF: __objc_const:0000000100041EC0↓o
aCurDevid       db '_cur_devId',0       ; DATA XREF: __objc_const:0000000100045930↓o
aDate           db '_date',0            ; DATA XREF: __objc_const:0000000100046960↓o
aDelegate       db '_delegate',0        ; DATA XREF: __objc_const:0000000100040CB0↓o
                                        ; __objc_const:0000000100041410↓o ...
aDetails_0      db '_details',0         ; DATA XREF: __objc_const:000000010003D788↓o
aDevicename     db '_deviceName',0      ; DATA XREF: __objc_const:000000010003D748↓o
aDeviceref      db '_deviceRef',0       ; DATA XREF: __objc_const:000000010003D768↓o
aDevices_0      db '_devices',0         ; DATA XREF: __objc_const:00000001000440F8↓o
                                        ; __objc_const:0000000100046F40↓o
aError_0        db '_error',0           ; DATA XREF: __objc_const:0000000100045F88↓o
                                        ; __objc_const:0000000100046580↓o
aFilename       db '_fileName',0        ; DATA XREF: __objc_const:0000000100046980↓o
aFilepath       db '_filePath',0        ; DATA XREF: __objc_const:000000010003E700↓o
                                        ; __objc_const:000000010003F4D8↓o ...
aFilesize       db '_fileSize',0        ; DATA XREF: __objc_const:00000001000468C0↓o
aFileurl_0      db '_fileURL',0         ; DATA XREF: __objc_const:00000001000469A0↓o
aFindnewversion db '_findNewVersionLabel',0
                                        ; DATA XREF: __objc_const:0000000100040D70↓o
aFindnewversion_0 db '_findNewVersionListView',0
                                        ; DATA XREF: __objc_const:0000000100040D50↓o
aFindnewversion_1 db '_findNewVersionLogTextView',0
                                        ; DATA XREF: __objc_const:0000000100040D90↓o
aFirmwaerhintla db '_firmwaerHintLabel',0
                                        ; DATA XREF: __objc_const:0000000100040E30↓o
aFirmwaerlistvi db '_firmwaerListVist',0
                                        ; DATA XREF: __objc_const:0000000100040D10↓o
aFirmwaerupdate_0 db '_firmwaerUpdaterButton',0
                                        ; DATA XREF: __objc_const:0000000100043FD8↓o
aHelpbutton     db '_helpButton',0      ; DATA XREF: __objc_const:00000001000440B8↓o
aHidmanager     db '_hidManager',0      ; DATA XREF: __objc_const:0000000100046F00↓o
aHintlabel      db '_hintLabel',0       ; DATA XREF: __objc_const:0000000100040E10↓o
aHomeview_0     db '_homeView',0        ; DATA XREF: __objc_const:000000010003E348↓o
aIscarryrr      db '_isCarryRR',0       ; DATA XREF: __objc_const:000000010003D6E8↓o
aIschangeboot   db '_isChangeBoot',0    ; DATA XREF: __objc_const:000000010003D648↓o
aIsclick_0      db '_isClick',0         ; DATA XREF: __objc_const:00000001000413F0↓o
aIsmanuanlviewr_0 db '_isManuanlViewRR',0
                                        ; DATA XREF: __objc_const:000000010003D708↓o
aIsselect       db '_isSelect',0        ; DATA XREF: __objc_const:00000001000413D0↓o
aIssetnewfirmwa db '_isSetNewFirmware',0
                                        ; DATA XREF: __objc_const:0000000100040C10↓o
aIsshowminirrim db '_isShowMiniRRImage',0
                                        ; DATA XREF: __objc_const:0000000100040C30↓o
aIsusbrrPsClass db '_isUSBRR_PS_classic',0
                                        ; DATA XREF: __objc_const:000000010003E680↓o
aIsloaddata     db '_isloadData',0      ; DATA XREF: __objc_const:0000000100040C50↓o
aLastprogress   db '_lastProgress',0    ; DATA XREF: __objc_const:000000010003E6A0↓o
aLasttimer      db '_lastTimer',0       ; DATA XREF: __objc_const:0000000100040FB0↓o
aLeftbutton     db '_leftButton',0      ; DATA XREF: __objc_const:0000000100040E70↓o
aLine           db '_line',0            ; DATA XREF: __objc_const:0000000100043828↓o
aMBackgroundcol db '_m_backgroundColor',0
                                        ; DATA XREF: __objc_const:0000000100042FB8↓o
aMHighlightcolo db '_m_highlightColor',0
                                        ; DATA XREF: __objc_const:0000000100042FD8↓o
aMProgress      db '_m_progress',0      ; DATA XREF: __objc_const:0000000100042F78↓o
aMTitle_0       db '_m_title',0         ; DATA XREF: __objc_const:0000000100042F98↓o
aMTitlecolor    db '_m_titleColor',0    ; DATA XREF: __objc_const:0000000100042FF8↓o
aMTitlehighligh db '_m_titleHighlighColor',0
                                        ; DATA XREF: __objc_const:0000000100043018↓o
aMTmptitlecolor_0 db '_m_tmpTitleColor',0
                                        ; DATA XREF: __objc_const:0000000100043078↓o
aMTmpbg_0       db '_m_tmpbg',0         ; DATA XREF: __objc_const:0000000100043058↓o
aMainimageview  db '_mainImageView',0   ; DATA XREF: __objc_const:0000000100045FC8↓o
aManualview     db '_manualView',0      ; DATA XREF: __objc_const:0000000100040F70↓o
aMd5_0          db '_md5',0             ; DATA XREF: __objc_const:0000000100046A00↓o
aMiniimagename  db '_miniImageName',0   ; DATA XREF: __objc_const:000000010003EC48↓o
aMiniimageview  db '_miniImageView',0   ; DATA XREF: __objc_const:0000000100040CD0↓o
aMinirrimagevie_0 db '_miniRRImageView',0
                                        ; DATA XREF: __objc_const:0000000100040CF0↓o
aMoreimage      db '_moreImage',0       ; DATA XREF: __objc_const:000000010003EC88↓o
aMoreimagehighl db '_moreImagehighlight',0
                                        ; DATA XREF: __objc_const:000000010003EC68↓o
aMores8bitdodat db '_moreS8BitdoDatails',0
                                        ; DATA XREF: __objc_const:0000000100043868↓o
aMoreview       db '_moreView',0        ; DATA XREF: __objc_const:000000010003E3A8↓o
aMsgstate_0     db '_msgState',0        ; DATA XREF: __objc_const:0000000100046560↓o
aName           db '_name',0            ; DATA XREF: __objc_const:000000010003EC28↓o
                                        ; __objc_const:00000001000420B8↓o ...
aNotfirmware_0  db '_notFirmware',0     ; DATA XREF: __objc_const:0000000100040DF0↓o
aNumbertype     db '_numberType',0      ; DATA XREF: __objc_const:0000000100043AB0↓o
aObjectclassina db '_objectClassInArrayDict',0
                                        ; DATA XREF: __objc_const:0000000100045038↓o
aOkbutton       db '_okButton',0        ; DATA XREF: __objc_const:0000000100043478↓o
aOnehintlabel   db '_oneHintLabel',0    ; DATA XREF: __objc_const:0000000100045FE8↓o
aOrder          db '_order',0           ; DATA XREF: __objc_const:000000010003ECA8↓o
aPfile          db '_pfile',0           ; DATA XREF: __objc_const:000000010003F4F8↓o
                                        ; __objc_const:00000001000459B0↓o
aPid_0          db '_pid',0             ; DATA XREF: __objc_const:000000010003D668↓o
                                        ; __objc_const:000000010003EBC8↓o
aProgress       db '_progress',0        ; DATA XREF: __objc_const:0000000100040DB0↓o
aProperty       db '_property',0        ; DATA XREF: __objc_const:0000000100044F98↓o
aPropertykeysdi db '_propertyKeysDict',0
                                        ; DATA XREF: __objc_const:0000000100045018↓o
aReadmeEn       db '_readme_en',0       ; DATA XREF: __objc_const:00000001000469C0↓o
aReloadbutton   db '_reloadButton',0    ; DATA XREF: __objc_const:0000000100040DD0↓o
aRightbutton    db '_rightButton',0     ; DATA XREF: __objc_const:0000000100040E90↓o
aSbackgroundcol db '_sBackgroundColor',0
                                        ; DATA XREF: __objc_const:000000010003E890↓o
aSavepath       db '_savePath',0        ; DATA XREF: __objc_const:0000000100040EF0↓o
aScrollview     db '_scrollView',0      ; DATA XREF: __objc_const:0000000100040D30↓o
aSelectbutton   db '_selectButton',0    ; DATA XREF: __objc_const:0000000100040ED0↓o
aShidboot       db '_shidBoot',0        ; DATA XREF: __objc_const:0000000100040F10↓o
aSrcclass       db '_srcClass',0        ; DATA XREF: __objc_const:0000000100044FF8↓o
aState          db '_state',0           ; DATA XREF: __objc_const:0000000100040C90↓o
                                        ; __objc_const:00000001000440D8↓o
aSubimageview   db '_subImageView',0    ; DATA XREF: __objc_const:0000000100046048↓o
aSubmainimagevi db '_submainImageView',0
                                        ; DATA XREF: __objc_const:0000000100046068↓o
aSubsubimagevie_0 db '_subsubImageView',0
                                        ; DATA XREF: __objc_const:0000000100046088↓o
aSwitchandmac   db '_switchAndMac',0    ; DATA XREF: __objc_const:000000010003E328↓o
aTitle          db '_title',0           ; DATA XREF: __objc_const:0000000100043438↓o
                                        ; __objc_const:0000000100043808↓o
aTitlestring    db '_titleString',0     ; DATA XREF: __objc_const:00000001000433F8↓o
aTwohintlabel   db '_twoHintLabel',0    ; DATA XREF: __objc_const:0000000100046008↓o
aType_0         db '_type',0            ; DATA XREF: __objc_const:000000010003EC08↓o
                                        ; __objc_const:0000000100042098↓o ...
aTypeclass      db '_typeClass',0       ; DATA XREF: __objc_const:0000000100043B50↓o
aUpdatebutton   db '_updateButton',0    ; DATA XREF: __objc_const:0000000100040E50↓o
aUpdatefirmwaer_0 db '_updateFirmwaers',0
                                        ; DATA XREF: __objc_const:0000000100040EB0↓o
aUpdatetimer    db '_updateTimer',0     ; DATA XREF: __objc_const:0000000100040F90↓o
aUpdateview     db '_updateView',0      ; DATA XREF: __objc_const:000000010003E368↓o
aUpdater_0      db '_updater',0         ; DATA XREF: __objc_const:0000000100041EE0↓o
aUsb_0          db '_usb',0             ; DATA XREF: __objc_const:0000000100043FF8↓o
aUsbview_0      db '_usbView',0         ; DATA XREF: __objc_const:0000000100044038↓o
aVersion_1      db '_version',0         ; DATA XREF: __objc_const:000000010003D728↓o
                                        ; __objc_const:0000000100046920↓o
aVid_0          db '_vid',0             ; DATA XREF: __objc_const:000000010003D688↓o
                                        ; __objc_const:000000010003EBE8↓o
aViews          db '_views',0           ; DATA XREF: __objc_const:000000010003E3C8↓o
sel_absoluteString db 'absoluteString',0
                                        ; DATA XREF: __objc_selrefs:selRef_absoluteString↓o
sel_addBetaAction db 'addBetaAction',0  ; DATA XREF: __objc_const:000000010003E038↓o
                                        ; __objc_selrefs:selRef_addBetaAction↓o
sel_addBlock_Cmd_ db 'addBlock:Cmd:',0  ; DATA XREF: __objc_const:000000010003EFA8↓o
                                        ; __objc_const:0000000100045748↓o ...
sel_addBootDevice_ db 'addBootDevice:',0
                                        ; DATA XREF: __objc_const:000000010003DE80↓o
                                        ; __objc_const:000000010003E158↓o ...
sel_addButtonWithTitle_ db 'addButtonWithTitle:',0
                                        ; DATA XREF: __objc_selrefs:selRef_addButtonWithTitle_↓o
sel_addCheckUpdat db 'addCheckUpdat',0  ; DATA XREF: __objc_const:000000010003DFF0↓o
                                        ; __objc_selrefs:selRef_addCheckUpdat↓o
sel_addDelegate db 'addDelegate',0      ; DATA XREF: __objc_const:000000010003E5A0↓o
                                        ; __objc_const:000000010003E748↓o
sel_addDevicesTextFileld db 'addDevicesTextFileld',0
                                        ; DATA XREF: __objc_const:0000000100043D40↓o
                                        ; __objc_selrefs:selRef_addDevicesTextFileld↓o
sel_addMoreAction db 'addMoreAction',0  ; DATA XREF: __objc_const:000000010003E020↓o
                                        ; __objc_selrefs:selRef_addMoreAction↓o
sel_addObject_  db 'addObject:',0       ; DATA XREF: __objc_selrefs:selRef_addObject_↓o
sel_addObjectsFromArray_ db 'addObjectsFromArray:',0
                                        ; DATA XREF: __objc_selrefs:selRef_addObjectsFromArray_↓o
sel_addObserver_selector_name_object_ db 'addObserver:selector:name:object:',0
                                        ; DATA XREF: __objc_selrefs:selRef_addObserver_selector_name_object_↓o
sel_addProduct  db 'addProduct',0       ; DATA XREF: __objc_const:0000000100043668↓o
                                        ; __objc_selrefs:selRef_addProduct↓o
sel_addS8BitdoDevice_ db 'addS8BitdoDevice:',0
                                        ; DATA XREF: __objc_const:000000010003DD70↓o
                                        ; __objc_const:000000010003E0E0↓o ...
sel_addS8BitdoDeviceRefreshUI_ db 'addS8BitdoDeviceRefreshUI:',0
                                        ; DATA XREF: __objc_const:0000000100041568↓o
                                        ; __objc_const:00000001000451A8↓o ...
sel_addSubview_ db 'addSubview:',0      ; DATA XREF: __objc_selrefs:selRef_addSubview_↓o
sel_addSubview_positioned_relativeTo_ db 'addSubview:positioned:relativeTo:',0
                                        ; DATA XREF: __objc_selrefs:selRef_addSubview_positioned_relativeTo_↓o
sel_addTimer_forMode_ db 'addTimer:forMode:',0
                                        ; DATA XREF: __objc_selrefs:selRef_addTimer_forMode_↓o
sel_addTrackingArea_ db 'addTrackingArea:',0
                                        ; DATA XREF: __objc_selrefs:selRef_addTrackingArea_↓o
sel_alertShowHelp_ db 'alertShowHelp:',0
                                        ; DATA XREF: __objc_const:000000010003DE58↓o
sel_allocWithZone_ db 'allocWithZone:',0
                                        ; DATA XREF: __objc_const:000000010003EE98↓o
                                        ; __objc_const:0000000100045668↓o ...
sel_allowedChannelsForUpdater_ db 'allowedChannelsForUpdater:',0
                                        ; DATA XREF: __objc_const:0000000100041928↓o
sel_allowedSystemProfileKeysForUpdater_ db 'allowedSystemProfileKeysForUpdater:',0
                                        ; DATA XREF: __objc_const:0000000100041988↓o
sel_appZoneAddr db 'appZoneAddr',0      ; DATA XREF: __objc_const:000000010003F380↓o
                                        ; __objc_const:000000010003F5B0↓o ...
sel_appendFormat_ db 'appendFormat:',0  ; DATA XREF: __objc_selrefs:selRef_appendFormat_↓o
sel_appendString_ db 'appendString:',0  ; DATA XREF: __objc_selrefs:selRef_appendString_↓o
sel_application_continueUserActivity_restorationHandler_ db 'application:continueUserActivity:restorationHandler:',0
                                        ; DATA XREF: __objc_const:0000000100044730↓o
sel_application_didDecodeRestorableState_ db 'application:didDecodeRestorableState:',0
                                        ; DATA XREF: __objc_const:0000000100044700↓o
sel_application_didFailToContinueUserActivityWithType_error_ db 'application:didFailToContinueUserActivityWithType:error:',0
                                        ; DATA XREF: __objc_const:0000000100044748↓o
sel_application_didFailToRegisterForRemoteNotificationsWithError_ db 'application:didFailToRegisterForRemoteNotificationsWithError:',0
                                        ; DATA XREF: __objc_const:0000000100044688↓o
sel_application_didReceiveRemoteNotification_ db 'application:didReceiveRemoteNotification:',0
                                        ; DATA XREF: __objc_const:00000001000446A0↓o
sel_application_didRegisterForRemoteNotificationsWithDeviceToken_ db 'application:didRegisterForRemoteNotificationsWithDeviceToken:',0
                                        ; DATA XREF: __objc_const:0000000100044670↓o
sel_application_didUpdateUserActivity_ db 'application:didUpdateUserActivity:',0
                                        ; DATA XREF: __objc_const:0000000100044760↓o
sel_application_handlerForIntent_ db 'application:handlerForIntent:',0
                                        ; DATA XREF: __objc_const:00000001000446D0↓o
sel_application_openFile_ db 'application:openFile:',0
                                        ; DATA XREF: __objc_const:0000000100044550↓o
sel_application_openFileWithoutUI_ db 'application:openFileWithoutUI:',0
                                        ; DATA XREF: __objc_const:00000001000445C8↓o
sel_application_openFiles_ db 'application:openFiles:',0
                                        ; DATA XREF: __objc_const:0000000100044568↓o
sel_application_openTempFile_ db 'application:openTempFile:',0
                                        ; DATA XREF: __objc_const:0000000100044580↓o
sel_application_openURLs_ db 'application:openURLs:',0
                                        ; DATA XREF: __objc_const:0000000100044538↓o
sel_application_printFile_ db 'application:printFile:',0
                                        ; DATA XREF: __objc_const:00000001000445E0↓o
sel_application_printFiles_withSettings_showPrintPanels_ db 'application:printFiles:withSettings:showPrintPanels:',0
                                        ; DATA XREF: __objc_const:00000001000445F8↓o
sel_application_userDidAcceptCloudKitShareWithMetadata_ db 'application:userDidAcceptCloudKitShareWithMetadata:',0
                                        ; DATA XREF: __objc_const:0000000100044778↓o
sel_application_willContinueUserActivityWithType_ db 'application:willContinueUserActivityWithType:',0
                                        ; DATA XREF: __objc_const:0000000100044718↓o
sel_application_willEncodeRestorableState_ db 'application:willEncodeRestorableState:',0
                                        ; DATA XREF: __objc_const:00000001000446E8↓o
sel_application_willPresentError_ db 'application:willPresentError:',0
                                        ; DATA XREF: __objc_const:0000000100044658↓o
sel_applicationDidBecomeActive_ db 'applicationDidBecomeActive:',0
                                        ; DATA XREF: __objc_const:0000000100044868↓o
sel_applicationDidChangeOcclusionState_ db 'applicationDidChangeOcclusionState:',0
                                        ; DATA XREF: __objc_const:0000000100044910↓o
sel_applicationDidChangeScreenParameters_ db 'applicationDidChangeScreenParameters:',0
                                        ; DATA XREF: __objc_const:00000001000448F8↓o
sel_applicationDidFinishLaunching_ db 'applicationDidFinishLaunching:',0
                                        ; DATA XREF: __objc_const:00000001000447D8↓o
                                        ; __objc_const:0000000100044B28↓o
sel_applicationDidHide_ db 'applicationDidHide:',0
                                        ; DATA XREF: __objc_const:0000000100044808↓o
sel_applicationDidResignActive_ db 'applicationDidResignActive:',0
                                        ; DATA XREF: __objc_const:0000000100044898↓o
sel_applicationDidUnhide_ db 'applicationDidUnhide:',0
                                        ; DATA XREF: __objc_const:0000000100044838↓o
sel_applicationDidUpdate_ db 'applicationDidUpdate:',0
                                        ; DATA XREF: __objc_const:00000001000448C8↓o
sel_applicationDockMenu_ db 'applicationDockMenu:',0
                                        ; DATA XREF: __objc_const:0000000100044640↓o
sel_applicationOpenUntitledFile_ db 'applicationOpenUntitledFile:',0
                                        ; DATA XREF: __objc_const:00000001000445B0↓o
sel_applicationProtectedDataDidBecomeAvailable_ db 'applicationProtectedDataDidBecomeAvailable:',0
                                        ; DATA XREF: __objc_const:0000000100044940↓o
sel_applicationProtectedDataWillBecomeUnavailable_ db 'applicationProtectedDataWillBecomeUnavailable:',0
                                        ; DATA XREF: __objc_const:0000000100044928↓o
sel_applicationShouldAutomaticallyLocalizeKeyEquivalents_ db 'applicationShouldAutomaticallyLocalizeKeyEquivalents:',0
                                        ; DATA XREF: __objc_const:00000001000447A8↓o
sel_applicationShouldHandleReopen_hasVisibleWindows_ db 'applicationShouldHandleReopen:hasVisibleWindows:',0
                                        ; DATA XREF: __objc_const:0000000100044628↓o
sel_applicationShouldOpenUntitledFile_ db 'applicationShouldOpenUntitledFile:',0
                                        ; DATA XREF: __objc_const:0000000100044598↓o
sel_applicationShouldTerminate_ db 'applicationShouldTerminate:',0
                                        ; DATA XREF: __objc_const:0000000100044520↓o
sel_applicationShouldTerminateAfterLastWindowClosed_ db 'applicationShouldTerminateAfterLastWindowClosed:',0
                                        ; DATA XREF: __objc_const:0000000100044610↓o
sel_applicationSupportsSecureRestorableState_ db 'applicationSupportsSecureRestorableState:',0
                                        ; DATA XREF: __objc_const:00000001000446B8↓o
sel_applicationWillBecomeActive_ db 'applicationWillBecomeActive:',0
                                        ; DATA XREF: __objc_const:0000000100044850↓o
sel_applicationWillHide_ db 'applicationWillHide:',0
                                        ; DATA XREF: __objc_const:00000001000447F0↓o
sel_applicationWillResignActive_ db 'applicationWillResignActive:',0
                                        ; DATA XREF: __objc_const:0000000100044880↓o
sel_applicationWillTerminate_ db 'applicationWillTerminate:',0
                                        ; DATA XREF: __objc_const:00000001000448E0↓o
                                        ; __objc_const:0000000100044B40↓o
sel_applicationWillUnhide_ db 'applicationWillUnhide:',0
                                        ; DATA XREF: __objc_const:0000000100044820↓o
sel_applicationWillUpdate_ db 'applicationWillUpdate:',0
                                        ; DATA XREF: __objc_const:00000001000448B0↓o
sel_array       db 'array',0            ; DATA XREF: __objc_selrefs:selRef_array↓o
sel_arrayWithContentsOfFile_ db 'arrayWithContentsOfFile:',0
                                        ; DATA XREF: __objc_selrefs:selRef_arrayWithContentsOfFile_↓o
sel_arrayWithObjects_ db 'arrayWithObjects:',0
                                        ; DATA XREF: __objc_selrefs:selRef_arrayWithObjects_↓o
sel_arrayWithObjects_count_ db 'arrayWithObjects:count:',0
                                        ; DATA XREF: __objc_selrefs:selRef_arrayWithObjects_count_↓o
sel_attributesOfItemAtPath_error_ db 'attributesOfItemAtPath:error:',0
                                        ; DATA XREF: __objc_selrefs:selRef_attributesOfItemAtPath_error_↓o
sel_autorelease db 'autorelease',0      ; DATA XREF: __objc_const:000000010003DBB8↓o
                                        ; __objc_const:000000010003F758↓o ...
sel_awakeFromNib db 'awakeFromNib',0    ; DATA XREF: __objc_const:0000000100043CB0↓o
sel_back        db 'back',0             ; DATA XREF: __objc_const:000000010003E068↓o
                                        ; __objc_selrefs:selRef_back↓o
sel_backButton  db 'backButton',0       ; DATA XREF: __objc_const:000000010003E230↓o
                                        ; __objc_const:000000010003E430↓o ...
sel_beginSheetModalForWindow_completionHandler_ db 'beginSheetModalForWindow:completionHandler:',0
                                        ; DATA XREF: __objc_selrefs:selRef_beginSheetModalForWindow_completionHandler_↓o
sel_bestValidUpdateInAppcast_forUpdater_ db 'bestValidUpdateInAppcast:forUpdater:',0
                                        ; DATA XREF: __objc_const:0000000100041A00↓o
sel_beta        db 'beta',0             ; DATA XREF: __objc_const:000000010003D4C0↓o
                                        ; __objc_const:000000010003D7E0↓o ...
sel_betaClick   db 'betaClick',0        ; DATA XREF: __objc_const:000000010003E098↓o
                                        ; __objc_selrefs:selRef_betaClick↓o
sel_blackColor  db 'blackColor',0       ; DATA XREF: __objc_selrefs:selRef_blackColor↓o
sel_blocks      db 'blocks',0           ; DATA XREF: __objc_const:000000010003EF48↓o
                                        ; __objc_const:000000010003F540↓o ...
sel_boolForKey_ db 'boolForKey:',0      ; DATA XREF: __objc_selrefs:selRef_boolForKey_↓o
aBooltype_0     db 'boolType',0         ; DATA XREF: __objc_const:0000000100043BA8↓o
sel_boolValue   db 'boolValue',0        ; DATA XREF: __objc_selrefs:selRef_boolValue↓o
sel_boot_       db 'boot:',0            ; DATA XREF: __objc_const:00000001000414B8↓o
                                        ; __objc_const:0000000100045110↓o ...
sel_bootBoot    db 'bootBoot',0         ; DATA XREF: __objc_const:00000001000402F0↓o
                                        ; __objc_selrefs:selRef_bootBoot↓o
sel_bootDelegate db 'bootDelegate',0    ; DATA XREF: __objc_const:000000010003E570↓o
                                        ; __objc_const:000000010003E738↓o ...
sel_bootDeviceRef db 'bootDeviceRef',0  ; DATA XREF: __objc_const:0000000100040A88↓o
                                        ; __objc_const:0000000100041148↓o ...
sel_bootState   db 'bootState',0        ; DATA XREF: __objc_const:0000000100040A58↓o
                                        ; __objc_const:0000000100041138↓o ...
sel_bootType    db 'bootType',0         ; DATA XREF: __objc_const:000000010003F320↓o
                                        ; __objc_const:000000010003F590↓o ...
sel_bootType_PID db 'bootType_PID',0    ; DATA XREF: __objc_const:000000010003F350↓o
                                        ; __objc_const:000000010003F5A0↓o ...
sel_bootVersion db 'bootVersion',0      ; DATA XREF: __objc_const:000000010003D550↓o
                                        ; __objc_const:000000010003D810↓o ...
sel_bounds      db 'bounds',0           ; DATA XREF: __objc_selrefs:selRef_bounds↓o
sel_bytes       db 'bytes',0            ; DATA XREF: __objc_selrefs:selRef_bytes↓o
sel_cachedPropertyWithProperty_ db 'cachedPropertyWithProperty:',0
                                        ; DATA XREF: __objc_const:0000000100044D48↓o
                                        ; __objc_selrefs:selRef_cachedPropertyWithProperty_↓o
sel_cachedTypeWithCode_ db 'cachedTypeWithCode:',0
                                        ; DATA XREF: __objc_const:0000000100043948↓o
                                        ; __objc_selrefs:selRef_cachedTypeWithCode_↓o
sel_camelFromUnderline db 'camelFromUnderline',0
                                        ; DATA XREF: __objc_data:0000000100049048↓o
sel_changeBoot  db 'changeBoot',0       ; DATA XREF: __objc_const:00000001000402A8↓o
                                        ; __objc_selrefs:selRef_changeBoot↓o
sel_changeDinput_ db 'changeDinput:',0  ; DATA XREF: __objc_const:0000000100041550↓o
                                        ; __objc_selrefs:selRef_changeDinput_↓o
sel_changeUIWithState_ db 'changeUIWithState:',0
                                        ; DATA XREF: __objc_const:0000000100040290↓o
                                        ; __objc_selrefs:selRef_changeUIWithState_↓o
sel_characterAtIndex_ db 'characterAtIndex:',0
                                        ; DATA XREF: __objc_selrefs:selRef_characterAtIndex_↓o
sel_chengBeta_  db 'chengBeta:',0       ; DATA XREF: __objc_const:000000010003E0B0↓o
                                        ; __objc_selrefs:selRef_chengBeta_↓o
sel_class       db 'class',0            ; DATA XREF: __objc_const:000000010003DA98↓o
                                        ; __objc_const:000000010003F638↓o ...
sel_className   db 'className',0        ; DATA XREF: __objc_selrefs:selRef_className↓o
sel_clearColor  db 'clearColor',0       ; DATA XREF: __objc_selrefs:selRef_clearColor↓o
sel_click_      db 'click:',0           ; DATA XREF: __objc_const:0000000100042E20↓o
                                        ; __objc_selrefs:selRef_click_↓o
sel_close       db 'close',0            ; DATA XREF: __objc_selrefs:selRef_close↓o
sel_closeWindow_ db 'closeWindow:',0    ; DATA XREF: __objc_const:000000010003E0C8↓o
                                        ; __objc_selrefs:selRef_closeWindow_↓o
sel_code        db 'code',0             ; DATA XREF: __objc_const:00000001000439C8↓o
                                        ; __objc_const:0000000100043B78↓o
sel_colorWithRed_green_blue_alpha_ db 'colorWithRed:green:blue:alpha:',0
                                        ; DATA XREF: __objc_selrefs:selRef_colorWithRed_green_blue_alpha_↓o
sel_colorWithSRGBRed_green_blue_alpha_ db 'colorWithSRGBRed:green:blue:alpha:',0
                                        ; DATA XREF: __objc_selrefs:selRef_colorWithSRGBRed_green_blue_alpha_↓o
sel_compare_    db 'compare:',0         ; DATA XREF: __objc_selrefs:selRef_compare_↓o
sel_componentsSeparatedByString_ db 'componentsSeparatedByString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_componentsSeparatedByString_↓o
sel_conformsToProtocol_ db 'conformsToProtocol:',0
                                        ; DATA XREF: __objc_const:000000010003DB58↓o
                                        ; __objc_const:000000010003F6F8↓o ...
sel_contentString db 'contentString',0  ; DATA XREF: __objc_const:0000000100043330↓o
                                        ; __objc_const:00000001000434E0↓o
sel_contentView db 'contentView',0      ; DATA XREF: __objc_selrefs:selRef_contentView↓o
sel_controlColor db 'controlColor',0    ; DATA XREF: __objc_selrefs:selRef_controlColor↓o
sel_controller  db 'controller',0       ; DATA XREF: __objc_const:0000000100041E40↓o
                                        ; __objc_const:0000000100041F08↓o ...
sel_copyWithZone_ db 'copyWithZone:',0  ; DATA XREF: __objc_const:000000010003EF18↓o
                                        ; __objc_const:00000001000456E8↓o ...
sel_count       db 'count',0            ; DATA XREF: __objc_selrefs:selRef_count↓o
sel_countByEnumeratingWithState_objects_count_ db 'countByEnumeratingWithState:objects:count:',0
                                        ; DATA XREF: __objc_selrefs:selRef_countByEnumeratingWithState_objects_count_↓o
sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_ db 'createDirectoryAtPath:withIntermediateDirectories:attributes:erro'
                                        ; DATA XREF: __objc_selrefs:selRef_createDirectoryAtPath_withIntermediateDirectories_attributes_error_↓o
                db 'r:',0
sel_cur_devId   db 'cur_devId',0        ; DATA XREF: __objc_const:0000000100045838↓o
                                        ; __objc_const:0000000100045A18↓o ...
sel_dataTaskWithRequest_completionHandler_ db 'dataTaskWithRequest:completionHandler:',0
                                        ; DATA XREF: __objc_selrefs:selRef_dataTaskWithRequest_completionHandler_↓o
sel_dataUsingEncoding_ db 'dataUsingEncoding:',0
                                        ; DATA XREF: __objc_selrefs:selRef_dataUsingEncoding_↓o
sel_dataWithData_ db 'dataWithData:',0  ; DATA XREF: __objc_selrefs:selRef_dataWithData_↓o
sel_dataWithJSONObject_options_error_ db 'dataWithJSONObject:options:error:',0
                                        ; DATA XREF: __objc_selrefs:selRef_dataWithJSONObject_options_error_↓o
sel_date        db 'date',0             ; DATA XREF: __objc_const:00000001000466A8↓o
                                        ; __objc_const:0000000100046A28↓o ...
sel_debugDescription db 'debugDescription',0
                                        ; DATA XREF: __objc_const:000000010003DC50↓o
                                        ; __objc_const:000000010003DCA0↓o ...
sel_decimalNumberWithString_ db 'decimalNumberWithString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_decimalNumberWithString_↓o
sel_decodeObjectForKey_ db 'decodeObjectForKey:',0
                                        ; DATA XREF: __objc_selrefs:selRef_decodeObjectForKey_↓o
sel_decryptionPasswordForUpdater_ db 'decryptionPasswordForUpdater:',0
                                        ; DATA XREF: __objc_const:0000000100041B98↓o
sel_defaultCenter db 'defaultCenter',0  ; DATA XREF: __objc_selrefs:selRef_defaultCenter↓o
sel_defaultManager db 'defaultManager',0
                                        ; DATA XREF: __objc_selrefs:selRef_defaultManager↓o
sel_delegate    db 'delegate',0         ; DATA XREF: __objc_const:0000000100040608↓o
                                        ; __objc_const:00000001000411A8↓o ...
sel_description db 'description',0      ; DATA XREF: __objc_const:000000010003D430↓o
                                        ; __objc_const:000000010003DC30↓o ...
sel_device      db 'device',0           ; DATA XREF: __objc_const:000000010003F260↓o
                                        ; __objc_const:000000010003F550↓o ...
sel_deviceName  db 'deviceName',0       ; DATA XREF: __objc_const:000000010003D4F0↓o
                                        ; __objc_const:000000010003D7F0↓o ...
sel_deviceRef   db 'deviceRef',0        ; DATA XREF: __objc_const:000000010003D520↓o
                                        ; __objc_const:000000010003D800↓o ...
sel_dictForKey_ db 'dictForKey:',0      ; DATA XREF: __objc_const:0000000100045AC0↓o
                                        ; __objc_const:00000001000461A8↓o ...
sel_dictionary  db 'dictionary',0       ; DATA XREF: __objc_selrefs:selRef_dictionary↓o
sel_dictionaryWithContentsOfFile_ db 'dictionaryWithContentsOfFile:',0
                                        ; DATA XREF: __objc_selrefs:selRef_dictionaryWithContentsOfFile_↓o
sel_dictionaryWithDictionary_ db 'dictionaryWithDictionary:',0
                                        ; DATA XREF: __objc_selrefs:selRef_dictionaryWithDictionary_↓o
sel_dictionaryWithObjects_forKeys_count_ db 'dictionaryWithObjects:forKeys:count:',0
                                        ; DATA XREF: __objc_selrefs:selRef_dictionaryWithObjects_forKeys_count_↓o
sel_dinput      db 'dinput',0           ; DATA XREF: __objc_const:000000010003E188↓o
                                        ; __objc_const:000000010003E3F0↓o ...
sel_documentView db 'documentView',0    ; DATA XREF: __objc_selrefs:selRef_documentView↓o
sel_doubleForKey_ db 'doubleForKey:',0  ; DATA XREF: __objc_selrefs:selRef_doubleForKey_↓o
sel_dowmFirmwaerFile_ db 'dowmFirmwaerFile:',0
                                        ; DATA XREF: __objc_const:0000000100040410↓o
                                        ; __objc_selrefs:selRef_dowmFirmwaerFile_↓o
sel_dowmFirmwaerFile_success_failure_downLoadID_maxSize_ db 'dowmFirmwaerFile:success:failure:downLoadID:maxSize:',0
                                        ; DATA XREF: __objc_const:000000010003D8C8↓o
                                        ; __objc_selrefs:selRef_dowmFirmwaerFile_success_failure_downLoadID_maxSize_↓o
sel_downloadTaskWithRequest_completionHandler_ db 'downloadTaskWithRequest:completionHandler:',0
                                        ; DATA XREF: __objc_selrefs:selRef_downloadTaskWithRequest_completionHandler_↓o
sel_drawAtPoint_withAttributes_ db 'drawAtPoint:withAttributes:',0
                                        ; DATA XREF: __objc_selrefs:selRef_drawAtPoint_withAttributes_↓o
sel_drawRect_   db 'drawRect:',0        ; DATA XREF: __objc_const:000000010003E828↓o
                                        ; __objc_const:00000001000412D8↓o ...
sel_earseFlash  db 'earseFlash',0       ; DATA XREF: __objc_const:000000010003F0C8↓o
                                        ; __objc_selrefs:selRef_earseFlash↓o
sel_earseFlashBLE db 'earseFlashBLE',0  ; DATA XREF: __objc_const:000000010003F0E0↓o
                                        ; __objc_selrefs:selRef_earseFlashBLE↓o
sel_earseFlashPro2Version db 'earseFlashPro2Version',0
                                        ; DATA XREF: __objc_const:000000010003F0F8↓o
                                        ; __objc_selrefs:selRef_earseFlashPro2Version↓o
sel_encodeObject_forKey_ db 'encodeObject:forKey:',0
                                        ; DATA XREF: __objc_selrefs:selRef_encodeObject_forKey_↓o
sel_enumerateObjectsUsingBlock_ db 'enumerateObjectsUsingBlock:',0
                                        ; DATA XREF: __objc_selrefs:selRef_enumerateObjectsUsingBlock_↓o
sel_enumerateProperties_ db 'enumerateProperties:',0
                                        ; DATA XREF: __objc_const:0000000100045BF8↓o
sel_eraseFlashJL_eraseUnitSize_blockCount_ db 'eraseFlashJL:eraseUnitSize:blockCount:',0
                                        ; DATA XREF: __objc_const:000000010003F050↓o
                                        ; __objc_selrefs:selRef_eraseFlashJL_eraseUnitSize_blockCount_↓o
sel_error       db 'error',0            ; DATA XREF: __objc_const:0000000100045DC0↓o
                                        ; __objc_const:0000000100046130↓o ...
sel_errorWithDomain_code_userInfo_ db 'errorWithDomain:code:userInfo:',0
                                        ; DATA XREF: __objc_selrefs:selRef_errorWithDomain_code_userInfo_↓o
sel_expectedContentLength db 'expectedContentLength',0
                                        ; DATA XREF: __objc_selrefs:selRef_expectedContentLength↓o
sel_feedParametersForUpdater_sendingSystemProfile_ db 'feedParametersForUpdater:sendingSystemProfile:',0
                                        ; DATA XREF: __objc_const:0000000100041958↓o
sel_feedURLStringForUpdater_ db 'feedURLStringForUpdater:',0
                                        ; DATA XREF: __objc_const:0000000100041940↓o
                                        ; __objc_const:0000000100041E28↓o
sel_fileExistsAtPath_ db 'fileExistsAtPath:',0
                                        ; DATA XREF: __objc_selrefs:selRef_fileExistsAtPath_↓o
sel_fileHandleForReading db 'fileHandleForReading',0
                                        ; DATA XREF: __objc_selrefs:selRef_fileHandleForReading↓o
sel_fileHandleForReadingAtPath_ db 'fileHandleForReadingAtPath:',0
                                        ; DATA XREF: __objc_selrefs:selRef_fileHandleForReadingAtPath_↓o
sel_fileName    db 'fileName',0         ; DATA XREF: __objc_const:0000000100046690↓o
                                        ; __objc_const:0000000100046A38↓o ...
sel_filePath    db 'filePath',0         ; DATA XREF: __objc_const:000000010003E5D0↓o
                                        ; __objc_const:000000010003E758↓o ...
sel_fileSize    db 'fileSize',0         ; DATA XREF: __objc_const:00000001000466F0↓o
                                        ; __objc_const:0000000100046A48↓o ...
sel_fileURLWithPath_ db 'fileURLWithPath:',0
                                        ; DATA XREF: __objc_selrefs:selRef_fileURLWithPath_↓o
sel_filterVersion_ db 'filterVersion:',0
                                        ; DATA XREF: __objc_const:0000000100040218↓o
                                        ; __objc_selrefs:selRef_filterVersion_↓o
sel_findNewVersionLabel db 'findNewVersionLabel',0
                                        ; DATA XREF: __objc_const:0000000100040788↓o
                                        ; __objc_const:0000000100041048↓o ...
sel_findNewVersionListView db 'findNewVersionListView',0
                                        ; DATA XREF: __objc_const:0000000100040758↓o
                                        ; __objc_const:0000000100041038↓o ...
sel_findNewVersionLogTextView db 'findNewVersionLogTextView',0
                                        ; DATA XREF: __objc_const:00000001000407B8↓o
                                        ; __objc_const:0000000100041058↓o ...
sel_findStateUI_ db 'findStateUI:',0    ; DATA XREF: __objc_const:0000000100043CE0↓o
                                        ; __objc_selrefs:selRef_findStateUI_↓o
sel_fire        db 'fire',0             ; DATA XREF: __objc_selrefs:selRef_fire↓o
sel_firmwaerHintLabel db 'firmwaerHintLabel',0
                                        ; DATA XREF: __objc_const:00000001000408D8↓o
                                        ; __objc_const:00000001000410B8↓o ...
sel_firmwaerListVist db 'firmwaerListVist',0
                                        ; DATA XREF: __objc_const:00000001000406F8↓o
                                        ; __objc_const:0000000100041018↓o ...
sel_firmwaerUpdateClick_ db 'firmwaerUpdateClick:',0
                                        ; DATA XREF: __objc_const:0000000100043D70↓o
sel_firmwaerUpdateClick_from_ db 'firmwaerUpdateClick:from:',0
                                        ; DATA XREF: __objc_const:000000010003DDD0↓o
                                        ; __objc_const:000000010003E110↓o ...
sel_firmwaerUpdaterButton db 'firmwaerUpdaterButton',0
                                        ; DATA XREF: __objc_const:0000000100043DD0↓o
                                        ; __objc_const:0000000100044120↓o ...
sel_firstCharLower db 'firstCharLower',0
                                        ; DATA XREF: __objc_data:0000000100049060↓o
sel_firstCharUpper db 'firstCharUpper',0
                                        ; DATA XREF: __objc_data:0000000100049078↓o
sel_firstObject db 'firstObject',0      ; DATA XREF: __objc_selrefs:selRef_firstObject↓o
sel_flashCRC    db 'flashCRC',0         ; DATA XREF: __objc_const:000000010003EFF0↓o
                                        ; __objc_selrefs:selRef_flashCRC↓o
sel_floatValue  db 'floatValue',0       ; DATA XREF: __objc_selrefs:selRef_floatValue↓o
sel_fontWithName_size_ db 'fontWithName:size:',0
                                        ; DATA XREF: __objc_selrefs:selRef_fontWithName_size_↓o
sel_foundationClasses db 'foundationClasses',0
                                        ; DATA XREF: __objc_const:0000000100046CB0↓o
                                        ; __objc_selrefs:selRef_foundationClasses↓o
sel_frame       db 'frame',0            ; DATA XREF: __objc_selrefs:selRef_frame↓o
aFromfoundation_0 db 'fromFoundation',0 ; DATA XREF: __objc_const:0000000100043BC8↓o
sel_get8BitdoDevicePIDVIDAndNAMEs db 'get8BitdoDevicePIDVIDAndNAMEs',0
                                        ; DATA XREF: __objc_const:000000010003EDB8↓o
                                        ; __objc_selrefs:selRef_get8BitdoDevicePIDVIDAndNAMEs↓o
sel_getCheckUpdateMenuItem db 'getCheckUpdateMenuItem',0
                                        ; DATA XREF: __objc_const:0000000100044BF0↓o
                                        ; __objc_selrefs:selRef_getCheckUpdateMenuItem↓o
sel_getCurrentLanguageCode db 'getCurrentLanguageCode',0
                                        ; DATA XREF: __objc_const:0000000100041DE0↓o
                                        ; __objc_selrefs:selRef_getCurrentLanguageCode↓o
sel_getDeviceWithPID_ db 'getDeviceWithPID:',0
                                        ; DATA XREF: __objc_const:00000001000451F0↓o
sel_getDeviceWithRef_ db 'getDeviceWithRef:',0
                                        ; DATA XREF: __objc_const:0000000100041598↓o
                                        ; __objc_const:00000001000451D8↓o ...
sel_getFirmwaerHintVersion_beta_targerVersion_ db 'getFirmwaerHintVersion:beta:targerVersion:',0
                                        ; DATA XREF: __objc_const:0000000100040248↓o
                                        ; __objc_selrefs:selRef_getFirmwaerHintVersion_beta_targerVersion_↓o
sel_getID       db 'getID',0            ; DATA XREF: __objc_const:000000010003D958↓o
                                        ; __objc_selrefs:selRef_getID↓o
sel_getIPFormHtml_ db 'getIPFormHtml:',0
                                        ; DATA XREF: __objc_const:000000010003D9B8↓o
                                        ; __objc_selrefs:selRef_getIPFormHtml_↓o
sel_getMainItem db 'getMainItem',0      ; DATA XREF: __objc_const:0000000100044C38↓o
sel_getMore8BitdoDevicePIDVIDAndNAMEs db 'getMore8BitdoDevicePIDVIDAndNAMEs',0
                                        ; DATA XREF: __objc_const:000000010003EDD0↓o
                                        ; __objc_selrefs:selRef_getMore8BitdoDevicePIDVIDAndNAMEs↓o
sel_getMoreMenuItemAction db 'getMoreMenuItemAction',0
                                        ; DATA XREF: __objc_const:0000000100044C68↓o
sel_getMoreMenuItemSelf db 'getMoreMenuItemSelf',0
                                        ; DATA XREF: __objc_const:0000000100044C50↓o
sel_getNameWith_pid_name_ db 'getNameWith:pid:name:',0
                                        ; DATA XREF: __objc_const:000000010003EDE8↓o
                                        ; __objc_selrefs:selRef_getNameWith_pid_name_↓o
sel_getNewValueFromObject_oldValue_property_ db 'getNewValueFromObject:oldValue:property:',0
                                        ; DATA XREF: __objc_const:0000000100045C28↓o
sel_getNewVersion_version_beta_success_failure_ db 'getNewVersion:version:beta:success:failure:',0
                                        ; DATA XREF: __objc_const:000000010003D8E0↓o
                                        ; __objc_selrefs:selRef_getNewVersion_version_beta_success_failure_↓o
sel_getPro2Version db 'getPro2Version',0
                                        ; DATA XREF: __objc_const:000000010003F188↓o
                                        ; __objc_selrefs:selRef_getPro2Version↓o
sel_getUpdateFirmwaerWithType_success_failure_ db 'getUpdateFirmwaerWithType:success:failure:',0
                                        ; DATA XREF: __objc_const:000000010003D8B0↓o
                                        ; __objc_selrefs:selRef_getUpdateFirmwaerWithType_success_failure_↓o
aGpreportbufb   db 'gpReportBufB',0     ; DATA XREF: __objc_const:0000000100046EC0↓o
sel_grayColor   db 'grayColor',0        ; DATA XREF: __objc_selrefs:selRef_grayColor↓o
sel_gs_getCurrentTimeToMilliSecond db 'gs_getCurrentTimeToMilliSecond',0
                                        ; DATA XREF: __objc_const:0000000100040458↓o
                                        ; __objc_selrefs:selRef_gs_getCurrentTimeToMilliSecond↓o
sel_handle_miniImageView db 'handle_miniImageView',0
                                        ; DATA XREF: __objc_const:0000000100040158↓o
sel_hasPrefix_  db 'hasPrefix:',0       ; DATA XREF: __objc_selrefs:selRef_hasPrefix_↓o
sel_hash        db 'hash',0             ; DATA XREF: __objc_const:000000010003DC00↓o
                                        ; __objc_const:000000010003DC70↓o ...
sel_helpButton  db 'helpButton',0       ; DATA XREF: __objc_const:0000000100043F20↓o
                                        ; __objc_const:0000000100044190↓o ...
sel_helpButtonClick_ db 'helpButtonClick:',0
                                        ; DATA XREF: __objc_const:0000000100043D88↓o
sel_hidManager  db 'hidManager',0       ; DATA XREF: __objc_const:0000000100046E10↓o
                                        ; __objc_const:0000000100046F68↓o ...
sel_hintLabel   db 'hintLabel',0        ; DATA XREF: __objc_const:00000001000408A8↓o
                                        ; __objc_const:00000001000410A8↓o ...
sel_homeView    db 'homeView',0         ; DATA XREF: __objc_const:000000010003E1E8↓o
                                        ; __objc_const:000000010003E410↓o ...
sel_horizontalScroller db 'horizontalScroller',0
                                        ; DATA XREF: __objc_selrefs:selRef_horizontalScroller↓o
sel_id          db 'id',0               ; DATA XREF: __objc_const:0000000100046780↓o
                                        ; __objc_const:0000000100046A78↓o ...
aIdtype_0       db 'idType',0           ; DATA XREF: __objc_const:0000000100043B88↓o
sel_imageNamed_ db 'imageNamed:',0      ; DATA XREF: __objc_selrefs:selRef_imageNamed_↓o
sel_init        db 'init',0             ; DATA XREF: __objc_const:000000010003E810↓o
                                        ; __objc_const:0000000100041D98↓o ...
sel_initFindNewVersion db 'initFindNewVersion',0
                                        ; DATA XREF: __objc_const:0000000100040200↓o
                                        ; __objc_selrefs:selRef_initFindNewVersion↓o
sel_initTimer   db 'initTimer',0        ; DATA XREF: __objc_const:0000000100040428↓o
                                        ; __objc_selrefs:selRef_initTimer↓o
sel_initView    db 'initView',0         ; DATA XREF: __objc_const:000000010003DF90↓o
                                        ; __objc_selrefs:selRef_initView↓o
sel_initWithData_encoding_ db 'initWithData:encoding:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithData_encoding_↓o
sel_initWithFileAtPath_ db 'initWithFileAtPath:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithFileAtPath_↓o
sel_initWithFrame_ db 'initWithFrame:',0
                                        ; DATA XREF: __objc_const:000000010003E960↓o
                                        ; __objc_const:0000000100040140↓o ...
sel_initWithLocaleIdentifier_ db 'initWithLocaleIdentifier:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithLocaleIdentifier_↓o
sel_initWithPattern_options_error_ db 'initWithPattern:options:error:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithPattern_options_error_↓o
sel_initWithRect_options_owner_userInfo_ db 'initWithRect:options:owner:userInfo:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithRect_options_owner_userInfo_↓o
sel_initWithStartingUpdater_updaterDelegate_userDriverDelegate_ db 'initWithStartingUpdater:updaterDelegate:userDriverDelegate:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithStartingUpdater_updaterDelegate_userDriverDelegate_↓o
sel_initWithString_attributes_ db 'initWithString:attributes:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithString_attributes_↓o
sel_initWithWindowNibName_ db 'initWithWindowNibName:',0
                                        ; DATA XREF: __objc_selrefs:selRef_initWithWindowNibName_↓o
sel_initialize  db 'initialize',0       ; DATA XREF: __objc_const:0000000100043930↓o
sel_insertNewObjectForEntityForName_inManagedObjectContext_ db 'insertNewObjectForEntityForName:inManagedObjectContext:',0
                                        ; DATA XREF: __objc_selrefs:selRef_insertNewObjectForEntityForName_inManagedObjectContext_↓o
sel_insertString_atIndex_ db 'insertString:atIndex:',0
                                        ; DATA XREF: __objc_selrefs:selRef_insertString_atIndex_↓o
sel_intValue    db 'intValue',0         ; DATA XREF: __objc_selrefs:selRef_intValue↓o
sel_integerValue db 'integerValue',0    ; DATA XREF: __objc_selrefs:selRef_integerValue↓o
sel_invalidate  db 'invalidate',0       ; DATA XREF: __objc_selrefs:selRef_invalidate↓o
sel_isBoolType  db 'isBoolType',0       ; DATA XREF: __objc_const:0000000100043A10↓o
                                        ; __objc_selrefs:selRef_isBoolType↓o
sel_isCarryRR   db 'isCarryRR',0        ; DATA XREF: __objc_const:000000010003D580↓o
                                        ; __objc_const:000000010003D820↓o ...
sel_isChangeBoot db 'isChangeBoot',0    ; DATA XREF: __objc_const:000000010003D5F8↓o
                                        ; __objc_const:000000010003D850↓o ...
sel_isClassFromFoundation_ db 'isClassFromFoundation:',0
                                        ; DATA XREF: __objc_const:0000000100046CC8↓o
                                        ; __objc_selrefs:selRef_isClassFromFoundation_↓o
sel_isCurrentChinaLanguage db 'isCurrentChinaLanguage',0
                                        ; DATA XREF: __objc_const:0000000100043540↓o
                                        ; __objc_selrefs:selRef_isCurrentChinaLanguage↓o
sel_isEnabled   db 'isEnabled',0        ; DATA XREF: __objc_selrefs:selRef_isEnabled↓o
sel_isEqual_    db 'isEqual:',0         ; DATA XREF: __objc_const:000000010003DA80↓o
                                        ; __objc_const:000000010003F620↓o ...
sel_isEqualToString_ db 'isEqualToString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_isEqualToString_↓o
sel_isFromFoundation db 'isFromFoundation',0
                                        ; DATA XREF: __objc_const:0000000100043A40↓o
                                        ; __objc_selrefs:selRef_isFromFoundation↓o
sel_isIdType    db 'isIdType',0         ; DATA XREF: __objc_const:00000001000439E0↓o
sel_isKVCDisabled db 'isKVCDisabled',0  ; DATA XREF: __objc_const:0000000100043A58↓o
                                        ; __objc_selrefs:selRef_isKVCDisabled↓o
sel_isKindOfClass_ db 'isKindOfClass:',0
                                        ; DATA XREF: __objc_const:000000010003DB28↓o
                                        ; __objc_const:000000010003F6C8↓o ...
sel_isMemberOfClass_ db 'isMemberOfClass:',0
                                        ; DATA XREF: __objc_const:000000010003DB40↓o
                                        ; __objc_const:000000010003F6E0↓o ...
sel_isNumberType db 'isNumberType',0    ; DATA XREF: __objc_const:00000001000439F8↓o
                                        ; __objc_selrefs:selRef_isNumberType↓o
sel_isPureInt   db 'isPureInt',0        ; DATA XREF: __objc_data:0000000100049090↓o
sel_isSelect    db 'isSelect',0         ; DATA XREF: __objc_const:0000000100041338↓o
                                        ; __objc_const:0000000100041438↓o ...
sel_isSetNewFirmware db 'isSetNewFirmware',0
                                        ; DATA XREF: __objc_const:0000000100040638↓o
                                        ; __objc_const:0000000100040FD8↓o ...
sel_isShowMiniRRImage db 'isShowMiniRRImage',0
                                        ; DATA XREF: __objc_const:00000001000406C8↓o
                                        ; __objc_const:0000000100041008↓o ...
sel_isSubclassOfClass_ db 'isSubclassOfClass:',0
                                        ; DATA XREF: __objc_selrefs:selRef_isSubclassOfClass_↓o
sel_isUSBRR_PS_classic db 'isUSBRR_PS_classic',0
                                        ; DATA XREF: __objc_const:000000010003E600↓o
                                        ; __objc_const:000000010003E768↓o ...
sel_isloadData  db 'isloadData',0       ; DATA XREF: __objc_const:00000001000407E8↓o
                                        ; __objc_const:0000000100041068↓o ...
sel_itemArray   db 'itemArray',0        ; DATA XREF: __objc_selrefs:selRef_itemArray↓o
sel_keyValues   db 'keyValues',0        ; DATA XREF: __objc_const:0000000100042980↓o
sel_keyValuesArrayWithObjectArray_ db 'keyValuesArrayWithObjectArray:',0
                                        ; DATA XREF: __objc_const:0000000100042A78↓o
sel_keyValuesArrayWithObjectArray_error_ db 'keyValuesArrayWithObjectArray:error:',0
                                        ; DATA XREF: __objc_const:0000000100042A90↓o
sel_keyValuesArrayWithObjectArray_ignoredKeys_ db 'keyValuesArrayWithObjectArray:ignoredKeys:',0
                                        ; DATA XREF: __objc_const:0000000100042AD8↓o
sel_keyValuesArrayWithObjectArray_ignoredKeys_error_ db 'keyValuesArrayWithObjectArray:ignoredKeys:error:',0
                                        ; DATA XREF: __objc_const:0000000100042AF0↓o
sel_keyValuesArrayWithObjectArray_keys_ db 'keyValuesArrayWithObjectArray:keys:',0
                                        ; DATA XREF: __objc_const:0000000100042AA8↓o
sel_keyValuesArrayWithObjectArray_keys_error_ db 'keyValuesArrayWithObjectArray:keys:error:',0
                                        ; DATA XREF: __objc_const:0000000100042AC0↓o
sel_keyValuesWithError_ db 'keyValuesWithError:',0
                                        ; DATA XREF: __objc_const:0000000100042998↓o
sel_keyValuesWithIgnoredKeys_ db 'keyValuesWithIgnoredKeys:',0
                                        ; DATA XREF: __objc_const:00000001000429E0↓o
sel_keyValuesWithKeys_ db 'keyValuesWithKeys:',0
                                        ; DATA XREF: __objc_const:00000001000429B0↓o
sel_keyValuesWithKeys_error_ db 'keyValuesWithKeys:error:',0
                                        ; DATA XREF: __objc_const:00000001000429C8↓o
sel_languageCode db 'languageCode',0    ; DATA XREF: __objc_selrefs:selRef_languageCode↓o
sel_lastObject  db 'lastObject',0       ; DATA XREF: __objc_selrefs:selRef_lastObject↓o
sel_lastPathComponent db 'lastPathComponent',0
                                        ; DATA XREF: __objc_selrefs:selRef_lastPathComponent↓o
sel_lastProgress db 'lastProgress',0    ; DATA XREF: __objc_const:000000010003E630↓o
                                        ; __objc_const:000000010003E728↓o ...
sel_lastTimer   db 'lastTimer',0        ; DATA XREF: __objc_const:0000000100040B00↓o
                                        ; __objc_const:0000000100041178↓o ...
sel_launch      db 'launch',0           ; DATA XREF: __objc_selrefs:selRef_launch↓o
sel_layer       db 'layer',0            ; DATA XREF: __objc_selrefs:selRef_layer↓o
sel_layout      db 'layout',0           ; DATA XREF: __objc_const:0000000100040188↓o
                                        ; __objc_const:0000000100043650↓o ...
sel_leftButton  db 'leftButton',0       ; DATA XREF: __objc_const:0000000100040938↓o
                                        ; __objc_const:00000001000410D8↓o ...
sel_length      db 'length',0           ; DATA XREF: __objc_selrefs:selRef_length↓o
sel_line        db 'line',0             ; DATA XREF: __objc_const:00000001000436F8↓o
                                        ; __objc_const:00000001000438A0↓o ...
sel_load        db 'load',0             ; DATA XREF: __objc_const:000000010003E4F0↓o
                                        ; __objc_const:000000010003EDA0↓o ...
sel_loadNewGameVersion_version_beta_ db 'loadNewGameVersion:version:beta:',0
                                        ; DATA XREF: __objc_const:0000000100043D58↓o
                                        ; __objc_selrefs:selRef_loadNewGameVersion_version_beta_↓o
sel_loadNibNamed_owner_topLevelObjects_ db 'loadNibNamed:owner:topLevelObjects:',0
                                        ; DATA XREF: __objc_selrefs:selRef_loadNibNamed_owner_topLevelObjects_↓o
sel_loadUpdateFirmwae db 'loadUpdateFirmwae',0
                                        ; DATA XREF: __objc_const:00000001000403B0↓o
                                        ; __objc_selrefs:selRef_loadUpdateFirmwae↓o
sel_loadUpdateFirmwae_ db 'loadUpdateFirmwae:',0
                                        ; DATA XREF: __objc_const:00000001000403C8↓o
                                        ; __objc_selrefs:selRef_loadUpdateFirmwae_↓o
sel_loadV1AndV2 db 'loadV1AndV2',0      ; DATA XREF: __objc_const:0000000100040338↓o
                                        ; __objc_selrefs:selRef_loadV1AndV2↓o
sel_loadViews   db 'loadViews',0        ; DATA XREF: __objc_const:0000000100040170↓o
                                        ; __objc_selrefs:selRef_loadViews↓o
sel_loadXibName_ db 'loadXibName:',0    ; DATA XREF: __objc_const:0000000100043180↓o
                                        ; __objc_selrefs:selRef_loadXibName_↓o
sel_localizedStringForKey_value_table_ db 'localizedStringForKey:value:table:',0
                                        ; DATA XREF: __objc_selrefs:selRef_localizedStringForKey_value_table_↓o
sel_m_backgroundColor db 'm_backgroundColor',0
                                        ; DATA XREF: __objc_const:0000000100042E68↓o
                                        ; __objc_const:00000001000430E0↓o ...
aMBeta          db 'm_beta',0           ; DATA XREF: __objc_const:0000000100040BB0↓o
aMHeight        db 'm_height',0         ; DATA XREF: __objc_const:000000010003E2E8↓o
                                        ; __objc_const:0000000100040B70↓o ...
sel_m_highlightColor db 'm_highlightColor',0
                                        ; DATA XREF: __objc_const:0000000100042E80↓o
                                        ; __objc_const:00000001000430F0↓o ...
sel_m_progress  db 'm_progress',0       ; DATA XREF: __objc_const:0000000100042E38↓o
                                        ; __objc_const:00000001000430C0↓o ...
aMTargetbeta    db 'm_targetBeta',0     ; DATA XREF: __objc_const:0000000100040BF0↓o
sel_m_titleColor db 'm_titleColor',0    ; DATA XREF: __objc_const:0000000100042E98↓o
                                        ; __objc_const:0000000100043100↓o ...
sel_m_titleHighlighColor db 'm_titleHighlighColor',0
                                        ; DATA XREF: __objc_const:0000000100042EB0↓o
                                        ; __objc_const:0000000100043110↓o ...
aMVersion       db 'm_version',0        ; DATA XREF: __objc_const:0000000100040B90↓o
sel_mainBundle  db 'mainBundle',0       ; DATA XREF: __objc_selrefs:selRef_mainBundle↓o
sel_mainImageView db 'mainImageView',0  ; DATA XREF: __objc_const:0000000100045DD8↓o
                                        ; __objc_const:00000001000460B0↓o ...
sel_mainMenu    db 'mainMenu',0         ; DATA XREF: __objc_selrefs:selRef_mainMenu↓o
sel_mainRunLoop db 'mainRunLoop',0      ; DATA XREF: __objc_selrefs:selRef_mainRunLoop↓o
sel_mainWindow  db 'mainWindow',0       ; DATA XREF: __objc_selrefs:selRef_mainWindow↓o
sel_makeKeyWindow db 'makeKeyWindow',0  ; DATA XREF: __objc_selrefs:selRef_makeKeyWindow↓o
sel_makeObjectsPerformSelector_ db 'makeObjectsPerformSelector:',0
                                        ; DATA XREF: __objc_selrefs:selRef_makeObjectsPerformSelector_↓o
sel_manualView  db 'manualView',0       ; DATA XREF: __objc_const:0000000100040128↓o
                                        ; __objc_const:0000000100041158↓o ...
sel_manualViewRemoveFromSuperView db 'manualViewRemoveFromSuperView',0
                                        ; DATA XREF: __objc_const:0000000100040278↓o
                                        ; __objc_selrefs:selRef_manualViewRemoveFromSuperView↓o
sel_matchesInString_options_range_ db 'matchesInString:options:range:',0
                                        ; DATA XREF: __objc_selrefs:selRef_matchesInString_options_range_↓o
sel_md5HexDigest_ db 'md5HexDigest:',0  ; DATA XREF: __objc_const:000000010003D9D0↓o
sel_miniImageName db 'miniImageName',0  ; DATA XREF: __objc_const:000000010003EAE8↓o
                                        ; __objc_const:000000010003ED10↓o ...
sel_miniImageView db 'miniImageView',0  ; DATA XREF: __objc_const:0000000100040668↓o
                                        ; __objc_const:0000000100040FE8↓o ...
sel_mj_JSONData db 'mj_JSONData',0      ; DATA XREF: __objc_const:0000000100042290↓o
                                        ; __objc_selrefs:selRef_mj_JSONData↓o
sel_mj_JSONObject db 'mj_JSONObject',0  ; DATA XREF: __objc_const:00000001000422A8↓o
                                        ; __objc_selrefs:selRef_mj_JSONObject↓o
sel_mj_JSONString db 'mj_JSONString',0  ; DATA XREF: __objc_const:00000001000422C0↓o
                                        ; __objc_selrefs:selRef_mj_JSONString↓o
sel_mj_allowedCodingPropertyNames db 'mj_allowedCodingPropertyNames',0
                                        ; DATA XREF: __objc_const:0000000100045580↓o
                                        ; __objc_selrefs:selRef_mj_allowedCodingPropertyNames↓o
sel_mj_allowedPropertyNames db 'mj_allowedPropertyNames',0
                                        ; DATA XREF: __objc_const:00000001000427C0↓o
                                        ; __objc_selrefs:selRef_mj_allowedPropertyNames↓o
sel_mj_camelFromUnderline db 'mj_camelFromUnderline',0
                                        ; DATA XREF: __objc_selrefs:selRef_mj_camelFromUnderline↓o
                                        ; __objc_data:00000001000490D8↓o
sel_mj_decode_  db 'mj_decode:',0       ; DATA XREF: __objc_const:0000000100045270↓o
sel_mj_encode_  db 'mj_encode:',0       ; DATA XREF: __objc_const:0000000100045258↓o
sel_mj_enumerateAllClasses_ db 'mj_enumerateAllClasses:',0
                                        ; DATA XREF: __objc_const:00000001000461D8↓o
                                        ; __objc_selrefs:selRef_mj_enumerateAllClasses_↓o
sel_mj_enumerateClasses_ db 'mj_enumerateClasses:',0
                                        ; DATA XREF: __objc_const:00000001000461C0↓o
                                        ; __objc_selrefs:selRef_mj_enumerateClasses_↓o
sel_mj_enumerateProperties_ db 'mj_enumerateProperties:',0
                                        ; DATA XREF: __objc_const:0000000100045B08↓o
                                        ; __objc_selrefs:selRef_mj_enumerateProperties_↓o
sel_mj_error    db 'mj_error',0         ; DATA XREF: __objc_const:00000001000422E0↓o
                                        ; __objc_selrefs:selRef_mj_error↓o
sel_mj_firstCharLower db 'mj_firstCharLower',0
                                        ; DATA XREF: __objc_selrefs:selRef_mj_firstCharLower↓o
                                        ; __objc_data:00000001000490F0↓o
sel_mj_firstCharUpper db 'mj_firstCharUpper',0
                                        ; DATA XREF: __objc_selrefs:selRef_mj_firstCharUpper↓o
                                        ; __objc_data:0000000100049108↓o
sel_mj_getNewValueFromObject_oldValue_property_ db 'mj_getNewValueFromObject:oldValue:property:',0
                                        ; DATA XREF: __objc_const:0000000100045B50↓o
                                        ; __objc_selrefs:selRef_mj_getNewValueFromObject_oldValue_property_↓o
sel_mj_ignoredCodingPropertyNames db 'mj_ignoredCodingPropertyNames',0
                                        ; DATA XREF: __objc_const:0000000100045598↓o
                                        ; __objc_selrefs:selRef_mj_ignoredCodingPropertyNames↓o
sel_mj_ignoredPropertyNames db 'mj_ignoredPropertyNames',0
                                        ; DATA XREF: __objc_const:00000001000427D8↓o
                                        ; __objc_selrefs:selRef_mj_ignoredPropertyNames↓o
sel_mj_isPureInt db 'mj_isPureInt',0    ; DATA XREF: __objc_selrefs:selRef_mj_isPureInt↓o
                                        ; __objc_data:0000000100049120↓o
sel_mj_isReferenceReplacedKeyWhenCreatingKeyValues db 'mj_isReferenceReplacedKeyWhenCreatingKeyValues',0
                                        ; DATA XREF: __objc_const:0000000100042328↓o
                                        ; __objc_selrefs:selRef_mj_isReferenceReplacedKeyWhenCreatingKeyValues↓o
sel_mj_keyValues db 'mj_keyValues',0    ; DATA XREF: __objc_const:0000000100042230↓o
                                        ; __objc_selrefs:selRef_mj_keyValues↓o
sel_mj_keyValuesArrayWithObjectArray_ db 'mj_keyValuesArrayWithObjectArray:',0
                                        ; DATA XREF: __objc_const:0000000100042418↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesArrayWithObjectArray_↓o
sel_mj_keyValuesArrayWithObjectArray_ignoredKeys_ db 'mj_keyValuesArrayWithObjectArray:ignoredKeys:',0
                                        ; DATA XREF: __objc_const:0000000100042448↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesArrayWithObjectArray_ignoredKeys_↓o
sel_mj_keyValuesArrayWithObjectArray_keys_ db 'mj_keyValuesArrayWithObjectArray:keys:',0
                                        ; DATA XREF: __objc_const:0000000100042430↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesArrayWithObjectArray_keys_↓o
sel_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_ db 'mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:',0
                                        ; DATA XREF: __objc_const:0000000100042460↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_↓o
sel_mj_keyValuesDidFinishConvertingToObject db 'mj_keyValuesDidFinishConvertingToObject',0
                                        ; DATA XREF: __objc_const:0000000100042788↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesDidFinishConvertingToObject↓o
sel_mj_keyValuesWithIgnoredKeys_ db 'mj_keyValuesWithIgnoredKeys:',0
                                        ; DATA XREF: __objc_const:0000000100042260↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesWithIgnoredKeys_↓o
sel_mj_keyValuesWithKeys_ db 'mj_keyValuesWithKeys:',0
                                        ; DATA XREF: __objc_const:0000000100042248↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesWithKeys_↓o
sel_mj_keyValuesWithKeys_ignoredKeys_ db 'mj_keyValuesWithKeys:ignoredKeys:',0
                                        ; DATA XREF: __objc_const:0000000100042278↓o
                                        ; __objc_selrefs:selRef_mj_keyValuesWithKeys_ignoredKeys_↓o
sel_mj_newValueFromOldValue_property_ db 'mj_newValueFromOldValue:property:',0
                                        ; DATA XREF: __objc_const:0000000100042770↓o
                                        ; __objc_selrefs:selRef_mj_newValueFromOldValue_property_↓o
sel_mj_objectArrayWithFile_ db 'mj_objectArrayWithFile:',0
                                        ; DATA XREF: __objc_const:0000000100042400↓o
                                        ; __objc_selrefs:selRef_mj_objectArrayWithFile_↓o
sel_mj_objectArrayWithFilename_ db 'mj_objectArrayWithFilename:',0
                                        ; DATA XREF: __objc_const:00000001000423E8↓o
                                        ; __objc_selrefs:selRef_mj_objectArrayWithFilename_↓o
sel_mj_objectArrayWithKeyValuesArray_ db 'mj_objectArrayWithKeyValuesArray:',0
                                        ; DATA XREF: __objc_const:00000001000423B8↓o
                                        ; __objc_selrefs:selRef_mj_objectArrayWithKeyValuesArray_↓o
sel_mj_objectArrayWithKeyValuesArray_context_ db 'mj_objectArrayWithKeyValuesArray:context:',0
                                        ; DATA XREF: __objc_const:00000001000423D0↓o
                                        ; __objc_selrefs:selRef_mj_objectArrayWithKeyValuesArray_context_↓o
sel_mj_objectClassInArray db 'mj_objectClassInArray',0
                                        ; DATA XREF: __objc_const:0000000100042820↓o
                                        ; __objc_const:0000000100046430↓o ...
sel_mj_objectDidFinishConvertingToKeyValues db 'mj_objectDidFinishConvertingToKeyValues',0
                                        ; DATA XREF: __objc_const:00000001000427A0↓o
                                        ; __objc_selrefs:selRef_mj_objectDidFinishConvertingToKeyValues↓o
sel_mj_objectWithFile_ db 'mj_objectWithFile:',0
                                        ; DATA XREF: __objc_const:00000001000423A0↓o
                                        ; __objc_selrefs:selRef_mj_objectWithFile_↓o
sel_mj_objectWithFilename_ db 'mj_objectWithFilename:',0
                                        ; DATA XREF: __objc_const:0000000100042388↓o
                                        ; __objc_selrefs:selRef_mj_objectWithFilename_↓o
sel_mj_objectWithKeyValues_ db 'mj_objectWithKeyValues:',0
                                        ; DATA XREF: __objc_const:0000000100042358↓o
                                        ; __objc_selrefs:selRef_mj_objectWithKeyValues_↓o
sel_mj_referenceReplacedKeyWhenCreatingKeyValues_ db 'mj_referenceReplacedKeyWhenCreatingKeyValues:',0
                                        ; DATA XREF: __objc_const:0000000100042310↓o
                                        ; __objc_selrefs:selRef_mj_referenceReplacedKeyWhenCreatingKeyValues_↓o
sel_mj_replacedKeyFromPropertyName db 'mj_replacedKeyFromPropertyName',0
                                        ; DATA XREF: __objc_const:00000001000427F0↓o
                                        ; __objc_selrefs:selRef_mj_replacedKeyFromPropertyName↓o
sel_mj_replacedKeyFromPropertyName121_ db 'mj_replacedKeyFromPropertyName121:',0
                                        ; DATA XREF: __objc_const:0000000100042808↓o
                                        ; __objc_selrefs:selRef_mj_replacedKeyFromPropertyName121_↓o
sel_mj_setKeyValues_ db 'mj_setKeyValues:',0
                                        ; DATA XREF: __objc_const:0000000100042200↓o
                                        ; __objc_selrefs:selRef_mj_setKeyValues_↓o
sel_mj_setKeyValues_context_ db 'mj_setKeyValues:context:',0
                                        ; DATA XREF: __objc_const:0000000100042218↓o
                                        ; __objc_selrefs:selRef_mj_setKeyValues_context_↓o
sel_mj_setupAllowedCodingPropertyNames_ db 'mj_setupAllowedCodingPropertyNames:',0
                                        ; DATA XREF: __objc_const:0000000100046280↓o
sel_mj_setupAllowedPropertyNames_ db 'mj_setupAllowedPropertyNames:',0
                                        ; DATA XREF: __objc_const:0000000100046250↓o
sel_mj_setupBlockReturnValue_key_ db 'mj_setupBlockReturnValue:key:',0
                                        ; DATA XREF: __objc_const:00000001000462B0↓o
                                        ; __objc_selrefs:selRef_mj_setupBlockReturnValue_key_↓o
sel_mj_setupIgnoredCodingPropertyNames_ db 'mj_setupIgnoredCodingPropertyNames:',0
                                        ; DATA XREF: __objc_const:0000000100046220↓o
sel_mj_setupIgnoredPropertyNames_ db 'mj_setupIgnoredPropertyNames:',0
                                        ; DATA XREF: __objc_const:00000001000461F0↓o
sel_mj_setupNewValueFromOldValue_ db 'mj_setupNewValueFromOldValue:',0
                                        ; DATA XREF: __objc_const:0000000100045B38↓o
                                        ; __objc_selrefs:selRef_mj_setupNewValueFromOldValue_↓o
sel_mj_setupObjectClassInArray_ db 'mj_setupObjectClassInArray:',0
                                        ; DATA XREF: __objc_const:0000000100045B68↓o
                                        ; __objc_selrefs:selRef_mj_setupObjectClassInArray_↓o
sel_mj_setupReplacedKeyFromPropertyName121_ db 'mj_setupReplacedKeyFromPropertyName121:',0
                                        ; DATA XREF: __objc_const:0000000100045B98↓o
                                        ; __objc_selrefs:selRef_mj_setupReplacedKeyFromPropertyName121_↓o
sel_mj_setupReplacedKeyFromPropertyName_ db 'mj_setupReplacedKeyFromPropertyName:',0
                                        ; DATA XREF: __objc_const:0000000100045B80↓o
                                        ; __objc_selrefs:selRef_mj_setupReplacedKeyFromPropertyName_↓o
sel_mj_totalAllowedCodingPropertyNames db 'mj_totalAllowedCodingPropertyNames',0
                                        ; DATA XREF: __objc_const:0000000100046298↓o
                                        ; __objc_selrefs:selRef_mj_totalAllowedCodingPropertyNames↓o
sel_mj_totalAllowedPropertyNames db 'mj_totalAllowedPropertyNames',0
                                        ; DATA XREF: __objc_const:0000000100046268↓o
                                        ; __objc_selrefs:selRef_mj_totalAllowedPropertyNames↓o
sel_mj_totalIgnoredCodingPropertyNames db 'mj_totalIgnoredCodingPropertyNames',0
                                        ; DATA XREF: __objc_const:0000000100046238↓o
                                        ; __objc_selrefs:selRef_mj_totalIgnoredCodingPropertyNames↓o
sel_mj_totalIgnoredPropertyNames db 'mj_totalIgnoredPropertyNames',0
                                        ; DATA XREF: __objc_const:0000000100046208↓o
                                        ; __objc_selrefs:selRef_mj_totalIgnoredPropertyNames↓o
sel_mj_totalObjectsWithSelector_key_ db 'mj_totalObjectsWithSelector:key:',0
                                        ; DATA XREF: __objc_const:00000001000462C8↓o
                                        ; __objc_selrefs:selRef_mj_totalObjectsWithSelector_key_↓o
sel_mj_underlineFromCamel db 'mj_underlineFromCamel',0
                                        ; DATA XREF: __objc_selrefs:selRef_mj_underlineFromCamel↓o
                                        ; __objc_data:00000001000490C0↓o
sel_mj_url      db 'mj_url',0           ; DATA XREF: __objc_selrefs:selRef_mj_url↓o
                                        ; __objc_data:0000000100049138↓o
sel_moreClick   db 'moreClick',0        ; DATA XREF: __objc_const:000000010003E080↓o
                                        ; __objc_selrefs:selRef_moreClick↓o
sel_moreClick_  db 'moreClick:',0       ; DATA XREF: __objc_const:0000000100043680↓o
                                        ; __objc_selrefs:selRef_moreClick_↓o
sel_moreDevice  db 'moreDevice',0       ; DATA XREF: __objc_const:0000000100043C98↓o
                                        ; __objc_const:00000001000441D0↓o ...
sel_moreImage   db 'moreImage',0        ; DATA XREF: __objc_const:000000010003EB48↓o
                                        ; __objc_const:000000010003ED30↓o ...
sel_moreImagehighlight db 'moreImagehighlight',0
                                        ; DATA XREF: __objc_const:000000010003EB18↓o
                                        ; __objc_const:000000010003ED20↓o ...
sel_moreS8BitdoDatails db 'moreS8BitdoDatails',0
                                        ; DATA XREF: __objc_const:0000000100043758↓o
                                        ; __objc_const:00000001000438C0↓o ...
sel_moreScrollView db 'moreScrollView',0
                                        ; DATA XREF: __objc_const:0000000100043728↓o
                                        ; __objc_const:00000001000438B0↓o ...
sel_moreView    db 'moreView',0         ; DATA XREF: __objc_const:000000010003DF60↓o
                                        ; __objc_const:000000010003E440↓o ...
sel_mouseDown_  db 'mouseDown:',0       ; DATA XREF: __objc_const:00000001000401A0↓o
                                        ; __objc_const:00000001000412F0↓o
sel_mouseEntered_ db 'mouseEntered:',0  ; DATA XREF: __objc_const:0000000100041308↓o
                                        ; __objc_const:0000000100042D60↓o
sel_mouseExited_ db 'mouseExited:',0    ; DATA XREF: __objc_const:0000000100041320↓o
                                        ; __objc_const:0000000100042D78↓o
sel_moveItemAtURL_toURL_error_ db 'moveItemAtURL:toURL:error:',0
                                        ; DATA XREF: __objc_selrefs:selRef_moveItemAtURL_toURL_error_↓o
sel_msgState    db 'msgState',0         ; DATA XREF: __objc_const:00000001000464B0↓o
                                        ; __objc_const:00000001000465C8↓o
sel_mutableCopyWithZone_ db 'mutableCopyWithZone:',0
                                        ; DATA XREF: __objc_const:000000010003EF30↓o
                                        ; __objc_const:0000000100045700↓o ...
sel_name        db 'name',0             ; DATA XREF: __objc_const:000000010003EA28↓o
                                        ; __objc_const:000000010003ECD0↓o ...
sel_newValueFromOldValue_property_ db 'newValueFromOldValue:property:',0
                                        ; DATA XREF: __objc_selrefs:selRef_newValueFromOldValue_property_↓o
sel_noChangeBoot db 'noChangeBoot',0    ; DATA XREF: __objc_const:0000000100040308↓o
                                        ; __objc_selrefs:selRef_noChangeBoot↓o
sel_noV1AndV2   db 'noV1AndV2',0        ; DATA XREF: __objc_const:0000000100040350↓o
                                        ; __objc_selrefs:selRef_noV1AndV2↓o
sel_notFirmware db 'notFirmware',0      ; DATA XREF: __objc_const:0000000100040878↓o
                                        ; __objc_const:0000000100041098↓o ...
sel_null        db 'null',0             ; DATA XREF: __objc_selrefs:selRef_null↓o
sel_numberFromString_ db 'numberFromString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_numberFromString_↓o
aNumbertype_0   db 'numberType',0       ; DATA XREF: __objc_const:0000000100043B98↓o
sel_numberWithUnsignedChar_ db 'numberWithUnsignedChar:',0
                                        ; DATA XREF: __objc_selrefs:selRef_numberWithUnsignedChar_↓o
sel_object      db 'object',0           ; DATA XREF: __objc_selrefs:selRef_object↓o
sel_objectArrayWithFile_ db 'objectArrayWithFile:',0
                                        ; DATA XREF: __objc_const:0000000100042C58↓o
sel_objectArrayWithFile_error_ db 'objectArrayWithFile:error:',0
                                        ; DATA XREF: __objc_const:0000000100042C70↓o
sel_objectArrayWithFilename_ db 'objectArrayWithFilename:',0
                                        ; DATA XREF: __objc_const:0000000100042C28↓o
sel_objectArrayWithFilename_error_ db 'objectArrayWithFilename:error:',0
                                        ; DATA XREF: __objc_const:0000000100042C40↓o
sel_objectArrayWithKeyValuesArray_ db 'objectArrayWithKeyValuesArray:',0
                                        ; DATA XREF: __objc_const:0000000100042BC8↓o
sel_objectArrayWithKeyValuesArray_context_ db 'objectArrayWithKeyValuesArray:context:',0
                                        ; DATA XREF: __objc_const:0000000100042BF8↓o
sel_objectArrayWithKeyValuesArray_context_error_ db 'objectArrayWithKeyValuesArray:context:error:',0
                                        ; DATA XREF: __objc_const:0000000100042C10↓o
sel_objectArrayWithKeyValuesArray_error_ db 'objectArrayWithKeyValuesArray:error:',0
                                        ; DATA XREF: __objc_const:0000000100042BE0↓o
sel_objectAtIndex_ db 'objectAtIndex:',0
                                        ; DATA XREF: __objc_selrefs:selRef_objectAtIndex_↓o
sel_objectAtIndexedSubscript_ db 'objectAtIndexedSubscript:',0
                                        ; DATA XREF: __objc_selrefs:selRef_objectAtIndexedSubscript_↓o
sel_objectClassInArray db 'objectClassInArray',0
                                        ; DATA XREF: __objc_selrefs:selRef_objectClassInArray↓o
sel_objectClassInArrayDict db 'objectClassInArrayDict',0
                                        ; DATA XREF: __objc_const:0000000100044F48↓o
                                        ; __objc_const:0000000100045070↓o ...
sel_objectClassInArrayForClass_ db 'objectClassInArrayForClass:',0
                                        ; DATA XREF: __objc_const:0000000100044E88↓o
                                        ; __objc_selrefs:selRef_objectClassInArrayForClass_↓o
sel_objectForKey_ db 'objectForKey:',0  ; DATA XREF: __objc_selrefs:selRef_objectForKey_↓o
sel_objectForKeyedSubscript_ db 'objectForKeyedSubscript:',0
                                        ; DATA XREF: __objc_const:0000000100046498↓o
                                        ; __objc_selrefs:selRef_objectForKeyedSubscript_↓o
sel_objectWithFile_error_ db 'objectWithFile:error:',0
                                        ; DATA XREF: __objc_const:0000000100042BB0↓o
sel_objectWithFilename_ db 'objectWithFilename:',0
                                        ; DATA XREF: __objc_const:0000000100042B68↓o
sel_objectWithFilename_error_ db 'objectWithFilename:error:',0
                                        ; DATA XREF: __objc_const:0000000100042B80↓o
sel_objectWithKeyValues_ db 'objectWithKeyValues:',0
                                        ; DATA XREF: __objc_const:0000000100042B08↓o
sel_objectWithKeyValues_context_ db 'objectWithKeyValues:context:',0
                                        ; DATA XREF: __objc_const:0000000100042B38↓o
sel_objectWithKeyValues_context_error_ db 'objectWithKeyValues:context:error:',0
                                        ; DATA XREF: __objc_const:0000000100042B50↓o
sel_objectWithKeyValues_error_ db 'objectWithKeyValues:error:',0
                                        ; DATA XREF: __objc_const:0000000100042B20↓o
sel_offset      db 'offset',0           ; DATA XREF: __objc_const:000000010003F3B0↓o
                                        ; __objc_const:000000010003F5C0↓o ...
sel_okButton    db 'okButton',0         ; DATA XREF: __objc_const:00000001000433A8↓o
                                        ; __objc_const:00000001000434C0↓o ...
sel_oneHintLabel db 'oneHintLabel',0    ; DATA XREF: __objc_const:0000000100045E08↓o
                                        ; __objc_const:00000001000460C0↓o ...
sel_open        db 'open',0             ; DATA XREF: __objc_const:000000010003E558↓o
                                        ; __objc_const:000000010003EF60↓o ...
sel_order       db 'order',0            ; DATA XREF: __objc_const:000000010003EB78↓o
                                        ; __objc_const:000000010003ED40↓o ...
sel_orderFront_ db 'orderFront:',0      ; DATA XREF: __objc_selrefs:selRef_orderFront_↓o
sel_orderOut_   db 'orderOut:',0        ; DATA XREF: __objc_selrefs:selRef_orderOut_↓o
sel_pathForResource_ofType_ db 'pathForResource:ofType:',0
                                        ; DATA XREF: __objc_selrefs:selRef_pathForResource_ofType_↓o
sel_performSelector_ db 'performSelector:',0
                                        ; DATA XREF: __objc_const:000000010003DAC8↓o
                                        ; __objc_const:000000010003F668↓o ...
sel_performSelector_withObject_ db 'performSelector:withObject:',0
                                        ; DATA XREF: __objc_const:000000010003DAE0↓o
                                        ; __objc_const:000000010003F680↓o ...
sel_performSelector_withObject_withObject_ db 'performSelector:withObject:withObject:',0
                                        ; DATA XREF: __objc_const:000000010003DAF8↓o
                                        ; __objc_const:000000010003F698↓o ...
sel_pfile       db 'pfile',0            ; DATA XREF: __objc_const:000000010003F2F0↓o
                                        ; __objc_const:000000010003F580↓o ...
sel_postNotificationName_object_ db 'postNotificationName:object:',0
                                        ; DATA XREF: __objc_selrefs:selRef_postNotificationName_object_↓o
sel_preferredLanguages db 'preferredLanguages',0
                                        ; DATA XREF: __objc_selrefs:selRef_preferredLanguages↓o
sel_progress    db 'progress',0         ; DATA XREF: __objc_const:0000000100040818↓o
                                        ; __objc_const:0000000100041078↓o ...
sel_properties  db 'properties',0       ; DATA XREF: __objc_const:0000000100045B20↓o
                                        ; __objc_selrefs:selRef_properties↓o
sel_property    db 'property',0         ; DATA XREF: __objc_const:0000000100044EA0↓o
                                        ; __objc_const:0000000100045080↓o
sel_propertyKey_ db 'propertyKey:',0    ; DATA XREF: __objc_const:0000000100045AD8↓o
                                        ; __objc_selrefs:selRef_propertyKey_↓o
sel_propertyKeysDict db 'propertyKeysDict',0
                                        ; DATA XREF: __objc_const:0000000100044F18↓o
                                        ; __objc_const:0000000100045060↓o ...
sel_propertyKeysForClass_ db 'propertyKeysForClass:',0
                                        ; DATA XREF: __objc_const:0000000100044E58↓o
                                        ; __objc_selrefs:selRef_propertyKeysForClass_↓o
sel_propertyKeysWithStringKey_ db 'propertyKeysWithStringKey:',0
                                        ; DATA XREF: __objc_const:0000000100044E10↓o
                                        ; __objc_selrefs:selRef_propertyKeysWithStringKey_↓o
sel_propertyObjectClassInArray_ db 'propertyObjectClassInArray:',0
                                        ; DATA XREF: __objc_const:0000000100045AF0↓o
                                        ; __objc_selrefs:selRef_propertyObjectClassInArray_↓o
sel_range       db 'range',0            ; DATA XREF: __objc_selrefs:selRef_range↓o
sel_rangeOfString_ db 'rangeOfString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_rangeOfString_↓o
sel_readBlock_Block_ db 'readBlock:Block:',0
                                        ; DATA XREF: __objc_const:0000000100045730↓o
                                        ; __objc_selrefs:selRef_readBlock_Block_↓o
sel_readDataOfLength_ db 'readDataOfLength:',0
                                        ; DATA XREF: __objc_selrefs:selRef_readDataOfLength_↓o
sel_readDataToEndOfFile db 'readDataToEndOfFile',0
                                        ; DATA XREF: __objc_selrefs:selRef_readDataToEndOfFile↓o
sel_readDevice_serial db 'readDevice_serial',0
                                        ; DATA XREF: __objc_const:000000010003F0B0↓o
                                        ; __objc_selrefs:selRef_readDevice_serial↓o
sel_readFlash   db 'readFlash',0        ; DATA XREF: __objc_const:000000010003F218↓o
sel_readFlash_  db 'readFlash:',0       ; DATA XREF: __objc_const:000000010003F230↓o
                                        ; __objc_selrefs:selRef_readFlash_↓o
sel_readGamepadInfo_ db 'readGamepadInfo:',0
                                        ; DATA XREF: __objc_const:000000010003F110↓o
                                        ; __objc_selrefs:selRef_readGamepadInfo_↓o
sel_readReadFlash_Cmd_Block_ db 'readReadFlash:Cmd:Block:',0
                                        ; DATA XREF: __objc_const:000000010003EF90↓o
                                        ; __objc_selrefs:selRef_readReadFlash_Cmd_Block_↓o
sel_readVersion db 'readVersion',0      ; DATA XREF: __objc_const:00000001000457D8↓o
                                        ; __objc_selrefs:selRef_readVersion↓o
sel_readme      db 'readme',0           ; DATA XREF: __objc_const:00000001000467B0↓o
                                        ; __objc_const:0000000100046A88↓o ...
sel_readme_en   db 'readme_en',0        ; DATA XREF: __objc_const:0000000100046750↓o
                                        ; __objc_const:0000000100046A68↓o ...
sel_reason      db 'reason',0           ; DATA XREF: __objc_selrefs:selRef_reason↓o
sel_redColor    db 'redColor',0         ; DATA XREF: __objc_selrefs:selRef_redColor↓o
sel_referenceReplacedKeyWhenCreatingKeyValues_ db 'referenceReplacedKeyWhenCreatingKeyValues:',0
                                        ; DATA XREF: __objc_const:0000000100042A60↓o
sel_refreshFirmwaerList db 'refreshFirmwaerList',0
                                        ; DATA XREF: __objc_const:0000000100040230↓o
                                        ; __objc_selrefs:selRef_refreshFirmwaerList↓o
sel_reloadButton db 'reloadButton',0    ; DATA XREF: __objc_const:0000000100040848↓o
                                        ; __objc_const:0000000100041088↓o ...
sel_reloadClic  db 'reloadClic',0       ; DATA XREF: __objc_const:0000000100040368↓o
                                        ; __objc_selrefs:selRef_reloadClic↓o
sel_remove8BitdoDeviceRefreshUI_ db 'remove8BitdoDeviceRefreshUI:',0
                                        ; DATA XREF: __objc_const:0000000100041580↓o
                                        ; __objc_const:00000001000451C0↓o ...
sel_removeAllObjects db 'removeAllObjects',0
                                        ; DATA XREF: __objc_selrefs:selRef_removeAllObjects↓o
sel_removeFromSuperview db 'removeFromSuperview',0
                                        ; DATA XREF: __objc_const:00000001000401E8↓o
                                        ; __objc_selrefs:selRef_removeFromSuperview↓o
sel_removeObject_ db 'removeObject:',0  ; DATA XREF: __objc_selrefs:selRef_removeObject_↓o
sel_removeS8BitdoDevice_ db 'removeS8BitdoDevice:',0
                                        ; DATA XREF: __objc_const:000000010003DD88↓o
                                        ; __objc_const:000000010003E0F8↓o ...
sel_removeTrackingArea_ db 'removeTrackingArea:',0
                                        ; DATA XREF: __objc_selrefs:selRef_removeTrackingArea_↓o
sel_replacedKeyFromPropertyName db 'replacedKeyFromPropertyName',0
                                        ; DATA XREF: __objc_selrefs:selRef_replacedKeyFromPropertyName↓o
sel_replacedKeyFromPropertyName121 db 'replacedKeyFromPropertyName121',0
                                        ; DATA XREF: __objc_selrefs:selRef_replacedKeyFromPropertyName121↓o
aReportsizein   db 'reportSizeIn',0     ; DATA XREF: __objc_const:0000000100046EE0↓o
sel_resetGamepad db 'resetGamepad',0    ; DATA XREF: __objc_const:000000010003F1D0↓o
                                        ; __objc_selrefs:selRef_resetGamepad↓o
sel_respondsToSelector_ db 'respondsToSelector:',0
                                        ; DATA XREF: __objc_const:000000010003DB70↓o
                                        ; __objc_const:000000010003F710↓o ...
sel_resume      db 'resume',0           ; DATA XREF: __objc_selrefs:selRef_resume↓o
sel_retain      db 'retain',0           ; DATA XREF: __objc_const:000000010003DB88↓o
                                        ; __objc_const:000000010003F728↓o ...
sel_retainCount db 'retainCount',0      ; DATA XREF: __objc_const:000000010003DBD0↓o
                                        ; __objc_const:000000010003F770↓o ...
sel_rightButton db 'rightButton',0      ; DATA XREF: __objc_const:0000000100040968↓o
                                        ; __objc_const:00000001000410E8↓o ...
sel_sBackgroundColor db 'sBackgroundColor',0
                                        ; DATA XREF: __objc_const:000000010003E840↓o
                                        ; __objc_const:000000010003E8B8↓o
sel_savePath    db 'savePath',0         ; DATA XREF: __objc_const:00000001000409F8↓o
                                        ; __objc_const:0000000100041118↓o
sel_scanInt_    db 'scanInt:',0         ; DATA XREF: __objc_selrefs:selRef_scanInt_↓o
sel_scannerWithString_ db 'scannerWithString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_scannerWithString_↓o
sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_ db 'scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:',0
                                        ; DATA XREF: __objc_selrefs:selRef_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_↓o
sel_scriptCode  db 'scriptCode',0       ; DATA XREF: __objc_selrefs:selRef_scriptCode↓o
sel_scrollPoint_ db 'scrollPoint:',0    ; DATA XREF: __objc_selrefs:selRef_scrollPoint_↓o
sel_scrollView  db 'scrollView',0       ; DATA XREF: __objc_const:0000000100040728↓o
                                        ; __objc_const:0000000100041028↓o ...
sel_seekToFileOffset_ db 'seekToFileOffset:',0
                                        ; DATA XREF: __objc_selrefs:selRef_seekToFileOffset_↓o
sel_selectButton db 'selectButton',0    ; DATA XREF: __objc_const:00000001000409C8↓o
                                        ; __objc_const:0000000100041108↓o ...
sel_self        db 'self',0             ; DATA XREF: __objc_const:000000010003DAB0↓o
                                        ; __objc_const:000000010003F650↓o ...
sel_sendRecordActivity_ db 'sendRecordActivity:',0
                                        ; DATA XREF: __objc_const:000000010003D928↓o
                                        ; __objc_selrefs:selRef_sendRecordActivity_↓o
sel_sendRecordActivity_IP_ db 'sendRecordActivity:IP:',0
                                        ; DATA XREF: __objc_const:000000010003D940↓o
                                        ; __objc_selrefs:selRef_sendRecordActivity_IP_↓o
sel_send_usb_packet_cut db 'send_usb_packet_cut',0
                                        ; DATA XREF: __objc_const:0000000100045790↓o
                                        ; __objc_selrefs:selRef_send_usb_packet_cut↓o
sel_setAction_  db 'setAction:',0       ; DATA XREF: __objc_selrefs:selRef_setAction_↓o
sel_setAlertStyle_ db 'setAlertStyle:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setAlertStyle_↓o
sel_setAlignment_ db 'setAlignment:',0  ; DATA XREF: __objc_selrefs:selRef_setAlignment_↓o
sel_setAlternateImage_ db 'setAlternateImage:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setAlternateImage_↓o
sel_setArguments_ db 'setArguments:',0  ; DATA XREF: __objc_selrefs:selRef_setArguments_↓o
sel_setArrow01_ db 'setArrow01:',0      ; DATA XREF: __objc_const:0000000100043EA8↓o
sel_setArrow02_ db 'setArrow02:',0      ; DATA XREF: __objc_const:0000000100043ED8↓o
sel_setArrow03_ db 'setArrow03:',0      ; DATA XREF: __objc_const:0000000100043F08↓o
sel_setAttributedTitle_ db 'setAttributedTitle:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setAttributedTitle_↓o
sel_setBLEApplicationEncodeId db 'setBLEApplicationEncodeId',0
                                        ; DATA XREF: __objc_const:000000010003F170↓o
                                        ; __objc_selrefs:selRef_setBLEApplicationEncodeId↓o
sel_setBackButton_ db 'setBackButton:',0
                                        ; DATA XREF: __objc_const:000000010003E248↓o
                                        ; __objc_selrefs:selRef_setBackButton_↓o
sel_setBackgroundColor_ db 'setBackgroundColor:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setBackgroundColor_↓o
sel_setBeta_    db 'setBeta:',0         ; DATA XREF: __objc_const:000000010003D4D8↓o
                                        ; __objc_const:0000000100046888↓o ...
sel_setBezelStyle_ db 'setBezelStyle:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setBezelStyle_↓o
sel_setBleVersion db 'setBleVersion',0  ; DATA XREF: __objc_const:000000010003F1B8↓o
                                        ; __objc_selrefs:selRef_setBleVersion↓o
sel_setBlocks_  db 'setBlocks:',0       ; DATA XREF: __objc_const:000000010003F3E0↓o
                                        ; __objc_const:00000001000458F8↓o
sel_setBootDelegate_ db 'setBootDelegate:',0
                                        ; DATA XREF: __objc_const:000000010003E588↓o
                                        ; __objc_const:000000010003F2A8↓o ...
sel_setBootDeviceRef_ db 'setBootDeviceRef:',0
                                        ; DATA XREF: __objc_const:0000000100040AA0↓o
                                        ; __objc_selrefs:selRef_setBootDeviceRef_↓o
sel_setBootState_ db 'setBootState:',0  ; DATA XREF: __objc_const:0000000100040A70↓o
                                        ; __objc_selrefs:selRef_setBootState_↓o
sel_setBootType_ db 'setBootType:',0    ; DATA XREF: __objc_const:000000010003F338↓o
                                        ; __objc_selrefs:selRef_setBootType_↓o
sel_setBootType_PID_ db 'setBootType_PID:',0
                                        ; DATA XREF: __objc_const:000000010003F368↓o
                                        ; __objc_selrefs:selRef_setBootType_PID_↓o
sel_setBordered_ db 'setBordered:',0    ; DATA XREF: __objc_selrefs:selRef_setBordered_↓o
sel_setButtonType_ db 'setButtonType:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setButtonType_↓o
sel_setCode_    db 'setCode:',0         ; DATA XREF: __objc_const:00000001000439B0↓o
                                        ; __objc_selrefs:selRef_setCode_↓o
sel_setContent_ db 'setContent:',0      ; DATA XREF: __objc_const:0000000100043390↓o
sel_setContentString_ db 'setContentString:',0
                                        ; DATA XREF: __objc_const:0000000100043300↓o
                                        ; __objc_selrefs:selRef_setContentString_↓o
sel_setContentTintColor_ db 'setContentTintColor:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setContentTintColor_↓o
sel_setController_ db 'setController:',0
                                        ; DATA XREF: __objc_const:0000000100041E58↓o
                                        ; __objc_selrefs:selRef_setController_↓o
sel_setCornerRadius_ db 'setCornerRadius:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setCornerRadius_↓o
sel_setCur_devId_ db 'setCur_devId:',0  ; DATA XREF: __objc_const:0000000100045850↓o
sel_setDate_    db 'setDate:',0         ; DATA XREF: __objc_const:00000001000466C0↓o
sel_setDelegate_ db 'setDelegate:',0    ; DATA XREF: __objc_const:0000000100040620↓o
                                        ; __objc_const:0000000100041398↓o ...
sel_setDetails_ db 'setDetails:',0      ; DATA XREF: __objc_const:000000010003D5E0↓o
                                        ; __objc_selrefs:selRef_setDetails_↓o
sel_setDevice_  db 'setDevice:',0       ; DATA XREF: __objc_const:000000010003F278↓o
                                        ; __objc_const:00000001000400E0↓o ...
sel_setDeviceName_ db 'setDeviceName:',0
                                        ; DATA XREF: __objc_const:000000010003D508↓o
                                        ; __objc_selrefs:selRef_setDeviceName_↓o
sel_setDeviceRef_ db 'setDeviceRef:',0  ; DATA XREF: __objc_const:000000010003D538↓o
                                        ; __objc_selrefs:selRef_setDeviceRef_↓o
sel_setDevices_ db 'setDevices:',0      ; DATA XREF: __objc_const:0000000100043F80↓o
                                        ; __objc_const:0000000100046E88↓o ...
sel_setDinput_  db 'setDinput:',0       ; DATA XREF: __objc_const:000000010003E1A0↓o
                                        ; __objc_selrefs:selRef_setDinput_↓o
sel_setDocumentView_ db 'setDocumentView:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setDocumentView_↓o
sel_setDouble_forKey_ db 'setDouble:forKey:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setDouble_forKey_↓o
sel_setDrawsBackground_ db 'setDrawsBackground:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setDrawsBackground_↓o
sel_setEditable_ db 'setEditable:',0    ; DATA XREF: __objc_selrefs:selRef_setEditable_↓o
sel_setEnabled_ db 'setEnabled:',0      ; DATA XREF: __objc_selrefs:selRef_setEnabled_↓o
sel_setError_   db 'setError:',0        ; DATA XREF: __objc_const:0000000100045D78↓o
                                        ; __objc_const:00000001000464F8↓o ...
sel_setFileName_ db 'setFileName:',0    ; DATA XREF: __objc_const:00000001000466D8↓o
sel_setFilePath_ db 'setFilePath:',0    ; DATA XREF: __objc_const:000000010003E5E8↓o
                                        ; __objc_const:000000010003F2D8↓o ...
sel_setFileSize_ db 'setFileSize:',0    ; DATA XREF: __objc_const:0000000100046708↓o
sel_setFileURL_ db 'setFileURL:',0      ; DATA XREF: __objc_const:0000000100046738↓o
sel_setFindNewVersionLabel_ db 'setFindNewVersionLabel:',0
                                        ; DATA XREF: __objc_const:00000001000407A0↓o
                                        ; __objc_selrefs:selRef_setFindNewVersionLabel_↓o
sel_setFindNewVersionListView_ db 'setFindNewVersionListView:',0
                                        ; DATA XREF: __objc_const:0000000100040770↓o
                                        ; __objc_selrefs:selRef_setFindNewVersionListView_↓o
sel_setFindNewVersionLogTextView_ db 'setFindNewVersionLogTextView:',0
                                        ; DATA XREF: __objc_const:00000001000407D0↓o
                                        ; __objc_selrefs:selRef_setFindNewVersionLogTextView_↓o
sel_setFindsView_ db 'setFindsView:',0  ; DATA XREF: __objc_const:0000000100043E48↓o
sel_setFirmwaerHintLabel_ db 'setFirmwaerHintLabel:',0
                                        ; DATA XREF: __objc_const:00000001000408F0↓o
                                        ; __objc_selrefs:selRef_setFirmwaerHintLabel_↓o
sel_setFirmwaerListVist_ db 'setFirmwaerListVist:',0
                                        ; DATA XREF: __objc_const:0000000100040710↓o
                                        ; __objc_selrefs:selRef_setFirmwaerListVist_↓o
sel_setFirmwaerUpdaterButton_ db 'setFirmwaerUpdaterButton:',0
                                        ; DATA XREF: __objc_const:0000000100043DE8↓o
sel_setFont_    db 'setFont:',0         ; DATA XREF: __objc_selrefs:selRef_setFont_↓o
sel_setFrame_   db 'setFrame:',0        ; DATA XREF: __objc_selrefs:selRef_setFrame_↓o
sel_setFrame_display_ db 'setFrame:display:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setFrame_display_↓o
sel_setFrameSize_ db 'setFrameSize:',0  ; DATA XREF: __objc_selrefs:selRef_setFrameSize_↓o
sel_setHTTPMethod_ db 'setHTTPMethod:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setHTTPMethod_↓o
sel_setHasVerticalScroller_ db 'setHasVerticalScroller:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setHasVerticalScroller_↓o
sel_setHelpButton_ db 'setHelpButton:',0
                                        ; DATA XREF: __objc_const:0000000100043F38↓o
sel_setHidManager_ db 'setHidManager:',0
                                        ; DATA XREF: __objc_const:0000000100046E28↓o
                                        ; __objc_selrefs:selRef_setHidManager_↓o
sel_setHidden_  db 'setHidden:',0       ; DATA XREF: __objc_selrefs:selRef_setHidden_↓o
sel_setHintLabel_ db 'setHintLabel:',0  ; DATA XREF: __objc_const:00000001000408C0↓o
                                        ; __objc_selrefs:selRef_setHintLabel_↓o
sel_setHomeView_ db 'setHomeView:',0    ; DATA XREF: __objc_const:000000010003E200↓o
                                        ; __objc_selrefs:selRef_setHomeView_↓o
sel_setId_      db 'setId:',0           ; DATA XREF: __objc_const:0000000100046798↓o
sel_setImage_   db 'setImage:',0        ; DATA XREF: __objc_selrefs:selRef_setImage_↓o
sel_setImagePosition_ db 'setImagePosition:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setImagePosition_↓o
sel_setImageScaling_ db 'setImageScaling:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setImageScaling_↓o
sel_setIndeterminate_ db 'setIndeterminate:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setIndeterminate_↓o
sel_setInformativeText_ db 'setInformativeText:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setInformativeText_↓o
sel_setIsCarryRR_ db 'setIsCarryRR:',0  ; DATA XREF: __objc_const:000000010003D598↓o
                                        ; __objc_selrefs:selRef_setIsCarryRR_↓o
sel_setIsChangeBoot_ db 'setIsChangeBoot:',0
                                        ; DATA XREF: __objc_const:000000010003D610↓o
                                        ; __objc_selrefs:selRef_setIsChangeBoot_↓o
sel_setIsClick_ db 'setIsClick:',0      ; DATA XREF: __objc_const:0000000100041368↓o
                                        ; __objc_selrefs:selRef_setIsClick_↓o
sel_setIsManuanlViewRR_ db 'setIsManuanlViewRR:',0
                                        ; DATA XREF: __objc_const:000000010003D5C8↓o
                                        ; __objc_selrefs:selRef_setIsManuanlViewRR_↓o
sel_setIsSelect_ db 'setIsSelect:',0    ; DATA XREF: __objc_const:00000001000412A8↓o
                                        ; __objc_selrefs:selRef_setIsSelect_↓o
sel_setIsSetNewFirmware_ db 'setIsSetNewFirmware:',0
                                        ; DATA XREF: __objc_const:0000000100040650↓o
                                        ; __objc_selrefs:selRef_setIsSetNewFirmware_↓o
sel_setIsShowMiniRRImage_ db 'setIsShowMiniRRImage:',0
                                        ; DATA XREF: __objc_const:00000001000406E0↓o
                                        ; __objc_selrefs:selRef_setIsShowMiniRRImage_↓o
sel_setIsUSBRR_PS_classic_ db 'setIsUSBRR_PS_classic:',0
                                        ; DATA XREF: __objc_const:000000010003E618↓o
                                        ; __objc_selrefs:selRef_setIsUSBRR_PS_classic_↓o
sel_setIsloadData_ db 'setIsloadData:',0
                                        ; DATA XREF: __objc_const:0000000100040800↓o
                                        ; __objc_selrefs:selRef_setIsloadData_↓o
sel_setKeyValues_ db 'setKeyValues:',0  ; DATA XREF: __objc_const:0000000100042920↓o
sel_setKeyValues_context_ db 'setKeyValues:context:',0
                                        ; DATA XREF: __objc_const:0000000100042950↓o
sel_setKeyValues_context_error_ db 'setKeyValues:context:error:',0
                                        ; DATA XREF: __objc_const:0000000100042968↓o
sel_setKeyValues_error_ db 'setKeyValues:error:',0
                                        ; DATA XREF: __objc_const:0000000100042938↓o
sel_setLastProgress_ db 'setLastProgress:',0
                                        ; DATA XREF: __objc_const:000000010003E648↓o
                                        ; __objc_selrefs:selRef_setLastProgress_↓o
sel_setLastTimer_ db 'setLastTimer:',0  ; DATA XREF: __objc_const:0000000100040B18↓o
                                        ; __objc_selrefs:selRef_setLastTimer_↓o
sel_setLaunchPath_ db 'setLaunchPath:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setLaunchPath_↓o
sel_setLeftButton_ db 'setLeftButton:',0
                                        ; DATA XREF: __objc_const:0000000100040950↓o
                                        ; __objc_selrefs:selRef_setLeftButton_↓o
sel_setLine_    db 'setLine:',0         ; DATA XREF: __objc_const:0000000100043710↓o
                                        ; __objc_selrefs:selRef_setLine_↓o
sel_setLineBreakMode_ db 'setLineBreakMode:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setLineBreakMode_↓o
sel_setList_    db 'setList:',0         ; DATA XREF: __objc_const:0000000100046528↓o
sel_setM_backgroundColor_ db 'setM_backgroundColor:',0
                                        ; DATA XREF: __objc_const:0000000100042DC0↓o
                                        ; __objc_selrefs:selRef_setM_backgroundColor_↓o
sel_setM_highlightColor_ db 'setM_highlightColor:',0
                                        ; DATA XREF: __objc_const:0000000100042DD8↓o
                                        ; __objc_selrefs:selRef_setM_highlightColor_↓o
sel_setM_progress_ db 'setM_progress:',0
                                        ; DATA XREF: __objc_const:0000000100042D90↓o
                                        ; __objc_selrefs:selRef_setM_progress_↓o
sel_setM_title_ db 'setM_title:',0      ; DATA XREF: __objc_const:0000000100042DA8↓o
                                        ; __objc_selrefs:selRef_setM_title_↓o
sel_setM_titleColor_ db 'setM_titleColor:',0
                                        ; DATA XREF: __objc_const:0000000100042DF0↓o
                                        ; __objc_selrefs:selRef_setM_titleColor_↓o
sel_setM_titleHighlighColor_ db 'setM_titleHighlighColor:',0
                                        ; DATA XREF: __objc_const:0000000100042E08↓o
                                        ; __objc_selrefs:selRef_setM_titleHighlighColor_↓o
sel_setM_tmpTitleColor_ db 'setM_tmpTitleColor:',0
                                        ; DATA XREF: __objc_const:0000000100042F40↓o
                                        ; __objc_selrefs:selRef_setM_tmpTitleColor_↓o
sel_setM_tmpbg_ db 'setM_tmpbg:',0      ; DATA XREF: __objc_const:0000000100042F10↓o
                                        ; __objc_selrefs:selRef_setM_tmpbg_↓o
sel_setMainImageView_ db 'setMainImageView:',0
                                        ; DATA XREF: __objc_const:0000000100045DF0↓o
                                        ; __objc_selrefs:selRef_setMainImageView_↓o
sel_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ db 'setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:',0
                                        ; DATA XREF: __objc_const:0000000100045D60↓o
                                        ; __objc_selrefs:selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_↓o
sel_setManualView_ db 'setManualView:',0
                                        ; DATA XREF: __objc_const:0000000100040AB8↓o
sel_setMasksToBounds_ db 'setMasksToBounds:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setMasksToBounds_↓o
sel_setMiniImageName_ db 'setMiniImageName:',0
                                        ; DATA XREF: __objc_const:000000010003EB00↓o
sel_setMiniImageView_ db 'setMiniImageView:',0
                                        ; DATA XREF: __objc_const:0000000100040680↓o
                                        ; __objc_selrefs:selRef_setMiniImageView_↓o
sel_setMiniRRImageView_ db 'setMiniRRImageView:',0
                                        ; DATA XREF: __objc_const:00000001000406B0↓o
                                        ; __objc_selrefs:selRef_setMiniRRImageView_↓o
sel_setMj_error_ db 'setMj_error:',0    ; DATA XREF: __objc_const:00000001000422F8↓o
                                        ; __objc_selrefs:selRef_setMj_error_↓o
sel_setMoreImage_ db 'setMoreImage:',0  ; DATA XREF: __objc_const:000000010003EB60↓o
sel_setMoreImagehighlight_ db 'setMoreImagehighlight:',0
                                        ; DATA XREF: __objc_const:000000010003EB30↓o
sel_setMoreMenuItemAction_ db 'setMoreMenuItemAction:',0
                                        ; DATA XREF: __objc_const:0000000100044C98↓o
                                        ; __objc_selrefs:selRef_setMoreMenuItemAction_↓o
sel_setMoreMenuItemSelf_ db 'setMoreMenuItemSelf:',0
                                        ; DATA XREF: __objc_const:0000000100044C80↓o
                                        ; __objc_selrefs:selRef_setMoreMenuItemSelf_↓o
sel_setMoreS8BitdoDatails_ db 'setMoreS8BitdoDatails:',0
                                        ; DATA XREF: __objc_const:0000000100043770↓o
                                        ; __objc_selrefs:selRef_setMoreS8BitdoDatails_↓o
sel_setMoreScrollView_ db 'setMoreScrollView:',0
                                        ; DATA XREF: __objc_const:0000000100043740↓o
                                        ; __objc_selrefs:selRef_setMoreScrollView_↓o
sel_setMoreView_ db 'setMoreView:',0    ; DATA XREF: __objc_const:000000010003E260↓o
sel_setMsgState_ db 'setMsgState:',0    ; DATA XREF: __objc_const:00000001000464C8↓o
sel_setName_    db 'setName:',0         ; DATA XREF: __objc_const:000000010003EA40↓o
                                        ; __objc_const:0000000100042030↓o ...
sel_setNeedsDisplay_ db 'setNeedsDisplay:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setNeedsDisplay_↓o
sel_setObject_atIndexedSubscript_ db 'setObject:atIndexedSubscript:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setObject_atIndexedSubscript_↓o
sel_setObject_forKey_ db 'setObject:forKey:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setObject_forKey_↓o
sel_setObject_forKeyedSubscript_ db 'setObject:forKeyedSubscript:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setObject_forKeyedSubscript_↓o
sel_setObjectClassInArrayDict_ db 'setObjectClassInArrayDict:',0
                                        ; DATA XREF: __objc_const:0000000100044F60↓o
sel_setOffset_  db 'setOffset:',0       ; DATA XREF: __objc_const:000000010003F3C8↓o
                                        ; __objc_selrefs:selRef_setOffset_↓o
sel_setOkButton_ db 'setOkButton:',0    ; DATA XREF: __objc_const:00000001000433C0↓o
                                        ; __objc_selrefs:selRef_setOkButton_↓o
sel_setOneHintLabel_ db 'setOneHintLabel:',0
                                        ; DATA XREF: __objc_const:0000000100045E20↓o
                                        ; __objc_selrefs:selRef_setOneHintLabel_↓o
sel_setOrder_   db 'setOrder:',0        ; DATA XREF: __objc_const:000000010003EB90↓o
sel_setOriginKey_forClass_ db 'setOriginKey:forClass:',0
                                        ; DATA XREF: __objc_const:0000000100044E28↓o
                                        ; __objc_selrefs:selRef_setOriginKey_forClass_↓o
sel_setPfile_   db 'setPfile:',0        ; DATA XREF: __objc_const:000000010003F308↓o
                                        ; __objc_const:00000001000458E0↓o ...
sel_setPorpertyKeys_forClass_ db 'setPorpertyKeys:forClass:',0
                                        ; DATA XREF: __objc_const:0000000100044E40↓o
                                        ; __objc_selrefs:selRef_setPorpertyKeys_forClass_↓o
sel_setPro2ApplicationEncodeId db 'setPro2ApplicationEncodeId',0
                                        ; DATA XREF: __objc_const:000000010003F158↓o
                                        ; __objc_selrefs:selRef_setPro2ApplicationEncodeId↓o
sel_setPro2Version db 'setPro2Version',0
                                        ; DATA XREF: __objc_const:000000010003F1A0↓o
                                        ; __objc_selrefs:selRef_setPro2Version↓o
sel_setProgress_ db 'setProgress:',0    ; DATA XREF: __objc_const:0000000100040830↓o
                                        ; __objc_selrefs:selRef_setProgress_↓o
sel_setProperty_ db 'setProperty:',0    ; DATA XREF: __objc_const:0000000100044DC8↓o
                                        ; __objc_selrefs:selRef_setProperty_↓o
sel_setPropertyKeysDict_ db 'setPropertyKeysDict:',0
                                        ; DATA XREF: __objc_const:0000000100044F30↓o
sel_setReadme_  db 'setReadme:',0       ; DATA XREF: __objc_const:00000001000467C8↓o
sel_setReadme_en_ db 'setReadme_en:',0  ; DATA XREF: __objc_const:0000000100046768↓o
sel_setReloadButton_ db 'setReloadButton:',0
                                        ; DATA XREF: __objc_const:0000000100040860↓o
                                        ; __objc_selrefs:selRef_setReloadButton_↓o
sel_setSBackgroundColor_ db 'setSBackgroundColor:',0
                                        ; DATA XREF: __objc_const:000000010003E858↓o
sel_setSavePath_ db 'setSavePath:',0    ; DATA XREF: __objc_const:0000000100040A10↓o
                                        ; __objc_selrefs:selRef_setSavePath_↓o
sel_setScrollView_ db 'setScrollView:',0
                                        ; DATA XREF: __objc_const:0000000100040740↓o
                                        ; __objc_selrefs:selRef_setScrollView_↓o
sel_setSelectButton_ db 'setSelectButton:',0
                                        ; DATA XREF: __objc_const:00000001000409E0↓o
                                        ; __objc_selrefs:selRef_setSelectButton_↓o
sel_setSelectable_ db 'setSelectable:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setSelectable_↓o
sel_setShidBoot_ db 'setShidBoot:',0    ; DATA XREF: __objc_const:0000000100040A40↓o
                                        ; __objc_selrefs:selRef_setShidBoot_↓o
sel_setSparkleLanguage db 'setSparkleLanguage',0
                                        ; DATA XREF: __objc_const:0000000100041DC8↓o
                                        ; __objc_selrefs:selRef_setSparkleLanguage↓o
sel_setSrcClass_ db 'setSrcClass:',0    ; DATA XREF: __objc_const:0000000100044F00↓o
                                        ; __objc_selrefs:selRef_setSrcClass_↓o
sel_setStandardInput_ db 'setStandardInput:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setStandardInput_↓o
sel_setStandardOutput_ db 'setStandardOutput:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setStandardOutput_↓o
sel_setState_   db 'setState:',0        ; DATA XREF: __objc_const:00000001000400C8↓o
                                        ; __objc_const:0000000100043C80↓o ...
sel_setString_  db 'setString:',0       ; DATA XREF: __objc_selrefs:selRef_setString_↓o
sel_setStyle_   db 'setStyle:',0        ; DATA XREF: __objc_selrefs:selRef_setStyle_↓o
sel_setSubImageView_ db 'setSubImageView:',0
                                        ; DATA XREF: __objc_const:0000000100045EB0↓o
                                        ; __objc_selrefs:selRef_setSubImageView_↓o
sel_setSubmainImageView_ db 'setSubmainImageView:',0
                                        ; DATA XREF: __objc_const:0000000100045EE0↓o
                                        ; __objc_selrefs:selRef_setSubmainImageView_↓o
sel_setSubsubImageView_ db 'setSubsubImageView:',0
                                        ; DATA XREF: __objc_const:0000000100045F10↓o
                                        ; __objc_selrefs:selRef_setSubsubImageView_↓o
sel_setSwitchAndMac_ db 'setSwitchAndMac:',0
                                        ; DATA XREF: __objc_const:000000010003E1D0↓o
                                        ; __objc_selrefs:selRef_setSwitchAndMac_↓o
sel_setTarget_  db 'setTarget:',0       ; DATA XREF: __objc_selrefs:selRef_setTarget_↓o
sel_setTextColor_ db 'setTextColor:',0  ; DATA XREF: __objc_selrefs:selRef_setTextColor_↓o
sel_setThreeHintLabel_ db 'setThreeHintLabel:',0
                                        ; DATA XREF: __objc_const:0000000100045E80↓o
                                        ; __objc_selrefs:selRef_setThreeHintLabel_↓o
sel_setTimeoutInterval_ db 'setTimeoutInterval:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setTimeoutInterval_↓o
sel_setTitle_   db 'setTitle:',0        ; DATA XREF: __objc_const:0000000100043360↓o
                                        ; __objc_const:00000001000436E0↓o ...
sel_setTwoHintLabel_ db 'setTwoHintLabel:',0
                                        ; DATA XREF: __objc_const:0000000100045E50↓o
                                        ; __objc_selrefs:selRef_setTwoHintLabel_↓o
sel_setType_    db 'setType:',0         ; DATA XREF: __objc_const:000000010003EAD0↓o
                                        ; __objc_const:0000000100042060↓o ...
sel_setUI       db 'setUI',0            ; DATA XREF: __objc_const:0000000100045D48↓o
                                        ; __objc_selrefs:selRef_setUI↓o
sel_setUpdateButton_ db 'setUpdateButton:',0
                                        ; DATA XREF: __objc_const:0000000100040920↓o
                                        ; __objc_selrefs:selRef_setUpdateButton_↓o
sel_setUpdateFirmwaers_ db 'setUpdateFirmwaers:',0
                                        ; DATA XREF: __objc_const:00000001000409B0↓o
                                        ; __objc_selrefs:selRef_setUpdateFirmwaers_↓o
sel_setUpdateView_ db 'setUpdateView:',0
                                        ; DATA XREF: __objc_const:000000010003E218↓o
sel_setUpdater_ db 'setUpdater:',0      ; DATA XREF: __objc_const:0000000100041E88↓o
                                        ; __objc_selrefs:selRef_setUpdater_↓o
sel_setUsbView_ db 'setUsbView:',0      ; DATA XREF: __objc_const:0000000100043E78↓o
sel_setValue_forHTTPHeaderField_ db 'setValue:forHTTPHeaderField:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setValue_forHTTPHeaderField_↓o
sel_setValue_forKey_ db 'setValue:forKey:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setValue_forKey_↓o
sel_setValue_forObject_ db 'setValue:forObject:',0
                                        ; DATA XREF: __objc_const:0000000100044DF8↓o
                                        ; __objc_selrefs:selRef_setValue_forObject_↓o
sel_setVersion_ db 'setVersion:',0      ; DATA XREF: __objc_const:000000010003D418↓o
                                        ; __objc_const:0000000100046858↓o ...
sel_setViews_   db 'setViews:',0        ; DATA XREF: __objc_const:000000010003E290↓o
                                        ; __objc_selrefs:selRef_setViews_↓o
sel_setWantsLayer_ db 'setWantsLayer:',0
                                        ; DATA XREF: __objc_selrefs:selRef_setWantsLayer_↓o
sel_setminiImageposition_ db 'setminiImageposition:',0
                                        ; DATA XREF: __objc_const:00000001000400F8↓o
                                        ; __objc_selrefs:selRef_setminiImageposition_↓o
sel_setupNewValueFromOldValue_ db 'setupNewValueFromOldValue:',0
                                        ; DATA XREF: __objc_const:0000000100045C10↓o
sel_setupObjectClassInArray_ db 'setupObjectClassInArray:',0
                                        ; DATA XREF: __objc_const:0000000100045C70↓o
sel_setupReplacedKeyFromPropertyName121_ db 'setupReplacedKeyFromPropertyName121:',0
                                        ; DATA XREF: __objc_const:0000000100045C58↓o
sel_setupReplacedKeyFromPropertyName_ db 'setupReplacedKeyFromPropertyName:',0
                                        ; DATA XREF: __objc_const:0000000100045C40↓o
sel_setupUpdater db 'setupUpdater',0    ; DATA XREF: __objc_const:0000000100041DB0↓o
                                        ; __objc_selrefs:selRef_setupUpdater↓o
sel_shared      db 'shared',0           ; DATA XREF: __objc_const:0000000100041600↓o
                                        ; __objc_selrefs:selRef_shared↓o
sel_sharedApplication db 'sharedApplication',0
                                        ; DATA XREF: __objc_selrefs:selRef_sharedApplication↓o
sel_sharedInstance db 'sharedInstance',0
                                        ; DATA XREF: __objc_const:000000010003EEB0↓o
                                        ; __objc_const:0000000100045680↓o ...
sel_sharedSession db 'sharedSession',0  ; DATA XREF: __objc_selrefs:selRef_sharedSession↓o
sel_shidBoot    db 'shidBoot',0         ; DATA XREF: __objc_const:0000000100040A28↓o
                                        ; __objc_const:0000000100041128↓o ...
sel_showAndHideBackButton db 'showAndHideBackButton',0
                                        ; DATA XREF: __objc_const:000000010003DFD8↓o
                                        ; __objc_selrefs:selRef_showAndHideBackButton↓o
sel_showLogClick_ db 'showLogClick:',0  ; DATA XREF: __objc_const:0000000100040398↓o
                                        ; __objc_selrefs:selRef_showLogClick_↓o
sel_sizeAtPath_ db 'sizeAtPath:',0      ; DATA XREF: __objc_const:000000010003F200↓o
sel_sizeToFit   db 'sizeToFit',0        ; DATA XREF: __objc_selrefs:selRef_sizeToFit↓o
sel_sizeWithAttributes_ db 'sizeWithAttributes:',0
                                        ; DATA XREF: __objc_selrefs:selRef_sizeWithAttributes_↓o
sel_sortUsingComparator_ db 'sortUsingComparator:',0
                                        ; DATA XREF: __objc_selrefs:selRef_sortUsingComparator_↓o
sel_srcClass    db 'srcClass',0         ; DATA XREF: __objc_const:0000000100044EE8↓o
                                        ; __objc_const:00000001000450B0↓o ...
sel_standardUserDefaults db 'standardUserDefaults',0
                                        ; DATA XREF: __objc_selrefs:selRef_standardUserDefaults↓o
sel_startUpdate db 'startUpdate',0      ; DATA XREF: __objc_const:00000001000457C0↓o
sel_state       db 'state',0            ; DATA XREF: __objc_const:00000001000405F0↓o
                                        ; __objc_const:0000000100041198↓o ...
sel_string      db 'string',0           ; DATA XREF: __objc_selrefs:selRef_string↓o
sel_stringByAppendingFormat_ db 'stringByAppendingFormat:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringByAppendingFormat_↓o
sel_stringByAppendingString_ db 'stringByAppendingString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringByAppendingString_↓o
sel_stringByReplacingOccurrencesOfString_withString_ db 'stringByReplacingOccurrencesOfString:withString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringByReplacingOccurrencesOfString_withString_↓o
sel_stringForKey_ db 'stringForKey:',0  ; DATA XREF: __objc_selrefs:selRef_stringForKey_↓o
sel_stringValue db 'stringValue',0      ; DATA XREF: __objc_selrefs:selRef_stringValue↓o
sel_stringWithCString_encoding_ db 'stringWithCString:encoding:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringWithCString_encoding_↓o
sel_stringWithCapacity_ db 'stringWithCapacity:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringWithCapacity_↓o
sel_stringWithFormat_ db 'stringWithFormat:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringWithFormat_↓o
sel_stringWithString_ db 'stringWithString:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringWithString_↓o
sel_stringWithUTF8String_ db 'stringWithUTF8String:',0
                                        ; DATA XREF: __objc_selrefs:selRef_stringWithUTF8String_↓o
sel_subImageView db 'subImageView',0    ; DATA XREF: __objc_const:0000000100045E98↓o
                                        ; __objc_const:00000001000460F0↓o ...
sel_submainImageView db 'submainImageView',0
                                        ; DATA XREF: __objc_const:0000000100045EC8↓o
                                        ; __objc_const:0000000100046100↓o ...
sel_substringFromIndex_ db 'substringFromIndex:',0
                                        ; DATA XREF: __objc_selrefs:selRef_substringFromIndex_↓o
sel_substringToIndex_ db 'substringToIndex:',0
                                        ; DATA XREF: __objc_selrefs:selRef_substringToIndex_↓o
sel_substringWithRange_ db 'substringWithRange:',0
                                        ; DATA XREF: __objc_selrefs:selRef_substringWithRange_↓o
sel_subviews    db 'subviews',0         ; DATA XREF: __objc_selrefs:selRef_subviews↓o
sel_superclass  db 'superclass',0       ; DATA XREF: __objc_const:000000010003DC18↓o
                                        ; __objc_const:000000010003DC80↓o ...
sel_superview   db 'superview',0        ; DATA XREF: __objc_selrefs:selRef_superview↓o
sel_switchAndMac db 'switchAndMac',0    ; DATA XREF: __objc_const:000000010003E1B8↓o
                                        ; __objc_const:000000010003E400↓o ...
sel_switchBoot  db 'switchBoot',0       ; DATA XREF: __objc_const:00000001000402C0↓o
                                        ; __objc_selrefs:selRef_switchBoot↓o
sel_synchronize db 'synchronize',0      ; DATA XREF: __objc_selrefs:selRef_synchronize↓o
sel_systemFontOfSize_ db 'systemFontOfSize:',0
                                        ; DATA XREF: __objc_selrefs:selRef_systemFontOfSize_↓o
sel_terminate_  db 'terminate:',0       ; DATA XREF: __objc_selrefs:selRef_terminate_↓o
sel_textDidBeginEditing_ db 'textDidBeginEditing:',0
                                        ; DATA XREF: __objc_const:000000010003F940↓o
sel_textDidChange_ db 'textDidChange:',0
                                        ; DATA XREF: __objc_const:000000010003F970↓o
sel_textDidEndEditing_ db 'textDidEndEditing:',0
                                        ; DATA XREF: __objc_const:000000010003F958↓o
sel_textShouldBeginEditing_ db 'textShouldBeginEditing:',0
                                        ; DATA XREF: __objc_const:000000010003F910↓o
sel_textShouldEndEditing_ db 'textShouldEndEditing:',0
                                        ; DATA XREF: __objc_const:000000010003F928↓o
sel_textView_URLForContentsOfTextAttachment_atIndex_ db 'textView:URLForContentsOfTextAttachment:atIndex:',0
                                        ; DATA XREF: __objc_const:000000010003FBB0↓o
sel_textView_candidates_forSelectedRange_ db 'textView:candidates:forSelectedRange:',0
                                        ; DATA XREF: __objc_const:000000010003FC28↓o
sel_textView_candidatesForSelectedRange_ db 'textView:candidatesForSelectedRange:',0
                                        ; DATA XREF: __objc_const:000000010003FC10↓o
sel_textView_clickedOnCell_inRect_ db 'textView:clickedOnCell:inRect:',0
                                        ; DATA XREF: __objc_const:000000010003FCB8↓o
sel_textView_clickedOnCell_inRect_atIndex_ db 'textView:clickedOnCell:inRect:atIndex:',0
                                        ; DATA XREF: __objc_const:000000010003F9E8↓o
sel_textView_clickedOnLink_ db 'textView:clickedOnLink:',0
                                        ; DATA XREF: __objc_const:000000010003FCA0↓o
sel_textView_completions_forPartialWordRange_indexOfSelectedItem_ db 'textView:completions:forPartialWordRange:indexOfSelectedItem:',0
                                        ; DATA XREF: __objc_const:000000010003FB08↓o
sel_textView_didCheckTextInRange_types_options_results_orthography_wordCount_ db 'textView:didCheckTextInRange:types:options:results:orthography:wo'
                                        ; DATA XREF: __objc_const:000000010003FB98↓o
                db 'rdCount:',0
sel_textView_doCommandBySelector_ db 'textView:doCommandBySelector:',0
                                        ; DATA XREF: __objc_const:000000010003FB38↓o
sel_textView_doubleClickedOnCell_inRect_ db 'textView:doubleClickedOnCell:inRect:',0
                                        ; DATA XREF: __objc_const:000000010003FCD0↓o
sel_textView_doubleClickedOnCell_inRect_atIndex_ db 'textView:doubleClickedOnCell:inRect:atIndex:',0
                                        ; DATA XREF: __objc_const:000000010003FA00↓o
sel_textView_draggedCell_inRect_event_ db 'textView:draggedCell:inRect:event:',0
                                        ; DATA XREF: __objc_const:000000010003FCE8↓o
sel_textView_draggedCell_inRect_event_atIndex_ db 'textView:draggedCell:inRect:event:atIndex:',0
                                        ; DATA XREF: __objc_const:000000010003FA18↓o
sel_textView_shouldChangeTextInRange_replacementString_ db 'textView:shouldChangeTextInRange:replacementString:',0
                                        ; DATA XREF: __objc_const:000000010003FB20↓o
sel_textView_shouldChangeTextInRanges_replacementStrings_ db 'textView:shouldChangeTextInRanges:replacementStrings:',0
                                        ; DATA XREF: __objc_const:000000010003FA90↓o
sel_textView_shouldChangeTypingAttributes_toAttributes_ db 'textView:shouldChangeTypingAttributes:toAttributes:',0
                                        ; DATA XREF: __objc_const:000000010003FAA8↓o
sel_textView_shouldSelectCandidateAtIndex_ db 'textView:shouldSelectCandidateAtIndex:',0
                                        ; DATA XREF: __objc_const:000000010003FC40↓o
sel_textView_shouldSetSpellingState_range_ db 'textView:shouldSetSpellingState:range:',0
                                        ; DATA XREF: __objc_const:000000010003FB50↓o
sel_textView_shouldUpdateTouchBarItemIdentifiers_ db 'textView:shouldUpdateTouchBarItemIdentifiers:',0
                                        ; DATA XREF: __objc_const:000000010003FBF8↓o
sel_textView_willChangeSelectionFromCharacterRange_toCharacterRange_ db 'textView:willChangeSelectionFromCharacterRange:toCharacterRange:',0
                                        ; DATA XREF: __objc_const:000000010003FA60↓o
sel_textView_willChangeSelectionFromCharacterRanges_toCharacterRanges_ db 'textView:willChangeSelectionFromCharacterRanges:toCharacterRanges'
                                        ; DATA XREF: __objc_const:000000010003FA78↓o
                db ':',0
sel_textView_willCheckTextInRange_options_types_ db 'textView:willCheckTextInRange:options:types:',0
                                        ; DATA XREF: __objc_const:000000010003FB80↓o
sel_textView_willDisplayToolTip_forCharacterAtIndex_ db 'textView:willDisplayToolTip:forCharacterAtIndex:',0
                                        ; DATA XREF: __objc_const:000000010003FAF0↓o
sel_textView_willShowSharingServicePicker_forItems_ db 'textView:willShowSharingServicePicker:forItems:',0
                                        ; DATA XREF: __objc_const:000000010003FBC8↓o
sel_textView_writablePasteboardTypesForCell_atIndex_ db 'textView:writablePasteboardTypesForCell:atIndex:',0
                                        ; DATA XREF: __objc_const:000000010003FA30↓o
sel_textView_writeCell_atIndex_toPasteboard_type_ db 'textView:writeCell:atIndex:toPasteboard:type:',0
                                        ; DATA XREF: __objc_const:000000010003FA48↓o
sel_textView_writingToolsIgnoredRangesInEnclosingRange_ db 'textView:writingToolsIgnoredRangesInEnclosingRange:',0
                                        ; DATA XREF: __objc_const:000000010003FC88↓o
sel_textViewDidChangeSelection_ db 'textViewDidChangeSelection:',0
                                        ; DATA XREF: __objc_const:000000010003FAC0↓o
sel_textViewDidChangeTypingAttributes_ db 'textViewDidChangeTypingAttributes:',0
                                        ; DATA XREF: __objc_const:000000010003FAD8↓o
sel_textViewWritingToolsDidEnd_ db 'textViewWritingToolsDidEnd:',0
                                        ; DATA XREF: __objc_const:000000010003FC70↓o
sel_textViewWritingToolsWillBegin_ db 'textViewWritingToolsWillBegin:',0
                                        ; DATA XREF: __objc_const:000000010003FC58↓o
sel_threeHintLabel db 'threeHintLabel',0
                                        ; DATA XREF: __objc_const:0000000100045E68↓o
                                        ; __objc_const:00000001000460E0↓o ...
sel_timeIntervalSince1970 db 'timeIntervalSince1970',0
                                        ; DATA XREF: __objc_selrefs:selRef_timeIntervalSince1970↓o
sel_timerOut    db 'timerOut',0         ; DATA XREF: __objc_const:0000000100040440↓o
                                        ; __objc_selrefs:selRef_timerOut↓o
sel_timerWithTimeInterval_target_selector_userInfo_repeats_ db 'timerWithTimeInterval:target:selector:userInfo:repeats:',0
                                        ; DATA XREF: __objc_selrefs:selRef_timerWithTimeInterval_target_selector_userInfo_repeats_↓o
sel_title       db 'title',0            ; DATA XREF: __objc_const:0000000100043348↓o
                                        ; __objc_const:00000001000434A0↓o ...
sel_titleString db 'titleString',0      ; DATA XREF: __objc_const:0000000100043318↓o
                                        ; __objc_const:00000001000434D0↓o
sel_trackingAreas db 'trackingAreas',0  ; DATA XREF: __objc_selrefs:selRef_trackingAreas↓o
sel_twoHintLabel db 'twoHintLabel',0    ; DATA XREF: __objc_const:0000000100045E38↓o
                                        ; __objc_const:00000001000460D0↓o ...
sel_type        db 'type',0             ; DATA XREF: __objc_const:000000010003EAB8↓o
                                        ; __objc_const:000000010003ED00↓o ...
sel_typeClass   db 'typeClass',0        ; DATA XREF: __objc_const:0000000100043A28↓o
                                        ; __objc_const:0000000100043BB8↓o ...
sel_underlineFromCamel db 'underlineFromCamel',0
                                        ; DATA XREF: __objc_data:0000000100049030↓o
sel_undoManagerForTextView_ db 'undoManagerForTextView:',0
                                        ; DATA XREF: __objc_const:000000010003FBE0↓o
sel_updateButton db 'updateButton',0    ; DATA XREF: __objc_const:0000000100040908↓o
                                        ; __objc_const:00000001000410C8↓o ...
sel_updateClick db 'updateClick',0      ; DATA XREF: __objc_const:000000010003E008↓o
                                        ; __objc_selrefs:selRef_updateClick↓o
sel_updateJL_   db 'updateJL:',0        ; DATA XREF: __objc_const:000000010003F068↓o
                                        ; __objc_selrefs:selRef_updateJL_↓o
sel_updateLanguage db 'updateLanguage',0
                                        ; DATA XREF: __objc_const:0000000100041DF8↓o
sel_updateStateDowmFirmwaerFile db 'updateStateDowmFirmwaerFile',0
                                        ; DATA XREF: __objc_const:00000001000403F8↓o
                                        ; __objc_selrefs:selRef_updateStateDowmFirmwaerFile↓o
sel_updateStateFindNewVersionDowmFirmwaerFile db 'updateStateFindNewVersionDowmFirmwaerFile',0
                                        ; DATA XREF: __objc_const:00000001000403E0↓o
                                        ; __objc_selrefs:selRef_updateStateFindNewVersionDowmFirmwaerFile↓o
sel_updateTimer db 'updateTimer',0      ; DATA XREF: __objc_const:0000000100040AD0↓o
                                        ; __objc_const:0000000100041168↓o ...
sel_updateTrackingAreas db 'updateTrackingAreas',0
                                        ; DATA XREF: __objc_const:00000001000412C0↓o
                                        ; __objc_const:0000000100042D18↓o ...
sel_updateView  db 'updateView',0       ; DATA XREF: __objc_const:000000010003DF48↓o
                                        ; __objc_const:000000010003E420↓o ...
sel_updateingError db 'updateingError',0
                                        ; DATA XREF: __objc_const:0000000100040578↓o
                                        ; __objc_selrefs:selRef_updateingError↓o
sel_updater_didAbortWithError_ db 'updater:didAbortWithError:',0
                                        ; DATA XREF: __objc_const:0000000100041BC8↓o
sel_updater_didDownloadUpdate_ db 'updater:didDownloadUpdate:',0
                                        ; DATA XREF: __objc_const:0000000100041A78↓o
sel_updater_didExtractUpdate_ db 'updater:didExtractUpdate:',0
                                        ; DATA XREF: __objc_const:0000000100041AD8↓o
sel_updater_didFindValidUpdate_ db 'updater:didFindValidUpdate:',0
                                        ; DATA XREF: __objc_const:00000001000419B8↓o
sel_updater_didFinishLoadingAppcast_ db 'updater:didFinishLoadingAppcast:',0
                                        ; DATA XREF: __objc_const:00000001000419A0↓o
sel_updater_didFinishUpdateCycleForUpdateCheck_error_ db 'updater:didFinishUpdateCycleForUpdateCheck:error:',0
                                        ; DATA XREF: __objc_const:0000000100041BE0↓o
sel_updater_failedToDownloadUpdate_error_ db 'updater:failedToDownloadUpdate:error:',0
                                        ; DATA XREF: __objc_const:0000000100041A90↓o
sel_updater_mayPerformUpdateCheck_error_ db 'updater:mayPerformUpdateCheck:error:',0
                                        ; DATA XREF: __objc_const:0000000100041910↓o
sel_updater_shouldDownloadReleaseNotesForUpdate_ db 'updater:shouldDownloadReleaseNotesForUpdate:',0
                                        ; DATA XREF: __objc_const:0000000100041A48↓o
sel_updater_shouldPostponeRelaunchForUpdate_untilInvokingBlock_ db 'updater:shouldPostponeRelaunchForUpdate:untilInvokingBlock:',0
                                        ; DATA XREF: __objc_const:0000000100041B08↓o
sel_updater_shouldProceedWithUpdate_updateCheck_error_ db 'updater:shouldProceedWithUpdate:updateCheck:error:',0
                                        ; DATA XREF: __objc_const:0000000100041A18↓o
sel_updater_userDidMakeChoice_forUpdate_state_ db 'updater:userDidMakeChoice:forUpdate:state:',0
                                        ; DATA XREF: __objc_const:0000000100041A30↓o
sel_updater_willDownloadUpdate_withRequest_ db 'updater:willDownloadUpdate:withRequest:',0
                                        ; DATA XREF: __objc_const:0000000100041A60↓o
sel_updater_willExtractUpdate_ db 'updater:willExtractUpdate:',0
                                        ; DATA XREF: __objc_const:0000000100041AC0↓o
sel_updater_willInstallUpdate_ db 'updater:willInstallUpdate:',0
                                        ; DATA XREF: __objc_const:0000000100041AF0↓o
sel_updater_willInstallUpdateOnQuit_immediateInstallationBlock_ db 'updater:willInstallUpdateOnQuit:immediateInstallationBlock:',0
                                        ; DATA XREF: __objc_const:0000000100041BB0↓o
sel_updater_willScheduleUpdateCheckAfterDelay_ db 'updater:willScheduleUpdateCheckAfterDelay:',0
                                        ; DATA XREF: __objc_const:0000000100041B68↓o
sel_updaterDidNotFindUpdate_ db 'updaterDidNotFindUpdate:',0
                                        ; DATA XREF: __objc_const:00000001000419E8↓o
sel_updaterDidNotFindUpdate_error_ db 'updaterDidNotFindUpdate:error:',0
                                        ; DATA XREF: __objc_const:00000001000419D0↓o
sel_updaterMayCheckForUpdates_ db 'updaterMayCheckForUpdates:',0
                                        ; DATA XREF: __objc_const:0000000100041BF8↓o
sel_updaterShouldPromptForPermissionToCheckForUpdates_ db 'updaterShouldPromptForPermissionToCheckForUpdates:',0
                                        ; DATA XREF: __objc_const:0000000100041970↓o
sel_updaterShouldRelaunchApplication_ db 'updaterShouldRelaunchApplication:',0
                                        ; DATA XREF: __objc_const:0000000100041B20↓o
sel_updaterWillNotScheduleUpdateCheck_ db 'updaterWillNotScheduleUpdateCheck:',0
                                        ; DATA XREF: __objc_const:0000000100041B80↓o
sel_usbAniamtion db 'usbAniamtion',0    ; DATA XREF: __objc_const:0000000100043CC8↓o
                                        ; __objc_selrefs:selRef_usbAniamtion↓o
sel_userDidCancelDownload_ db 'userDidCancelDownload:',0
                                        ; DATA XREF: __objc_const:0000000100041AA8↓o
sel_utf8ToUnicode_ db 'utf8ToUnicode:',0
                                        ; DATA XREF: __objc_const:000000010003D988↓o
                                        ; __objc_selrefs:selRef_utf8ToUnicode_↓o
sel_valueForKey_ db 'valueForKey:',0    ; DATA XREF: __objc_selrefs:selRef_valueForKey_↓o
sel_valueInObject_ db 'valueInObject:',0
                                        ; DATA XREF: __objc_const:0000000100042000↓o
                                        ; __objc_selrefs:selRef_valueInObject_↓o
sel_versionComparatorForUpdater_ db 'versionComparatorForUpdater:',0
                                        ; DATA XREF: __objc_const:0000000100041B50↓o
sel_verticalScroller db 'verticalScroller',0
                                        ; DATA XREF: __objc_selrefs:selRef_verticalScroller↓o
sel_view        db 'view',0             ; DATA XREF: __objc_selrefs:selRef_view↓o
sel_viewDidHide db 'viewDidHide',0      ; DATA XREF: __objc_const:00000001000401B8↓o
                                        ; __objc_selrefs:selRef_viewDidHide↓o
sel_viewDidLoad db 'viewDidLoad',0      ; DATA XREF: __objc_const:000000010003DF78↓o
                                        ; __objc_selrefs:selRef_viewDidLoad↓o
sel_viewDidUnhide db 'viewDidUnhide',0  ; DATA XREF: __objc_const:00000001000401D0↓o
                                        ; __objc_selrefs:selRef_viewDidUnhide↓o
sel_views       db 'views',0            ; DATA XREF: __objc_const:000000010003E278↓o
                                        ; __objc_const:000000010003E450↓o ...
sel_whiteColor  db 'whiteColor',0       ; DATA XREF: __objc_selrefs:selRef_whiteColor↓o
sel_window      db 'window',0           ; DATA XREF: __objc_selrefs:selRef_window↓o
sel_windowDidLoad db 'windowDidLoad',0  ; DATA XREF: __objc_const:00000001000432B8↓o
                                        ; __objc_selrefs:selRef_windowDidLoad↓o
sel_writeDataCMD_block_ db 'writeDataCMD:block:',0
                                        ; DATA XREF: __objc_const:0000000100045760↓o
                                        ; __objc_selrefs:selRef_writeDataCMD_block_↓o
sel_writeFirmware db 'writeFirmware',0  ; DATA XREF: __objc_const:000000010003F128↓o
                                        ; __objc_selrefs:selRef_writeFirmware↓o
sel_writeFirmwareBLE db 'writeFirmwareBLE',0
                                        ; DATA XREF: __objc_const:000000010003F140↓o
                                        ; __objc_selrefs:selRef_writeFirmwareBLE↓o
sel_writeSave_Head_4K db 'writeSave_Head_4K',0
                                        ; DATA XREF: __objc_const:000000010003F008↓o
                                        ; __objc_selrefs:selRef_writeSave_Head_4K↓o
sel_zone        db 'zone',0             ; DATA XREF: __objc_const:000000010003DBE8↓o
                                        ; __objc_const:000000010003F788↓o ...
__objc_methname ends

; ===========================================================================

; Segment type: Pure data
__objc_classname segment byte public 'DATA' use64
                assume cs:__objc_classname
                ;org 100036715h
aS8bitdodevice  db 'S8BitdoDevice',0    ; DATA XREF: __objc_const:S8BitdoDevice_$metaData↓o
                                        ; __objc_const:S8BitdoDevice_$classData↓o
S8BitdoDevice_$ivarLayout db 31h, 11h, 0
                                        ; DATA XREF: __objc_const:S8BitdoDevice_$classData↓o
unk_100036726   db    0                 ; DATA XREF: __const:000000010003A1B0↓o
                                        ; __const:000000010003A1D0↓o ...
aShttp          db 'SHttp',0            ; DATA XREF: __objc_const:SHttp_$metaData↓o
                                        ; __objc_const:SHttp_$classData↓o
aViewcontroller db 'ViewController',0   ; DATA XREF: __objc_const:ViewController_$metaData↓o
                                        ; __objc_const:ViewController_$classData↓o
aDevicedelegate db 'DeviceDelegate',0   ; DATA XREF: __data:_OBJC_PROTOCOL_$_DeviceDelegate↓o
aNsobject       db 'NSObject',0         ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSObject↓o
aHomeviewdelega db 'HomeViewDelegate',0 ; DATA XREF: __data:_OBJC_PROTOCOL_$_HomeViewDelegate↓o
aMoreviewdelega db 'MoreViewDelegate',0 ; DATA XREF: __data:_OBJC_PROTOCOL_$_MoreViewDelegate↓o
aNsalertdelegat db 'NSAlertDelegate',0  ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSAlertDelegate↓o
aUpdateviewdele db 'UpdateViewDelegat',0
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_UpdateViewDelegat↓o
ViewController_$ivarLayout db 27h, 0    ; DATA XREF: __objc_const:ViewController_$classData↓o
aShidboot_1     db 'SHIDBoot',0         ; DATA XREF: __objc_const:SHIDBoot_$metaData↓o
                                        ; __objc_const:SHIDBoot_$classData↓o
UpDaterManager_$ivarLayout db 2, 0      ; DATA XREF: __objc_const:SHIDBoot_$classData↓o
                                        ; __objc_const:UpDaterManager_$classData↓o
aSview          db 'SView',0            ; DATA XREF: __objc_const:SView_$metaData↓o
                                        ; __objc_const:SView_$classData↓o
SView_$ivarLayout db 1, 0               ; DATA XREF: __objc_const:SView_$classData↓o
aSbackbutton_0  db 'SBackButton',0      ; DATA XREF: __objc_const:SBackButton_$metaData↓o
                                        ; __objc_const:SBackButton_$classData↓o
aS8bitdodatadet db 'S8BitdoDataDetails',0
                                        ; DATA XREF: __objc_const:S8BitdoDataDetails_$metaData↓o
                                        ; __objc_const:S8BitdoDataDetails_$classData↓o
S8BitdoDataDetails_$ivarLayout db 14h, 0
                                        ; DATA XREF: __objc_const:S8BitdoDataDetails_$classData↓o
aS8bitdodeviced db 'S8BitdoDeviceDetailsTools',0
                                        ; DATA XREF: __objc_const:S8BitdoDeviceDetailsTools_$metaData↓o
                                        ; __objc_const:S8BitdoDeviceDetailsTools_$classData↓o
aShidbootpro2   db 'SHIDBootPro2',0     ; DATA XREF: __objc_const:SHIDBootPro2_$metaData↓o
                                        ; __objc_const:SHIDBootPro2_$classData↓o
SHIDBootPro2_$ivarLayout db 43h, 0      ; DATA XREF: __objc_const:SHIDBootPro2_$classData↓o
SHIDBootPro2_$ivarWeakLayout db 31h, 0  ; DATA XREF: __objc_const:SHIDBootPro2_$classData↓o
aUpdateview_1   db 'UpdateView',0       ; DATA XREF: __objc_const:UpdateView_$metaData↓o
                                        ; __objc_const:UpdateView_$classData↓o
aNstextviewdele db 'NSTextViewDelegate',0
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSTextViewDelegate↓o
aNstextdelegate db 'NSTextDelegate',0   ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSTextDelegate↓o
aSbuttondelegat db 'SButtonDelegate',0  ; DATA XREF: __data:_OBJC_PROTOCOL_$_SButtonDelegate↓o
aShidbootdelega db 'SHIDBootDelegate',0 ; DATA XREF: __data:_OBJC_PROTOCOL_$_SHIDBootDelegate↓o
aSminiimageview_0 db 'SMiniImageViewDelegate',0
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SMiniImageViewDelegate↓o
aShidboothjz    db 'SHIDBootHJZ',0      ; DATA XREF: __objc_const:SHIDBootHJZ_$metaData↓o
                                        ; __objc_const:SHIDBootHJZ_$classData↓o ...
UpdateView_$ivarLayout db 51h, 2Fh, 4, 22h, 0
                                        ; DATA XREF: __objc_const:UpdateView_$classData↓o
UpdateView_$ivarWeakLayout db 71h, 0    ; DATA XREF: __objc_const:UpdateView_$classData↓o
aSminiimageview_1 db 'SMiniImageView',0 ; DATA XREF: __objc_const:SMiniImageView_$metaData↓o
                                        ; __objc_const:SMiniImageView_$classData↓o
SHIDBootHJZ_$ivarWeakLayout db 11h, 0   ; DATA XREF: __objc_const:SMiniImageView_$classData↓o
                                        ; __objc_const:MJPropertyKey_$classData↓o ...
aShidswitchandm db 'SHIDSwitchAndMac',0 ; DATA XREF: __objc_const:SHIDSwitchAndMac_$metaData↓o
                                        ; __objc_const:SHIDSwitchAndMac_$classData↓o
aUpdatermanager db 'UpDaterManager',0   ; DATA XREF: __objc_const:UpDaterManager_$metaData↓o
                                        ; __objc_const:UpDaterManager_$classData↓o
aSpuupdaterdele db 'SPUUpdaterDelegate',0
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SPUUpdaterDelegate↓o
aMjpropertykey  db 'MJPropertyKey',0    ; DATA XREF: __objc_const:MJPropertyKey_$metaData↓o
                                        ; __objc_const:MJPropertyKey_$classData↓o
aShidxinput     db 'SHIDXinput',0       ; DATA XREF: __objc_const:SHIDXinput_$metaData↓o
                                        ; __objc_const:SHIDXinput_$classData↓o
a4              db '4`',0               ; DATA XREF: __const:000000010003A610↓o
a5              db '5`',0               ; DATA XREF: __const:000000010003A670↓o
aMjkeyvalue     db 'MJKeyValue',0       ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValue↓o
                                        ; __data:_OBJC_PROTOCOL_$_MJKeyValue↓o
aMjkeyvaluedepr db 'MJKeyValueDeprecated_v_2_5_16',0
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValueDeprecated_v_2_5_16↓o
aSbutton        db 'SButton',0          ; DATA XREF: __objc_const:SButton_$metaData↓o
                                        ; __objc_const:SButton_$classData↓o
SButton_$ivarLayout db 18h, 0           ; DATA XREF: __objc_const:SButton_$classData↓o
aSloadxib       db 'SLoadXIB',0         ; DATA XREF: __objc_const:SLoadXIB_$metaData↓o
                                        ; __objc_const:SLoadXIB_$classData↓o
aFirmwaerupdate_4 db 'FirmwaerUpdateLog',0
                                        ; DATA XREF: __objc_const:FirmwaerUpdateLog_$metaData↓o
                                        ; __objc_const:FirmwaerUpdateLog_$classData↓o
FirmwaerUpdateLog_$ivarLayout db 2, 21h, 0
                                        ; DATA XREF: __objc_const:FirmwaerUpdateLog_$classData↓o
FirmwaerUpdateLog_$ivarWeakLayout db 22h, 0
                                        ; DATA XREF: __objc_const:FirmwaerUpdateLog_$classData↓o
aLanguage       db 'Language',0         ; DATA XREF: __objc_const:Language_$metaData↓o
                                        ; __objc_const:Language_$classData↓o
aMoreview_1     db 'MoreView',0         ; DATA XREF: __objc_const:MoreView_$metaData↓o
                                        ; __objc_const:MoreView_$classData↓o
MoreView_$ivarLayout db 34h, 0          ; DATA XREF: __objc_const:MoreView_$classData↓o
MoreView_$ivarWeakLayout db 21h, 0      ; DATA XREF: __objc_const:MoreView_$classData↓o
aMjpropertytype db 'MJPropertyType',0   ; DATA XREF: __objc_const:MJPropertyType_$metaData↓o
                                        ; __objc_const:MJPropertyType_$classData↓o
FirmwareMessage_$ivarLayout db 12h, 0   ; DATA XREF: __objc_const:MJPropertyType_$classData↓o
                                        ; __objc_const:FirmwareMessage_$classData↓o
aHomeview_2     db 'HomeView',0         ; DATA XREF: __objc_const:HomeView_$metaData↓o
                                        ; __objc_const:HomeView_$classData↓o
HomeView_$ivarLayout db 0A1h, 0         ; DATA XREF: __objc_const:HomeView_$classData↓o
                                        ; __objc_const:SHIDManager_$classData↓o
HomeView_$ivarWeakLayout db 9, 0        ; DATA XREF: __objc_const:HomeView_$classData↓o
aAppdelegate    db 'AppDelegate',0      ; DATA XREF: __objc_const:AppDelegate_$metaData↓o
                                        ; __objc_const:AppDelegate_$classData↓o
aNsapplicationd db 'NSApplicationDelegate',0
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSApplicationDelegate↓o
aSmainmenu      db 'SMainMenu',0        ; DATA XREF: __objc_const:SMainMenu_$metaData↓o
                                        ; __objc_const:SMainMenu_$classData↓o
aMjproperty     db 'MJProperty',0       ; DATA XREF: __objc_const:MJProperty_$metaData↓o
                                        ; __objc_const:MJProperty_$classData↓o
MJProperty_$ivarLayout db 2 dup(12h), 0 ; DATA XREF: __objc_const:MJProperty_$classData↓o
aShiddinput     db 'SHIDDinput',0       ; DATA XREF: __objc_const:SHIDDinput_$metaData↓o
                                        ; __objc_const:SHIDDinput_$classData↓o
aMjcoding       db 'MJCoding',0         ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJCoding↓o
                                        ; __data:_OBJC_PROTOCOL_$_MJCoding↓o
SHIDBootHJZ_$ivarLayout db 23h, 0       ; DATA XREF: __objc_const:SHIDBootHJZ_$classData↓o
aB_0            db '@b',0               ; DATA XREF: __const:000000010003A800↓o
aProperty_1     db 'Property',0         ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_Property↓o
aMjpropertydepr db 'MJPropertyDeprecated_v_2_5_16',0
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJPropertyDeprecated_v_2_5_16↓o
aDevicemanualvi db 'DeviceManualView',0 ; DATA XREF: __objc_const:DeviceManualView_$metaData↓o
                                        ; __objc_const:DeviceManualView_$classData↓o
DeviceManualView_$ivarLayout db 38h, 0  ; DATA XREF: __objc_const:DeviceManualView_$classData↓o
aMjclass        db 'MJClass',0          ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJClass↓o
aMjextension    db 'MJExtension',0      ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSString_$_MJExtension↓o
aMjextensiondep db 'MJExtensionDeprecated_v_2_5_16',0
aSlabel         db 'SLabel',0           ; DATA XREF: __objc_const:SLabel_$metaData↓o
                                        ; __objc_const:SLabel_$classData↓o
aFirmwaremessag db 'FirmwareMessage',0  ; DATA XREF: __objc_const:FirmwareMessage_$metaData↓o
                                        ; __objc_const:FirmwareMessage_$classData↓o
aFirmware       db 'Firmware',0         ; DATA XREF: __objc_const:Firmware_$metaData↓o
                                        ; __objc_const:Firmware_$classData↓o
Firmware_$ivarLayout db 36h, 0          ; DATA XREF: __objc_const:Firmware_$classData↓o
aShidhjz        db 'SHIDHJZ',0          ; DATA XREF: __objc_const:SHIDHJZ_$metaData↓o
                                        ; __objc_const:SHIDHJZ_$classData↓o
asc_100036A45   db '@`',0               ; DATA XREF: __const:000000010003A8B0↓o
aMjfoundation   db 'MJFoundation',0     ; DATA XREF: __objc_const:MJFoundation_$metaData↓o
                                        ; __objc_const:MJFoundation_$classData↓o
aShidmanager    db 'SHIDManager',0      ; DATA XREF: __objc_const:SHIDManager_$metaData↓o
                                        ; __objc_const:SHIDManager_$classData↓o
SHIDManager_$ivarLayout db 0B1h, 0      ; DATA XREF: __objc_const:SHIDManager_$classData↓o
__objc_classname ends

; ===========================================================================

; Segment type: Pure data
__objc_methtype segment byte public 'DATA' use64
                assume cs:__objc_methtype
                ;org 100036A63h
a2008i16        db '@20@0:8i16',0       ; DATA XREF: __objc_const:000000010003D398↓o
a1608           db '@16@0:8',0          ; DATA XREF: __objc_const:000000010003D400↓o
                                        ; __objc_const:000000010003D430↓o ...
aV2008f16       db 'v20@0:8f16',0       ; DATA XREF: __objc_const:000000010003D418↓o
                                        ; __objc_const:0000000100040218↓o ...
aS1608          db 'S16@0:8',0          ; DATA XREF: __objc_const:000000010003D448↓o
                                        ; __objc_const:000000010003D478↓o ...
aV2008s16       db 'v20@0:8S16',0       ; DATA XREF: __objc_const:000000010003D460↓o
                                        ; __objc_const:000000010003D490↓o ...
aF1608          db 'f16@0:8',0          ; DATA XREF: __objc_const:000000010003D4A8↓o
                                        ; __objc_const:0000000100042E38↓o ...
aV240816_0      db 'v24@0:8@16',0       ; DATA XREF: __objc_const:000000010003D508↓o
                                        ; __objc_const:000000010003D5E0↓o ...
aIohiddevice160 db '^{__IOHIDDevice=}16@0:8',0
                                        ; DATA XREF: __objc_const:000000010003D520↓o
                                        ; __objc_const:000000010003F260↓o ...
aV2408Iohiddevi db 'v24@0:8^{__IOHIDDevice=}16',0
                                        ; DATA XREF: __objc_const:000000010003D538↓o
                                        ; __objc_const:000000010003F278↓o ...
aC1608          db 'c16@0:8',0          ; DATA XREF: __objc_const:000000010003D5F8↓o
                                        ; __objc_const:000000010003DB10↓o ...
aV2008c16       db 'v20@0:8c16',0       ; DATA XREF: __objc_const:000000010003D610↓o
                                        ; __objc_const:000000010003E0B0↓o ...
aV1608_0        db 'v16@0:8',0          ; DATA XREF: __objc_const:000000010003D628↓o
                                        ; __objc_const:000000010003DF78↓o ...
aC_3            db 'c',0                ; DATA XREF: __objc_const:000000010003D648↓o
                                        ; __objc_const:000000010003E680↓o ...
aS_0            db 'S',0                ; DATA XREF: __objc_const:000000010003D668↓o
                                        ; __objc_const:000000010003D688↓o ...
asc_100036AF9   db 'f',0                ; DATA XREF: __objc_const:000000010003D728↓o
                                        ; __objc_const:0000000100040B90↓o ...
aNsstring       db '@"NSString"',0      ; DATA XREF: __objc_const:000000010003D748↓o
                                        ; __objc_const:000000010003E700↓o ...
aIohiddevice    db '^{__IOHIDDevice=}',0
                                        ; DATA XREF: __objc_const:000000010003D768↓o
                                        ; __objc_const:000000010003F498↓o ...
aS8bitdodatadet_0 db '@"S8BitdoDataDetails"',0
                                        ; DATA XREF: __objc_const:000000010003D788↓o
aV3608i162028   db 'v36@0:8i16@?20@?28',0
                                        ; DATA XREF: __objc_const:000000010003D8B0↓o
aV4808162432i40 db 'v48@0:8@16@?24@?32i40i44',0
                                        ; DATA XREF: __objc_const:000000010003D8C8↓o
aV4408i16f20i24 db 'v44@0:8i16f20i24@?28@?36',0
                                        ; DATA XREF: __objc_const:000000010003D8E0↓o
aV2408c16i20    db 'v24@0:8c16i20',0    ; DATA XREF: __objc_const:000000010003D8F8↓o
aV2008i16       db 'v20@0:8i16',0       ; DATA XREF: __objc_const:000000010003D910↓o
                                        ; __objc_const:000000010003D928↓o ...
aV2808i1620     db 'v28@0:8i16@20',0    ; DATA XREF: __objc_const:000000010003D940↓o
                                        ; __objc_const:000000010003FEB8↓o ...
a240816         db '@24@0:8@16',0       ; DATA XREF: __objc_const:000000010003D988↓o
                                        ; __objc_const:000000010003D9B8↓o ...
aV40081624q32   db 'v40@0:8@?16@24Q32',0
                                        ; DATA XREF: __objc_const:000000010003D9A0↓o
aC240816        db 'c24@0:8@16',0       ; DATA XREF: __objc_const:000000010003DA80↓o
                                        ; __objc_const:000000010003DB58↓o ...
a1608_0         db '#16@0:8',0          ; DATA XREF: __objc_const:000000010003DA98↓o
                                        ; __objc_const:000000010003DC18↓o ...
a240816_0       db '@24@0:8:16',0       ; DATA XREF: __objc_const:000000010003DAC8↓o
                                        ; __objc_const:000000010003DCC8↓o ...
a32081624       db '@32@0:8:16@24',0    ; DATA XREF: __objc_const:000000010003DAE0↓o
                                        ; __objc_const:000000010003DCD0↓o ...
a4008162432     db '@40@0:8:16@24@32',0 ; DATA XREF: __objc_const:000000010003DAF8↓o
                                        ; __objc_const:000000010003DCD8↓o ...
aC240816_0      db 'c24@0:8#16',0       ; DATA XREF: __objc_const:000000010003DB28↓o
                                        ; __objc_const:000000010003DB40↓o ...
aC240816_1      db 'c24@0:8:16',0       ; DATA XREF: __objc_const:000000010003DB70↓o
                                        ; __objc_const:000000010003DD00↓o ...
aVv1608         db 'Vv16@0:8',0         ; DATA XREF: __objc_const:000000010003DBA0↓o
                                        ; __objc_const:000000010003DD10↓o ...
aQ1608          db 'Q16@0:8',0          ; DATA XREF: __objc_const:000000010003DBD0↓o
                                        ; __objc_const:000000010003DC00↓o ...
aNszone1608     db '^{_NSZone=}16@0:8',0
                                        ; DATA XREF: __objc_const:000000010003DBE8↓o
                                        ; __objc_const:000000010003DD28↓o ...
aC2408Protocol1 db 'c24@0:8@"Protocol"16',0
                                        ; DATA XREF: __objc_const:000000010003DCF8↓o
                                        ; __objc_const:000000010003F898↓o ...
aNsstring1608   db '@"NSString"16@0:8',0
                                        ; DATA XREF: __objc_const:000000010003DD40↓o
                                        ; __objc_const:000000010003DD48↓o ...
aV2408S8bitdode db 'v24@0:8@"S8BitdoDevice"16',0
                                        ; DATA XREF: __objc_const:off_10003DDA0↓o
                                        ; __objc_const:000000010003DDA8↓o ...
aV280816i24     db 'v28@0:8@16i24',0    ; DATA XREF: __objc_const:000000010003DDD0↓o
                                        ; __objc_const:000000010003E110↓o
aV32081624      db 'v32@0:8@16@24',0    ; DATA XREF: __objc_const:000000010003DDE8↓o
                                        ; __objc_const:000000010003DE18↓o ...
aV2808S8bitdode db 'v28@0:8@"S8BitdoDevice"16i24',0
                                        ; DATA XREF: __objc_const:off_10003DE00↓o
aV3208S8bitdode db 'v32@0:8@"S8BitdoDevice"16@"Firmwaer"24',0
                                        ; DATA XREF: __objc_const:000000010003DE08↓o
aV3208S8bitdode_0 db 'v32@0:8@"S8BitdoDevice"16@"MoreView"24',0
                                        ; DATA XREF: __objc_const:off_10003DE30↓o
aC2408Nsalert16 db 'c24@0:8@"NSAlert"16',0
                                        ; DATA XREF: __objc_const:off_10003DE70↓o
aV2408Updatevie db 'v24@0:8@"UpdateView"16',0
                                        ; DATA XREF: __objc_const:off_10003DEB0↓o
                                        ; __objc_const:000000010003DEB8↓o
aD_2            db 'd',0                ; DATA XREF: __objc_const:000000010003E2C8↓o
                                        ; __objc_const:000000010003E2E8↓o ...
aShiddinput_0   db '@"SHIDDinput"',0    ; DATA XREF: __objc_const:000000010003E308↓o
aShidswitchandm_0 db '@"SHIDSwitchAndMac"',0
                                        ; DATA XREF: __objc_const:000000010003E328↓o
aHomeview_3     db '@"HomeView"',0      ; DATA XREF: __objc_const:000000010003E348↓o
aUpdateview_2   db '@"UpdateView"',0    ; DATA XREF: __objc_const:000000010003E368↓o
aSbackbutton_1  db '@"SBackButton"',0   ; DATA XREF: __objc_const:000000010003E388↓o
aMoreview_2     db '@"MoreView"',0      ; DATA XREF: __objc_const:000000010003E3A8↓o
aNsmutablearray db '@"NSMutableArray"',0
                                        ; DATA XREF: __objc_const:000000010003E3C8↓o
                                        ; __objc_const:000000010003F518↓o ...
aI1608          db 'i16@0:8',0          ; DATA XREF: __objc_const:000000010003E630↓o
                                        ; __objc_const:000000010003EAB8↓o ...
aI_0            db 'i',0                ; DATA XREF: __objc_const:000000010003E6A0↓o
                                        ; __objc_const:000000010003EC08↓o ...
aShidbootdelega_0 db '@"<SHIDBootDelegate>"',0
                                        ; DATA XREF: __objc_const:000000010003E6C0↓o
                                        ; __objc_const:000000010003E6E0↓o ...
aV4808CgrectCgp db 'v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16',0
                                        ; DATA XREF: __objc_const:000000010003E828↓o
                                        ; __objc_const:00000001000412D8↓o ...
aNscolor        db '@"NSColor"',0       ; DATA XREF: __objc_const:000000010003E890↓o
                                        ; __objc_const:0000000100042FB8↓o ...
a4808CgrectCgpo db '@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16',0
                                        ; DATA XREF: __objc_const:000000010003E960↓o
                                        ; __objc_const:0000000100040140↓o ...
aQ1608_0        db 'q16@0:8',0          ; DATA XREF: __objc_const:000000010003EB78↓o
                                        ; __objc_const:0000000100040458↓o ...
aV2408q16       db 'v24@0:8q16',0       ; DATA XREF: __objc_const:000000010003EB90↓o
                                        ; __objc_const:0000000100040B18↓o
aQ_2            db 'q',0                ; DATA XREF: __objc_const:000000010003ECA8↓o
                                        ; __objc_const:0000000100040FB0↓o
a3208i16i2024   db '@32@0:8i16i20@24',0 ; DATA XREF: __objc_const:000000010003EDE8↓o
a2408Nszone16   db '@24@0:8^{_NSZone=}16',0
                                        ; DATA XREF: __objc_const:000000010003EE98↓o
                                        ; __objc_const:000000010003EF18↓o ...
aV440816i24i28i db 'v44@0:8*16I24I28I32i36S40',0
                                        ; DATA XREF: __objc_const:000000010003EF78↓o
aV360816i2428   db 'v36@0:8*16i24@?28',0
                                        ; DATA XREF: __objc_const:000000010003EF90↓o
aV280816c24     db 'v28@0:8@?16C24',0   ; DATA XREF: __objc_const:000000010003EFA8↓o
                                        ; __objc_const:0000000100045748↓o
aV480816i24i28i db 'v48@0:8*16I24I28I32i36@?40',0
                                        ; DATA XREF: __objc_const:000000010003EFC0↓o
aC2008i16       db 'c20@0:8I16',0       ; DATA XREF: __objc_const:000000010003EFD8↓o
aV2808i16i20i24 db 'v28@0:8I16I20I24',0 ; DATA XREF: __objc_const:000000010003F038↓o
                                        ; __objc_const:000000010003F050↓o
aV2008i16_0     db 'v20@0:8I16',0       ; DATA XREF: __objc_const:000000010003F068↓o
                                        ; __objc_const:000000010003F368↓o ...
aQ240816        db 'Q24@0:8@16',0       ; DATA XREF: __objc_const:000000010003F200↓o
                                        ; __objc_const:0000000100044520↓o
aB2408i16i20    db 'B24@0:8i16i20',0    ; DATA XREF: __objc_const:000000010003F248↓o
aI1608_0        db 'I16@0:8',0          ; DATA XREF: __objc_const:000000010003F350↓o
                                        ; __objc_const:000000010003F380↓o ...
aI_1            db 'I',0                ; DATA XREF: __objc_const:000000010003F438↓o
                                        ; __objc_const:000000010003F458↓o ...
aNsinputstream  db '@"NSInputStream"',0 ; DATA XREF: __objc_const:000000010003F4F8↓o
aC2408Nstext16  db 'c24@0:8@"NSText"16',0
                                        ; DATA XREF: __objc_const:off_10003F988↓o
                                        ; __objc_const:000000010003F990↓o
aV2408Nsnotific db 'v24@0:8@"NSNotification"16',0
                                        ; DATA XREF: __objc_const:000000010003F998↓o
                                        ; __objc_const:000000010003F9A0↓o ...
aC40081624q32   db 'c40@0:8@16@24Q32',0 ; DATA XREF: __objc_const:000000010003F9D0↓o
aV72081624Cgrec db 'v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64',0
                                        ; DATA XREF: __objc_const:000000010003F9E8↓o
                                        ; __objc_const:000000010003FA00↓o
aV80081624Cgrec db 'v80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64Q72',0
                                        ; DATA XREF: __objc_const:000000010003FA18↓o
a40081624q32    db '@40@0:8@16@24Q32',0 ; DATA XREF: __objc_const:000000010003FA30↓o
                                        ; __objc_const:000000010003FAF0↓o ...
aC56081624q3240 db 'c56@0:8@16@24Q32@40@48',0
                                        ; DATA XREF: __objc_const:000000010003FA48↓o
aNsrangeQq56081 db '{_NSRange=QQ}56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40',0
                                        ; DATA XREF: __objc_const:000000010003FA60↓o
a4008162432_0   db '@40@0:8@16@24@32',0 ; DATA XREF: __objc_const:000000010003FA78↓o
                                        ; __objc_const:000000010003FAA8↓o ...
aC4008162432    db 'c40@0:8@16@24@32',0 ; DATA XREF: __objc_const:000000010003FA90↓o
a56081624Nsrang db '@56@0:8@16@24{_NSRange=QQ}32^q48',0
                                        ; DATA XREF: __objc_const:000000010003FB08↓o
aC480816Nsrange db 'c48@0:8@16{_NSRange=QQ}24@40',0
                                        ; DATA XREF: __objc_const:000000010003FB20↓o
aC32081624      db 'c32@0:8@16:24',0    ; DATA XREF: __objc_const:000000010003FB38↓o
aQ480816q24Nsra db 'q48@0:8@16q24{_NSRange=QQ}32',0
                                        ; DATA XREF: __objc_const:000000010003FB50↓o
a4808162432q40  db '@48@0:8@16@24@32Q40',0
                                        ; DATA XREF: __objc_const:000000010003FB68↓o
a560816NsrangeQ db '@56@0:8@16{_NSRange=QQ}24@40^Q48',0
                                        ; DATA XREF: __objc_const:000000010003FB80↓o
a800816NsrangeQ db '@80@0:8@16{_NSRange=QQ}24Q40@48@56@64q72',0
                                        ; DATA XREF: __objc_const:000000010003FB98↓o
a32081624_0     db '@32@0:8@16@24',0    ; DATA XREF: __objc_const:000000010003FBF8↓o
                                        ; __objc_const:0000000100041A00↓o ...
a400816NsrangeQ db '@40@0:8@16{_NSRange=QQ}24',0
                                        ; DATA XREF: __objc_const:000000010003FC10↓o
                                        ; __objc_const:000000010003FC88↓o
a48081624Nsrang db '@48@0:8@16@24{_NSRange=QQ}32',0
                                        ; DATA XREF: __objc_const:000000010003FC28↓o
aC320816q24     db 'c32@0:8@16Q24',0    ; DATA XREF: __objc_const:000000010003FC40↓o
aC32081624_0    db 'c32@0:8@16@24',0    ; DATA XREF: __objc_const:000000010003FCA0↓o
                                        ; __objc_const:0000000100041A48↓o ...
aV64081624Cgrec db 'v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32',0
                                        ; DATA XREF: __objc_const:000000010003FCB8↓o
                                        ; __objc_const:000000010003FCD0↓o
aV72081624Cgrec_0 db 'v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64',0
                                        ; DATA XREF: __objc_const:000000010003FCE8↓o
aC4008Nstextvie db 'c40@0:8@"NSTextView"16@24Q32',0
                                        ; DATA XREF: __objc_const:off_10003FD00↓o
aV7208Nstextvie db 'v72@0:8@"NSTextView"16@"<NSTextAttachmentCell>"24{CGRect={CGPoint'
                                        ; DATA XREF: __objc_const:000000010003FD08↓o
                                        ; __objc_const:000000010003FD10↓o
                db '=dd}{CGSize=dd}}32Q64',0
aV8008Nstextvie db 'v80@0:8@"NSTextView"16@"<NSTextAttachmentCell>"24{CGRect={CGPoint'
                                        ; DATA XREF: __objc_const:000000010003FD18↓o
                db '=dd}{CGSize=dd}}32@"NSEvent"64Q72',0
aNsarray4008Nst db '@"NSArray"40@0:8@"NSTextView"16@"<NSTextAttachmentCell>"24Q32',0
                                        ; DATA XREF: __objc_const:000000010003FD20↓o
aC5608Nstextvie db 'c56@0:8@"NSTextView"16@"<NSTextAttachmentCell>"24Q32@"NSPasteboar'
                                        ; DATA XREF: __objc_const:000000010003FD28↓o
                db 'd"40@"NSString"48',0
aNsrangeQq5608N db '{_NSRange=QQ}56@0:8@"NSTextView"16{_NSRange=QQ}24{_NSRange=QQ}40',0
                                        ; DATA XREF: __objc_const:000000010003FD30↓o
aNsarray4008Nst_0 db '@"NSArray"40@0:8@"NSTextView"16@"NSArray"24@"NSArray"32',0
                                        ; DATA XREF: __objc_const:000000010003FD38↓o
aC4008Nstextvie_0 db 'c40@0:8@"NSTextView"16@"NSArray"24@"NSArray"32',0
                                        ; DATA XREF: __objc_const:000000010003FD40↓o
aNsdictionary40 db '@"NSDictionary"40@0:8@"NSTextView"16@"NSDictionary"24@"NSDictiona'
                                        ; DATA XREF: __objc_const:000000010003FD48↓o
                db 'ry"32',0
aNsstring4008Ns db '@"NSString"40@0:8@"NSTextView"16@"NSString"24Q32',0
                                        ; DATA XREF: __objc_const:000000010003FD60↓o
aNsarray5608Nst db '@"NSArray"56@0:8@"NSTextView"16@"NSArray"24{_NSRange=QQ}32^q48',0
                                        ; DATA XREF: __objc_const:000000010003FD68↓o
aC4808Nstextvie db 'c48@0:8@"NSTextView"16{_NSRange=QQ}24@"NSString"40',0
                                        ; DATA XREF: __objc_const:000000010003FD70↓o
aC3208Nstextvie db 'c32@0:8@"NSTextView"16:24',0
                                        ; DATA XREF: __objc_const:000000010003FD78↓o
aQ4808Nstextvie db 'q48@0:8@"NSTextView"16q24{_NSRange=QQ}32',0
                                        ; DATA XREF: __objc_const:000000010003FD80↓o
aNsmenu4808Nste db '@"NSMenu"48@0:8@"NSTextView"16@"NSMenu"24@"NSEvent"32Q40',0
                                        ; DATA XREF: __objc_const:000000010003FD88↓o
aNsdictionary56 db '@"NSDictionary"56@0:8@"NSTextView"16{_NSRange=QQ}24@"NSDictionary'
                                        ; DATA XREF: __objc_const:000000010003FD90↓o
                db '"40^Q48',0
aNsarray8008Nst db '@"NSArray"80@0:8@"NSTextView"16{_NSRange=QQ}24Q40@"NSDictionary"4'
                                        ; DATA XREF: __objc_const:000000010003FD98↓o
                db '8@"NSArray"56@"NSOrthography"64q72',0
aNsurl4008Nstex db '@"NSURL"40@0:8@"NSTextView"16@"NSTextAttachment"24Q32',0
                                        ; DATA XREF: __objc_const:000000010003FDA0↓o
aNssharingservi db '@"NSSharingServicePicker"40@0:8@"NSTextView"16@"NSSharingServiceP'
                                        ; DATA XREF: __objc_const:000000010003FDA8↓o
                db 'icker"24@"NSArray"32',0
aNsundomanager2 db '@"NSUndoManager"24@0:8@"NSTextView"16',0
                                        ; DATA XREF: __objc_const:000000010003FDB0↓o
aNsarray3208Nst db '@"NSArray"32@0:8@"NSTextView"16@"NSArray"24',0
                                        ; DATA XREF: __objc_const:000000010003FDB8↓o
aNsarray4008Nst_1 db '@"NSArray"40@0:8@"NSTextView"16{_NSRange=QQ}24',0
                                        ; DATA XREF: __objc_const:000000010003FDC0↓o
                                        ; __objc_const:000000010003FDE8↓o
aNsarray4808Nst db '@"NSArray"48@0:8@"NSTextView"16@"NSArray"24{_NSRange=QQ}32',0
                                        ; DATA XREF: __objc_const:000000010003FDC8↓o
aC3208Nstextvie_0 db 'c32@0:8@"NSTextView"16Q24',0
                                        ; DATA XREF: __objc_const:000000010003FDD0↓o
aV2408Nstextvie db 'v24@0:8@"NSTextView"16',0
                                        ; DATA XREF: __objc_const:000000010003FDD8↓o
                                        ; __objc_const:000000010003FDE0↓o
aC3208Nstextvie_1 db 'c32@0:8@"NSTextView"16@24',0
                                        ; DATA XREF: __objc_const:000000010003FDF0↓o
aV6408Nstextvie db 'v64@0:8@"NSTextView"16@"<NSTextAttachmentCell>"24{CGRect={CGPoint'
                                        ; DATA XREF: __objc_const:000000010003FDF8↓o
                                        ; __objc_const:000000010003FE00↓o
                db '=dd}{CGSize=dd}}32',0
aV7208Nstextvie_0 db 'v72@0:8@"NSTextView"16@"<NSTextAttachmentCell>"24{CGRect={CGPoint'
                                        ; DATA XREF: __objc_const:000000010003FE08↓o
                db '=dd}{CGSize=dd}}32@"NSEvent"64',0
aV2408Sbutton16 db 'v24@0:8@"SButton"16',0
                                        ; DATA XREF: __objc_const:off_10003FE30↓o
                                        ; __objc_const:0000000100043248↓o
aV2808i1620_0   db 'v28@0:8I16@20',0    ; DATA XREF: __objc_const:000000010003FE88↓o
                                        ; __objc_const:00000001000404A0↓o
aV320816i24i28  db 'v32@0:8@16i24i28',0 ; DATA XREF: __objc_const:000000010003FF18↓o
                                        ; __objc_const:0000000100040548↓o
aV3208S8bitdode_1 db 'v32@0:8@"S8BitdoDevice"16@"SHIDBoot"24',0
                                        ; DATA XREF: __objc_const:off_10003FF50↓o
                                        ; __objc_const:000000010003FF58↓o ...
aV2808i16Shidbo db 'v28@0:8I16@"SHIDBoot"20',0
                                        ; DATA XREF: __objc_const:000000010003FF60↓o
aV2408Shidboot1 db 'v24@0:8@"SHIDBoot"16',0
                                        ; DATA XREF: __objc_const:000000010003FF68↓o
                                        ; __objc_const:000000010003FF78↓o
aV2808i16Shidbo_0 db 'v28@0:8i16@"SHIDBoot"20',0
                                        ; DATA XREF: __objc_const:000000010003FF70↓o
aV3208S8bitdode_2 db 'v32@0:8@"S8BitdoDevice"16@"NSString"24',0
                                        ; DATA XREF: __objc_const:000000010003FF88↓o
aV3208S8bitdode_3 db 'v32@0:8@"S8BitdoDevice"16i24i28',0
                                        ; DATA XREF: __objc_const:000000010003FF90↓o
aV2408Sminiimag db 'v24@0:8@"SMiniImageView"16',0
                                        ; DATA XREF: __objc_const:off_10003FFD8↓o
aV3208Shidbooth db 'v32@0:8@"SHIDBootHJZ"16@"S8BitdoDevice"24',0
                                        ; DATA XREF: __objc_const:off_100040030↓o
aV2408q16_0     db 'v24@0:8Q16',0       ; DATA XREF: __objc_const:00000001000400C8↓o
                                        ; __objc_const:0000000100040290↓o ...
a2808f16s20f24  db '@28@0:8f16S20f24',0 ; DATA XREF: __objc_const:0000000100040248↓o
aS8bitdodevice_0 db '@"S8BitdoDevice"',0
                                        ; DATA XREF: __objc_const:0000000100040C70↓o
                                        ; __objc_const:0000000100045FA8↓o
aQ_3            db 'Q',0                ; DATA XREF: __objc_const:0000000100040C90↓o
                                        ; __objc_const:0000000100040F30↓o ...
asc_10003796D   db '@',0                ; DATA XREF: __objc_const:0000000100040CB0↓o
                                        ; __objc_const:0000000100043038↓o ...
aSminiimageview_2 db '@"SMiniImageView"',0
                                        ; DATA XREF: __objc_const:0000000100040CD0↓o
                                        ; __objc_const:0000000100040CF0↓o
aSview_0        db '@"SView"',0         ; DATA XREF: __objc_const:0000000100040D10↓o
                                        ; __objc_const:0000000100040D50↓o ...
aNsscrollview   db '@"NSScrollView"',0  ; DATA XREF: __objc_const:0000000100040D30↓o
                                        ; __objc_const:0000000100043848↓o
aSlabel_0       db '@"SLabel"',0        ; DATA XREF: __objc_const:0000000100040D70↓o
                                        ; __objc_const:0000000100040DF0↓o ...
aNstextview     db '@"NSTextView"',0    ; DATA XREF: __objc_const:0000000100040D90↓o
aNsprogressindi db '@"NSProgressIndicator"',0
                                        ; DATA XREF: __objc_const:0000000100040DB0↓o
aNsbutton       db '@"NSButton"',0      ; DATA XREF: __objc_const:0000000100040DD0↓o
                                        ; __objc_const:0000000100040ED0↓o ...
aSbutton_0      db '@"SButton"',0       ; DATA XREF: __objc_const:0000000100040E50↓o
                                        ; __objc_const:0000000100040E70↓o ...
aShidboot_2     db '@"SHIDBoot"',0      ; DATA XREF: __objc_const:0000000100040F10↓o
aDevicemanualvi_0 db '@"DeviceManualView"',0
                                        ; DATA XREF: __objc_const:0000000100040F70↓o
aNstimer        db '@"NSTimer"',0       ; DATA XREF: __objc_const:0000000100040F90↓o
aV2008b16       db 'v20@0:8B16',0       ; DATA XREF: __objc_const:00000001000412A8↓o
                                        ; __objc_const:0000000100041368↓o
aB1608          db 'B16@0:8',0          ; DATA XREF: __objc_const:0000000100041338↓o
                                        ; __objc_const:0000000100041350↓o
aB_1            db 'B',0                ; DATA XREF: __objc_const:00000001000413D0↓o
                                        ; __objc_const:00000001000413F0↓o
aSminiimageview_3 db '@"<SMiniImageViewDelegate>"',0
                                        ; DATA XREF: __objc_const:0000000100041410↓o
a2408Iohiddevic db '@24@0:8^{__IOHIDDevice=}16',0
                                        ; DATA XREF: __objc_const:0000000100041598↓o
                                        ; __objc_const:00000001000451D8↓o
aC400816q2432   db 'c40@0:8@16q24^@32',0
                                        ; DATA XREF: __objc_const:0000000100041910↓o
a280816c24      db '@28@0:8@16c24',0    ; DATA XREF: __objc_const:0000000100041958↓o
aC48081624q3240 db 'c48@0:8@16@24q32^@40',0
                                        ; DATA XREF: __objc_const:0000000100041A18↓o
aV480816q243240 db 'v48@0:8@16q24@32@40',0
                                        ; DATA XREF: __objc_const:0000000100041A30↓o
aV4008162432    db 'v40@0:8@16@24@32',0 ; DATA XREF: __objc_const:0000000100041A60↓o
                                        ; __objc_const:0000000100041A90↓o ...
aC4008162432_0  db 'c40@0:8@16@24@?32',0
                                        ; DATA XREF: __objc_const:0000000100041B08↓o
                                        ; __objc_const:0000000100041BB0↓o ...
aV320816d24     db 'v32@0:8@16d24',0    ; DATA XREF: __objc_const:0000000100041B68↓o
aV400816q2432   db 'v40@0:8@16q24@32',0 ; DATA XREF: __objc_const:0000000100041BE0↓o
aC4008Spuupdate db 'c40@0:8@"SPUUpdater"16q24^@32',0
                                        ; DATA XREF: __objc_const:off_100041C28↓o
aNsset2408Spuup db '@"NSSet"24@0:8@"SPUUpdater"16',0
                                        ; DATA XREF: __objc_const:0000000100041C30↓o
aNsstring2408Sp db '@"NSString"24@0:8@"SPUUpdater"16',0
                                        ; DATA XREF: __objc_const:0000000100041C38↓o
                                        ; __objc_const:0000000100041D00↓o
aNsarray2808Spu db '@"NSArray"28@0:8@"SPUUpdater"16c24',0
                                        ; DATA XREF: __objc_const:0000000100041C40↓o
aC2408Spuupdate db 'c24@0:8@"SPUUpdater"16',0
                                        ; DATA XREF: __objc_const:0000000100041C48↓o
                                        ; __objc_const:0000000100041CD8↓o ...
aNsarray2408Spu db '@"NSArray"24@0:8@"SPUUpdater"16',0
                                        ; DATA XREF: __objc_const:0000000100041C50↓o
aV3208Spuupdate db 'v32@0:8@"SPUUpdater"16@"SUAppcast"24',0
                                        ; DATA XREF: __objc_const:0000000100041C58↓o
aV3208Spuupdate_0 db 'v32@0:8@"SPUUpdater"16@"SUAppcastItem"24',0
                                        ; DATA XREF: __objc_const:0000000100041C60↓o
                                        ; __objc_const:0000000100041CA0↓o ...
aV3208Spuupdate_1 db 'v32@0:8@"SPUUpdater"16@"NSError"24',0
                                        ; DATA XREF: __objc_const:0000000100041C68↓o
                                        ; __objc_const:0000000100041D10↓o
aV2408Spuupdate db 'v24@0:8@"SPUUpdater"16',0
                                        ; DATA XREF: __objc_const:0000000100041C70↓o
                                        ; __objc_const:0000000100041CB0↓o ...
aSuappcastitem3 db '@"SUAppcastItem"32@0:8@"SUAppcast"16@"SPUUpdater"24',0
                                        ; DATA XREF: __objc_const:0000000100041C78↓o
aC4808Spuupdate db 'c48@0:8@"SPUUpdater"16@"SUAppcastItem"24q32^@40',0
                                        ; DATA XREF: __objc_const:0000000100041C80↓o
aV4808Spuupdate db 'v48@0:8@"SPUUpdater"16q24@"SUAppcastItem"32@"SPUUserUpdateState"4'
                                        ; DATA XREF: __objc_const:0000000100041C88↓o
                db '0',0
aC3208Spuupdate db 'c32@0:8@"SPUUpdater"16@"SUAppcastItem"24',0
                                        ; DATA XREF: __objc_const:0000000100041C90↓o
aV4008Spuupdate db 'v40@0:8@"SPUUpdater"16@"SUAppcastItem"24@"NSMutableURLRequest"32',0
                                        ; DATA XREF: __objc_const:0000000100041C98↓o
aV4008Spuupdate_0 db 'v40@0:8@"SPUUpdater"16@"SUAppcastItem"24@"NSError"32',0
                                        ; DATA XREF: __objc_const:0000000100041CA8↓o
aC4008Spuupdate_0 db 'c40@0:8@"SPUUpdater"16@"SUAppcastItem"24@?<v@?>32',0
                                        ; DATA XREF: __objc_const:0000000100041CD0↓o
                                        ; __objc_const:0000000100041D08↓o
aSuversioncompa db '@"<SUVersionComparison>"24@0:8@"SPUUpdater"16',0
                                        ; DATA XREF: __objc_const:0000000100041CE8↓o
aV3208Spuupdate_2 db 'v32@0:8@"SPUUpdater"16d24',0
                                        ; DATA XREF: __objc_const:0000000100041CF0↓o
aV4008Spuupdate_1 db 'v40@0:8@"SPUUpdater"16q24@"NSError"32',0
                                        ; DATA XREF: __objc_const:0000000100041D18↓o
aSpustandardupd db '@"SPUStandardUpdaterController"',0
                                        ; DATA XREF: __objc_const:0000000100041EC0↓o
aSpuupdater     db '@"SPUUpdater"',0    ; DATA XREF: __objc_const:0000000100041EE0↓o
a320816Mjproper db '@32@0:8@16@"MJProperty"24',0
                                        ; DATA XREF: __objc_const:off_100042838↓o
aNsarray1608    db '@"NSArray"16@0:8',0 ; DATA XREF: __objc_const:0000000100042850↓o
                                        ; __objc_const:0000000100042858↓o ...
aNsdictionary16 db '@"NSDictionary"16@0:8',0
                                        ; DATA XREF: __objc_const:0000000100042860↓o
                                        ; __objc_const:0000000100042870↓o
a2408Nsstring16 db '@24@0:8@"NSString"16',0
                                        ; DATA XREF: __objc_const:0000000100042868↓o
a32081624_1     db '@32@0:8@16^@24',0   ; DATA XREF: __objc_const:0000000100042938↓o
                                        ; __objc_const:00000001000429C8↓o ...
a4008162432_1   db '@40@0:8@16@24^@32',0
                                        ; DATA XREF: __objc_const:0000000100042968↓o
                                        ; __objc_const:0000000100042AC0↓o ...
a240816_1       db '@24@0:8^@16',0      ; DATA XREF: __objc_const:0000000100042998↓o
aNstextfield    db '@"NSTextField"',0   ; DATA XREF: __objc_const:0000000100043438↓o
                                        ; __objc_const:0000000100043458↓o ...
asc_100037EC7   db '#',0                ; DATA XREF: __objc_const:0000000100043B50↓o
                                        ; __objc_const:0000000100044FF8↓o
aV2808i16f20i24 db 'v28@0:8i16f20i24',0 ; DATA XREF: __objc_const:0000000100043D58↓o
aHomeviewdelega_0 db '@"<HomeViewDelegate>"',0
                                        ; DATA XREF: __objc_const:0000000100043FB8↓o
aNsview         db '@"NSView"',0        ; DATA XREF: __objc_const:0000000100044018↓o
                                        ; __objc_const:0000000100044038↓o
aNsimageview    db '@"NSImageView"',0   ; DATA XREF: __objc_const:0000000100044058↓o
                                        ; __objc_const:0000000100044078↓o ...
aQ4408162432c40 db 'Q44@0:8@16@24@32c40',0
                                        ; DATA XREF: __objc_const:00000001000445F8↓o
aC280816c24     db 'c28@0:8@16c24',0    ; DATA XREF: __objc_const:0000000100044628↓o
aQ2408Nsapplica db 'Q24@0:8@"NSApplication"16',0
                                        ; DATA XREF: __objc_const:off_100044958↓o
aV3208Nsapplica db 'v32@0:8@"NSApplication"16@"NSArray"24',0
                                        ; DATA XREF: __objc_const:0000000100044960↓o
                                        ; __objc_const:0000000100044970↓o
aC3208Nsapplica db 'c32@0:8@"NSApplication"16@"NSString"24',0
                                        ; DATA XREF: __objc_const:0000000100044968↓o
                                        ; __objc_const:0000000100044978↓o ...
aC2408Nsapplica db 'c24@0:8@"NSApplication"16',0
                                        ; DATA XREF: __objc_const:0000000100044980↓o
                                        ; __objc_const:0000000100044988↓o ...
aC320816Nsstrin db 'c32@0:8@16@"NSString"24',0
                                        ; DATA XREF: __objc_const:0000000100044990↓o
aQ4408Nsapplica db 'Q44@0:8@"NSApplication"16@"NSArray"24@"NSDictionary"32c40',0
                                        ; DATA XREF: __objc_const:00000001000449A0↓o
aC2808Nsapplica db 'c28@0:8@"NSApplication"16c24',0
                                        ; DATA XREF: __objc_const:00000001000449B0↓o
aNsmenu2408Nsap db '@"NSMenu"24@0:8@"NSApplication"16',0
                                        ; DATA XREF: __objc_const:00000001000449B8↓o
aNserror3208Nsa db '@"NSError"32@0:8@"NSApplication"16@"NSError"24',0
                                        ; DATA XREF: __objc_const:00000001000449C0↓o
aV3208Nsapplica_0 db 'v32@0:8@"NSApplication"16@"NSData"24',0
                                        ; DATA XREF: __objc_const:00000001000449C8↓o
aV3208Nsapplica_1 db 'v32@0:8@"NSApplication"16@"NSError"24',0
                                        ; DATA XREF: __objc_const:00000001000449D0↓o
aV3208Nsapplica_2 db 'v32@0:8@"NSApplication"16@"NSDictionary"24',0
                                        ; DATA XREF: __objc_const:00000001000449D8↓o
a3208Nsapplicat db '@32@0:8@"NSApplication"16@"INIntent"24',0
                                        ; DATA XREF: __objc_const:00000001000449E8↓o
aV3208Nsapplica_3 db 'v32@0:8@"NSApplication"16@"NSCoder"24',0
                                        ; DATA XREF: __objc_const:00000001000449F0↓o
                                        ; __objc_const:00000001000449F8↓o
aC4008Nsapplica db 'c40@0:8@"NSApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32',0
                                        ; DATA XREF: __objc_const:0000000100044A08↓o
aV4008Nsapplica db 'v40@0:8@"NSApplication"16@"NSString"24@"NSError"32',0
                                        ; DATA XREF: __objc_const:0000000100044A10↓o
aV3208Nsapplica_4 db 'v32@0:8@"NSApplication"16@"NSUserActivity"24',0
                                        ; DATA XREF: __objc_const:0000000100044A18↓o
aV3208Nsapplica_5 db 'v32@0:8@"NSApplication"16@"CKShareMetadata"24',0
                                        ; DATA XREF: __objc_const:0000000100044A20↓o
a1608_1         db ':16@0:8',0          ; DATA XREF: __objc_const:0000000100044C68↓o
aV240816_1      db 'v24@0:8:16',0       ; DATA XREF: __objc_const:0000000100044C98↓o
a2408ObjcProper db '@24@0:8^{objc_property=}16',0
                                        ; DATA XREF: __objc_const:0000000100044D48↓o
aV2408ObjcPrope db 'v24@0:8^{objc_property=}16',0
                                        ; DATA XREF: __objc_const:0000000100044DC8↓o
aV32081624_0    db 'v32@0:8@16#24',0    ; DATA XREF: __objc_const:0000000100044E28↓o
                                        ; __objc_const:0000000100044E40↓o
a240816_2       db '@24@0:8#16',0       ; DATA XREF: __objc_const:0000000100044E58↓o
aV32081624_1    db 'v32@0:8#16#24',0    ; DATA XREF: __objc_const:0000000100044E70↓o
a240816_3       db '#24@0:8#16',0       ; DATA XREF: __objc_const:0000000100044E88↓o
aObjcProperty16 db '^{objc_property=}16@0:8',0
                                        ; DATA XREF: __objc_const:0000000100044EA0↓o
aV240816_2      db 'v24@0:8#16',0       ; DATA XREF: __objc_const:0000000100044F00↓o
aObjcProperty   db '^{objc_property=}',0
                                        ; DATA XREF: __objc_const:0000000100044F98↓o
aMjpropertytype_0 db '@"MJPropertyType"',0
                                        ; DATA XREF: __objc_const:0000000100044FD8↓o
aNsmutabledicti db '@"NSMutableDictionary"',0
                                        ; DATA XREF: __objc_const:0000000100045018↓o
                                        ; __objc_const:0000000100045038↓o
a2008s16        db '@20@0:8S16',0       ; DATA XREF: __objc_const:00000001000451F0↓o
aV32081624_2    db 'v32@0:8*16@?24',0   ; DATA XREF: __objc_const:0000000100045730↓o
aI32081624      db 'i32@0:8*16@?24',0   ; DATA XREF: __objc_const:0000000100045760↓o
aShidboothjz_0  db '@"<SHIDBootHJZ>"',0 ; DATA XREF: __objc_const:0000000100045970↓o
aNsfilehandle   db '@"NSFileHandle"',0  ; DATA XREF: __objc_const:00000001000459B0↓o
a2408rV16       db '@24@0:8r^v16',0     ; DATA XREF: __objc_const:0000000100045AC0↓o
                                        ; __objc_const:00000001000461A8↓o
a240816_4       db '#24@0:8@16',0       ; DATA XREF: __objc_const:0000000100045AF0↓o
aV240816_3      db 'v24@0:8@?16',0      ; DATA XREF: __objc_const:0000000100045B08↓o
                                        ; __objc_const:0000000100045B38↓o ...
aV480816243240  db 'v48@0:8@16@24@32@40',0
                                        ; DATA XREF: __objc_const:0000000100045D60↓o
aV320816r24     db 'v32@0:8@?16r*24',0  ; DATA XREF: __objc_const:00000001000462B0↓o
a320816r24      db '@32@0:8:16r*24',0   ; DATA XREF: __objc_const:00000001000462C8↓o
aNsarray        db '@"NSArray"',0       ; DATA XREF: __objc_const:00000001000465A0↓o
aIohidmanager16 db '^{__IOHIDManager=}16@0:8',0
                                        ; DATA XREF: __objc_const:0000000100046E10↓o
aV2408Iohidmana db 'v24@0:8^{__IOHIDManager=}16',0
                                        ; DATA XREF: __objc_const:0000000100046E28↓o
a64c            db '[64C]',0            ; DATA XREF: __objc_const:0000000100046EC0↓o
aC_4            db 'C',0                ; DATA XREF: __objc_const:0000000100046EE0↓o
aIohidmanager   db '^{__IOHIDManager=}',0
                                        ; DATA XREF: __objc_const:0000000100046F00↓o
aDevicedelegate_0 db '@"<DeviceDelegate>"',0
                                        ; DATA XREF: __objc_const:0000000100046F20↓o
__objc_methtype ends

; ===========================================================================

; Segment type: Regular
__ustring       segment word public '' use64
                assume cs:__ustring
                ;org 1000383E6h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
asc_1000383E6:                          ; DATA XREF: __cfstring:stru_10003A938↓o
                text "UTF-16LE", '未识别地区',0
aF30:                                   ; DATA XREF: __cfstring:cfstr_F30↓o
                text "UTF-16LE", 'F30 街机摇杆',0
aClassic:                               ; DATA XREF: __cfstring:cfstr_Classic↓o
                text "UTF-16LE", 'Classic 无线接收器',0
aNes:                                   ; DATA XREF: __cfstring:cfstr_Nes↓o
                text "UTF-16LE", 'NES 无线接收器',0
aSfc:                                   ; DATA XREF: __cfstring:cfstr_Sfc↓o
                text "UTF-16LE", 'SFC 无线接收器',0
aN30_0:                                 ; DATA XREF: __cfstring:cfstr_N30_0↓o
                text "UTF-16LE", 'N30 街机摇杆',0
aUsb_1:                                 ; DATA XREF: __cfstring:cfstr_Usb_1↓o
                text "UTF-16LE", 'USB 无线接收器',0
aUsbPs:                                 ; DATA XREF: __cfstring:cfstr_UsbPs↓o
                text "UTF-16LE", 'USB 无线接收器 PS 版',0
aMd:                                    ; DATA XREF: __cfstring:cfstr_Md↓o
                text "UTF-16LE", 'MD 无线接收器',0
aSn30Pro:                               ; DATA XREF: __cfstring:cfstr_Sn30Pro↓o
                text "UTF-16LE", 'SN30 Pro 安卓版',0
aV3:                                    ; DATA XREF: __cfstring:cfstr_V3↓o
                text "UTF-16LE", '街机摇杆 V3',0
aV3_0:                                  ; DATA XREF: __cfstring:cfstr_V3_0↓o
                text "UTF-16LE", '街机摇杆 V3 接收器',0
aPro2Xbox:                              ; DATA XREF: __cfstring:cfstr_Pro2Xbox↓o
                text "UTF-16LE", 'Pro 2 Xbox 版',0
aPro2:                                  ; DATA XREF: __cfstring:cfstr_Pro2↓o
                text "UTF-16LE", 'Pro 2 有线版',0
aUsb2:                                  ; DATA XREF: __cfstring:cfstr_Usb2↓o
                text "UTF-16LE", 'USB 无线接收器 2',0
aXbox:                                  ; DATA XREF: __cfstring:cfstr_Xbox↓o
                text "UTF-16LE", '猎户座 Xbox 版',0
aNs:                                    ; DATA XREF: __cfstring:cfstr_Ns↓o
                text "UTF-16LE", '猎户座 NS 版',0
aNs_0:                                  ; DATA XREF: __cfstring:cfstr_Ns_0↓o
                text "UTF-16LE", '猎户座 NS 版接收器',0
aPc:                                    ; DATA XREF: __cfstring:cfstr_Pc↓o
                text "UTF-16LE", '猎户座 PC 版',0
aPc_0:                                  ; DATA XREF: __cfstring:cfstr_Pc_0↓o
                text "UTF-16LE", '猎户座 PC 版接收器',0
aPc_1:                                  ; DATA XREF: __cfstring:cfstr_Pc_1↓o
                text "UTF-16LE", '猎户座有线 PC 版',0
asc_1000385A6:                          ; DATA XREF: __cfstring:stru_10003B598↓o
                text "UTF-16LE", '猎户座青春版无线',0
asc_1000385B8:                          ; DATA XREF: __cfstring:stru_10003B5B8↓o
                text "UTF-16LE", '猎户座青春版无线接收器',0
asc_1000385D0:                          ; DATA XREF: __cfstring:stru_10003B5D8↓o
                text "UTF-16LE", '猎户座青春版有线',0
aPs:                                    ; DATA XREF: __cfstring:cfstr_Ps↓o
                text "UTF-16LE", 'PS 接收器',0
asc_1000385F0:                          ; DATA XREF: __cfstring:stru_10003BC78↓o
                text "UTF-16LE", '选中的固件为 "',0
asc_100038602:                          ; DATA XREF: __cfstring:stru_10003BCB8↓o
                text "UTF-16LE", ' 与当前更新的 "',0
asc_100038616:                          ; DATA XREF: __cfstring:stru_10003BCD8↓o
                text "UTF-16LE", ' 不匹配',0
aKeyvalues_0:                           ; DATA XREF: __cfstring:cfstr_Keyvalues_0↓o
                text "UTF-16LE", 'keyValues参数不是一个字典',0
aFilenameNil:                           ; DATA XREF: __cfstring:cfstr_FilenameNil↓o
                text "UTF-16LE", 'filename参数为nil',0
aFileNil:                               ; DATA XREF: __cfstring:cfstr_FileNil↓o
                text "UTF-16LE", 'file参数为nil',0
aKeyvaluesarray_5:                      ; DATA XREF: __cfstring:cfstr_Keyvaluesarray_5↓o
                text "UTF-16LE", 'keyValuesArray参数不是一个数组',0
asc_1000386A6:                          ; DATA XREF: __cfstring:stru_10003BFF8↓o
                text "UTF-16LE", '不是自定义的模型类',0
aObjectarray:                           ; DATA XREF: __cfstring:cfstr_Objectarray↓o
                text "UTF-16LE", 'objectArray参数不是一个数组',0
__ustring       ends

; ===========================================================================

; Segment type: Regular
__gcc_except_tab segment dword public '' use64
                assume cs:__gcc_except_tab
                ;org 1000386E4h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
                db 0FFh
                db 0FFh
                db    1
                db  10h
                db    0
                db  9Eh
                db    1
                db    0
                db    0
                db  9Eh
                db    1
                db  1Eh
                db 0E1h
                db    1
                db    0
                db 0BCh
                db    1
                db  3Eh ; >
                db    0
                db    0
                db 0FFh
                db  9Bh
                db 0C4h
                db    2
                db    1
                db 0B7h
                db    2
                db    0
                db  47h ; G
                db    0
                db    0
                db  47h ; G
                db  4Bh ; K
                db 0A0h
                db  18h
                db    5
                db  92h
                db    1
                db  20h
                db    0
                db    0
                db 0B2h
                db    1
                db  2Eh ; .
                db 0A0h
                db  18h
                db    5
                db 0E0h
                db    1
                db  27h ; '
                db    0
                db    0
                db  87h
                db    2
                db  15h
                db  98h
                db  18h
                db    5
                db  9Ch
                db    2
                db  29h ; )
                db    0
                db    0
                db 0C5h
                db    2
                db  20h
                db  96h
                db  18h
                db    5
                db 0A2h
                db    3
                db  0Ch
                db  9Eh
                db  18h
                db    5
                db 0AEh
                db    3
                db  4Fh ; O
                db    0
                db    0
                db 0FDh
                db    3
                db  2Bh ; +
                db 0ACh
                db  18h
                db    5
                db 0E4h
                db    4
                db  2Bh ; +
                db 0B2h
                db  18h
                db    5
                db  8Fh
                db    5
                db  0Ch
                db 0F3h
                db  19h
                db    0
                db 0A6h
                db    5
                db  28h ; (
                db 0B0h
                db  18h
                db    5
                db 0DAh
                db    5
                db  0Dh
                db 0F3h
                db  19h
                db    0
                db  86h
                db    6
                db  28h ; (
                db  94h
                db  18h
                db    5
                db 0BDh
                db    6
                db  10h
                db 0F3h
                db  19h
                db    0
                db 0E3h
                db    6
                db  45h ; E
                db  9Ch
                db  18h
                db    5
                db 0A8h
                db    7
                db  2Ch ; ,
                db 0F3h
                db  19h
                db    0
                db  8Dh
                db    8
                db  0Eh
                db  9Ch
                db  18h
                db    5
                db 0A8h
                db    8
                db    9
                db 0F3h
                db  19h
                db    0
                db 0C7h
                db    8
                db  15h
                db  90h
                db  18h
                db    5
                db 0E3h
                db    8
                db  13h
                db  8Eh
                db  18h
                db    5
                db  8Bh
                db    9
                db 0A8h
                db    3
                db  9Ah
                db  18h
                db    5
                db 0B3h
                db  0Ch
                db  0Ch
                db 0F3h
                db  19h
                db    0
                db 0D0h
                db  0Ch
                db  9Ah
                db    1
                db  9Ah
                db  18h
                db    5
                db 0EDh
                db  0Dh
                db    6
                db 0F3h
                db  19h
                db    0
                db  85h
                db  0Eh
                db  14h
                db  9Ah
                db  18h
                db    5
                db  99h
                db  0Eh
                db  34h ; 4
                db 0F3h
                db  19h
                db    0
                db 0D9h
                db  0Eh
                db  7Dh ; }
                db  9Ah
                db  18h
                db    5
                db 0D6h
                db  0Fh
                db  14h
                db    0
                db    0
                db 0EAh
                db  0Fh
                db  6Ch ; l
                db  8Ch
                db  18h
                db    5
                db 0D6h
                db  10h
                db    9
                db 0F3h
                db  19h
                db    0
                db 0E6h
                db  10h
                db  0Dh
                db  8Ch
                db  18h
                db    5
                db  82h
                db  11h
                db  9Ah
                db    1
                db  86h
                db  18h
                db    5
                db  9Ch
                db  12h
                db  20h
                db 0F3h
                db  19h
                db    0
                db 0C8h
                db  12h
                db  20h
                db  9Ah
                db  18h
                db    5
                db 0FEh
                db  12h
                db  15h
                db  8Ah
                db  18h
                db    5
                db  93h
                db  13h
                db  22h ; "
                db    0
                db    0
                db 0B5h
                db  13h
                db  27h ; '
                db  88h
                db  18h
                db    5
                db 0A8h
                db  14h
                db  6Bh ; k
                db 0AEh
                db  18h
                db    5
                db  93h
                db  15h
                db    9
                db 0F3h
                db  19h
                db    0
                db 0A8h
                db  15h
                db  25h ; %
                db  92h
                db  18h
                db    5
                db 0D9h
                db  15h
                db  0Dh
                db 0F3h
                db  19h
                db    0
                db 0F9h
                db  15h
                db 0B7h
                db    1
                db  9Ah
                db  18h
                db    5
                db 0B0h
                db  17h
                db    9
                db 0F3h
                db  19h
                db    0
                db 0CBh
                db  17h
                db  17h
                db  9Ah
                db  18h
                db    5
                db 0E2h
                db  17h
                db  7Dh ; }
                db    0
                db    0
                db 0DFh
                db  18h
                db  37h ; 7
                db 0E9h
                db  19h
                db    0
                db  96h
                db  19h
                db  0Ch
                db 0F3h
                db  19h
                db    0
                db 0B4h
                db  19h
                db  19h
                db 0E9h
                db  19h
                db    0
                db 0CDh
                db  19h
                db  12h
                db 0F3h
                db  19h
                db    0
                db 0DFh
                db  19h
                db  1Fh
                db    0
                db    0
                db    0
                db    0
                db    0
                db  7Dh ; }
                db    1
                db  7Dh ; }
                db  44h ; D
                db  18h
                db    0
                db    0
                db 0FFh
                db  9Bh
                db 0ACh
                db    1
                db    1
                db  9Ah
                db    1
                db    0
                db  2Eh ; .
                db    0
                db    0
                db  2Eh ; .
                db  3Dh ; =
                db 0F9h
                db    8
                db    7
                db  6Bh ; k
                db  19h
                db    0
                db    0
                db  84h
                db    1
                db  31h ; 1
                db 0F9h
                db    8
                db    7
                db 0B5h
                db    1
                db  19h
                db    0
                db    0
                db 0CEh
                db    1
                db  40h ; @
                db 0F9h
                db    8
                db    7
                db  8Eh
                db    2
                db  19h
                db    0
                db    0
                db 0A7h
                db    2
                db  2Ah ; *
                db 0F9h
                db    8
                db    7
                db 0D1h
                db    2
                db  20h
                db    0
                db    0
                db 0F1h
                db    2
                db  11h
                db 0F5h
                db    8
                db    5
                db  95h
                db    3
                db  11h
                db 0F1h
                db    8
                db    5
                db 0ADh
                db    3
                db  9Eh
                db    1
                db 0F7h
                db    8
                db    5
                db 0CBh
                db    4
                db  1Ah
                db    0
                db    0
                db 0E5h
                db    4
                db    6
                db 0F7h
                db    8
                db    5
                db 0FEh
                db    4
                db  2Ch ; ,
                db 0F3h
                db    8
                db    5
                db 0AAh
                db    5
                db  10h
                db    0
                db    0
                db 0BAh
                db    5
                db  18h
                db 0EFh
                db    8
                db    5
                db 0D2h
                db    5
                db 0AAh
                db    1
                db    0
                db    0
                db 0FCh
                db    6
                db  0Ch
                db 0D9h
                db    8
                db    5
                db  88h
                db    7
                db  43h ; C
                db    0
                db    0
                db 0CBh
                db    7
                db  31h ; 1
                db 0F7h
                db    8
                db    5
                db 0FCh
                db    7
                db  3Fh ; ?
                db    0
                db    0
                db 0BBh
                db    8
                db    9
                db 0F7h
                db    8
                db    5
                db 0C4h
                db    8
                db  66h ; f
                db    0
                db    0
                db 0AAh
                db    9
                db  37h ; 7
                db 0AEh
                db  0Ah
                db    0
                db 0E1h
                db    9
                db  17h
                db    0
                db    0
                db 0F8h
                db    9
                db  19h
                db 0AEh
                db  0Ah
                db    0
                db  91h
                db  0Ah
                db  2Dh ; -
                db    0
                db    0
                db    0
                db    0
                db    0
                db  7Dh ; }
                db    1
                db  7Dh ; }
                db    1
                db    0
                db    0
                db    0
                db    0
                db  94h
                db  17h
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    1
                db  0Eh
                db    0
                db  44h ; D
                db    0
                db    0
                db  44h ; D
                db  61h ; a
                db 0D6h
                db    1
                db    0
                db 0A5h
                db    1
                db  44h ; D
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    1
                db  51h ; Q
                db    0
                db  76h ; v
                db    0
                db    0
                db  76h ; v
                db  2Ah ; *
                db 0EFh
                db    6
                db    0
                db 0A0h
                db    1
                db  19h
                db    0
                db    0
                db 0B9h
                db    1
                db  32h ; 2
                db 0EFh
                db    6
                db    0
                db 0EBh
                db    1
                db  68h ; h
                db    0
                db    0
                db 0D3h
                db    2
                db  0Ch
                db 0EFh
                db    6
                db    0
                db 0DFh
                db    2
                db  21h ; !
                db    0
                db    0
                db  80h
                db    3
                db  59h ; Y
                db 0EFh
                db    6
                db    0
                db 0D9h
                db    3
                db  3Ah ; :
                db    0
                db    0
                db  93h
                db    4
                db  55h ; U
                db 0EFh
                db    6
                db    0
                db 0E8h
                db    4
                db  26h ; &
                db    0
                db    0
                db  8Eh
                db    5
                db    9
                db 0EFh
                db    6
                db    0
                db  97h
                db    5
                db  52h ; R
                db    0
                db    0
                db 0E9h
                db    5
                db  0Ch
                db 0EFh
                db    6
                db    0
                db 0F5h
                db    5
                db  93h
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    1
                db  2Fh ; /
                db    0
                db  64h ; d
                db    0
                db    0
                db  64h ; d
                db  45h ; E
                db 0B8h
                db    4
                db    0
                db 0A9h
                db    1
                db  2Ah ; *
                db    0
                db    0
                db 0D3h
                db    1
                db  41h ; A
                db 0B8h
                db    4
                db    0
                db  94h
                db    2
                db  67h ; g
                db    0
                db    0
                db 0FBh
                db    2
                db  0Ch
                db 0B8h
                db    4
                db    0
                db  87h
                db    3
                db  20h
                db    0
                db    0
                db 0A7h
                db    3
                db  32h ; 2
                db 0B8h
                db    4
                db    0
                db 0D9h
                db    3
                db  78h ; x
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    1
                db  10h
                db    0
                db 0B8h
                db    2
                db    0
                db    0
                db 0B8h
                db    2
                db  0Ah
                db 0EFh
                db    2
                db    0
                db 0C2h
                db    2
                db  46h ; F
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    1
                db  0Eh
                db    0
                db  7Ah ; z
                db    0
                db    0
                db  7Ah ; z
                db  59h ; Y
                db  83h
                db    2
                db    0
                db 0D3h
                db    1
                db  49h ; I
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db  9Bh
                db  15h
                db    1
                db    8
                db  22h ; "
                db  35h ; 5
                db  62h ; b
                db    5
                db  57h ; W
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db    0
                db    0
                db  7Dh ; }
                db    1
                db  7Dh ; }
                db    0
                db 0B4h
                db  16h
                db    0
                db    0
__gcc_except_tab ends

; ===========================================================================

; Segment type: Regular
__unwind_info   segment dword public '' use64
                assume cs:__unwind_info
                ;org 1000389D0h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
                db    1
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    9
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db  44h ; D
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db 0D1h
                db  58h ; X
                db    5
                db    1
                db  61h ; a
                db    1
                db    3
                db    1
                db  21h ; !
                db    0
                db    2
                db    1
                db  11h
                db  0Bh
                db    4
                db    1
                db    1
                db    0
                db    1
                db    1
                db 0D1h
                db  58h ; X
                db    5
                db  51h ; Q
                db    0
                db    0
                db    2
                db    2
                db  61h ; a
                db    1
                db    3
                db  51h ; Q
                db    8
                db 0A0h
                db    3
                db    0
                db 0E0h
                db  0Fh
                db    0
                db    0
                db 0B0h
                db    0
                db    0
                db    0
                db  68h ; h
                db    0
                db    0
                db    0
                db  75h ; u
                db 0EAh
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0B0h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Bh
                db 0A9h
                db    1
                db    0
                db 0E4h
                db  86h
                db    3
                db    0
                db  4Ah ; J
                db 0ADh
                db    1
                db    0
                db 0F8h
                db  86h
                db    3
                db    0
                db  3Dh ; =
                db 0C7h
                db    1
                db    0
                db  40h ; @
                db  88h
                db    3
                db    0
                db  75h ; u
                db  0Dh
                db    2
                db    0
                db 0F0h
                db  88h
                db    3
                db    0
                db 0C1h
                db  70h ; p
                db    2
                db    0
                db    4
                db  89h
                db    3
                db    0
                db 0E7h
                db  75h ; u
                db    2
                db    0
                db  5Ch ; \
                db  89h
                db    3
                db    0
                db 0CDh
                db  7Dh ; }
                db    2
                db    0
                db  90h
                db  89h
                db    3
                db    0
                db 0B7h
                db 0D9h
                db    2
                db    0
                db 0A4h
                db  89h
                db    3
                db    0
                db  36h ; 6
                db 0DBh
                db    2
                db    0
                db 0B8h
                db  89h
                db    3
                db    0
                db    3
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db  60h ; `
                db    1
                db  8Ch
                db    5
                db  0Bh
                db    0
                db    0
                db    0
                db    0
                db    1
                db 0D9h
                db  0Ch
                db    0
                db    0
                db 0ADh
                db  0Dh
                db    0
                db    5
                db 0D5h
                db  0Dh
                db    0
                db    1
                db  89h
                db  12h
                db    0
                db    0
                db  9Ch
                db  12h
                db    0
                db    3
                db 0F1h
                db  12h
                db    0
                db    0
                db    4
                db  13h
                db    0
                db    3
                db  3Ch ; <
                db  13h
                db    0
                db    1
                db 0FBh
                db  19h
                db    0
                db    0
                db  3Eh ; >
                db  1Ah
                db    0
                db    3
                db 0ACh
                db  1Ah
                db    0
                db    1
                db  55h ; U
                db  1Fh
                db    0
                db    0
                db  98h
                db  1Fh
                db    0
                db    1
                db 0BFh
                db  21h ; !
                db    0
                db    0
                db 0FBh
                db  21h ; !
                db    0
                db    1
                db  60h ; `
                db  23h ; #
                db    0
                db    0
                db 0BFh
                db  23h ; #
                db    0
                db    2
                db 0A1h
                db  24h ; $
                db    0
                db    0
                db 0C0h
                db  24h ; $
                db    0
                db    1
                db  14h
                db  44h ; D
                db    0
                db    3
                db  58h ; X
                db  44h ; D
                db    0
                db    1
                db  5Bh ; [
                db  47h ; G
                db    0
                db    2
                db 0D0h
                db  47h ; G
                db    0
                db    1
                db 0C7h
                db  4Dh ; M
                db    0
                db    0
                db 0EDh
                db  4Dh ; M
                db    0
                db    1
                db  69h ; i
                db  51h ; Q
                db    0
                db    4
                db  3Bh ; ;
                db  52h ; R
                db    0
                db    1
                db 0B6h
                db  58h ; X
                db    0
                db    0
                db 0C3h
                db  59h ; Y
                db    0
                db    5
                db  49h ; I
                db  5Ah ; Z
                db    0
                db    0
                db 0DCh
                db  5Bh ; [
                db    0
                db    2
                db  8Ah
                db  5Ch ; \
                db    0
                db    0
                db 0EAh
                db  5Ch ; \
                db    0
                db    4
                db  17h
                db  5Fh ; _
                db    0
                db    0
                db  29h ; )
                db  5Fh ; _
                db    0
                db    1
                db  15h
                db  65h ; e
                db    0
                db    0
                db 0C5h
                db  65h ; e
                db    0
                db    4
                db  6Eh ; n
                db  66h ; f
                db    0
                db    0
                db 0E6h
                db  66h ; f
                db    0
                db    4
                db 0FEh
                db  67h ; g
                db    0
                db    5
                db 0AFh
                db  68h ; h
                db    0
                db    0
                db  0Dh
                db  69h ; i
                db    0
                db    2
                db 0DFh
                db  69h ; i
                db    0
                db    0
                db  80h
                db  6Ah ; j
                db    0
                db    1
                db 0C0h
                db  6Fh ; o
                db    0
                db    0
                db  6Dh ; m
                db  70h ; p
                db    0
                db    5
                db  9Ah
                db  70h ; p
                db    0
                db    1
                db  88h
                db  71h ; q
                db    0
                db    0
                db    2
                db  72h ; r
                db    0
                db    4
                db  30h ; 0
                db  73h ; s
                db    0
                db    1
                db    2
                db  74h ; t
                db    0
                db    5
                db  64h ; d
                db  74h ; t
                db    0
                db    0
                db  0Ch
                db  75h ; u
                db    0
                db    5
                db  4Ah ; J
                db  75h ; u
                db    0
                db    0
                db  97h
                db  75h ; u
                db    0
                db    1
                db    7
                db  77h ; w
                db    0
                db    2
                db  68h ; h
                db  79h ; y
                db    0
                db    0
                db  8Dh
                db  7Ah ; z
                db    0
                db    3
                db 0DEh
                db  7Ah ; z
                db    0
                db    0
                db  39h ; 9
                db  7Bh ; {
                db    0
                db    1
                db    4
                db  82h
                db    0
                db    2
                db  1Fh
                db  83h
                db    0
                db    0
                db  7Ah ; z
                db  83h
                db    0
                db    2
                db 0CEh
                db  83h
                db    0
                db    1
                db  65h ; e
                db  85h
                db    0
                db    0
                db  15h
                db  86h
                db    0
                db    1
                db  2Ah ; *
                db  89h
                db    0
                db    0
                db 0AFh
                db  89h
                db    0
                db    1
                db  0Ch
                db  8Dh
                db    0
                db    4
                db  71h ; q
                db  8Dh
                db    0
                db    0
                db 0D9h
                db  8Dh
                db    0
                db    1
                db 0FEh
                db  8Eh
                db    0
                db    0
                db  75h ; u
                db  8Fh
                db    0
                db    1
                db  2Bh ; +
                db  91h
                db    0
                db    3
                db 0BFh
                db  91h
                db    0
                db    4
                db  58h ; X
                db  95h
                db    0
                db    0
                db  6Eh ; n
                db  95h
                db    0
                db    4
                db 0D3h
                db  96h
                db    0
                db    0
                db 0FDh
                db  96h
                db    0
                db    4
                db  56h ; V
                db  98h
                db    0
                db    5
                db  9Ah
                db  98h
                db    0
                db    4
                db  14h
                db  9Bh
                db    0
                db    1
                db 0B2h
                db  9Dh
                db    0
                db    4
                db  53h ; S
                db  9Eh
                db    0
                db    3
                db  88h
                db  9Eh
                db    0
                db    0
                db  7Ah ; z
                db  9Fh
                db    0
                db    1
                db 0C5h
                db 0A5h
                db    0
                db    4
                db  2Ah ; *
                db 0A6h
                db    0
                db    1
                db  72h ; r
                db 0A8h
                db    0
                db    4
                db 0D7h
                db 0A8h
                db    0
                db    2
                db 0CBh
                db 0AAh
                db    0
                db    0
                db  61h ; a
                db 0ABh
                db    0
                db    4
                db  8Bh
                db 0AEh
                db    0
                db    1
                db 0D2h
                db 0AFh
                db    0
                db    2
                db  70h ; p
                db 0B0h
                db    0
                db    0
                db 0E6h
                db 0B0h
                db    0
                db    1
                db  71h ; q
                db 0B3h
                db    0
                db    4
                db  19h
                db 0B4h
                db    0
                db    1
                db  14h
                db 0BDh
                db    0
                db    0
                db  8Ch
                db 0BDh
                db    0
                db    4
                db  39h ; 9
                db 0BFh
                db    0
                db    1
                db  57h ; W
                db 0C3h
                db    0
                db    0
                db  81h
                db 0C4h
                db    0
                db    5
                db 0D4h
                db 0C4h
                db    0
                db    0
                db 0F1h
                db 0C4h
                db    0
                db    1
                db 0E7h
                db 0CAh
                db    0
                db    4
                db  82h
                db 0CBh
                db    0
                db    1
                db  46h ; F
                db 0DAh
                db    0
                db    0
                db  4Ch ; L
                db 0DAh
                db    0
                db    1
                db 0E2h
                db 0EEh
                db    0
                db    5
                db  23h ; #
                db 0EFh
                db    0
                db    0
                db  87h
                db 0EFh
                db    0
                db    1
                db 0D7h
                db  3Bh ; ;
                db    1
                db    2
                db  34h ; 4
                db  3Ch ; <
                db    1
                db    1
                db 0B4h
                db  56h ; V
                db    1
                db    3
                db 0DAh
                db  56h ; V
                db    1
                db    1
                db 0E0h
                db  57h ; W
                db    1
                db    0
                db 0E6h
                db  57h ; W
                db    1
                db    1
                db  0Dh
                db  59h ; Y
                db    1
                db    4
                db  7Dh ; }
                db  59h ; Y
                db    1
                db    3
                db 0DDh
                db  59h ; Y
                db    1
                db    1
                db    7
                db  5Fh ; _
                db    1
                db    0
                db  87h
                db  5Fh ; _
                db    1
                db    3
                db 0DFh
                db  5Fh ; _
                db    1
                db    1
                db  54h ; T
                db  64h ; d
                db    1
                db    2
                db 0CAh
                db  64h ; d
                db    1
                db    1
                db 0EAh
                db  68h ; h
                db    1
                db    0
                db 0F0h
                db  68h ; h
                db    1
                db    1
                db  53h ; S
                db  6Bh ; k
                db    1
                db    0
                db  59h ; Y
                db  6Bh ; k
                db    1
                db    1
                db  1Ah
                db  6Dh ; m
                db    1
                db    0
                db  20h
                db  6Dh ; m
                db    1
                db    1
                db  95h
                db  74h ; t
                db    1
                db    0
                db 0CBh
                db  78h ; x
                db    1
                db    5
                db 0BCh
                db  7Ah ; z
                db    1
                db    1
                db  72h ; r
                db  7Dh ; }
                db    1
                db    0
                db 0B2h
                db  7Dh ; }
                db    1
                db    1
                db 0A0h
                db  7Fh ; 
                db    1
                db    3
                db  1Ah
                db  80h
                db    1
                db    0
                db  92h
                db  80h
                db    1
                db    1
                db  75h ; u
                db  88h
                db    1
                db    4
                db 0F4h
                db  88h
                db    1
                db    1
                db 0E8h
                db  8Bh
                db    1
                db    0
                db  78h ; x
                db  8Ch
                db    1
                db    3
                db 0FEh
                db  8Ch
                db    1
                db    1
                db  21h ; !
                db  90h
                db    1
                db    0
                db  78h ; x
                db  90h
                db    1
                db    5
                db 0C4h
                db  90h
                db    1
                db    1
                db  22h ; "
                db  94h
                db    1
                db    0
                db  6Dh ; m
                db  94h
                db    1
                db    3
                db 0ADh
                db  94h
                db    1
                db    0
                db 0F8h
                db  94h
                db    1
                db    3
                db 0ACh
                db  95h
                db    1
                db    0
                db 0E2h
                db  95h
                db    1
                db    5
                db  0Ah
                db  96h
                db    1
                db    1
                db  78h ; x
                db  97h
                db    1
                db    0
                db 0B3h
                db  97h
                db    1
                db    1
                db 0C4h
                db  98h
                db    1
                db    0
                db 0F1h
                db  98h
                db    1
                db    3
                db  3Bh ; ;
                db  99h
                db    1
                db    9
                db  35h ; 5
                db  9Ah
                db    1
                db    0
                db  5Ah ; Z
                db  9Ah
                db    1
                db    3
                db 0AEh
                db  9Ah
                db    1
                db    0
                db 0D8h
                db  9Ah
                db    1
                db    3
                db  2Eh ; .
                db  9Bh
                db    1
                db    0
                db  42h ; B
                db  9Bh
                db    1
                db    1
                db  6Ah ; j
                db  9Dh
                db    1
                db    6
                db  68h ; h
                db 0AAh
                db    1
                db    3
                db 0DCh
                db 0AAh
                db    1
                db    0
                db 0F0h
                db 0AAh
                db    1
                db    1
                db  20h
                db 0AFh
                db    1
                db    0
                db  34h ; 4
                db 0AFh
                db    1
                db    1
                db 0A6h
                db 0B4h
                db    1
                db    0
                db 0E7h
                db 0B4h
                db    1
                db    1
                db  5Dh ; ]
                db 0B7h
                db    1
                db    6
                db  9Bh
                db 0BCh
                db    1
                db    1
                db    9
                db 0C0h
                db    1
                db    2
                db  4Dh ; M
                db 0C0h
                db    1
                db    3
                db    2
                db 0C1h
                db    1
                db    0
                db  45h ; E
                db 0C1h
                db    1
                db    1
                db  0Dh
                db 0C4h
                db    1
                db    4
                db 0CDh
                db 0C6h
                db    1
                db    0
                db 0DFh
                db 0C6h
                db    1
                db    4
                db  51h ; Q
                db 0C7h
                db    1
                db    0
                db  63h ; c
                db 0C7h
                db    1
                db    4
                db 0D5h
                db 0C7h
                db    1
                db    0
                db 0F9h
                db 0C7h
                db    1
                db    4
                db  6Bh ; k
                db 0C8h
                db    1
                db    0
                db  7Dh ; }
                db 0C8h
                db    1
                db    4
                db 0EFh
                db 0C8h
                db    1
                db    0
                db    1
                db 0C9h
                db    1
                db    4
                db  73h ; s
                db 0C9h
                db    1
                db    0
                db  85h
                db 0C9h
                db    1
                db    2
                db 0E7h
                db 0C9h
                db    1
                db    0
                db 0F9h
                db 0C9h
                db    1
                db    2
                db  5Bh ; [
                db 0CAh
                db    1
                db    0
                db  6Dh ; m
                db 0CAh
                db    1
                db    2
                db 0CFh
                db 0CAh
                db    1
                db    0
                db 0E1h
                db 0CAh
                db    1
                db    2
                db  43h ; C
                db 0CBh
                db    1
                db    0
                db  55h ; U
                db 0CBh
                db    1
                db    2
                db 0B7h
                db 0CBh
                db    1
                db    0
                db 0C9h
                db 0CBh
                db    1
                db    2
                db  2Bh ; +
                db 0CCh
                db    1
                db    0
                db  3Dh ; =
                db 0CCh
                db    1
                db    2
                db  9Fh
                db 0CCh
                db    1
                db    0
                db 0B1h
                db 0CCh
                db    1
                db    2
                db  13h
                db 0CDh
                db    1
                db    0
                db  25h ; %
                db 0CDh
                db    1
                db    2
                db  87h
                db 0CDh
                db    1
                db    0
                db  99h
                db 0CDh
                db    1
                db    2
                db 0FBh
                db 0CDh
                db    1
                db    0
                db  0Dh
                db 0CEh
                db    1
                db    2
                db  6Fh ; o
                db 0CEh
                db    1
                db    0
                db 0A5h
                db 0CEh
                db    1
                db    2
                db  32h ; 2
                db 0CFh
                db    1
                db    1
                db 0BEh
                db 0D7h
                db    1
                db    0
                db 0DCh
                db 0D7h
                db    1
                db    3
                db  24h ; $
                db 0D8h
                db    1
                db    1
                db  9Ch
                db 0D9h
                db    1
                db    3
                db  2Ch ; ,
                db 0DAh
                db    1
                db    1
                db 0CBh
                db 0DAh
                db    1
                db    0
                db 0A1h
                db 0DBh
                db    1
                db    5
                db  38h ; 8
                db 0DCh
                db    1
                db    1
                db 0A6h
                db 0E3h
                db    1
                db    2
                db 0F2h
                db 0E3h
                db    1
                db    4
                db 0D6h
                db 0E4h
                db    1
                db    0
                db  79h ; y
                db 0E5h
                db    1
                db    5
                db 0D9h
                db 0E5h
                db    1
                db    1
                db  3Dh ; =
                db 0FCh
                db    1
                db    0
                db 0FEh
                db 0FCh
                db    1
                db    5
                db  60h ; `
                db 0FDh
                db    1
                db    0
                db  95h
                db 0FDh
                db    1
                db    8
                db  7Eh ; ~
                db 0FEh
                db    1
                db    1
                db 0C5h
                db    1
                db    2
                db    0
                db  0Bh
                db    2
                db    2
                db    5
                db  40h ; @
                db    2
                db    2
                db    0
                db  68h ; h
                db    2
                db    2
                db    1
                db 0B0h
                db    6
                db    2
                db    2
                db  91h
                db    8
                db    2
                db    1
                db 0B5h
                db  15h
                db    2
                db    0
                db 0BBh
                db  15h
                db    2
                db    1
                db  89h
                db  18h
                db    2
                db    0
                db  5Ch ; \
                db  1Ah
                db    2
                db    5
                db  10h
                db  1Bh
                db    2
                db    1
                db 0B5h
                db  1Ch
                db    2
                db    0
                db 0FFh
                db  1Ch
                db    2
                db    1
                db 0ECh
                db  23h ; #
                db    2
                db    4
                db  8Bh
                db  24h ; $
                db    2
                db    0
                db 0CAh
                db  24h ; $
                db    2
                db    4
                db 0E2h
                db  25h ; %
                db    2
                db    1
                db 0B5h
                db  30h ; 0
                db    2
                db    4
                db 0BBh
                db  32h ; 2
                db    2
                db    0
                db  23h ; #
                db  33h ; 3
                db    2
                db    5
                db  61h ; a
                db  33h ; 3
                db    2
                db    1
                db  7Dh ; }
                db  3Bh ; ;
                db    2
                db    0
                db  97h
                db  3Bh ; ;
                db    2
                db    1
                db  7Bh ; {
                db  3Dh ; =
                db    2
                db    5
                db 0C6h
                db  3Dh ; =
                db    2
                db    1
                db 0C8h
                db  41h ; A
                db    2
                db    3
                db  3Bh ; ;
                db  43h ; C
                db    2
                db    1
                db  74h ; t
                db  4Ah ; J
                db    2
                db    3
                db 0DAh
                db  4Ah ; J
                db    2
                db    1
                db 0CFh
                db  4Dh ; M
                db    2
                db    0
                db 0F4h
                db  4Eh ; N
                db    2
                db    3
                db  45h ; E
                db  4Fh ; O
                db    2
                db    1
                db 0DEh
                db  50h ; P
                db    2
                db    0
                db 0EFh
                db  50h ; P
                db    2
                db    1
                db  20h
                db  52h ; R
                db    2
                db    2
                db  71h ; q
                db  52h ; R
                db    2
                db    1
                db    9
                db  54h ; T
                db    2
                db    0
                db  1Dh
                db  54h ; T
                db    2
                db    4
                db  2Eh ; .
                db  55h ; U
                db    2
                db    5
                db 0D7h
                db  55h ; U
                db    2
                db    0
                db  97h
                db  56h ; V
                db    2
                db    1
                db  38h ; 8
                db  59h ; Y
                db    2
                db    0
                db 0E1h
                db  59h ; Y
                db    2
                db    3
                db  22h ; "
                db  5Ah ; Z
                db    2
                db    1
                db  2Bh ; +
                db  5Ch ; \
                db    2
                db    0
                db  31h ; 1
                db  5Ch ; \
                db    2
                db    1
                db  2Dh ; -
                db  5Eh ; ^
                db    2
                db    0
                db 0F7h
                db  5Eh ; ^
                db    2
                db    5
                db  48h ; H
                db  5Fh ; _
                db    2
                db    2
                db  31h ; 1
                db  60h ; `
                db    2
                db    3
                db 0E1h
                db  60h ; `
                db    2
                db    6
                db  69h ; i
                db  64h ; d
                db    2
                db    0
                db  8Eh
                db  64h ; d
                db    2
                db    2
                db  10h
                db  65h ; e
                db    2
                db    3
                db  40h ; @
                db  65h ; e
                db    2
                db    5
                db  67h ; g
                db  65h ; e
                db    2
                db    2
                db    7
                db  66h ; f
                db    2
                db    6
                db  58h ; X
                db  68h ; h
                db    2
                db    2
                db 0E1h
                db  68h ; h
                db    2
                db    1
                db 0B4h
                db  6Dh ; m
                db    2
                db    3
                db 0EDh
                db  6Dh ; m
                db    2
                db    6
                db  75h ; u
                db  6Fh ; o
                db    2
                db    2
                db 0F0h
                db  6Fh ; o
                db    2
                db    3
                db 0A6h
                db  70h ; p
                db    2
                db    2
                db  27h ; '
                db  71h ; q
                db    2
                db    0
                db  94h
                db  71h ; q
                db    2
                db    1
                db 0E0h
                db 0B1h
                db    2
                db    0
                db  29h ; )
                db 0B3h
                db    2
                db    5
                db 0C0h
                db 0B3h
                db    2
                db    2
                db  83h
                db 0B4h
                db    2
                db    3
                db  1Eh
                db 0B5h
                db    2
                db    1
                db 0A4h
                db 0B5h
                db    2
                db    2
                db    5
                db 0B6h
                db    2
                db    0
                db 0E9h
                db 0B6h
                db    2
                db    2
                db  84h
                db 0B7h
                db    2
                db    1
                db  72h ; r
                db 0B9h
                db    2
                db    3
                db 0B7h
                db 0B9h
                db    2
                db    1
                db  91h
                db 0BFh
                db    2
                db    3
                db  6Dh ; m
                db 0C0h
                db    2
                db    0
                db 0D9h
                db 0C0h
                db    2
                db    4
                db  12h
                db 0C2h
                db    2
                db    0
                db  52h ; R
                db 0C2h
                db    2
                db    3
                db 0DFh
                db 0C2h
                db    2
                db    0
                db  2Dh ; -
                db 0C3h
                db    2
                db    5
                db  55h ; U
                db 0C3h
                db    2
                db    0
                db  64h ; d
                db 0C4h
                db    2
                db    5
                db 0B8h
                db 0C4h
                db    2
                db    0
                db 0E3h
                db 0C5h
                db    2
                db    2
                db  70h ; p
                db 0C6h
                db    2
                db    0
                db  84h
                db 0C6h
                db    2
                db    1
                db  80h
                db 0C8h
                db    2
                db    0
                db 0A2h
                db 0C8h
                db    2
                db    1
                db 0D7h
                db 0C9h
                db    2
                db  0Ah
                db 0F3h
                db 0CAh
                db    2
                db    3
                db  2Ch ; ,
                db 0CBh
                db    2
                db    5
                db  56h ; V
                db 0CBh
                db    2
                db    8
                db 0D9h
                db 0CBh
                db    2
                db    5
                db    3
                db 0CCh
                db    2
                db    0
                db  2Eh ; .
                db 0CDh
                db    2
                db    4
                db  77h ; w
                db 0CDh
                db    2
                db    2
                db  99h
                db 0CEh
                db    2
                db    4
                db  87h
                db 0CFh
                db    2
                db    1
                db  3Fh ; ?
                db 0D2h
                db    2
                db    3
                db 0C1h
                db 0D2h
                db    2
                db    0
                db  2Bh ; +
                db 0D3h
                db    2
                db    5
                db  60h ; `
                db 0D3h
                db    2
                db  0Bh
                db 0D0h
                db 0D3h
                db    2
                db  0Ch
                db 0E0h
                db 0D3h
                db    2
                db  0Dh
                db 0E0h
                db 0D4h
                db    2
                db  0Eh
                db 0F0h
                db 0D4h
                db    2
                db  0Fh
                db 0B0h
                db 0D6h
                db    2
                db  10h
                db 0F0h
                db 0D9h
                db    2
                db    0
                db  10h
                db 0DAh
                db    2
                db    7
                db  20h
                db 0DAh
                db    2
                db  11h
                db  40h ; @
                db 0DAh
                db    2
                db  12h
                db  60h ; `
                db 0DAh
                db    2
                db    7
                db  80h
                db 0DAh
                db    2
                db  13h
                db  21h ; !
                db    0
                db    2
                db  51h ; Q
                db  11h
                db  0Bh
                db    4
                db  51h ; Q
                db  0Bh
                db  0Ch
                db    4
                db    2
                db  18h
                db    0
                db    0
                db    4
                db  20h
                db  10h
                db    8
                db    2
                db  38h ; 8
                db    0
                db    0
                db    4
                db    0
                db  18h
                db  0Ah
                db    2
                db    0
                db  18h
                db  14h
                db    2
                db  58h ; X
                db    0
                db    0
                db    4
                db  78h ; x
                db    0
                db    0
                db    4
                db  98h
                db    0
                db    0
                db    4
__unwind_info   ends

; ===========================================================================

; Segment type: Regular
; Segment alignment 'qword' can not be represented in assembly
__eh_frame      segment para public '' use64
                assume cs:__eh_frame
                ;org 100039038h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
                db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db  7Ah ; z
                db  52h ; R
                db    0
                db    1
                db  78h ; x
                db  10h
                db    1
                db  10h
                db  0Ch
                db    7
                db    8
                db  90h
                db    1
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  58h ; X
                db  53h ; S
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  0Ah
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  3Ch ; <
                db    0
                db    0
                db    0
                db  48h ; H
                db  54h ; T
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    7
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  5Ch ; \
                db    0
                db    0
                db    0
                db  68h ; h
                db  59h ; Y
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  7Ch ; |
                db    0
                db    0
                db    0
                db  68h ; h
                db  59h ; Y
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  9Ch
                db    0
                db    0
                db    0
                db  88h
                db  59h ; Y
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
__eh_frame      ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__got           segment para public 'DATA' use64
                assume cs:__got
                ;org 10003A000h
off_10003A000   dq offset xmmword_10004A2B0
                                        ; DATA XREF: -[SHIDBootPro2 getPro2Version]+102↑r
                                        ; -[SHIDBootPro2 setPro2Version]+FB↑r
___objc_personality_v0_ptr dq offset ___objc_personality_v0
_objc_msgSend_ptr dq offset _objc_msgSend
                                        ; DATA XREF: +[S8BitdoDevice getNameWithPid:]+3E↑r
                                        ; +[S8BitdoDevice getNameWithPid:]+EB↑r ...
_objc_release_ptr dq offset _objc_release
                                        ; DATA XREF: +[S8BitdoDevice getNameWithPid:]:loc_100001138↑r
                                        ; -[S8BitdoDevice details]+1E2↑r ...
_objc_retain_ptr dq offset _objc_retain ; DATA XREF: +[S8BitdoDevice getNameWithPid:]+6F↑r
                                        ; -[S8BitdoDevice details]+80↑r ...
; void *(*_NSConcreteStackBlock_ptr)[32]
__NSConcreteStackBlock_ptr dq offset __NSConcreteStackBlock
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+1AF↑r
                                        ; sub_100002039+4F↑r ...
___stack_chk_guard_ptr dq offset ___stack_chk_guard
                                        ; DATA XREF: +[S8BitdoDevice getNameWithPid:]+14↑r
                                        ; +[S8BitdoDevice getNameWithPid:]:loc_100001159↑r ...
__imp___availability_version_check_ptr dq offset __imp___availability_version_check
                                        ; DATA XREF: sub_10002E690+37↑r
                                        ; sub_10002E690+41↑r
; struct dispatch_queue_s *_dispatch_main_q_ptr
__dispatch_main_q_ptr dq offset __dispatch_main_q
                                        ; DATA XREF: sub_100002039+90↑r
                                        ; sub_100002039+1CF↑r ...
dyld_stub_binder_ptr dq offset dyld_stub_binder
                                        ; DATA XREF: __stub_helper:000000010002EC76↑r
_NSApp_ptr      dq offset _NSApp        ; DATA XREF: -[ViewController closeWindow:]+13D↑r
_NSFontAttributeName_ptr dq offset _NSFontAttributeName
                                        ; DATA XREF: -[SButton drawRect:]+FF↑r
_NSForegroundColorAttributeName_ptr dq offset _NSForegroundColorAttributeName
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+14B7↑r
                                        ; -[SButton drawRect:]+13A↑r
_NSParagraphStyleAttributeName_ptr dq offset _NSParagraphStyleAttributeName
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+14E5↑r
_NSWindowWillCloseNotification_ptr dq offset _NSWindowWillCloseNotification
                                        ; DATA XREF: -[ViewController viewDidLoad]+55C↑r
_NSDefaultRunLoopMode_ptr dq offset _NSDefaultRunLoopMode
                                        ; DATA XREF: -[UpdateView initTimer]+D4↑r
                                        ; -[HomeView awakeFromNib]+A3↑r
_OBJC_EHTYPE_$_NSException_ptr dq offset _OBJC_EHTYPE_$_NSException
_kCFAllocatorDefault_ptr dq offset _kCFAllocatorDefault
                                        ; DATA XREF: -[SHIDBoot open]+1F↑r
                                        ; -[SHIDBootPro2 open]+18↑r ...
_kCFRunLoopDefaultMode_ptr dq offset _kCFRunLoopDefaultMode
                                        ; DATA XREF: -[SHIDBoot open]+2E8↑r
                                        ; -[SHIDBootPro2 open]+26B↑r ...
__got           ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__const         segment para public 'DATA' use64
                assume cs:__const
                ;org 10003A098h
unk_10003A098   db    0                 ; DATA XREF: sub_100002039+71↑o
                                        ; sub_100002039+1A3↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000227C
                dq offset sub_1000022AC
                dq offset aV80          ; "v8@?0"
                db    0
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A0C8   db    0                 ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+1D1↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_1000022E4
                dq offset sub_1000022AC
                dq offset aV320Nsdata8Nsu ; "v32@?0@\"NSData\"8@\"NSURLResponse\"16@"...
                db    0
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A0F8   db    0                 ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+314↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  48h ; H
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100002A1E
                dq offset sub_100002A60
                dq offset aV320Nsurl8Nsur ; "v32@?0@\"NSURL\"8@\"NSURLResponse\"16@"...
                db    0
                db    3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A128   db    0                 ; DATA XREF: +[SHttp getNewVersion:version:beta:success:failure:]+280↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100002F52
                dq offset sub_100002F69
                dq offset aV320Nsdata8Nsu ; "v32@?0@\"NSData\"8@\"NSURLResponse\"16@"...
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A158   db    0                 ; DATA XREF: __const:000000010003A190↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV320Nsdata8Nsu ; "v32@?0@\"NSData\"8@\"NSURLResponse\"16@"...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_10003A178   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: +[SHttp StatistcsFirmware:ID:]+1C8↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000319F
                dq offset unk_10003A158
unk_10003A198   db    0                 ; DATA XREF: +[SHttp sendRecordActivity:]+2A↑o
                                        ; sub_10000339F+60↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV160Nsstring8 ; "v16@?0@\"NSString\"8"
                dq offset unk_100036726
unk_10003A1B8   db    0                 ; DATA XREF: +[SHttp sendRecordActivity:IP:]+313↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV320Nsdata8Nsu ; "v32@?0@\"NSData\"8@\"NSURLResponse\"16@"...
                dq offset unk_100036726
unk_10003A1D8   db    0                 ; DATA XREF: +[SHttp HttpGetPageHtml:URL:encoding:]+D9↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  38h ; 8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100002F52
                dq offset sub_100002F69
                dq offset aV320Nsdata8Nsu ; "v32@?0@\"NSData\"8@\"NSURLResponse\"16@"...
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A208   db    0                 ; DATA XREF: -[ViewController betaClick]+28F↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV160q8       ; "v16@?0q8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A238   db    0                 ; DATA XREF: sub_100006F09+51B↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  29h ; )
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV80          ; "v8@?0"
                dq offset unk_100036726
unk_10003A258   db    0                 ; DATA XREF: +[SHIDBootPro2 allocWithZone:]+27↑o
                                        ; +[SHIDBootHJZ allocWithZone:]+27↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV80          ; "v8@?0"
                dq offset unk_100036726
unk_10003A278   db    0                 ; DATA XREF: -[SHIDBootPro2 flashCRC]+41↑o
                                        ; -[SHIDBootPro2 eraseFlashJL:len:TotalEraseLen:]+2F↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  34h ; 4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV1608        ; "v16@?0*8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A2A8   db    0                 ; DATA XREF: -[SHIDBootPro2 writeSave_Head_4K]+2A↑o
                                        ; -[SHIDBootPro2 readPID]+5B↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV1608        ; "v16@?0*8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A2D8   db    0                 ; DATA XREF: -[SHIDBootPro2 writeFirmwareJL]+2FE↑o
                                        ; -[SHIDBootPro2 writeFirmware]+3E7↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV1608        ; "v16@?0*8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A308   db    0                 ; DATA XREF: -[SHIDBootPro2 updateJL:]+2A↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV1608        ; "v16@?0*8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A338   db    0                 ; DATA XREF: sub_10000A19F+293↑o
                                        ; -[UpdateView SHIDBootAddDevice:hid:]+116↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV80          ; "v8@?0"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A368   db    0                 ; DATA XREF: -[SHIDBootPro2 readGamepadInfo:]+42↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  29h ; )
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV1608        ; "v16@?0*8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A398   db    0                 ; DATA XREF: -[SHIDBootPro2 getPro2Version]+E0↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Ah ; *
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV1608        ; "v16@?0*8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A3C8   db    0                 ; DATA XREF: __const:000000010003A400↓o
                                        ; __const:000000010003A770↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV1608        ; "v16@?0*8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_10003A3E8   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[SHIDBootPro2 resetGamepad]+B↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000C091
                dq offset unk_10003A3C8
unk_10003A408   db    0                 ; DATA XREF: __const:000000010003A440↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aQ240Firmware8F ; "q24@?0@\"Firmware\"8@\"Firmware\"16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_10003A428   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+4C↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_1000125F7
                dq offset unk_10003A408
unk_10003A448   db    0                 ; DATA XREF: -[UpdateView loadUpdateFirmwae]+147↑o
                                        ; -[UpdateView loadUpdateFirmwae:]+10C↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV160Nsmutablea ; "v16@?0@\"NSMutableArray\"8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A478   db    0                 ; DATA XREF: -[UpdateView loadUpdateFirmwae]+16C↑o
                                        ; -[UpdateView loadUpdateFirmwae:]+131↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV160Nserror8 ; "v16@?0@\"NSError\"8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A4A8   db    0                 ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+126↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100016694
                dq offset sub_1000022AC
                dq offset aV160Nsstring8 ; "v16@?0@\"NSString\"8"
                db    0
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A4D8   db    0                 ; DATA XREF: __const:000000010003A510↓o
                                        ; __const:000000010003A530↓o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV160q8       ; "v16@?0q8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_10003A4F8   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: sub_1000166BA+D3↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_1000167C0
                dq offset unk_10003A4D8
off_10003A518   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[UpdateView SHIDBootNotSupportFirmware:]+136↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_1000178CA
                dq offset unk_10003A4D8
off_10003A538   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+231↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100017B33
                dq offset unk_10003A4D8
off_10003A558   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[UpdateView SHIDBootErrorString:msg:]+FE↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100017CFA
                dq offset unk_10003A4D8
unk_10003A578   db    0                 ; DATA XREF: __const:000000010003A5B0↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV80          ; "v8@?0"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_10003A598   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: sub_10002E9D0+B↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10001A023
                dq offset unk_10003A578
unk_10003A5B8   db    0                 ; DATA XREF: +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]+88↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10001AA8E
                dq offset sub_10001AAA5
                dq offset aV240816      ; "v24@?0#8*16"
                db  10h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A5E8   db    0                 ; DATA XREF: -[NSObject mj_setKeyValues:context:]+ED↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10001BA48
                dq offset sub_10001BA82
                dq offset aV240Mjproperty ; "v24@?0@\"MJProperty\"8*16"
                dq offset a4            ; "4`"
unk_10003A618   db    0                 ; DATA XREF: sub_10001C73D+343↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10001CFE9
                dq offset sub_10001D02D
                dq offset aV320Mjproperty ; "v32@?0@\"MJPropertyKey\"8Q16*24"
                db  10h
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A648   db    0                 ; DATA XREF: -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+15E↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  58h ; X
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10001D060
                dq offset sub_10001D0A1
                dq offset aV240Mjproperty ; "v24@?0@\"MJProperty\"8*16"
                dq offset a5            ; "5`"
unk_10003A678   db    0                 ; DATA XREF: -[HomeView loadNewGameVersion:version:beta:]+8A↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV160Firmware8 ; "v16@?0@\"Firmware\"8"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A6A8   db    0                 ; DATA XREF: __const:000000010003A6E0↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV160Nserror8 ; "v16@?0@\"NSError\"8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_10003A6C8   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[HomeView loadNewGameVersion:version:beta:]+A0↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100022595
                dq offset unk_10003A6A8
off_10003A6E8   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[HomeView helpButtonClick:]+1A4↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100022869
                dq offset unk_10003A4D8
unk_10003A708   db    0                 ; DATA XREF: sub_1000246AF+309↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV80          ; "v8@?0"
                dq offset unk_100036726
unk_10003A728   db    0                 ; DATA XREF: -[NSObject mj_encode:]+8D↑o
                                        ; -[NSObject mj_decode:]+8D↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100025A54
                dq offset sub_100025A87
                dq offset aV240Mjproperty ; "v24@?0@\"MJProperty\"8*16"
                db    0
                db    4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_10003A758   dq offset __NSConcreteGlobalBlock
                                        ; DATA XREF: -[SHIDBootHJZ send_usb_packet_cut]+14A↑o
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                dq offset sub_100026918
                dq offset unk_10003A3C8
unk_10003A778   db    0                 ; DATA XREF: +[NSObject propertyKey:]+130↑o
                                        ; +[NSObject propertyKey:]+2C3↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_1000274F0
                dq offset sub_100027520
                dq offset aV240816      ; "v24@?0#8*16"
                db  10h
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A7A8   db    0                 ; DATA XREF: +[NSObject properties]+C6↑o
                                        ; +[NSObject mj_totalObjectsWithSelector:key:]+182↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10000990A
                dq offset sub_100002F69
                dq offset aV240816      ; "v24@?0#8*16"
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_10003A7D8   db    0                 ; DATA XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+116↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10001AA8E
                dq offset sub_10001AAA5
                dq offset aV240816      ; "v24@?0#8*16"
                dq offset aB_0          ; "@b"
off_10003A808   dq offset cfstr_I       ; DATA XREF: -[MJPropertyType setCode:]+A6↑o
                                        ; "i"
off_10003A810   dq offset cfstr_S       ; DATA XREF: -[MJPropertyType setCode:]+B7↑o
                                        ; "s"
off_10003A818   dq offset stru_10003CF58
                                        ; DATA XREF: -[MJPropertyType setCode:]+E1↑o
                                        ; "f"
off_10003A820   dq offset cfstr_D_1     ; DATA XREF: -[MJPropertyType setCode:]+EF↑o
                                        ; "d"
off_10003A828   dq offset stru_10003CF98
                                        ; DATA XREF: -[MJPropertyType setCode:]+FD↑o
                                        ; "l"
off_10003A830   dq offset cfstr_Q       ; DATA XREF: -[MJPropertyType setCode:]+10B↑o
                                        ; "q"
off_10003A838   dq offset cfstr_C_0     ; DATA XREF: -[MJPropertyType setCode:]+119↑o
                                        ; "c"
off_10003A840   dq offset cfstr_C_0     ; DATA XREF: -[MJPropertyType setCode:]+C5↑o
                                        ; "c"
off_10003A848   dq offset cfstr_B       ; DATA XREF: -[MJPropertyType setCode:]+D3↑o
                                        ; "b"
                dq offset stru_10003D018 ; "*"
off_10003A858   dq offset cfstr_ObjcIvar
                                        ; DATA XREF: -[MJPropertyType setCode:]+301↑o
                                        ; "^{objc_ivar=}"
off_10003A860   dq offset cfstr_ObjcMethod
                                        ; DATA XREF: -[MJPropertyType setCode:]+31F↑o
                                        ; "^{objc_method=}"
                dq offset stru_10003D078 ; "@?"
                dq offset stru_10003D098 ; "#"
off_10003A878   dq offset stru_10003D0B8
                                        ; DATA XREF: -[MJPropertyType setCode:]:loc_10002113A↑o
                                        ; ":"
off_10003A880   dq offset stru_10003D0D8
                                        ; DATA XREF: -[MJPropertyType setCode:]+4D↑o
                                        ; "@"
unk_10003A888   db    0                 ; DATA XREF: +[MJFoundation isClassFromFoundation:]+B0↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sub_10001AA8E
                dq offset sub_10001AAA5
                dq offset aV240816      ; "v24@?0#8*16"
                dq offset asc_100036A45 ; "@`"
__const         ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__cfstring      segment para public 'DATA' use64
                assume cs:__cfstring
                ;org 10003A8B8h
stru_10003A8B8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[S8BitdoDevice getNameWithPid:]+98↑o
                                        ; +[S8BitdoDevice getNameWithPid:]+134↑o ...
                            offset asc_10002F604, 0> ; ""
cfstr_ProController __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[S8BitdoDevice details]+27D↑o
                            offset aProController, 0Eh> ; "Pro Controller"
cfstr_WirelessContro __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[S8BitdoDevice details]+314↑o
                            offset aWirelessContro, 13h> ; "Wireless Controller"
cfstr_DevicePid0xXVi __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[S8BitdoDevice description]+B4↑o
                            offset aDevicePid0xXVi, 47h> ; "device:%@ PID:0x%x VID:0x%x Version:%lf Beta:%hu Ref:%d ChangeBoot:%hhd"
stru_10003A938  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[SHttp getIPFormHtml:]:loc_100004410↑o
                                        ; __data:off_100049BF8↓o
                            offset asc_1000383E6, 5> ; "未识别地区"
cfstr_HttpDl8bitdoCo __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+4E↑o
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+73↑o ...
                            offset aHttpDl8bitdoCo, 1Ah> ; "http://dl.8bitdo.com:8080/"
cfstr_HttpDl8bitdoCn __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+55↑o
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+BA↑o ...
                            offset aHttpDl8bitdoCn, 19h> ; "http://dl.8bitdo.cn:8080/"
cfstr_UserdefaultsIs __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+82↑o
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+110↑o ...
                            offset aUserdefaultsIs, 13h> ; "UserDefaults_isBeta"
cfstr_HttpBeta8bitdo __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+A2↑o
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+13C↑o ...
                            offset aHttpBeta8bitdo, 1Ch> ; "http://beta.8bitdo.com:8080/"
cfstr_FirmwareSelect __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+C2↑o
                            offset aFirmwareSelect, 11h> ; "%@firmware/select"
cfstr_Post      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+127↑o
                                        ; +[SHttp getNewVersion:version:beta:success:failure:]+11D↑o
                            offset aPost, 4> ; "POST"
cfstr_D         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset aD,\
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+13B↑o
                                        ; +[SHttp getNewVersion:version:beta:success:failure:]+131↑o ...
                            2>          ; "%d"
cfstr_Type      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+163↑o
                                        ; +[SHttp getNewVersion:version:beta:success:failure:]+158↑o ...
                            offset aType, 4> ; "type"
cfstr_1         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset a1,\
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+17C↑o
                                        ; +[SHttp sendRecordActivity:IP:]+214↑o
                            1>          ; "1"
cfstr_Beta      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+183↑o
                                        ; +[SHttp getNewVersion:version:beta:success:failure:]+1DD↑o ...
                            offset aBeta, 4> ; "beta"
cfstr_Msgstate  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100002039+EA↑o
                                        ; sub_100002D97+4F↑o
                            offset aMsgstate, 8> ; "msgState"
cfstr_List      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100002039+12A↑o
                                        ; sub_100002D97+8A↑o
                            offset aList, 4> ; "list"
stru_10003AAD8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+6C↑o
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+B3↑o ...
                            offset asc_10002F73F, 6> ; "%@%@%@"
cfstr_FirmwarefileUp __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+7A↑o
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+C1↑o ...
                            offset aFirmwarefileUp, 14h> ; "firmwareFile/upload/"
stru_10003AB18  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+1C7↑o
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+230↑o
                            offset asc_10002F75B, 5> ; "%@/%@"
cfstr_8bitdoFirmware __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+1CE↑o
                            offset a8bitdoFirmware, 16h> ; "8Bitdo FirmwareUpdater"
cfstr_DownloadError __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100002720+229↑o
                            offset aDownloadError, 0Eh> ; "Download Error"
cfstr_FirmwareLoadne __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getNewVersion:version:beta:success:failure:]+B8↑o
                            offset aFirmwareLoadne, 19h> ; "%@firmware/loadNewVersion"
cfstr_Lf        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getNewVersion:version:beta:success:failure:]+180↑o
                            offset aLf, 3> ; "%lf"
cfstr_Version   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getNewVersion:version:beta:success:failure:]+19A↑o
                            offset aVersion, 7> ; "version"
cfstr_Isloadbeta __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getNewVersion:version:beta:success:failure:]+222↑o
                            offset aIsloadbeta, 0Ah> ; "isLoadBeta"
cfstr_FirmwareStatis __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp StatistcsFirmware:ID:]+A4↑o
                            offset aFirmwareStatis, 1Dh> ; "%@firmware/StatisticsFirmware"
cfstr_Get       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp StatistcsFirmware:ID:]+10C↑o
                                        ; +[SHttp sendRecordActivity:IP:]+18A↑o ...
                            offset aGet, 3> ; "GET"
cfstr_Id        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp StatistcsFirmware:ID:]+147↑o
                            offset aId, 2> ; "id"
cfstr_Localactivityt __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp recordActivity:]+7F↑o
                                        ; sub_100003831+72↑o
                            offset aLocalactivityt, 12h> ; "localActivityTimer"
cfstr_Localactivityc __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp recordActivity:]+C5↑o
                                        ; sub_100003831+A7↑o
                            offset aLocalactivityc, 17h> ; "localActivityController"
cfstr_0000      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10000339F+23↑o
                                        ; sub_1000040C2+E1↑o ...
                            offset a0000, 7> ; "0.0.0.0"
cfstr_0001      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10000339F:loc_100003443↑o
                                        ; sub_1000040C2:loc_1000041D6↑o ...
                            offset a0001, 7> ; "0.0.0.1"
cfstr_HttpWwwNetCnSt __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10000339F+7D↑o
                            offset aHttpWwwNetCnSt, 30h> ; "http://www.net.cn/static/customercare/yourip.asp"
cfstr_HttpIp111Cn __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:]+43↑o
                            offset aHttpIp111Cn, 10h> ; "http://ip111.cn/"
cfstr_FirmwareActivi __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+121↑o
                            offset aFirmwareActivi, 13h> ; "%@firmware/Activity"
cfstr_Mac       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+19E↑o
                            offset aMac, 3> ; "mac"
cfstr_Macname   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+1B1↑o
                            offset aMacname, 7> ; "macName"
cfstr_2         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset a2,\
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+1CC↑o
                            1>          ; "2"
cfstr_Platform  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+1ED↑o
                            offset aPlatform, 8> ; "platform"
cfstr_Controller __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+273↑o
                            offset aController, 0Ah> ; "controller"
cfstr_Ip        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+29A↑o
                            offset aIp, 2> ; "ip"
cfstr_Region    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+2BE↑o
                            offset aRegion, 6> ; "region"
cfstr_D_0       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100003831+DD↑o
                            offset aD_0, 5> ; "%@%d,"
cfstr_Rd1       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+31↑o
                            offset aRd1, 4> ; "-rd1"
cfstr_C         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset aC,\
                                        ; DATA XREF: +[SHttp getID]+38↑o
                            2>          ; "-c"
cfstr_Ioplatformexpe __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+3F↑o
                            offset aIoplatformexpe, 16h> ; "IOPlatformExpertDevice"
stru_10003AE98  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+46↑o
                            offset asc_10002F900, 1> ; "|"
cfstr_Grep      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+2A↑o
                            offset aGrep, 4> ; "grep"
cfstr_Model     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+23↑o
                            offset aModel, 5> ; "model"
cfstr_UsrSbinIoreg __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+8C↑o
                            offset aUsrSbinIoreg, 0Fh> ; "/usr/sbin/ioreg"
cfstr_Ioplatformuuid __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+E5↑o
                            offset aIoplatformuuid, 44h> ; "/IOPlatformUUID/ { split($0, line, \"\\\"\"); printf(\"%s\\n\", line[4]); }"
cfstr_UsrBinAwk __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+115↑o
                            offset aUsrBinAwk, 0Ch> ; "/usr/bin/awk"
stru_10003AF58  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getID]+1DD↑o
                                        ; +[SHttp getID]+1F5↑o ...
                            offset asc_10002F96F, 1> ; "\n"
cfstr_LibraryPrefere __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getComputerName]+20↑o
                            offset aLibraryPrefere, 3Ah> ; "/Library/Preferences/SystemConfiguration/preferences.plist"
cfstr_System    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getComputerName]+42↑o
                                        ; +[SHttp getComputerName]+6F↑o
                            offset aSystem, 6> ; "System"
cfstr_Computername __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getComputerName]+89↑o
                            offset aComputername, 0Ch> ; "ComputerName"
stru_10003AFD8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]:loc_100003E3D↑o
                                        ; +[SHttp utf8ToUnicode:]+1C0↑o ...
                            offset asc_10002F9C0, 2> ; "%@"
cfstr_UX        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+18B↑o
                            offset aUX, 4> ; "\\u%x"
cfstr_00        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+1B7↑o
                            offset a00, 2> ; "00"
cfstr_0         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset a0,\
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+20A↑o
                            1>          ; "0"
cfstr_2505204D1D219D __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getIPFormHtml:]+4D↑o
                            offset a2505204D1D219D, 65h> ; "(?:(?:(25[0-5])|(2[0-4]\\d)|((1\\d{2})|([1-9]?\\d)))\\.){3}(?:(25[0-5])|(2[0-4]\\d)|((1\\d{2})|([1-9]?\\d)))"
stru_10003B078  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp getIPFormHtml:]+1B4↑o
                            offset asc_10002FA33, 1> ; "<"
cfstr_02x       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[SHttp md5HexDigest:]+7C↑o
                            offset a02x, 4> ; "%02X"
cfstr_Updateviewback __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController viewDidLoad]+524↑o
                                        ; -[UpdateView SButtonClick:]+20B↑o
                            offset aUpdateviewback, 0Eh> ; "updateViewBack"
cfstr_Homeview  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController initView]+1F↑o
                            offset aHomeview, 8> ; "HomeView"
cfstr_Updateerrornot __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController S_AddView:]+20A↑o
                                        ; flashfirmware+274↑o
                            offset aUpdateerrornot, 17h> ; "updateErrorNotification"
cfstr_Checkforupdate __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController addCheckUpdat]+58↑o
                            offset aCheckforupdate, 0Eh> ; "Checkforupdate"
cfstr_UpdateManually __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController addMoreAction]+57↑o
                            offset aUpdateManually, 0Fh> ; "Update Manually"
cfstr_Includebetabui __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController addBetaAction]+B1↑o
                                        ; -[ViewController betaClick]+182↑o
                            offset aIncludebetabui, 11h> ; "Includebetabuilds"
stru_10003B178  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController addBetaAction]+16B↑o
                            offset asc_10002FA9B, 9> ; "  :    %@"
cfstr_On        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController addBetaAction]+137↑o
                                        ; -[ViewController chengBeta:]+50↑o
                            offset aOn, 2> ; "on"
cfstr_Off       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController addBetaAction]+130↑o
                                        ; -[ViewController chengBeta:]+49↑o
                            offset aOff, 3> ; "off"
cfstr_Sure      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController betaClick]+B3↑o
                                        ; -[UpdateView SHIDBootNotSupportFirmware:]+50↑o ...
                            offset aSure, 4> ; "sure"
cfstr_Cancel    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController betaClick]+119↑o
                            offset aCancel, 6> ; "cancel"
cfstr_Isbeta    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController betaClick]+1E3↑o
                            offset aIsbeta, 6> ; "isBeta"
cfstr_Nswindow  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController closeWindow:]+FA↑o
                            offset aNswindow, 8> ; "NSWindow"
cfstr_N30       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[ViewController MoreViewClick:View:]+14E↑o
                            offset aN30, 3> ; "N30"
cfstr_Product   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100007A60+82↑o
                                        ; sub_100008C49+114↑o ...
                            offset aProduct, 7> ; "Product"
cfstr_Back      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[SBackButton initWithFrame:]+5B↑o
                            offset aBack, 4> ; "back"
cfstr_NamePid02xVid0 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[S8BitdoDataDetails description]+86↑o
                            offset aNamePid02xVid0, 2Bh> ; "name:%@ pid:%02x vid:%02x type:%d order:%ld"
cfstr_S8bitdodeviceP __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools load]+12↑o
                            offset aS8bitdodeviceP, 13h> ; "S8BitdoDevice.plist"
cfstr_8bitdoS30Modki __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008739↑o
                            offset a8bitdoS30Modki, 11h> ; "8BitDo S30 Modkit"
cfstr_F30       __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008742↑o
                            offset aF30, 8> ; "F30 街机摇杆"
cfstr_Classic   __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+40↑o
                            offset aClassic, 0Dh> ; "Classic 无线接收器"
cfstr_Nes       __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+77↑o
                            offset aNes, 9> ; "NES 无线接收器"
cfstr_Sfc       __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+8C↑o
                            offset aSfc, 9> ; "SFC 无线接收器"
cfstr_N30_0     __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008795↑o
                            offset aN30_0, 8> ; "N30 街机摇杆"
cfstr_Usb_1     __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_10000882E↑o
                            offset aUsb_1, 9> ; "USB 无线接收器"
cfstr_UsbPs     __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_10000881C↑o
                            offset aUsbPs, 0Eh> ; "USB 无线接收器 PS 版"
cfstr_Md        __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_1000087EF↑o
                            offset aMd, 8> ; "MD 无线接收器"
cfstr_Sn30Pro   __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008843↑o
                            offset aSn30Pro, 0Ch> ; "SN30 Pro 安卓版"
cfstr_V3        __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_1000087E6↑o
                            offset aV3, 7> ; "街机摇杆 V3"
cfstr_V3_0      __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008813↑o
                            offset aV3_0, 0Bh> ; "街机摇杆 V3 接收器"
cfstr_Pro2Xbox  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_1000087F8↑o
                            offset aPro2Xbox, 0Ch> ; "Pro 2 Xbox 版"
cfstr_Pro2      __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008867↑o
                            offset aPro2, 9> ; "Pro 2 有线版"
cfstr_Usb2      __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_10000885B↑o
                            offset aUsb2, 0Bh> ; "USB 无线接收器 2"
cfstr_Xbox      __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008837↑o
                            offset aXbox, 0Ah> ; "猎户座 Xbox 版"
cfstr_Ns        __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008801↑o
                            offset aNs, 8> ; "猎户座 NS 版"
cfstr_Ns_0      __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008873↑o
                            offset aNs_0, 0Bh> ; "猎户座 NS 版接收器"
cfstr_Pc        __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_100008825↑o
                            offset aPc, 8> ; "猎户座 PC 版"
cfstr_Pc_0      __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_10000884F↑o
                            offset aPc_0, 0Bh> ; "猎户座 PC 版接收器"
cfstr_Pc_1      __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_1000087DD↑o
                            offset aPc_1, 0Ah> ; "猎户座有线 PC 版"
stru_10003B598  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_10000887F↑o
                            offset asc_1000385A6, 8> ; "猎户座青春版无线"
stru_10003B5B8  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_10000880A↑o
                            offset asc_1000385B8, 0Bh> ; "猎户座青春版无线接收器"
stru_10003B5D8  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]:loc_1000087D4↑o
                            offset asc_1000385D0, 8> ; "猎户座青春版有线"
cfstr_Ps        __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools getNameWith:pid:name:]+BD↑o
                            offset aPs, 6> ; "PS 接收器"
cfstr_Cmd       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100008B19+85↑o
                                        ; -[SHIDBootPro2 addBlock:Cmd:]+CA↑o ...
                            offset aCmd, 3> ; "cmd"
cfstr_Block     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100008B19+B7↑o
                                        ; -[SHIDBootPro2 addBlock:Cmd:]+8F↑o ...
                            offset aBlock, 5> ; "block"
cfstr_CrcErrorCrcXFi __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_1000095F5+2B0↑o
                                        ; sub_10000CF19+2BB↑o ...
                            offset aCrcErrorCrcXFi, 23h> ; "CRC Error: \n crc : %x file_crc: %x "
cfstr_FirmwareErrorP __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100009F55+157↑o
                            offset aFirmwareErrorP, 34h> ; "Firmware Error: \n pid : %x m_firmwareHeader.pid: %x "
cfstr_V2f       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+B8↑o
                            offset aV2f, 8> ; "%@ v%.2f"
cfstr_Newversion __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+80↑o
                                        ; -[UpdateView setNewFirmwaer:]+159↑o
                            offset aNewversion, 0Ah> ; "newversion"
cfstr_V2fBetaD  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+1A2↑o
                            offset aV2fBetaD, 10h> ; "%@ v%.2f beta %d"
cfstr_F30Mini   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView initWithFrame:]+1A0↑o
                            offset aF30Mini, 8> ; "f30_mini"
cfstr_Reload    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView initWithFrame:]+4BD↑o
                            offset aReload, 6> ; "reload"
cfstr_Update    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView initWithFrame:]+75C↑o
                                        ; -[UpdateView initWithFrame:]+A3E↑o ...
                            offset aUpdate, 6> ; "update"
cfstr_Other     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView initWithFrame:]+898↑o
                                        ; -[UpdateView changeUIWithState:]+488↑o
                            offset aOther, 5> ; "other"
cfstr_Ultimaterr __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView loadViews]+1C2↑o
                            offset aUltimaterr, 0Ah> ; "UltimateRR"
cfstr_Ultimatecrr __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView loadViews]+26A↑o
                            offset aUltimatecrr, 0Bh> ; "UltimateCRR"
cfstr_UltimaterrBloc __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView loadViews]+321↑o
                            offset aUltimaterrBloc, 10h> ; "UltimateRR_Block"
cfstr_Emptyfirmwaer __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView loadViews]+ACD↑o
                            offset aEmptyfirmwaer, 0Dh> ; "emptyFirmwaer"
cfstr_Notfirmware __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView loadViews]+D52↑o
                            offset aNotfirmware, 0Bh> ; "notFirmware"
cfstr_N30ModkitV2f __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+C01↑o
                            offset aN30ModkitV2f, 13h> ; "N30 Modkit_V%.2f %@"
cfstr_Sn30ModkitV2f __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+D0D↑o
                            offset aSn30ModkitV2f, 14h> ; "SN30 Modkit_V%.2f %@"
cfstr_Sf30ModkitV2f __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+E19↑o
                            offset aSf30ModkitV2f, 14h> ; "SF30 Modkit_V%.2f %@"
cfstr_M30ModkitV2f __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+F28↑o
                            offset aM30ModkitV2f, 13h> ; "M30 Modkit_V%.2f %@"
cfstr_V         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset aV,\
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+F7E↑o
                                        ; -[UpdateView showLogClick:]+85D↑o
                            2>          ; "_V"
cfstr_V2f_0     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+101C↑o
                            offset aV2f_0, 0Ch> ; "%@  %@ V%.2f"
cfstr_BetaD     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+107D↑o
                            offset aBetaD, 0Ah> ; "%@ beta %d"
cfstr_CheckboxNomal __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+12AE↑o
                                        ; -[UpdateView chengeboxClick:]+4E↑o
                            offset aCheckboxNomal, 0Eh> ; "checkbox_nomal"
cfstr_CheckboxHighli __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+12EA↑o
                            offset aCheckboxHighli, 12h> ; "checkbox_highlight"
cfstr_Log       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+1563↑o
                            offset aLog, 3> ; "log"
cfstr_New       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+1987↑o
                            offset aNew, 3> ; "NEW"
cfstr_Willupdatefirm __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+7D↑o
                            offset aWillupdatefirm, 12h> ; "willUpdateFirmwaer"
cfstr_Willupdatefirm_0 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+D7↑o
                            offset aWillupdatefirm_0, 14h> ; "willUpdateFirmwaered"
cfstr_Willupdatefirm_1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+151↑o
                                        ; -[UpdateView SHIDBootStartUpdate:]+210↑o
                            offset aWillupdatefirm_1, 15h> ; "willUpdateFirmwaering"
cfstr_2f        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+1C0↑o
                            offset a2f, 4> ; "%.2f"
cfstr_Hu        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+237↑o
                            offset aHu, 4> ; " %hu"
cfstr_To        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+28B↑o
                            offset aTo, 2> ; "to"
cfstr_V2f_1     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+2C8↑o
                            offset aV2f_1, 6> ; " v%.2f"
cfstr_BetaD_0   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+305↑o
                            offset aBetaD_0, 9> ; " beta %d "
stru_10003BA78  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+329↑o
                            offset asc_10002FD5C, 0Eh> ; "%@%@%@%@%@%@%@"
cfstr_Close     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView changeUIWithState:]+66F↑o
                            offset aClose, 5> ; "close"
cfstr_Updatenext __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView changeUIWithState:]+6EE↑o
                            offset aUpdatenext, 0Ah> ; "updateNext"
cfstr_Sbackbutton __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView findBackButton:]+FB↑o
                            offset aSbackbutton, 0Bh> ; "SBackButton"
cfstr_CheckboxSelect __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView chengeboxClick:]+90↑o
                            offset aCheckboxSelect, 11h> ; "checkbox_selected"
cfstr_Firmwaerupdate __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView showLogClick:]+48↑o
                            offset aFirmwaerupdate, 11h> ; "FirmwaerUpdateLog"
cfstr_N30modkit __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView showLogClick:]+5F0↑o
                            offset aN30modkit, 9> ; "N30Modkit"
cfstr_Sn30modkit __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView showLogClick:]+6B8↑o
                            offset aSn30modkit, 0Ah> ; "SN30Modkit"
cfstr_Sf30modkit __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView showLogClick:]+780↑o
                            offset aSf30modkit, 0Ah> ; "SF30Modkit"
cfstr_M30modkit __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView showLogClick:]+84F↑o
                            offset aM30modkit, 9> ; "M30Modkit"
cfstr_V2lf      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView showLogClick:]+8DF↑o
                            offset aV2lf, 0Dh> ; "%@  %@ V%.2lf"
stru_10003BBD8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView showLogClick:]+AA4↑o
                                        ; -[UpdateView showLogClick:]+C34↑o
                            offset asc_10002FDE4, 2> ; "\n\n"
cfstr_Prepareupdate __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+6D↑o
                            offset aPrepareupdate, 0Dh> ; "prepareUpdate"
cfstr_Error     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_1000166BA+55↑o
                                        ; -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+1DE↑o
                            offset aError, 5> ; "Error"
cfstr_Success   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView SHIDBootStartUpdateed:]+3B↑o
                                        ; -[SButton mouseEntered:]+6C↑o ...
                            offset aSuccess, 7> ; "success"
cfstr_Notsupport __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView SHIDBootNotSupportFirmware:]+B9↑o
                            offset aNotsupport, 0Ah> ; "NotSupport"
stru_10003BC78  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+5D↑o
                            offset asc_1000385F0, 8> ; "选中的固件为 \""
stru_10003BC98  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+A7↑o
                                        ; -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+129↑o
                            offset asc_10002FE39, 3> ; "%@\""
stru_10003BCB8  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+E1↑o
                            offset asc_100038602, 9> ; " 与当前更新的 \""
stru_10003BCD8  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+159↑o
                            offset asc_100038616, 4> ; " 不匹配"
cfstr_Mousedown __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[SMiniImageView mouseDown:]:loc_100018E44↑o
                            offset aMousedown, 0Ah> ; "mouseDown-"
cfstr_Mouseentered __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[SMiniImageView mouseEntered:]+102↑o
                            offset aMouseentered, 0Dh> ; "mouseEntered-"
cfstr_Mouseexited __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[SMiniImageView mouseExited:]+67↑o
                            offset aMouseexited, 0Ch> ; "mouseExited-"
cfstr_SettingSparkle __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager setSparkleLanguage]+3B↑o
                            offset aSettingSparkle, 1Fh> ; "Setting Sparkle language to: %@"
cfstr_Applelanguages __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager setSparkleLanguage]+97↑o
                                        ; +[Language isCurrentChinaLanguage]+38↑o
                            offset aApplelanguages, 0Eh> ; "AppleLanguages"
cfstr_NoPreferredLan __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]:loc_10001A389↑o
                            offset aNoPreferredLan, 2Dh> ; "No preferred language found, defaulting to en"
cfstr_En        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+E7↑o
                                        ; -[UpDaterManager getCurrentLanguageCode]+11B↑o ...
                            offset aEn, 2> ; "en"
cfstr_NoLanguageCode __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]:loc_10001A3A0↑o
                            offset aNoLanguageCode, 2Eh> ; "No language code found in %@, defaulting to en"
cfstr_Zh        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+A2↑o
                            offset aZh, 2> ; "zh"
cfstr_Hans      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+D8↑o
                            offset aHans, 4> ; "Hans"
cfstr_ZhHans    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+EE↑o
                                        ; +[Language isCurrentChinaLanguage]+88↑o
                            offset aZhHans, 7> ; "zh-Hans"
cfstr_UpdatedSparkle __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10001A44D+2D↑o
                            offset aUpdatedSparkle, 18h> ; "Updated Sparkle language"
cfstr_TriggeredCheck __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10001A4D8+3D↑o
                            offset aTriggeredCheck, 1Bh> ; "Triggered check for updates"
cfstr_HttpDl8bitdoCo_0 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager feedURLStringForUpdater:]+40↑o
                            offset aHttpDl8bitdoCo_0, 31h> ; "http://dl.8bitdo.com/Firmware-Updater/appcast.xml"
cfstr_HttpDl8bitdoCn_0 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[UpDaterManager feedURLStringForUpdater:]+39↑o
                            offset aHttpDl8bitdoCn_0, 30h> ; "http://dl.8bitdo.cn/Firmware-Updater/appcast.xml"
cfstr_Keyvalues_0 __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: -[NSObject mj_setKeyValues:context:]+1BB↑o
                                        ; +[NSObject mj_objectWithKeyValues:context:]+17D↑o
                            offset aKeyvalues_0, 11h> ; "keyValues参数不是一个字典"
cfstr_Yes       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10001AD4A+89D↑o
                            offset aYes, 3> ; "yes"
cfstr_True      __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10001AD4A+8B6↑o
                            offset aTrue, 4> ; "true"
cfstr_No        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10001AD4A+8CD↑o
                            offset aNo, 2> ; "no"
cfstr_False     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10001AD4A+8E4↑o
                            offset aFalse, 5> ; "false"
stru_10003BF78  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[NSObject mj_objectWithKeyValues:context:]+D6↑o
                                        ; -[MJProperty propertyKeysWithStringKey:]+71↑o
                            offset asc_10002FFD0, 1> ; "."
cfstr_FilenameNil __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[NSObject mj_objectWithFilename:]+B8↑o
                                        ; +[NSObject mj_objectArrayWithFilename:]+B8↑o
                            offset aFilenameNil, 0Eh> ; "filename参数为nil"
cfstr_FileNil   __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[NSObject mj_objectWithFile:]+8F↑o
                                        ; +[NSObject mj_objectArrayWithFile:]+8F↑o
                            offset aFileNil, 0Ah> ; "file参数为nil"
cfstr_Keyvaluesarray_5 __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+EE↑o
                            offset aKeyvaluesarray_5, 16h> ; "keyValuesArray参数不是一个数组"
stru_10003BFF8  __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+90↑o
                            offset asc_1000386A6, 9> ; "不是自定义的模型类"
cfstr_Objectarray __CFString <offset ___CFConstantStringClassReference, 7D0h, \
                                        ; DATA XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+22E↑o
                            offset aObjectarray, 13h> ; "objectArray参数不是一个数组"
cfstr_Arial     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[SButton drawRect:]+E2↑o
                            offset aArial, 5> ; "Arial"
cfstr_Ok        __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+9D↑o
                            offset aOk, 2> ; "OK"
cfstr_ZhHansCn  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[Language isCurrentChinaLanguage]+71↑o
                            offset aZhHansCn, 0Ah> ; "zh-Hans-CN"
cfstr_ZhHansUs  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[Language isCurrentChinaLanguage]+9F↑o
                            offset aZhHansUs, 0Ah> ; "zh-Hans-US"
cfstr_Chooseproduct __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[MoreView initWithFrame:]+AB↑o
                            offset aChooseproduct, 0Dh> ; "chooseProduct"
cfstr_8bitdo    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[MoreView addProduct]+62B↑o
                            offset a8bitdo, 6> ; "8BitDo"
stru_10003C0F8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[MJPropertyType setCode:]+21A↑o
                            offset asc_100030024, 2> ; "@\""
cfstr_UpdatebuttonNo __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView awakeFromNib]+FA↑o
                            offset aUpdatebuttonNo, 13h> ; "updateButton_normal"
cfstr_UpdatebuttonHi __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView awakeFromNib]+14D↑o
                            offset aUpdatebuttonHi, 16h> ; "updateButton_highlight"
cfstr_Firmwareupdate __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView awakeFromNib]+1BF↑o
                            offset aFirmwareupdate, 0Eh> ; "firmwareUpdate"
cfstr_BetaD_1   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView addDevicesTextFileld]+1FA↑o
                            offset aBetaD_1, 7> ; "beta %d"
cfstr_V2f_2     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView addDevicesTextFileld]+2B1↑o
                            offset aV2f_2, 0Eh> ; "%@ V%.2f %@ %@"
cfstr_Connect   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView addDevicesTextFileld]+28A↑o
                                        ; -[HomeView addDevicesTextFileld]+3BD↑o
                            offset aConnect, 7> ; "Connect"
stru_10003C1D8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView addDevicesTextFileld]+3E4↑o
                            offset asc_100030080, 5> ; "%@ %@"
cfstr_2lf       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView loadNewGameVersion:version:beta:]+36↑o
                            offset a2lf, 5> ; "%.2lf"
cfstr_Macos     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView helpButtonClick:]+42↑o
                            offset aMacos, 5> ; "MacOS"
cfstr_Macostisp __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[HomeView helpButtonClick:]+11B↑o
                            offset aMacostisp, 9> ; "MacOSTisp"
stru_10003C258  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[MJProperty setProperty:]+8D↑o
                            offset asc_1000300C4, 1> ; ","
stru_10003C278  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[MJProperty propertyKeysWithStringKey:]+18A↑o
                                        ; -[MJProperty propertyKeysWithStringKey:]+2D5↑o
                            offset asc_1000300C6, 1> ; "["
stru_10003C298  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[MJProperty propertyKeysWithStringKey:]+2F7↑o
                            offset asc_1000300C8, 1> ; "]"
cfstr_8bitdoUltimate __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100024341+2B6↑o
                            offset a8bitdoUltimate, 1Ch> ; "8BitDo Ultimate 2.4g Adapter"
cfstr_8bitdoUltimate_0 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100024341+2C6↑o
                            offset a8bitdoUltimate_0, 17h> ; "8BitDo Ultimate Adapter"
stru_10003C2F8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_100025BD6+159↑o
                                        ; -[NSString mj_underlineFromCamel]+FB↑o ...
                            offset asc_1000300FF, 1> ; "_"
cfstr_Sn30prosf30pro __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+145↑o
                                        ; -[DeviceManualView setUI]+2F1↑o
                            offset aSn30prosf30pro, 11h> ; "SN30ProSF30Pro_tx"
cfstr_N30prof30prov2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+22C↑o
                            offset aN30prof30prov2, 11h> ; "N30ProF30ProV2_tx"
cfstr_N30prof30proBo __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+314↑o
                            offset aN30prof30proBo, 16h> ; "N30ProF30Pro_bottom_tx"
cfstr_N30prof30prov2_0 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+402↑o
                            offset aN30prof30prov2_0, 18h> ; "N30ProF30ProV2_bottom_tx"
cfstr_3         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset a3,\
                                        ; DATA XREF: -[DeviceManualView layout]+1DC↑o
                            1>          ; "3"
cfstr_8         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset a8,\
                                        ; DATA XREF: -[DeviceManualView layout]+1E3↑o
                            1>          ; "8"
cfstr_Snprosfpro1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+22E↑o
                                        ; -[DeviceManualView setUI]+3CF↑o ...
                            offset aSnprosfpro1, 0Bh> ; "SNProSFPro1"
cfstr_Snprosfpro2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+27A↑o
                                        ; -[DeviceManualView setUI]+41B↑o ...
                            offset aSnprosfpro2, 0Bh> ; "SNProSFPro2"
cfstr_Snprosfpro3 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2BF↑o
                                        ; -[DeviceManualView setUI]+460↑o ...
                            offset aSnprosfpro3, 0Bh> ; "SNProSFPro3"
cfstr_N30pro2Tx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+492↑o
                            offset aN30pro2Tx, 0Ah> ; "N30Pro2_tx"
cfstr_NesjoyNimiTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+633↑o
                                        ; -[DeviceManualView setUI]+227E↑o
                            offset aNesjoyNimiTx, 0Eh> ; "nesjoy_nimi_tx"
cfstr_N30prof30proTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+830↑o
                            offset aN30prof30proTx, 0Fh> ; "N30ProF30Pro_tx"
cfstr_N30prof30pro1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+76D↑o
                            offset aN30prof30pro1, 0Dh> ; "N30ProF30Pro1"
cfstr_N30prof30pro2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+7B9↑o
                            offset aN30prof30pro2, 0Dh> ; "N30ProF30Pro2"
cfstr_N30prof30pron3 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+7FE↑o
                            offset aN30prof30pron3, 1Dh> ; "N30ProF30ProN30ProV2F30ProV23"
stru_10003C4F8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1D2F↑o
                                        ; -[DeviceManualView setUI]+1E81↑o
                            offset asc_1000301EE, 1> ; "F"
cfstr_F30Tx     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1E97↑o
                            offset aF30Tx, 6> ; "F30_tx"
cfstr_N30Tx     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1E90↑o
                            offset aN30Tx, 6> ; "N30_tx"
cfstr_Fc301     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+18B7↑o
                                        ; -[DeviceManualView setUI]+1C1D↑o ...
                            offset aFc301, 5> ; "FC301"
cfstr_Fc302     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+18FC↑o
                                        ; -[DeviceManualView setUI]+1C5D↑o ...
                            offset aFc302, 5> ; "FC302"
cfstr_Fc303     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1935↑o
                                        ; -[DeviceManualView setUI]+1C97↑o ...
                            offset aFc303, 5> ; "FC303"
cfstr_Sn30sf30Tx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1CC9↑o
                            offset aSn30sf30Tx, 0Bh> ; "SN30SF30_tx"
cfstr_N64Tx     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+20AF↑o
                            offset aN64Tx, 6> ; "N64_tx"
cfstr_NesminirrTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1BE4↑o
                            offset aNesminirrTx, 0Ch> ; "NesMiniRR_tx"
cfstr_Mdrr1     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1191↑o
                                        ; -[DeviceManualView setUI]+19B8↑o ...
                            offset aMdrr1, 5> ; "MDRR1"
cfstr_Mdrr2     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+11D6↑o
                                        ; -[DeviceManualView setUI]+19FA↑o ...
                            offset aMdrr2, 5> ; "MDRR2"
cfstr_SfcrrTx   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1D45↑o
                            offset aSfcrrTx, 8> ; "SFCRR_tx"
cfstr_NesrrTx   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1D3E↑o
                            offset aNesrrTx, 8> ; "NESRR_tx"
cfstr_Sn30modkitTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+17CD↑o
                            offset aSn30modkitTx, 0Dh> ; "SN30Modkit_tx"
cfstr_Sn30modkit1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1761↑o
                            offset aSn30modkit1, 0Bh> ; "SN30Modkit1"
cfstr_Sn30modkit2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+17A5↑o
                            offset aSn30modkit2, 0Bh> ; "SN30Modkit2"
cfstr_N30modkitTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+24CB↑o
                            offset aN30modkitTx, 0Ch> ; "N30Modkit_tx"
cfstr_N30modkit1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+245F↑o
                                        ; -[DeviceManualView setUI]+2645↑o
                            offset aN30modkit1, 0Ah> ; "N30Modkit1"
cfstr_N30modkit2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+24A3↑o
                                        ; -[DeviceManualView setUI]+2689↑o
                            offset aN30modkit2, 0Ah> ; "N30Modkit2"
cfstr_M30modkitTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+256D↑o
                            offset aM30modkitTx, 0Ch> ; "M30Modkit_tx"
cfstr_M30modkit1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2501↑o
                            offset aM30modkit1, 0Ah> ; "M30Modkit1"
cfstr_M30modkit2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2545↑o
                            offset aM30modkit2, 0Ah> ; "M30Modkit2"
cfstr_GbrosTx   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1B03↑o
                            offset aGbrosTx, 8> ; "GBros_tx"
cfstr_Gbros1    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1A97↑o
                            offset aGbros1, 6> ; "GBros1"
cfstr_Gbros2    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1ADB↑o
                            offset aGbros2, 6> ; "GBros2"
cfstr_UsbrrTx   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+107F↑o
                                        ; -[DeviceManualView setUI]+2940↑o
                            offset aUsbrrTx, 8> ; "USBRR_tx"
cfstr_Usbrr1    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+FD6↑o
                                        ; -[DeviceManualView setUI]+289B↑o
                            offset aUsbrr1, 6> ; "USBRR1"
cfstr_Usbrr2    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1018↑o
                                        ; -[DeviceManualView setUI]+28E0↑o
                            offset aUsbrr2, 6> ; "USBRR2"
cfstr_M30rrTx   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1A61↑o
                            offset aM30rrTx, 8> ; "M30RR_tx"
cfstr_M30Tx     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1598↑o
                            offset aM30Tx, 6> ; "M30_tx"
cfstr_Md1       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+14EC↑o
                            offset aMd1, 3> ; "MD1"
cfstr_Md2       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+152C↑o
                            offset aMd2, 3> ; "MD2"
cfstr_Md3       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1566↑o
                            offset aMd3, 3> ; "MD3"
cfstr_PsmodkitTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2320↑o
                            offset aPsmodkitTx, 0Bh> ; "PSModkit_tx"
cfstr_Psmodkit1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+22B4↑o
                            offset aPsmodkit1, 9> ; "PSModkit1"
cfstr_Psmodkit2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+22F8↑o
                            offset aPsmodkit2, 9> ; "PSModkit2"
cfstr_Sn30pro   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2405↑o
                            offset aSn30pro, 8> ; "SN30Pro+"
cfstr_Sn30pro1  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+E84↑o
                                        ; -[DeviceManualView setUI]+2359↑o
                            offset aSn30pro1, 9> ; "SN30Pro+1"
cfstr_Sn30pro2  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+EC6↑o
                                        ; -[DeviceManualView setUI]+2399↑o
                            offset aSn30pro2, 9> ; "SN30Pro+2"
cfstr_Sn30pro3  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+EFF↑o
                                        ; -[DeviceManualView setUI]+23D3↑o
                            offset aSn30pro3, 9> ; "SN30Pro+3"
cfstr_DogboneTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+26B1↑o
                            offset aDogboneTx, 0Ah> ; "dogbone_tx"
cfstr_SsdTx     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+260F↑o
                            offset aSsdTx, 6> ; "ssd_tx"
cfstr_S30modkit1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+25A3↑o
                            offset aS30modkit1, 0Ah> ; "S30Modkit1"
cfstr_S30modkit2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+25E7↑o
                            offset aS30modkit2, 0Ah> ; "S30Modkit2"
cfstr_LiteTx    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+DD5↑o
                            offset aLiteTx, 7> ; "lite_tx"
cfstr_Lite1     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+D2B↑o
                            offset aLite1, 5> ; "Lite1"
cfstr_Lite2     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+D6D↑o
                            offset aLite2, 5> ; "Lite2"
cfstr_Lite3     __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+DA6↑o
                            offset aLite3, 5> ; "Lite3"
cfstr_Zero2Tx   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1682↑o
                            offset aZero2Tx, 8> ; "zero2_tx"
cfstr_Zero21    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+15D9↑o
                            offset aZero21, 6> ; "Zero21"
cfstr_Zero22    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+161E↑o
                            offset aZero22, 6> ; "Zero22"
cfstr_Zero23    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+165A↑o
                            offset aZero23, 6> ; "Zero23"
cfstr_XcloudTx  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+140A↑o
                            offset aXcloudTx, 9> ; "xcloud_tx"
cfstr_Xcloud1   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1361↑o
                                        ; -[DeviceManualView setUI]+20F0↑o
                            offset aXcloud1, 7> ; "xCloud1"
cfstr_Xcloud2   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+13A6↑o
                            offset aXcloud2, 7> ; "xCloud2"
cfstr_Xcloud3   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+13E2↑o
                            offset aXcloud3, 7> ; "xCloud3"
cfstr_ArcadestickTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+285A↑o
                            offset aArcadestickTx, 0Eh> ; "arcadeStick_tx"
cfstr_Arcadestick1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+27B1↑o
                            offset aArcadestick1, 0Ch> ; "arcadeStick1"
cfstr_Arcadestick2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+27F6↑o
                            offset aArcadestick2, 0Ch> ; "arcadeStick2"
cfstr_Arcadestick3 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+216E↑o
                                        ; -[DeviceManualView setUI]+2832↑o
                            offset aArcadestick3, 0Ch> ; "arcadeStick3"
cfstr_ArcadestickRrT __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+B76↑o
                                        ; -[DeviceManualView setUI]+1320↑o
                            offset aArcadestickRrT, 11h> ; "arcadeStick_RR_tx"
cfstr_ArcadestickRr1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+ACC↑o
                                        ; -[DeviceManualView setUI]+1277↑o
                            offset aArcadestickRr1, 0Fh> ; "arcadeStick_RR1"
cfstr_ArcadestickRr2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+B0E↑o
                                        ; -[DeviceManualView setUI]+12BC↑o
                            offset aArcadestickRr2, 0Fh> ; "arcadeStick_RR2"
cfstr_ArcadestickRr3 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+B47↑o
                                        ; -[DeviceManualView setUI]+12F8↑o
                            offset aArcadestickRr3, 0Fh> ; "arcadeStick_RR3"
cfstr_Pro2Tx    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+F2E↑o
                            offset aPro2Tx, 7> ; "pro2_tx"
cfstr_ProwiredTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2770↑o
                            offset aProwiredTx, 0Bh> ; "proWired_tx"
cfstr_Pro2wired1 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+144B↑o
                                        ; -[DeviceManualView setUI]+16C3↑o ...
                            offset aPro2wired1, 0Ah> ; "Pro2Wired1"
cfstr_Pro2wired2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+274F↑o
                            offset aPro2wired2, 0Ah> ; "Pro2Wired2"
cfstr_Pro2xboxwiredT __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2AFE↑o
                            offset aPro2xboxwiredT, 10h> ; "pro2XboxWired_tx"
cfstr_Pro2xboxwired2 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+C60↑o
                                        ; -[DeviceManualView setUI]+1107↑o ...
                            offset aPro2xboxwired2, 0Eh> ; "Pro2XBOXWired2"
cfstr_Ultimatexboxwi __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1876↑o
                            offset aUltimatexboxwi, 14h> ; "UltimateXboxWired_tx"
cfstr_UltimateTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1128↑o
                            offset aUltimateTx, 0Bh> ; "Ultimate_tx"
cfstr_Homekey   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+C23↑o
                                        ; -[DeviceManualView setUI]+10C0↑o
                            offset aHomekey, 7> ; "HOMEKey"
cfstr_UltimateWiredT __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+14B3↑o
                            offset aUltimateWiredT, 11h> ; "Ultimate_Wired_tx"
cfstr_UltimatecWired __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+172B↑o
                            offset aUltimatecWired, 12h> ; "UltimateC_Wired_tx"
cfstr_UltimatecTx __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+C8C↑o
                            offset aUltimatecTx, 0Ch> ; "UltimateC_tx"
cfstr_Arcadestickxbo __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2199↑o
                            offset aArcadestickxbo, 12h> ; "arcadeStickXbox_tx"
cfstr_Arcadestickxbo_0 __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2135↑o
                            offset aArcadestickxbo_0, 10h> ; "arcadeStickXbox2"
cfstr_NeogeoTx  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+2A2A↑o
                            offset aNeogeoTx, 9> ; "NeoGeo_tx"
cfstr_PsrrTx    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1236↑o
                            offset aPsrrTx, 7> ; "PSRR_tx"
cfstr_MicroTx   __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[DeviceManualView setUI]+1960↑o
                            offset aMicroTx, 8> ; "Micro_tx"
cfstr_I         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset aI,\
                                        ; DATA XREF: __const:off_10003A808↑o
                            1>          ; "i"
cfstr_S         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset aS,\
                                        ; DATA XREF: __const:off_10003A810↑o
                            1>          ; "s"
stru_10003CF58  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A818↑o
                            offset asc_10003052D, 1> ; "f"
cfstr_D_1       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A820↑o
                            offset aD_1, 1> ; "d"
stru_10003CF98  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A828↑o
                            offset asc_100030531, 1> ; "l"
cfstr_Q         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset aQ,\
                                        ; DATA XREF: __const:off_10003A830↑o
                            1>          ; "q"
cfstr_C_0       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A838↑o
                                        ; __const:off_10003A840↑o
                            offset aC_0, 1> ; "c"
cfstr_B         __CFString <offset ___CFConstantStringClassReference, 7C8h, offset aB,\
                                        ; DATA XREF: __const:off_10003A848↑o
                            1>          ; "b"
stru_10003D018  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:000000010003A850↑o
                            offset asc_100030539, 1> ; "*"
cfstr_ObjcIvar  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A858↑o
                            offset aObjcIvar, 0Dh> ; "^{objc_ivar=}"
cfstr_ObjcMethod __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A860↑o
                            offset aObjcMethod, 0Fh> ; "^{objc_method=}"
stru_10003D078  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:000000010003A868↑o
                            offset asc_100030559, 2> ; "@?"
stru_10003D098  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:000000010003A870↑o
                            offset asc_10003055C, 1> ; "#"
stru_10003D0B8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A878↑o
                            offset asc_10003055E, 1> ; ":"
stru_10003D0D8  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: __const:off_10003A880↑o
                            offset asc_100030560, 1> ; "@"
cfstr_C_1       __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[NSString mj_underlineFromCamel]+B3↑o
                                        ; -[NSString mj_camelFromUnderline]+119↑o ...
                            offset aC_1, 2> ; "%c"
stru_10003D118  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: -[NSString mj_url]+1B↑o
                            offset asc_100030565, 17h> ; "!$&'()*+,-./:;=?@_~%#[]"
cfstr_List_0    __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: +[FirmwareMessage mj_objectClassInArray]+19↑o
                            offset aList_0, 4> ; "List"
cfstr_Vendorid  __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10002DB0C+11↑o
                                        ; sub_10002DE79+21↑o ...
                            offset aVendorid, 8> ; "VendorID"
cfstr_Productid __CFString <offset ___CFConstantStringClassReference, 7C8h, \
                                        ; DATA XREF: sub_10002DBB9+11↑o
                                        ; sub_10002DE79+3A↑o ...
                            offset aProductid, 9> ; "ProductID"
__cfstring      ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_classlist segment para public 'DATA' use64
                assume cs:__objc_classlist
                ;org 10003D198h
                dq offset _OBJC_CLASS_$_S8BitdoDevice
                dq offset _OBJC_CLASS_$_SHttp
                dq offset _OBJC_CLASS_$_ViewController
                dq offset _OBJC_CLASS_$_SHIDBoot
                dq offset _OBJC_CLASS_$_SView
                dq offset _OBJC_CLASS_$_SBackButton
                dq offset _OBJC_CLASS_$_S8BitdoDataDetails
                dq offset _OBJC_CLASS_$_S8BitdoDeviceDetailsTools
                dq offset _OBJC_CLASS_$_SHIDBootPro2
                dq offset _OBJC_CLASS_$_UpdateView
                dq offset _OBJC_CLASS_$_SMiniImageView
                dq offset _OBJC_CLASS_$_SHIDSwitchAndMac
                dq offset _OBJC_CLASS_$_UpDaterManager
                dq offset _OBJC_CLASS_$_MJPropertyKey
                dq offset _OBJC_CLASS_$_SHIDXinput
                dq offset _OBJC_CLASS_$_SButton
                dq offset _OBJC_CLASS_$_SLoadXIB
                dq offset _OBJC_CLASS_$_FirmwaerUpdateLog
                dq offset _OBJC_CLASS_$_Language
                dq offset _OBJC_CLASS_$_MoreView
                dq offset _OBJC_CLASS_$_MJPropertyType
                dq offset _OBJC_CLASS_$_HomeView
                dq offset _OBJC_CLASS_$_AppDelegate
                dq offset _OBJC_CLASS_$_SMainMenu
                dq offset _OBJC_CLASS_$_MJProperty
                dq offset _OBJC_CLASS_$_SHIDDinput
                dq offset _OBJC_CLASS_$_SHIDBootHJZ
                dq offset _OBJC_CLASS_$_DeviceManualView
                dq offset _OBJC_CLASS_$_SLabel
                dq offset _OBJC_CLASS_$_FirmwareMessage
                dq offset _OBJC_CLASS_$_Firmware
                dq offset _OBJC_CLASS_$_SHIDHJZ
                dq offset _OBJC_CLASS_$_MJFoundation
                dq offset _OBJC_CLASS_$_SHIDManager
__objc_classlist ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_nlclslist segment para public 'DATA' use64
                assume cs:__objc_nlclslist
                ;org 10003D2A8h
                dq offset _OBJC_CLASS_$_SHIDBoot
                dq offset _OBJC_CLASS_$_S8BitdoDeviceDetailsTools
__objc_nlclslist ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_catlist  segment para public 'DATA' use64
                assume cs:__objc_catlist
                ;org 10003D2B8h
                dq offset _OBJC_CATEGORY_NSObject_$_MJKeyValue
                dq offset _OBJC_CATEGORY_NSObject_$_MJKeyValueDeprecated_v_2_5_16
                dq offset _OBJC_CATEGORY_NSObject_$_MJCoding
                dq offset _OBJC_CATEGORY_NSObject_$_Property
                dq offset _OBJC_CATEGORY_NSObject_$_MJPropertyDeprecated_v_2_5_16
                dq offset _OBJC_CATEGORY_NSObject_$_MJClass
                dq offset _OBJC_CATEGORY_NSString_$_MJExtension
__objc_catlist  ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_nlcatlist segment para public 'DATA' use64
                assume cs:__objc_nlcatlist
                ;org 10003D2F0h
                dq offset _OBJC_CATEGORY_NSObject_$_MJKeyValue
                dq offset _OBJC_CATEGORY_NSObject_$_Property
                dq offset _OBJC_CATEGORY_NSObject_$_MJClass
__objc_nlcatlist ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_protolist segment para public 'DATA' use64
                assume cs:__objc_protolist
                ;org 10003D308h
                dq offset _OBJC_PROTOCOL_$_NSObject
                dq offset _OBJC_PROTOCOL_$_DeviceDelegate
                dq offset _OBJC_PROTOCOL_$_HomeViewDelegate
                dq offset _OBJC_PROTOCOL_$_MoreViewDelegate
                dq offset _OBJC_PROTOCOL_$_NSAlertDelegate
                dq offset _OBJC_PROTOCOL_$_UpdateViewDelegat
                dq offset _OBJC_PROTOCOL_$_NSTextDelegate
                dq offset _OBJC_PROTOCOL_$_NSTextViewDelegate
                dq offset _OBJC_PROTOCOL_$_SButtonDelegate
                dq offset _OBJC_PROTOCOL_$_SHIDBootDelegate
                dq offset _OBJC_PROTOCOL_$_SMiniImageViewDelegate
                dq offset _OBJC_PROTOCOL_$_SHIDBootHJZ
                dq offset _OBJC_PROTOCOL_$_SPUUpdaterDelegate
                dq offset _OBJC_PROTOCOL_$_MJKeyValue
                dq offset _OBJC_PROTOCOL_$_NSApplicationDelegate
                dq offset _OBJC_PROTOCOL_$_MJCoding
__objc_protolist ends

; ===========================================================================

; Segment type: Pure data
__objc_imageinfo segment dword public 'DATA' use64
                assume cs:__objc_imageinfo
                ;org 10003D388h
                dd 0                    ; version
                dd 40h                  ; flags: unknown:0x40
__objc_imageinfo ends

; ===========================================================================

; Segment type: Regular
; Segment alignment 'qword' can not be represented in assembly
__objc_const    segment para public '' use64
                assume cs:__objc_const
                ;org 10003D390h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
_OBJC_CLASS_METHODS_S8BitdoDevice __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:S8BitdoDevice_$metaData↓o
                __objc2_meth <offset sel_getNameWithPid_, offset a2008i16, \ ; +[S8BitdoDevice getNameWithPid:] ...
                              offset __S8BitdoDevice_getNameWithPid__>
S8BitdoDevice_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aS8bitdodevice, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_S8BitdoDevice↓o
                                  offset _OBJC_CLASS_METHODS_S8BitdoDevice, 0, 0, 0, \ ; "S8BitdoDevice"
                                  0>
_OBJC_INSTANCE_METHODS_S8BitdoDevice __objc2_meth_list <18h, 18h>
                                        ; DATA XREF: __objc_const:S8BitdoDevice_$classData↓o
                __objc2_meth <offset sel_details, offset a1608, \ ; -[S8BitdoDevice details] ...
                              offset __S8BitdoDevice_details_>
                __objc2_meth <offset sel_setVersion_, offset aV2008f16, \ ; -[S8BitdoDevice setVersion:] ...
                              offset __S8BitdoDevice_setVersion__>
                __objc2_meth <offset sel_description, offset a1608, \ ; -[S8BitdoDevice description] ...
                              offset __S8BitdoDevice_description_>
                __objc2_meth <offset sel_pid, offset aS1608, \ ; -[S8BitdoDevice pid] ...
                              offset __S8BitdoDevice_pid_>
                __objc2_meth <offset sel_setPid_, offset aV2008s16, \ ; -[S8BitdoDevice setPid:] ...
                              offset __S8BitdoDevice_setPid__>
                __objc2_meth <offset sel_vid, offset aS1608, \ ; -[S8BitdoDevice vid] ...
                              offset __S8BitdoDevice_vid_>
                __objc2_meth <offset sel_setVid_, offset aV2008s16, \ ; -[S8BitdoDevice setVid:] ...
                              offset __S8BitdoDevice_setVid__>
                __objc2_meth <offset sel_version, offset aF1608, \ ; -[S8BitdoDevice version] ...
                              offset __S8BitdoDevice_version_>
                __objc2_meth <offset sel_beta, offset aS1608, \ ; -[S8BitdoDevice beta] ...
                              offset __S8BitdoDevice_beta_>
                __objc2_meth <offset sel_setBeta_, offset aV2008s16, \ ; -[S8BitdoDevice setBeta:] ...
                              offset __S8BitdoDevice_setBeta__>
                __objc2_meth <offset sel_deviceName, offset a1608, \ ; -[S8BitdoDevice deviceName] ...
                              offset __S8BitdoDevice_deviceName_>
                __objc2_meth <offset sel_setDeviceName_, offset aV240816_0, \ ; -[S8BitdoDevice setDeviceName:] ...
                              offset __S8BitdoDevice_setDeviceName__>
                __objc2_meth <offset sel_deviceRef, offset aIohiddevice160, \ ; -[S8BitdoDevice deviceRef] ...
                              offset __S8BitdoDevice_deviceRef_>
                __objc2_meth <offset sel_setDeviceRef_, offset aV2408Iohiddevi, \ ; -[S8BitdoDevice setDeviceRef:] ...
                              offset __S8BitdoDevice_setDeviceRef__>
                __objc2_meth <offset sel_bootVersion, offset aS1608, \ ; -[S8BitdoDevice bootVersion] ...
                              offset __S8BitdoDevice_bootVersion_>
                __objc2_meth <offset sel_setBootVersion_, offset aV2008s16, \ ; -[S8BitdoDevice setBootVersion:] ...
                              offset __S8BitdoDevice_setBootVersion__>
                __objc2_meth <offset sel_isCarryRR, offset aS1608, \ ; -[S8BitdoDevice isCarryRR] ...
                              offset __S8BitdoDevice_isCarryRR_>
                __objc2_meth <offset sel_setIsCarryRR_, offset aV2008s16, \ ; -[S8BitdoDevice setIsCarryRR:] ...
                              offset __S8BitdoDevice_setIsCarryRR__>
                __objc2_meth <offset sel_isManuanlViewRR, offset aS1608, \ ; -[S8BitdoDevice isManuanlViewRR] ...
                              offset __S8BitdoDevice_isManuanlViewRR_>
                __objc2_meth <offset sel_setIsManuanlViewRR_, offset aV2008s16, \ ; -[S8BitdoDevice setIsManuanlViewRR:] ...
                              offset __S8BitdoDevice_setIsManuanlViewRR__>
                __objc2_meth <offset sel_setDetails_, offset aV240816_0, \ ; -[S8BitdoDevice setDetails:] ...
                              offset __S8BitdoDevice_setDetails__>
                __objc2_meth <offset sel_isChangeBoot, offset aC1608, \ ; -[S8BitdoDevice isChangeBoot] ...
                              offset __S8BitdoDevice_isChangeBoot_>
                __objc2_meth <offset sel_setIsChangeBoot_, offset aV2008c16, \ ; -[S8BitdoDevice setIsChangeBoot:] ...
                              offset __S8BitdoDevice_setIsChangeBoot__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[S8BitdoDevice .cxx_destruct] ...
                              offset __S8BitdoDevice__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_S8BitdoDevice __objc2_ivar_list <20h, 0Bh>
                                        ; DATA XREF: __objc_const:S8BitdoDevice_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__isChangeBoot, \ ; char _isChangeBoot;
                              offset aIschangeboot, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__pid, offset aPid_0, \ ; unsigned __int16 _pid;
                              offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__vid, offset aVid_0, \ ; unsigned __int16 _vid;
                              offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__beta, offset aBeta_0,\ ; unsigned __int16 _beta;
                              offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__bootVersion, \ ; unsigned __int16 _bootVersion;
                              offset aBootversion, offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__isCarryRR, \ ; unsigned __int16 _isCarryRR;
                              offset aIscarryrr, offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__isManuanlViewRR, \ ; unsigned __int16 _isManuanlViewRR;
                              offset aIsmanuanlviewr_0, offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__version, \ ; float _version;
                              offset aVersion_1, offset asc_100036AF9, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__deviceName, \ ; NSString *_deviceName;
                              offset aDevicename, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__deviceRef, \ ; __IOHIDDevice *_deviceRef;
                              offset aDeviceref, offset aIohiddevice, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDevice__details, \ ; S8BitdoDataDetails *_details;
                              offset aDetails_0, offset aS8bitdodatadet_0, 3, 8>
S8BitdoDevice_$properties __objc2_prop_list <10h, 0Bh>
                                        ; DATA XREF: __objc_const:S8BitdoDevice_$classData↓o
                __objc2_prop <offset sel_pid, offset aTsVPid> ; @property unsigned __int16 pid;
                __objc2_prop <offset sel_vid, offset aTsVVid> ; @property unsigned __int16 vid;
                __objc2_prop <offset sel_version, offset aTfVVersion> ; @property float version;
                __objc2_prop <offset sel_beta, offset aTsVBeta> ; @property unsigned __int16 beta;
                __objc2_prop <offset sel_deviceName, offset aTNsstringNVDev> ; @property (retain, nonatomic) NSString *deviceName;
                __objc2_prop <offset sel_deviceRef, offset aTIohiddeviceVD_0> ; @property __IOHIDDevice *deviceRef;
                __objc2_prop <offset sel_bootVersion, offset aTsVBootversion> ; @property unsigned __int16 bootVersion;
                __objc2_prop <offset sel_isCarryRR, offset aTsVIscarryrr> ; @property unsigned __int16 isCarryRR;
                __objc2_prop <offset sel_isManuanlViewRR, offset aTsVIsmanuanlvi> ; @property unsigned __int16 isManuanlViewRR;
                __objc2_prop <offset sel_details, offset aTS8bitdodatade> ; @property (retain) S8BitdoDataDetails *details;
                __objc2_prop <offset sel_isChangeBoot, offset aTcVIschangeboo> ; @property char isChangeBoot;
S8BitdoDevice_$classData __objc2_class_ro <194h, 8, 38h, 0, offset S8BitdoDevice_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_S8BitdoDevice↓o
                                  offset aS8bitdodevice, \ ; "S8BitdoDevice"
                                  offset _OBJC_INSTANCE_METHODS_S8BitdoDevice, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_S8BitdoDevice, 0, \
                                  offset S8BitdoDevice_$properties>
_OBJC_CLASS_METHODS_SHttp __objc2_meth_list <18h, 0Dh>
                                        ; DATA XREF: __objc_const:SHttp_$metaData↓o
                __objc2_meth <offset sel_getUpdateFirmwaerWithType_success_failure_, \ ; +[SHttp getUpdateFirmwaerWithType:success:failure:] ...
                              offset aV3608i162028, \
                              offset __SHttp_getUpdateFirmwaerWithType_success_failure__>
                __objc2_meth <offset sel_dowmFirmwaerFile_success_failure_downLoadID_maxSize_,\ ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:] ...
                              offset aV4808162432i40, \
                              offset __SHttp_dowmFirmwaerFile_success_failure_downLoadID_maxSize__>
                __objc2_meth <offset sel_getNewVersion_version_beta_success_failure_, \ ; +[SHttp getNewVersion:version:beta:success:failure:] ...
                              offset aV4408i16f20i24, \
                              offset __SHttp_getNewVersion_version_beta_success_failure__>
                __objc2_meth <offset sel_StatistcsFirmware_ID_, offset aV2408c16i20, \ ; +[SHttp StatistcsFirmware:ID:] ...
                              offset __SHttp_StatistcsFirmware_ID__>
                __objc2_meth <offset sel_recordActivity_, offset aV2008i16, \ ; +[SHttp recordActivity:] ...
                              offset __SHttp_recordActivity__>
                __objc2_meth <offset sel_sendRecordActivity_, offset aV2008i16, \ ; +[SHttp sendRecordActivity:] ...
                              offset __SHttp_sendRecordActivity__>
                __objc2_meth <offset sel_sendRecordActivity_IP_, offset aV2808i1620, \ ; +[SHttp sendRecordActivity:IP:] ...
                              offset __SHttp_sendRecordActivity_IP__>
                __objc2_meth <offset sel_getID, offset a1608, offset __SHttp_getID_> ; +[SHttp getID] ...
                __objc2_meth <offset sel_getComputerName, offset a1608, \ ; +[SHttp getComputerName] ...
                              offset __SHttp_getComputerName_>
                __objc2_meth <offset sel_utf8ToUnicode_, offset a240816, \ ; +[SHttp utf8ToUnicode:] ...
                              offset __SHttp_utf8ToUnicode__>
                __objc2_meth <offset sel_HttpGetPageHtml_URL_encoding_, \ ; +[SHttp HttpGetPageHtml:URL:encoding:] ...
                              offset aV40081624q32, \
                              offset __SHttp_HttpGetPageHtml_URL_encoding__>
                __objc2_meth <offset sel_getIPFormHtml_, offset a240816, \ ; +[SHttp getIPFormHtml:] ...
                              offset __SHttp_getIPFormHtml__>
                __objc2_meth <offset sel_md5HexDigest_, offset a240816, \ ; +[SHttp md5HexDigest:] ...
                              offset __SHttp_md5HexDigest__>
SHttp_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aShttp, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHttp↓o
                                  offset _OBJC_CLASS_METHODS_SHttp, 0, 0, 0, 0> ; "SHttp"
SHttp_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aShttp, 0, 0, 0, 0, 0>
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHttp↓o
                                        ; "SHttp"
_OBJC_INSTANCE_METHODS_NSObject __objc2_meth_list <18h, 13h>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSObject↓o
                __objc2_meth <offset sel_isEqual_, offset aC240816, 0> ; "isEqual:" ...
                __objc2_meth <offset sel_class, offset a1608_0, 0> ; "class" ...
                __objc2_meth <offset sel_self, offset a1608, 0> ; "self" ...
                __objc2_meth <offset sel_performSelector_, offset a240816_0, 0> ; "performSelector:" ...
                __objc2_meth <offset sel_performSelector_withObject_, \ ; "performSelector:withObject:" ...
                              offset a32081624, 0>
                __objc2_meth <offset sel_performSelector_withObject_withObject_, \ ; "performSelector:withObject:withObject:" ...
                              offset a4008162432, 0>
                __objc2_meth <offset sel_isProxy, offset aC1608, 0> ; "isProxy" ...
                __objc2_meth <offset sel_isKindOfClass_, offset aC240816_0, 0> ; "isKindOfClass:" ...
                __objc2_meth <offset sel_isMemberOfClass_, offset aC240816_0, 0> ; "isMemberOfClass:" ...
                __objc2_meth <offset sel_conformsToProtocol_, offset aC240816, 0> ; "conformsToProtocol:" ...
                __objc2_meth <offset sel_respondsToSelector_, offset aC240816_1, 0> ; "respondsToSelector:" ...
                __objc2_meth <offset sel_retain, offset a1608, 0> ; "retain" ...
                __objc2_meth <offset sel_release, offset aVv1608, 0> ; "release" ...
                __objc2_meth <offset sel_autorelease, offset a1608, 0> ; "autorelease" ...
                __objc2_meth <offset sel_retainCount, offset aQ1608, 0> ; "retainCount" ...
                __objc2_meth <offset sel_zone, offset aNszone1608, 0> ; "zone" ...
                __objc2_meth <offset sel_hash, offset aQ1608, 0> ; "hash" ...
                __objc2_meth <offset sel_superclass, offset a1608_0, 0> ; "superclass" ...
                __objc2_meth <offset sel_description, offset a1608, 0> ; "description" ...
_OBJC_INSTANCE_METHODS_NSObject_0 __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSObject↓o
                __objc2_meth <offset sel_debugDescription, offset a1608, 0> ; "debugDescription" ...
NSObject_$properties __objc2_prop_list <10h, 4>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSObject↓o
                __objc2_prop <offset sel_hash, offset aTqR> ; @property (readonly) unsigned __int64 hash;
                __objc2_prop <offset sel_superclass, offset aTR> ; @property (readonly) Class superclass;
                __objc2_prop <offset sel_description, offset aTNsstringRC> ; @property (readonly, copy) NSString *description;
                __objc2_prop <offset sel_debugDescription, offset aTNsstringRC_0> ; @property (readonly, copy) NSString *debugDescription;
off_10003DCB0   dq offset aC240816      ; DATA XREF: __data:0000000100049C48↓o
                                        ; "c24@0:8@16"
                dq offset a1608_0       ; "#16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset a240816_0     ; "@24@0:8:16"
                dq offset a32081624     ; "@32@0:8:16@24"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                dq offset aC1608        ; "c16@0:8"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC2408Protocol1 ; "c24@0:8@\"Protocol\"16"
                dq offset aC240816_1    ; "c24@0:8:16"
                dq offset a1608         ; "@16@0:8"
                dq offset aVv1608       ; "Vv16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset a1608_0       ; "#16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
DeviceDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_DeviceDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_DeviceDelegate __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_DeviceDelegate↓o
                __objc2_meth <offset sel_addS8BitdoDevice_, offset aV240816_0, 0> ; "addS8BitdoDevice:" ...
                __objc2_meth <offset sel_removeS8BitdoDevice_, offset aV240816_0, 0> ; "removeS8BitdoDevice:" ...
off_10003DDA0   dq offset aV2408S8bitdode
                                        ; DATA XREF: __data:0000000100049CA8↓o
                                        ; "v24@0:8@\"S8BitdoDevice\"16"
                dq offset aV2408S8bitdode ; "v24@0:8@\"S8BitdoDevice\"16"
HomeViewDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_HomeViewDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_HomeViewDelegate __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_HomeViewDelegate↓o
                __objc2_meth <offset sel_firmwaerUpdateClick_from_, \ ; "firmwaerUpdateClick:from:" ...
                              offset aV280816i24, 0>
                __objc2_meth <offset sel_hasNewFirmwaerVersion_firmwaer_, \ ; "hasNewFirmwaerVersion:firmwaer:" ...
                              offset aV32081624, 0>
off_10003DE00   dq offset aV2808S8bitdode
                                        ; DATA XREF: __data:0000000100049D08↓o
                                        ; "v28@0:8@\"S8BitdoDevice\"16i24"
                dq offset aV3208S8bitdode ; "v32@0:8@\"S8BitdoDevice\"16@\"Firmwaer"...
_OBJC_INSTANCE_METHODS_MoreViewDelegate __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_MoreViewDelegate↓o
                __objc2_meth <offset sel_MoreViewClick_View_, offset aV32081624, 0> ; "MoreViewClick:View:" ...
off_10003DE30   dq offset aV3208S8bitdode_0
                                        ; DATA XREF: __data:0000000100049D68↓o
                                        ; "v32@0:8@\"S8BitdoDevice\"16@\"MoreView"...
NSAlertDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSAlertDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                align 10h
_OBJC_INSTANCE_METHODS_NSAlertDelegate __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSAlertDelegate↓o
                __objc2_meth <offset sel_alertShowHelp_, offset aC240816, 0> ; "alertShowHelp:" ...
off_10003DE70   dq offset aC2408Nsalert16
                                        ; DATA XREF: __data:0000000100049DC8↓o
                                        ; "c24@0:8@\"NSAlert\"16"
_OBJC_INSTANCE_METHODS_UpdateViewDelegat __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_UpdateViewDelegat↓o
                __objc2_meth <offset sel_addBootDevice_, offset aV240816_0, 0> ; "addBootDevice:" ...
                __objc2_meth <offset sel_goHome_, offset aV240816_0, 0> ; "goHome:" ...
off_10003DEB0   dq offset aV2408Updatevie
                                        ; DATA XREF: __data:0000000100049E28↓o
                                        ; "v24@0:8@\"UpdateView\"16"
                dq offset aV2408Updatevie ; "v24@0:8@\"UpdateView\"16"
ViewController_$prots __objc2_prot_list <5>
                                        ; DATA XREF: __objc_const:ViewController_$metaData↓o
                                        ; __objc_const:ViewController_$classData↓o
                dq offset _OBJC_PROTOCOL_$_DeviceDelegate
                dq offset _OBJC_PROTOCOL_$_HomeViewDelegate
                dq offset _OBJC_PROTOCOL_$_MoreViewDelegate
                dq offset _OBJC_PROTOCOL_$_NSAlertDelegate
                dq offset _OBJC_PROTOCOL_$_UpdateViewDelegat
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
ViewController_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aViewcontroller, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_ViewController↓o
                                  offset ViewController_$prots, 0, 0, 0> ; "ViewController"
_OBJC_INSTANCE_METHODS_ViewController __objc2_meth_list <18h, 25h>
                                        ; DATA XREF: __objc_const:ViewController_$classData↓o
                __objc2_meth <offset sel_updateView, offset a1608, \ ; -[ViewController updateView] ...
                              offset __ViewController_updateView_>
                __objc2_meth <offset sel_moreView, offset a1608, \ ; -[ViewController moreView] ...
                              offset __ViewController_moreView_>
                __objc2_meth <offset sel_viewDidLoad, offset aV1608_0, \ ; -[ViewController viewDidLoad] ...
                              offset __ViewController_viewDidLoad_>
                __objc2_meth <offset sel_initView, offset aV1608_0, \ ; -[ViewController initView] ...
                              offset __ViewController_initView_>
                __objc2_meth <offset sel_S_AddView_, offset aV240816_0, \ ; -[ViewController S_AddView:] ...
                              offset __ViewController_S_AddView__>
                __objc2_meth <offset sel_S_RemoveView_, offset aV240816_0, \ ; -[ViewController S_RemoveView:] ...
                              offset __ViewController_S_RemoveView__>
                __objc2_meth <offset sel_showAndHideBackButton, offset aV1608_0, \ ; -[ViewController showAndHideBackButton] ...
                              offset __ViewController_showAndHideBackButton_>
                __objc2_meth <offset sel_addCheckUpdat, offset aV1608_0, \ ; -[ViewController addCheckUpdat] ...
                              offset __ViewController_addCheckUpdat_>
                __objc2_meth <offset sel_updateClick, offset aV1608_0, \ ; -[ViewController updateClick] ...
                              offset __ViewController_updateClick_>
                __objc2_meth <offset sel_addMoreAction, offset aV1608_0, \ ; -[ViewController addMoreAction] ...
                              offset __ViewController_addMoreAction_>
                __objc2_meth <offset sel_addBetaAction, offset aV1608_0, \ ; -[ViewController addBetaAction] ...
                              offset __ViewController_addBetaAction_>
                __objc2_meth <offset sel_dealloc, offset aV1608_0, \ ; -[ViewController dealloc] ...
                              offset __ViewController_dealloc_>
                __objc2_meth <offset sel_back, offset aV1608_0, \ ; -[ViewController back] ...
                              offset __ViewController_back_>
                __objc2_meth <offset sel_moreClick, offset aV1608_0, \ ; -[ViewController moreClick] ...
                              offset __ViewController_moreClick_>
                __objc2_meth <offset sel_betaClick, offset aV1608_0, \ ; -[ViewController betaClick] ...
                              offset __ViewController_betaClick_>
                __objc2_meth <offset sel_chengBeta_, offset aV2008c16, \ ; -[ViewController chengBeta:] ...
                              offset __ViewController_chengBeta__>
                __objc2_meth <offset sel_closeWindow_, offset aV240816_0, \ ; -[ViewController closeWindow:] ...
                              offset __ViewController_closeWindow__>
                __objc2_meth <offset sel_addS8BitdoDevice_, offset aV240816_0, \ ; -[ViewController addS8BitdoDevice:] ...
                              offset __ViewController_addS8BitdoDevice__>
                __objc2_meth <offset sel_removeS8BitdoDevice_, offset aV240816_0, \ ; -[ViewController removeS8BitdoDevice:] ...
                              offset __ViewController_removeS8BitdoDevice__>
                __objc2_meth <offset sel_firmwaerUpdateClick_from_, \ ; -[ViewController firmwaerUpdateClick:from:] ...
                              offset aV280816i24, \
                              offset __ViewController_firmwaerUpdateClick_from__>
                __objc2_meth <offset sel_hasNewFirmwaerVersion_firmwaer_, \ ; -[ViewController hasNewFirmwaerVersion:firmwaer:] ...
                              offset aV32081624, \
                              offset __ViewController_hasNewFirmwaerVersion_firmwaer__>
                __objc2_meth <offset sel_MoreViewClick_View_, offset aV32081624, \ ; -[ViewController MoreViewClick:View:] ...
                              offset __ViewController_MoreViewClick_View__>
                __objc2_meth <offset sel_addBootDevice_, offset aV240816_0, \ ; -[ViewController addBootDevice:] ...
                              offset __ViewController_addBootDevice__>
                __objc2_meth <offset sel_goHome_, offset aV240816_0, \ ; -[ViewController goHome:] ...
                              offset __ViewController_goHome__>
                __objc2_meth <offset sel_dinput, offset a1608, \ ; -[ViewController dinput] ...
                              offset __ViewController_dinput_>
                __objc2_meth <offset sel_setDinput_, offset aV240816_0, \ ; -[ViewController setDinput:] ...
                              offset __ViewController_setDinput__>
                __objc2_meth <offset sel_switchAndMac, offset a1608, \ ; -[ViewController switchAndMac] ...
                              offset __ViewController_switchAndMac_>
                __objc2_meth <offset sel_setSwitchAndMac_, offset aV240816_0, \ ; -[ViewController setSwitchAndMac:] ...
                              offset __ViewController_setSwitchAndMac__>
                __objc2_meth <offset sel_homeView, offset a1608, \ ; -[ViewController homeView] ...
                              offset __ViewController_homeView_>
                __objc2_meth <offset sel_setHomeView_, offset aV240816_0, \ ; -[ViewController setHomeView:] ...
                              offset __ViewController_setHomeView__>
                __objc2_meth <offset sel_setUpdateView_, offset aV240816_0, \ ; -[ViewController setUpdateView:] ...
                              offset __ViewController_setUpdateView__>
                __objc2_meth <offset sel_backButton, offset a1608, \ ; -[ViewController backButton] ...
                              offset __ViewController_backButton_>
                __objc2_meth <offset sel_setBackButton_, offset aV240816_0, \ ; -[ViewController setBackButton:] ...
                              offset __ViewController_setBackButton__>
                __objc2_meth <offset sel_setMoreView_, offset aV240816_0, \ ; -[ViewController setMoreView:] ...
                              offset __ViewController_setMoreView__>
                __objc2_meth <offset sel_views, offset a1608, \ ; -[ViewController views] ...
                              offset __ViewController_views_>
                __objc2_meth <offset sel_setViews_, offset aV240816_0, \ ; -[ViewController setViews:] ...
                              offset __ViewController_setViews__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[ViewController .cxx_destruct] ...
                              offset __ViewController__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_ViewController __objc2_ivar_list <20h, 9>
                                        ; DATA XREF: __objc_const:ViewController_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController_m_widht, \ ; double m_widht;
                              offset aMWidht, offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController_m_height, \ ; double m_height;
                              offset aMHeight, offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController__dinput, \ ; SHIDDinput *_dinput;
                              offset aDinput, offset aShiddinput_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController__switchAndMac, \ ; SHIDSwitchAndMac *_switchAndMac;
                              offset aSwitchandmac, offset aShidswitchandm_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController__homeView, \ ; HomeView *_homeView;
                              offset aHomeview_0, offset aHomeview_3, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController__updateView, \ ; UpdateView *_updateView;
                              offset aUpdateview, offset aUpdateview_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController__backButton, \ ; SBackButton *_backButton;
                              offset aBackbutton, offset aSbackbutton_1, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController__moreView, \ ; MoreView *_moreView;
                              offset aMoreview, offset aMoreview_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_ViewController__views, \ ; NSMutableArray *_views;
                              offset aViews, offset aNsmutablearray, 3, 8>
ViewController_$properties __objc2_prop_list <10h, 0Bh>
                                        ; DATA XREF: __objc_const:ViewController_$classData↓o
                __objc2_prop <offset sel_dinput, offset aTShiddinputVDi> ; @property (retain) SHIDDinput *dinput;
                __objc2_prop <offset sel_switchAndMac, offset aTShidswitchand> ; @property (retain) SHIDSwitchAndMac *switchAndMac;
                __objc2_prop <offset sel_homeView, offset aTHomeviewVHome> ; @property (retain) HomeView *homeView;
                __objc2_prop <offset sel_updateView, offset aTUpdateviewNVU> ; @property (retain, nonatomic) UpdateView *updateView;
                __objc2_prop <offset sel_backButton, offset aTSbackbuttonNV> ; @property (retain, nonatomic) SBackButton *backButton;
                __objc2_prop <offset sel_moreView, offset aTMoreviewNVMor> ; @property (retain, nonatomic) MoreView *moreView;
                __objc2_prop <offset sel_views, offset aTNsmutablearra_0> ; @property (retain) NSMutableArray *views;
                __objc2_prop <offset sel_hash, offset aTqR> ; @property (readonly) unsigned __int64 hash;
                __objc2_prop <offset sel_superclass, offset aTR> ; @property (readonly) Class superclass;
                __objc2_prop <offset sel_description, offset aTNsstringRC> ; @property (readonly, copy) NSString *description;
                __objc2_prop <offset sel_debugDescription, offset aTNsstringRC_0> ; @property (readonly, copy) NSString *debugDescription;
ViewController_$classData __objc2_class_ro <194h, 8, 50h, 0, offset ViewController_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_ViewController↓o
                                  offset aViewcontroller, \ ; "ViewController"
                                  offset _OBJC_INSTANCE_METHODS_ViewController, \
                                  offset ViewController_$prots, \
                                  offset _OBJC_INSTANCE_VARIABLES_ViewController, 0, \
                                  offset ViewController_$properties>
_OBJC_CLASS_METHODS_SHIDBoot __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:SHIDBoot_$metaData↓o
                __objc2_meth <offset sel_load, offset aV1608_0, \ ; +[SHIDBoot load] ...
                              offset __SHIDBoot_load_>
SHIDBoot_$metaData __objc2_class_ro <315h, 28h, 28h, 0, 0, offset aShidboot_1, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDBoot↓o
                                  offset _OBJC_CLASS_METHODS_SHIDBoot, 0, 0, 0, 0> ; "SHIDBoot"
_OBJC_INSTANCE_METHODS_SHIDBoot __objc2_meth_list <18h, 0Ch>
                                        ; DATA XREF: __objc_const:SHIDBoot_$classData↓o
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDBoot open] ...
                              offset __SHIDBoot_open_>
                __objc2_meth <offset sel_bootDelegate, offset a1608, \ ; -[SHIDBoot bootDelegate] ...
                              offset __SHIDBoot_bootDelegate_>
                __objc2_meth <offset sel_setBootDelegate_, offset aV240816_0, \ ; -[SHIDBoot setBootDelegate:] ...
                              offset __SHIDBoot_setBootDelegate__>
                __objc2_meth <offset sel_addDelegate, offset a1608, \ ; -[SHIDBoot addDelegate] ...
                              offset __SHIDBoot_addDelegate_>
                __objc2_meth <offset sel_setAddDelegate_, offset aV240816_0, \ ; -[SHIDBoot setAddDelegate:] ...
                              offset __SHIDBoot_setAddDelegate__>
                __objc2_meth <offset sel_filePath, offset a1608, \ ; -[SHIDBoot filePath] ...
                              offset __SHIDBoot_filePath_>
                __objc2_meth <offset sel_setFilePath_, offset aV240816_0, \ ; -[SHIDBoot setFilePath:] ...
                              offset __SHIDBoot_setFilePath__>
                __objc2_meth <offset sel_isUSBRR_PS_classic, offset aC1608, \ ; -[SHIDBoot isUSBRR_PS_classic] ...
                              offset __SHIDBoot_isUSBRR_PS_classic_>
                __objc2_meth <offset sel_setIsUSBRR_PS_classic_, offset aV2008c16, \ ; -[SHIDBoot setIsUSBRR_PS_classic:] ...
                              offset __SHIDBoot_setIsUSBRR_PS_classic__>
                __objc2_meth <offset sel_lastProgress, offset aI1608, \ ; -[SHIDBoot lastProgress] ...
                              offset __SHIDBoot_lastProgress_>
                __objc2_meth <offset sel_setLastProgress_, offset aV2008i16, \ ; -[SHIDBoot setLastProgress:] ...
                              offset __SHIDBoot_setLastProgress__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[SHIDBoot .cxx_destruct] ...
                              offset __SHIDBoot__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_SHIDBoot __objc2_ivar_list <20h, 5>
                                        ; DATA XREF: __objc_const:SHIDBoot_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBoot__isUSBRR_PS_classic, \ ; char _isUSBRR_PS_classic;
                              offset aIsusbrrPsClass, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBoot__lastProgress, \ ; int _lastProgress;
                              offset aLastprogress, offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBoot__bootDelegate, \ ; SHIDBootDelegate *_bootDelegate;
                              offset aBootdelegate, offset aShidbootdelega_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBoot__addDelegate, \ ; SHIDBootDelegate *_addDelegate;
                              offset aAdddelegate, offset aShidbootdelega_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBoot__filePath, \ ; NSString *_filePath;
                              offset aFilepath, offset aNsstring, 3, 8>
SHIDBoot_$properties __objc2_prop_list <10h, 5>
                                        ; DATA XREF: __objc_const:SHIDBoot_$classData↓o
                __objc2_prop <offset sel_lastProgress, offset aTiVLastprogres> ; @property int lastProgress;
                __objc2_prop <offset sel_bootDelegate, offset aTShidbootdeleg_0> ; @property (nonatomic, __weak) SHIDBootDelegate *bootDelegate;
                __objc2_prop <offset sel_addDelegate, offset aTShidbootdeleg> ; @property (nonatomic, __weak) SHIDBootDelegate *addDelegate;
                __objc2_prop <offset sel_filePath, offset aTNsstringCNVFi> ; @property (copy, nonatomic) NSString *filePath;
                __objc2_prop <offset sel_isUSBRR_PS_classic, offset aTcNVIsusbrrPsC> ; @property (nonatomic) char isUSBRR_PS_classic;
SHIDBoot_$classData __objc2_class_ro <314h, 68h, 87h, 0, 0, offset aShidboot_1, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDBoot↓o
                                  offset _OBJC_INSTANCE_METHODS_SHIDBoot, 0, \ ; "SHIDBoot"
                                  offset _OBJC_INSTANCE_VARIABLES_SHIDBoot, \
                                  offset UpDaterManager_$ivarLayout, \
                                  offset SHIDBoot_$properties>
SView_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aSview, 0, 0, 0, 0, 0>
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SView↓o
                                        ; "SView"
_OBJC_INSTANCE_METHODS_SView __objc2_meth_list <18h, 5>
                                        ; DATA XREF: __objc_const:SView_$classData↓o
                __objc2_meth <offset sel_init, offset a1608, offset __SView_init_> ; -[SView init] ...
                __objc2_meth <offset sel_drawRect_, offset aV4808CgrectCgp, \ ; -[SView drawRect:] ...
                              offset __SView_drawRect__>
                __objc2_meth <offset sel_sBackgroundColor, offset a1608, \ ; -[SView sBackgroundColor] ...
                              offset __SView_sBackgroundColor_>
                __objc2_meth <offset sel_setSBackgroundColor_, offset aV240816_0, \ ; -[SView setSBackgroundColor:] ...
                              offset __SView_setSBackgroundColor__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[SView .cxx_destruct] ...
                              offset __SView__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_SView __objc2_ivar_list <20h, 1>
                                        ; DATA XREF: __objc_const:SView_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SView__sBackgroundColor, \ ; NSColor *_sBackgroundColor;
                              offset aSbackgroundcol, offset aNscolor, 3, 8>
SView_$properties __objc2_prop_list <10h, 1>
                                        ; DATA XREF: __objc_const:SView_$classData↓o
                __objc2_prop <offset sel_sBackgroundColor, offset aTNscolorVSback> ; @property (retain) NSColor *sBackgroundColor;
SView_$classData __objc2_class_ro <194h, 8, 10h, 0, offset SView_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SView↓o
                                  offset aSview, offset _OBJC_INSTANCE_METHODS_SView, \ ; "SView"
                                  0, offset _OBJC_INSTANCE_VARIABLES_SView, 0, \
                                  offset SView_$properties>
SBackButton_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aSbackbutton_0, 0, 0, 0,\
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SBackButton↓o
                                  0, 0> ; "SBackButton"
_OBJC_INSTANCE_METHODS_SBackButton __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:SBackButton_$classData↓o
                __objc2_meth <offset sel_initWithFrame_, offset a4808CgrectCgpo, \ ; -[SBackButton initWithFrame:] ...
                              offset __SBackButton_initWithFrame__>
SBackButton_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aSbackbutton_0, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SBackButton↓o
                                  offset _OBJC_INSTANCE_METHODS_SBackButton, 0, 0, 0, \ ; "SBackButton"
                                  0>
S8BitdoDataDetails_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aS8bitdodatadet, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_S8BitdoDataDetails↓o
                                  0, 0, 0> ; "S8BitdoDataDetails"
_OBJC_INSTANCE_METHODS_S8BitdoDataDetails __objc2_meth_list <18h, 12h>
                                        ; DATA XREF: __objc_const:S8BitdoDataDetails_$classData↓o
                __objc2_meth <offset sel_description, offset a1608, \ ; -[S8BitdoDataDetails description] ...
                              offset __S8BitdoDataDetails_description_>
                __objc2_meth <offset sel_name, offset a1608, \ ; -[S8BitdoDataDetails name] ...
                              offset __S8BitdoDataDetails_name_>
                __objc2_meth <offset sel_setName_, offset aV240816_0, \ ; -[S8BitdoDataDetails setName:] ...
                              offset __S8BitdoDataDetails_setName__>
                __objc2_meth <offset sel_pid, offset aS1608, \ ; -[S8BitdoDataDetails pid] ...
                              offset __S8BitdoDataDetails_pid_>
                __objc2_meth <offset sel_setPid_, offset aV2008s16, \ ; -[S8BitdoDataDetails setPid:] ...
                              offset __S8BitdoDataDetails_setPid__>
                __objc2_meth <offset sel_vid, offset aS1608, \ ; -[S8BitdoDataDetails vid] ...
                              offset __S8BitdoDataDetails_vid_>
                __objc2_meth <offset sel_setVid_, offset aV2008s16, \ ; -[S8BitdoDataDetails setVid:] ...
                              offset __S8BitdoDataDetails_setVid__>
                __objc2_meth <offset sel_type, offset aI1608, \ ; -[S8BitdoDataDetails type] ...
                              offset __S8BitdoDataDetails_type_>
                __objc2_meth <offset sel_setType_, offset aV2008i16, \ ; -[S8BitdoDataDetails setType:] ...
                              offset __S8BitdoDataDetails_setType__>
                __objc2_meth <offset sel_miniImageName, offset a1608, \ ; -[S8BitdoDataDetails miniImageName] ...
                              offset __S8BitdoDataDetails_miniImageName_>
                __objc2_meth <offset sel_setMiniImageName_, offset aV240816_0, \ ; -[S8BitdoDataDetails setMiniImageName:] ...
                              offset __S8BitdoDataDetails_setMiniImageName__>
                __objc2_meth <offset sel_moreImagehighlight, offset a1608, \ ; -[S8BitdoDataDetails moreImagehighlight] ...
                              offset __S8BitdoDataDetails_moreImagehighlight_>
                __objc2_meth <offset sel_setMoreImagehighlight_, offset aV240816_0, \ ; -[S8BitdoDataDetails setMoreImagehighlight:] ...
                              offset __S8BitdoDataDetails_setMoreImagehighlight__>
                __objc2_meth <offset sel_moreImage, offset a1608, \ ; -[S8BitdoDataDetails moreImage] ...
                              offset __S8BitdoDataDetails_moreImage_>
                __objc2_meth <offset sel_setMoreImage_, offset aV240816_0, \ ; -[S8BitdoDataDetails setMoreImage:] ...
                              offset __S8BitdoDataDetails_setMoreImage__>
                __objc2_meth <offset sel_order, offset aQ1608_0, \ ; -[S8BitdoDataDetails order] ...
                              offset __S8BitdoDataDetails_order_>
                __objc2_meth <offset sel_setOrder_, offset aV2408q16, \ ; -[S8BitdoDataDetails setOrder:] ...
                              offset __S8BitdoDataDetails_setOrder__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[S8BitdoDataDetails .cxx_destruct] ...
                              offset __S8BitdoDataDetails__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_S8BitdoDataDetails __objc2_ivar_list <20h, 8>
                                        ; DATA XREF: __objc_const:S8BitdoDataDetails_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__pid, \ ; unsigned __int16 _pid;
                              offset aPid_0, offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__vid, \ ; unsigned __int16 _vid;
                              offset aVid_0, offset aS_0, 1, 2>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__type, \ ; int _type;
                              offset aType_0, offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__name, \ ; NSString *_name;
                              offset aName, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__miniImageName, \ ; NSString *_miniImageName;
                              offset aMiniimagename, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__moreImagehighlight,\ ; NSString *_moreImagehighlight;
                              offset aMoreimagehighl, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__moreImage, \ ; NSString *_moreImage;
                              offset aMoreimage, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_S8BitdoDataDetails__order, \ ; signed __int64 _order;
                              offset aOrder, offset aQ_2, 3, 8>
S8BitdoDataDetails_$properties __objc2_prop_list <10h, 8>
                                        ; DATA XREF: __objc_const:S8BitdoDataDetails_$classData↓o
                __objc2_prop <offset sel_name, offset aTNsstringCNVNa> ; @property (copy, nonatomic) NSString *name;
                __objc2_prop <offset sel_pid, offset aTsNVPid> ; @property (nonatomic) unsigned __int16 pid;
                __objc2_prop <offset sel_vid, offset aTsNVVid> ; @property (nonatomic) unsigned __int16 vid;
                __objc2_prop <offset sel_type, offset aTiNVType> ; @property (nonatomic) int type;
                __objc2_prop <offset sel_miniImageName, offset aTNsstringCNVMi> ; @property (copy, nonatomic) NSString *miniImageName;
                __objc2_prop <offset sel_moreImagehighlight, offset aTNsstringCNVMo> ; @property (copy, nonatomic) NSString *moreImagehighlight;
                __objc2_prop <offset sel_moreImage, offset aTNsstringCNVMo_0> ; @property (copy, nonatomic) NSString *moreImage;
                __objc2_prop <offset sel_order, offset aTqNVOrder> ; @property (nonatomic) signed __int64 order;
S8BitdoDataDetails_$classData __objc2_class_ro <194h, 8, 38h, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_S8BitdoDataDetails↓o
                                  offset S8BitdoDataDetails_$ivarLayout, \ ; "S8BitdoDataDetails"
                                  offset aS8bitdodatadet, \
                                  offset _OBJC_INSTANCE_METHODS_S8BitdoDataDetails, 0,\
                                  offset _OBJC_INSTANCE_VARIABLES_S8BitdoDataDetails, \
                                  0, offset S8BitdoDataDetails_$properties>
_OBJC_CLASS_METHODS_S8BitdoDeviceDetailsTools __objc2_meth_list <18h, 4>
                                        ; DATA XREF: __objc_const:S8BitdoDeviceDetailsTools_$metaData↓o
                __objc2_meth <offset sel_load, offset aV1608_0, \ ; +[S8BitdoDeviceDetailsTools load] ...
                              offset __S8BitdoDeviceDetailsTools_load_>
                __objc2_meth <offset sel_get8BitdoDevicePIDVIDAndNAMEs, offset a1608, \ ; +[S8BitdoDeviceDetailsTools get8BitdoDevicePIDVIDAndNAMEs] ...
                              offset __S8BitdoDeviceDetailsTools_get8BitdoDevicePIDVIDAndNAMEs_>
                __objc2_meth <offset sel_getMore8BitdoDevicePIDVIDAndNAMEs, \ ; +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs] ...
                              offset a1608, \
                              offset __S8BitdoDeviceDetailsTools_getMore8BitdoDevicePIDVIDAndNAMEs_>
                __objc2_meth <offset sel_getNameWith_pid_name_, offset a3208i16i2024, \ ; +[S8BitdoDeviceDetailsTools getNameWith:pid:name:] ...
                              offset __S8BitdoDeviceDetailsTools_getNameWith_pid_name__>
S8BitdoDeviceDetailsTools_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aS8bitdodeviced, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_S8BitdoDeviceDetailsTools↓o
                                  offset _OBJC_CLASS_METHODS_S8BitdoDeviceDetailsTools,\ ; "S8BitdoDeviceDetailsTools"
                                  0, 0, 0, 0>
S8BitdoDeviceDetailsTools_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aS8bitdodeviced, 0, 0, 0, 0,\
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_S8BitdoDeviceDetailsTools↓o
                                  0>    ; "S8BitdoDeviceDetailsTools"
_OBJC_CLASS_METHODS_SHIDBootPro2 __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:SHIDBootPro2_$metaData↓o
                __objc2_meth <offset sel_allocWithZone_, offset a2408Nszone16, \ ; +[SHIDBootPro2 allocWithZone:] ...
                              offset __SHIDBootPro2_allocWithZone__>
                __objc2_meth <offset sel_sharedInstance, offset a1608, \ ; +[SHIDBootPro2 sharedInstance] ...
                              offset __SHIDBootPro2_sharedInstance_>
SHIDBootPro2_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aShidbootpro2, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDBootPro2↓o
                                  offset _OBJC_CLASS_METHODS_SHIDBootPro2, 0, 0, 0, 0> ; "SHIDBootPro2"
_OBJC_INSTANCE_METHODS_SHIDBootPro2 __objc2_meth_list <18h, 35h>
                                        ; DATA XREF: __objc_const:SHIDBootPro2_$classData↓o
                __objc2_meth <offset sel_copyWithZone_, offset a2408Nszone16, \ ; -[SHIDBootPro2 copyWithZone:] ...
                              offset __SHIDBootPro2_copyWithZone__>
                __objc2_meth <offset sel_mutableCopyWithZone_, offset a2408Nszone16, \ ; -[SHIDBootPro2 mutableCopyWithZone:] ...
                              offset __SHIDBootPro2_mutableCopyWithZone__>
                __objc2_meth <offset sel_blocks, offset a1608, \ ; -[SHIDBootPro2 blocks] ...
                              offset __SHIDBootPro2_blocks_>
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDBootPro2 open] ...
                              offset __SHIDBootPro2_open_>
                __objc2_meth <offset sel_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params_,\ ; -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:] ...
                              offset aV440816i24i28i, \
                              offset __SHIDBootPro2_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params__>
                __objc2_meth <offset sel_readReadFlash_Cmd_Block_, \ ; -[SHIDBootPro2 readReadFlash:Cmd:Block:] ...
                              offset aV360816i2428, \
                              offset __SHIDBootPro2_readReadFlash_Cmd_Block__>
                __objc2_meth <offset sel_addBlock_Cmd_, offset aV280816c24, \ ; -[SHIDBootPro2 addBlock:Cmd:] ...
                              offset __SHIDBootPro2_addBlock_Cmd__>
                __objc2_meth <offset sel_BootReadFlash_Len_Address_Total_Len_Cmd_Block_,\ ; -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:] ...
                              offset aV480816i24i28i, \
                              offset __SHIDBootPro2_BootReadFlash_Len_Address_Total_Len_Cmd_Block__>
                __objc2_meth <offset sel_isUltmateWired_, offset aC2008i16, \ ; -[SHIDBootPro2 isUltmateWired:] ...
                              offset __SHIDBootPro2_isUltmateWired__>
                __objc2_meth <offset sel_flashCRC, offset aV1608_0, \ ; -[SHIDBootPro2 flashCRC] ...
                              offset __SHIDBootPro2_flashCRC_>
                __objc2_meth <offset sel_writeSave_Head_4K, offset aV1608_0, \ ; -[SHIDBootPro2 writeSave_Head_4K] ...
                              offset __SHIDBootPro2_writeSave_Head_4K_>
                __objc2_meth <offset sel_writeFirmwareJL, offset aV1608_0, \ ; -[SHIDBootPro2 writeFirmwareJL] ...
                              offset __SHIDBootPro2_writeFirmwareJL_>
                __objc2_meth <offset sel_eraseFlashJL_len_TotalEraseLen_, \ ; -[SHIDBootPro2 eraseFlashJL:len:TotalEraseLen:] ...
                              offset aV2808i16i20i24, \
                              offset __SHIDBootPro2_eraseFlashJL_len_TotalEraseLen__>
                __objc2_meth <offset sel_eraseFlashJL_eraseUnitSize_blockCount_, \ ; -[SHIDBootPro2 eraseFlashJL:eraseUnitSize:blockCount:] ...
                              offset aV2808i16i20i24, \
                              offset __SHIDBootPro2_eraseFlashJL_eraseUnitSize_blockCount__>
                __objc2_meth <offset sel_updateJL_, offset aV2008i16_0, \ ; -[SHIDBootPro2 updateJL:] ...
                              offset __SHIDBootPro2_updateJL__>
                __objc2_meth <offset sel_readPID, offset aV1608_0, \ ; -[SHIDBootPro2 readPID] ...
                              offset __SHIDBootPro2_readPID_>
                __objc2_meth <offset sel_readBoot_Serial, offset aV1608_0, \ ; -[SHIDBootPro2 readBoot_Serial] ...
                              offset __SHIDBootPro2_readBoot_Serial_>
                __objc2_meth <offset sel_readDevice_serial, offset aV1608_0, \ ; -[SHIDBootPro2 readDevice_serial] ...
                              offset __SHIDBootPro2_readDevice_serial_>
                __objc2_meth <offset sel_earseFlash, offset aV1608_0, \ ; -[SHIDBootPro2 earseFlash] ...
                              offset __SHIDBootPro2_earseFlash_>
                __objc2_meth <offset sel_earseFlashBLE, offset aV1608_0, \ ; -[SHIDBootPro2 earseFlashBLE] ...
                              offset __SHIDBootPro2_earseFlashBLE_>
                __objc2_meth <offset sel_earseFlashPro2Version, offset aV1608_0, \ ; -[SHIDBootPro2 earseFlashPro2Version] ...
                              offset __SHIDBootPro2_earseFlashPro2Version_>
                __objc2_meth <offset sel_readGamepadInfo_, offset aV2008c16, \ ; -[SHIDBootPro2 readGamepadInfo:] ...
                              offset __SHIDBootPro2_readGamepadInfo__>
                __objc2_meth <offset sel_writeFirmware, offset aV1608_0, \ ; -[SHIDBootPro2 writeFirmware] ...
                              offset __SHIDBootPro2_writeFirmware_>
                __objc2_meth <offset sel_writeFirmwareBLE, offset aV1608_0, \ ; -[SHIDBootPro2 writeFirmwareBLE] ...
                              offset __SHIDBootPro2_writeFirmwareBLE_>
                __objc2_meth <offset sel_setPro2ApplicationEncodeId, offset aV1608_0, \ ; -[SHIDBootPro2 setPro2ApplicationEncodeId] ...
                              offset __SHIDBootPro2_setPro2ApplicationEncodeId_>
                __objc2_meth <offset sel_setBLEApplicationEncodeId, offset aV1608_0, \ ; -[SHIDBootPro2 setBLEApplicationEncodeId] ...
                              offset __SHIDBootPro2_setBLEApplicationEncodeId_>
                __objc2_meth <offset sel_getPro2Version, offset aV1608_0, \ ; -[SHIDBootPro2 getPro2Version] ...
                              offset __SHIDBootPro2_getPro2Version_>
                __objc2_meth <offset sel_setPro2Version, offset aV1608_0, \ ; -[SHIDBootPro2 setPro2Version] ...
                              offset __SHIDBootPro2_setPro2Version_>
                __objc2_meth <offset sel_setBleVersion, offset aV1608_0, \ ; -[SHIDBootPro2 setBleVersion] ...
                              offset __SHIDBootPro2_setBleVersion_>
                __objc2_meth <offset sel_resetGamepad, offset aV1608_0, \ ; -[SHIDBootPro2 resetGamepad] ...
                              offset __SHIDBootPro2_resetGamepad_>
                __objc2_meth <offset sel_Get_key_data, offset aV1608_0, \ ; -[SHIDBootPro2 Get_key_data] ...
                              offset __SHIDBootPro2_Get_key_data_>
                __objc2_meth <offset sel_sizeAtPath_, offset aQ240816, \ ; -[SHIDBootPro2 sizeAtPath:] ...
                              offset __SHIDBootPro2_sizeAtPath__>
                __objc2_meth <offset sel_readFlash, offset aV1608_0, \ ; -[SHIDBootPro2 readFlash] ...
                              offset __SHIDBootPro2_readFlash_>
                __objc2_meth <offset sel_readFlash_, offset aV2008i16, \ ; -[SHIDBootPro2 readFlash:] ...
                              offset __SHIDBootPro2_readFlash__>
                __objc2_meth <offset sel_Flash_CRC_crcIndex_, offset aB2408i16i20, \ ; -[SHIDBootPro2 Flash_CRC:crcIndex:] ...
                              offset __SHIDBootPro2_Flash_CRC_crcIndex__>
                __objc2_meth <offset sel_device, offset aIohiddevice160, \ ; -[SHIDBootPro2 device] ...
                              offset __SHIDBootPro2_device_>
                __objc2_meth <offset sel_setDevice_, offset aV2408Iohiddevi, \ ; -[SHIDBootPro2 setDevice:] ...
                              offset __SHIDBootPro2_setDevice__>
                __objc2_meth <offset sel_bootDelegate, offset a1608, \ ; -[SHIDBootPro2 bootDelegate] ...
                              offset __SHIDBootPro2_bootDelegate_>
                __objc2_meth <offset sel_setBootDelegate_, offset aV240816_0, \ ; -[SHIDBootPro2 setBootDelegate:] ...
                              offset __SHIDBootPro2_setBootDelegate__>
                __objc2_meth <offset sel_filePath, offset a1608, \ ; -[SHIDBootPro2 filePath] ...
                              offset __SHIDBootPro2_filePath_>
                __objc2_meth <offset sel_setFilePath_, offset aV240816_0, \ ; -[SHIDBootPro2 setFilePath:] ...
                              offset __SHIDBootPro2_setFilePath__>
                __objc2_meth <offset sel_pfile, offset a1608, \ ; -[SHIDBootPro2 pfile] ...
                              offset __SHIDBootPro2_pfile_>
                __objc2_meth <offset sel_setPfile_, offset aV240816_0, \ ; -[SHIDBootPro2 setPfile:] ...
                              offset __SHIDBootPro2_setPfile__>
                __objc2_meth <offset sel_bootType, offset aI1608, \ ; -[SHIDBootPro2 bootType] ...
                              offset __SHIDBootPro2_bootType_>
                __objc2_meth <offset sel_setBootType_, offset aV2008i16, \ ; -[SHIDBootPro2 setBootType:] ...
                              offset __SHIDBootPro2_setBootType__>
                __objc2_meth <offset sel_bootType_PID, offset aI1608_0, \ ; -[SHIDBootPro2 bootType_PID] ...
                              offset __SHIDBootPro2_bootType_PID_>
                __objc2_meth <offset sel_setBootType_PID_, offset aV2008i16_0, \ ; -[SHIDBootPro2 setBootType_PID:] ...
                              offset __SHIDBootPro2_setBootType_PID__>
                __objc2_meth <offset sel_appZoneAddr, offset aI1608_0, \ ; -[SHIDBootPro2 appZoneAddr] ...
                              offset __SHIDBootPro2_appZoneAddr_>
                __objc2_meth <offset sel_setAppZoneAddr_, offset aV2008i16_0, \ ; -[SHIDBootPro2 setAppZoneAddr:] ...
                              offset __SHIDBootPro2_setAppZoneAddr__>
                __objc2_meth <offset sel_offset, offset aI1608_0, \ ; -[SHIDBootPro2 offset] ...
                              offset __SHIDBootPro2_offset_>
                __objc2_meth <offset sel_setOffset_, offset aV2008i16_0, \ ; -[SHIDBootPro2 setOffset:] ...
                              offset __SHIDBootPro2_setOffset__>
                __objc2_meth <offset sel_setBlocks_, offset aV240816_0, \ ; -[SHIDBootPro2 setBlocks:] ...
                              offset __SHIDBootPro2_setBlocks__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[SHIDBootPro2 .cxx_destruct] ...
                              offset __SHIDBootPro2__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_SHIDBootPro2 __objc2_ivar_list <20h, 9>
                                        ; DATA XREF: __objc_const:SHIDBootPro2_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__bootType, \ ; int _bootType;
                              offset aBoottype, offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__bootType_PID, \ ; unsigned int _bootType_PID;
                              offset aBoottypePid, offset aI_1, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__appZoneAddr, \ ; unsigned int _appZoneAddr;
                              offset aAppzoneaddr, offset aI_1, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__offset, \ ; unsigned int _offset;
                              offset aOffset, offset aI_1, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__device, \ ; __IOHIDDevice *_device;
                              offset aDevice, offset aIohiddevice, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__bootDelegate, \ ; SHIDBootDelegate *_bootDelegate;
                              offset aBootdelegate, offset aShidbootdelega_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__filePath, \ ; NSString *_filePath;
                              offset aFilepath, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__pfile, offset aPfile, \ ; NSInputStream *_pfile;
                              offset aNsinputstream, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootPro2__blocks, \ ; NSMutableArray *_blocks;
                              offset aBlocks, offset aNsmutablearray, 3, 8>
SHIDBootPro2_$properties __objc2_prop_list <10h, 9>
                                        ; DATA XREF: __objc_const:SHIDBootPro2_$classData↓o
                __objc2_prop <offset sel_blocks, offset aTNsmutablearra_1> ; @property (retain, nonatomic) NSMutableArray *blocks;
                __objc2_prop <offset sel_device, offset aTIohiddeviceVD> ; @property __IOHIDDevice *device;
                __objc2_prop <offset sel_bootDelegate, offset aTShidbootdeleg_0> ; @property (nonatomic, __weak) SHIDBootDelegate *bootDelegate;
                __objc2_prop <offset sel_filePath, offset aTNsstringCNVFi> ; @property (copy, nonatomic) NSString *filePath;
                __objc2_prop <offset sel_pfile, offset aTNsinputstream> ; @property (retain, nonatomic) NSInputStream *pfile;
                __objc2_prop <offset sel_bootType, offset aTiNVBoottype> ; @property (nonatomic) int bootType;
                __objc2_prop <offset sel_bootType_PID, offset aTiNVBoottypePi> ; @property (nonatomic) unsigned int bootType_PID;
                __objc2_prop <offset sel_appZoneAddr, offset aTiNVAppzoneadd> ; @property (nonatomic) unsigned int appZoneAddr;
                __objc2_prop <offset sel_offset, offset aTiNVOffset> ; @property (nonatomic) unsigned int offset;
SHIDBootPro2_$classData __objc2_class_ro <194h, 68h, 0A4h, 0, offset SHIDBootPro2_$ivarLayout,\
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDBootPro2↓o
                                  offset aShidbootpro2, \ ; "SHIDBootPro2"
                                  offset _OBJC_INSTANCE_METHODS_SHIDBootPro2, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_SHIDBootPro2, \
                                  offset SHIDBootPro2_$ivarWeakLayout, \
                                  offset SHIDBootPro2_$properties>
                db  18h
                db    0
                db    0
                db    0
                db  13h
                db    0
                db    0
                db    0
                dq offset sel_isEqual_  ; "isEqual:"
                dq offset aC240816      ; "c24@0:8@16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_class     ; "class"
                dq offset a1608_0       ; "#16@0:8"
                align 10h
                dq offset sel_self      ; "self"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_ ; "performSelector:"
                dq offset a240816_0     ; "@24@0:8:16"
                align 20h
                dq offset sel_performSelector_withObject_ ; "performSelector:withObject:"
                dq offset a32081624     ; "@32@0:8:16@24"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_withObject_withObject_ ; "performSelector:withObject:withObject:"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                align 10h
                dq offset sel_isProxy   ; "isProxy"
                dq offset aC1608        ; "c16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_isKindOfClass_ ; "isKindOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                align 20h
                dq offset sel_isMemberOfClass_ ; "isMemberOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_conformsToProtocol_ ; "conformsToProtocol:"
                dq offset aC240816      ; "c24@0:8@16"
                align 10h
                dq offset sel_respondsToSelector_ ; "respondsToSelector:"
                dq offset aC240816_1    ; "c24@0:8:16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_retain    ; "retain"
                dq offset a1608         ; "@16@0:8"
                align 20h
                dq offset sel_release   ; "release"
                dq offset aVv1608       ; "Vv16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_autorelease ; "autorelease"
                dq offset a1608         ; "@16@0:8"
                align 10h
                dq offset sel_retainCount ; "retainCount"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_zone      ; "zone"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                align 20h
                dq offset sel_hash      ; "hash"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_superclass ; "superclass"
                dq offset a1608_0       ; "#16@0:8"
                align 10h
                dq offset sel_description ; "description"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dq offset sel_debugDescription ; "debugDescription"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                dq offset sel_hash      ; "hash"
                dq offset aTqR          ; "TQ,R"
                dq offset sel_superclass ; "superclass"
                dq offset aTR           ; "T#,R"
                dq offset sel_description ; "description"
                dq offset aTNsstringRC  ; "T@\"NSString\",R,C"
                dq offset sel_debugDescription ; "debugDescription"
                dq offset aTNsstringRC_0 ; "T@\"NSString\",?,R,C"
                dq offset aC240816      ; "c24@0:8@16"
                dq offset a1608_0       ; "#16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset a240816_0     ; "@24@0:8:16"
                dq offset a32081624     ; "@32@0:8:16@24"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                dq offset aC1608        ; "c16@0:8"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC2408Protocol1 ; "c24@0:8@\"Protocol\"16"
                dq offset aC240816_1    ; "c24@0:8:16"
                dq offset a1608         ; "@16@0:8"
                dq offset aVv1608       ; "Vv16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset a1608_0       ; "#16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
NSTextDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSTextDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_NSTextDelegate __objc2_meth_list <18h, 5>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSTextDelegate↓o
                __objc2_meth <offset sel_textShouldBeginEditing_, offset aC240816, 0> ; "textShouldBeginEditing:" ...
                __objc2_meth <offset sel_textShouldEndEditing_, offset aC240816, 0> ; "textShouldEndEditing:" ...
                __objc2_meth <offset sel_textDidBeginEditing_, offset aV240816_0, 0> ; "textDidBeginEditing:" ...
                __objc2_meth <offset sel_textDidEndEditing_, offset aV240816_0, 0> ; "textDidEndEditing:" ...
                __objc2_meth <offset sel_textDidChange_, offset aV240816_0, 0> ; "textDidChange:" ...
off_10003F988   dq offset aC2408Nstext16
                                        ; DATA XREF: __data:0000000100049F10↓o
                                        ; "c24@0:8@\"NSText\"16"
                dq offset aC2408Nstext16 ; "c24@0:8@\"NSText\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
NSTextViewDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSTextViewDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSTextDelegate
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_NSTextViewDelegate __objc2_meth_list <18h, 22h>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSTextViewDelegate↓o
                __objc2_meth <offset sel_textView_clickedOnLink_atIndex_, \ ; "textView:clickedOnLink:atIndex:" ...
                              offset aC40081624q32, 0>
                __objc2_meth <offset sel_textView_clickedOnCell_inRect_atIndex_, \ ; "textView:clickedOnCell:inRect:atIndex:" ...
                              offset aV72081624Cgrec, 0>
                __objc2_meth <offset sel_textView_doubleClickedOnCell_inRect_atIndex_,\ ; "textView:doubleClickedOnCell:inRect:atI"... ...
                              offset aV72081624Cgrec, 0>
                __objc2_meth <offset sel_textView_draggedCell_inRect_event_atIndex_, \ ; "textView:draggedCell:inRect:event:atInd"... ...
                              offset aV80081624Cgrec, 0>
                __objc2_meth <offset sel_textView_writablePasteboardTypesForCell_atIndex_,\ ; "textView:writablePasteboardTypesForCell"... ...
                              offset a40081624q32, 0>
                __objc2_meth <offset sel_textView_writeCell_atIndex_toPasteboard_type_,\ ; "textView:writeCell:atIndex:toPasteboard"... ...
                              offset aC56081624q3240, 0>
                __objc2_meth <offset sel_textView_willChangeSelectionFromCharacterRange_toCharacterRange_,\ ; "textView:willChangeSelectionFromCharact"... ...
                              offset aNsrangeQq56081, 0>
                __objc2_meth <offset sel_textView_willChangeSelectionFromCharacterRanges_toCharacterRanges_,\ ; "textView:willChangeSelectionFromCharact"... ...
                              offset a4008162432_0, 0>
                __objc2_meth <offset sel_textView_shouldChangeTextInRanges_replacementStrings_,\ ; "textView:shouldChangeTextInRanges:repla"... ...
                              offset aC4008162432, 0>
                __objc2_meth <offset sel_textView_shouldChangeTypingAttributes_toAttributes_,\ ; "textView:shouldChangeTypingAttributes:t"... ...
                              offset a4008162432_0, 0>
                __objc2_meth <offset sel_textViewDidChangeSelection_, \ ; "textViewDidChangeSelection:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_textViewDidChangeTypingAttributes_, \ ; "textViewDidChangeTypingAttributes:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_textView_willDisplayToolTip_forCharacterAtIndex_,\ ; "textView:willDisplayToolTip:forCharacte"... ...
                              offset a40081624q32, 0>
                __objc2_meth <offset sel_textView_completions_forPartialWordRange_indexOfSelectedItem_,\ ; "textView:completions:forPartialWordRang"... ...
                              offset a56081624Nsrang, 0>
                __objc2_meth <offset sel_textView_shouldChangeTextInRange_replacementString_,\ ; "textView:shouldChangeTextInRange:replac"... ...
                              offset aC480816Nsrange, 0>
                __objc2_meth <offset sel_textView_doCommandBySelector_, \ ; "textView:doCommandBySelector:" ...
                              offset aC32081624, 0>
                __objc2_meth <offset sel_textView_shouldSetSpellingState_range_, \ ; "textView:shouldSetSpellingState:range:" ...
                              offset aQ480816q24Nsra, 0>
                __objc2_meth <offset sel_textView_menu_forEvent_atIndex_, \ ; "textView:menu:forEvent:atIndex:" ...
                              offset a4808162432q40, 0>
                __objc2_meth <offset sel_textView_willCheckTextInRange_options_types_,\ ; "textView:willCheckTextInRange:options:t"... ...
                              offset a560816NsrangeQ, 0>
                __objc2_meth <offset sel_textView_didCheckTextInRange_types_options_results_orthography_wordCount_,\ ; "textView:didCheckTextInRange:types:opti"... ...
                              offset a800816NsrangeQ, 0>
                __objc2_meth <offset sel_textView_URLForContentsOfTextAttachment_atIndex_,\ ; "textView:URLForContentsOfTextAttachment"... ...
                              offset a40081624q32, 0>
                __objc2_meth <offset sel_textView_willShowSharingServicePicker_forItems_,\ ; "textView:willShowSharingServicePicker:f"... ...
                              offset a4008162432_0, 0>
                __objc2_meth <offset sel_undoManagerForTextView_, offset a240816, 0> ; "undoManagerForTextView:" ...
                __objc2_meth <offset sel_textView_shouldUpdateTouchBarItemIdentifiers_,\ ; "textView:shouldUpdateTouchBarItemIdenti"... ...
                              offset a32081624_0, 0>
                __objc2_meth <offset sel_textView_candidatesForSelectedRange_, \ ; "textView:candidatesForSelectedRange:" ...
                              offset a400816NsrangeQ, 0>
                __objc2_meth <offset sel_textView_candidates_forSelectedRange_, \ ; "textView:candidates:forSelectedRange:" ...
                              offset a48081624Nsrang, 0>
                __objc2_meth <offset sel_textView_shouldSelectCandidateAtIndex_, \ ; "textView:shouldSelectCandidateAtIndex:" ...
                              offset aC320816q24, 0>
                __objc2_meth <offset sel_textViewWritingToolsWillBegin_, \ ; "textViewWritingToolsWillBegin:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_textViewWritingToolsDidEnd_, \ ; "textViewWritingToolsDidEnd:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_textView_writingToolsIgnoredRangesInEnclosingRange_,\ ; "textView:writingToolsIgnoredRangesInEnc"... ...
                              offset a400816NsrangeQ, 0>
                __objc2_meth <offset sel_textView_clickedOnLink_, offset aC32081624_0,\ ; "textView:clickedOnLink:" ...
                              0>
                __objc2_meth <offset sel_textView_clickedOnCell_inRect_, \ ; "textView:clickedOnCell:inRect:" ...
                              offset aV64081624Cgrec, 0>
                __objc2_meth <offset sel_textView_doubleClickedOnCell_inRect_, \ ; "textView:doubleClickedOnCell:inRect:" ...
                              offset aV64081624Cgrec, 0>
                __objc2_meth <offset sel_textView_draggedCell_inRect_event_, \ ; "textView:draggedCell:inRect:event:" ...
                              offset aV72081624Cgrec_0, 0>
off_10003FD00   dq offset aC4008Nstextvie
                                        ; DATA XREF: __data:0000000100049F70↓o
                                        ; "c40@0:8@\"NSTextView\"16@24Q32"
                dq offset aV7208Nstextvie ; "v72@0:8@\"NSTextView\"16@\"<NSTextAttac"...
                dq offset aV7208Nstextvie ; "v72@0:8@\"NSTextView\"16@\"<NSTextAttac"...
                dq offset aV8008Nstextvie ; "v80@0:8@\"NSTextView\"16@\"<NSTextAttac"...
                dq offset aNsarray4008Nst ; "@\"NSArray\"40@0:8@\"NSTextView\"16@\"<"...
                dq offset aC5608Nstextvie ; "c56@0:8@\"NSTextView\"16@\"<NSTextAttac"...
                dq offset aNsrangeQq5608N ; "{_NSRange=QQ}56@0:8@\"NSTextView\"16{_N"...
                dq offset aNsarray4008Nst_0 ; "@\"NSArray\"40@0:8@\"NSTextView\"16@\"N"...
                dq offset aC4008Nstextvie_0 ; "c40@0:8@\"NSTextView\"16@\"NSArray\"24@"...
                dq offset aNsdictionary40 ; "@\"NSDictionary\"40@0:8@\"NSTextView\"1"...
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aNsstring4008Ns ; "@\"NSString\"40@0:8@\"NSTextView\"16@\""...
                dq offset aNsarray5608Nst ; "@\"NSArray\"56@0:8@\"NSTextView\"16@\"N"...
                dq offset aC4808Nstextvie ; "c48@0:8@\"NSTextView\"16{_NSRange=QQ}24"...
                dq offset aC3208Nstextvie ; "c32@0:8@\"NSTextView\"16:24"
                dq offset aQ4808Nstextvie ; "q48@0:8@\"NSTextView\"16q24{_NSRange=QQ"...
                dq offset aNsmenu4808Nste ; "@\"NSMenu\"48@0:8@\"NSTextView\"16@\"NS"...
                dq offset aNsdictionary56 ; "@\"NSDictionary\"56@0:8@\"NSTextView\"1"...
                dq offset aNsarray8008Nst ; "@\"NSArray\"80@0:8@\"NSTextView\"16{_NS"...
                dq offset aNsurl4008Nstex ; "@\"NSURL\"40@0:8@\"NSTextView\"16@\"NST"...
                dq offset aNssharingservi ; "@\"NSSharingServicePicker\"40@0:8@\"NST"...
                dq offset aNsundomanager2 ; "@\"NSUndoManager\"24@0:8@\"NSTextView\""...
                dq offset aNsarray3208Nst ; "@\"NSArray\"32@0:8@\"NSTextView\"16@\"N"...
                dq offset aNsarray4008Nst_1 ; "@\"NSArray\"40@0:8@\"NSTextView\"16{_NS"...
                dq offset aNsarray4808Nst ; "@\"NSArray\"48@0:8@\"NSTextView\"16@\"N"...
                dq offset aC3208Nstextvie_0 ; "c32@0:8@\"NSTextView\"16Q24"
                dq offset aV2408Nstextvie ; "v24@0:8@\"NSTextView\"16"
                dq offset aV2408Nstextvie ; "v24@0:8@\"NSTextView\"16"
                dq offset aNsarray4008Nst_1 ; "@\"NSArray\"40@0:8@\"NSTextView\"16{_NS"...
                dq offset aC3208Nstextvie_1 ; "c32@0:8@\"NSTextView\"16@24"
                dq offset aV6408Nstextvie ; "v64@0:8@\"NSTextView\"16@\"<NSTextAttac"...
                dq offset aV6408Nstextvie ; "v64@0:8@\"NSTextView\"16@\"<NSTextAttac"...
                dq offset aV7208Nstextvie_0 ; "v72@0:8@\"NSTextView\"16@\"<NSTextAttac"...
_OBJC_INSTANCE_METHODS_SButtonDelegate __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SButtonDelegate↓o
                __objc2_meth <offset sel_SButtonClick_, offset aV240816_0, 0> ; "SButtonClick:" ...
off_10003FE30   dq offset aV2408Sbutton16
                                        ; DATA XREF: __data:0000000100049FD0↓o
                                        ; "v24@0:8@\"SButton\"16"
SHIDBootDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SHIDBootDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                align 10h
_OBJC_INSTANCE_METHODS_SHIDBootDelegate __objc2_meth_list <18h, 9>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SHIDBootDelegate↓o
                __objc2_meth <offset sel_SHIDBootRemoveDevice_hid_, offset aV32081624,\ ; "SHIDBootRemoveDevice:hid:" ...
                              0>
                __objc2_meth <offset sel_SHIDBootGetVersion_hid_, offset aV32081624, \ ; "SHIDBootGetVersion:hid:" ...
                              0>
                __objc2_meth <offset sel_SHIDBootGetFirmwaerType_hid_, \ ; "SHIDBootGetFirmwaerType:hid:" ...
                              offset aV2808i1620_0, 0>
                __objc2_meth <offset sel_SHIDBootStartUpdate_, offset aV240816_0, 0> ; "SHIDBootStartUpdate:" ...
                __objc2_meth <offset sel_SHIDBootStartUpdateing_shid_, \ ; "SHIDBootStartUpdateing:shid:" ...
                              offset aV2808i1620, 0>
                __objc2_meth <offset sel_SHIDBootStartUpdateed_, offset aV240816_0, 0> ; "SHIDBootStartUpdateed:" ...
                __objc2_meth <offset sel_SHIDBootNotSupportFirmware_, \ ; "SHIDBootNotSupportFirmware:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_SHIDBootErrorString_msg_, offset aV32081624, \ ; "SHIDBootErrorString:msg:" ...
                              0>
                __objc2_meth <offset sel_SHIDBootErrorNOEqualPID_gamepadType_pid_, \ ; "SHIDBootErrorNOEqualPID:gamepadType:pid"... ...
                              offset aV320816i24i28, 0>
_OBJC_INSTANCE_METHODS_SHIDBootDelegate_0 __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SHIDBootDelegate↓o
                __objc2_meth <offset sel_SHIDBootAddDevice_hid_, offset aV32081624, 0> ; "SHIDBootAddDevice:hid:" ...
off_10003FF50   dq offset aV3208S8bitdode_1
                                        ; DATA XREF: __data:000000010004A030↓o
                                        ; "v32@0:8@\"S8BitdoDevice\"16@\"SHIDBoot"...
                dq offset aV3208S8bitdode_1 ; "v32@0:8@\"S8BitdoDevice\"16@\"SHIDBoot"...
                dq offset aV2808i16Shidbo ; "v28@0:8I16@\"SHIDBoot\"20"
                dq offset aV2408Shidboot1 ; "v24@0:8@\"SHIDBoot\"16"
                dq offset aV2808i16Shidbo_0 ; "v28@0:8i16@\"SHIDBoot\"20"
                dq offset aV2408Shidboot1 ; "v24@0:8@\"SHIDBoot\"16"
                dq offset aV2408S8bitdode ; "v24@0:8@\"S8BitdoDevice\"16"
                dq offset aV3208S8bitdode_2 ; "v32@0:8@\"S8BitdoDevice\"16@\"NSString"...
                dq offset aV3208S8bitdode_3 ; "v32@0:8@\"S8BitdoDevice\"16i24i28"
                dq offset aV3208S8bitdode_1 ; "v32@0:8@\"S8BitdoDevice\"16@\"SHIDBoot"...
SMiniImageViewDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SMiniImageViewDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_SMiniImageViewDelegate __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SMiniImageViewDelegate↓o
                __objc2_meth <offset sel_SMiniImageViewClick_, offset aV240816_0, 0> ; "SMiniImageViewClick:" ...
off_10003FFD8   dq offset aV2408Sminiimag
                                        ; DATA XREF: __data:000000010004A090↓o
                                        ; "v24@0:8@\"SMiniImageView\"16"
SHIDBootHJZ_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SHIDBootHJZ↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_SHIDBootHJZ_0 __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SHIDBootHJZ↓o
                __objc2_meth <offset sel_SHIDBootHJZUpdate_device_, offset aV32081624,\ ; "SHIDBootHJZUpdate:device:" ...
                              0>
                __objc2_meth <offset sel_SHIDBootHJZGetVersion_, offset aV240816_0, 0> ; "SHIDBootHJZGetVersion:" ...
off_100040030   dq offset aV3208Shidbooth
                                        ; DATA XREF: __data:000000010004A0F0↓o
                                        ; "v32@0:8@\"SHIDBootHJZ\"16@\"S8BitdoDevi"...
                dq offset aV2408S8bitdode ; "v24@0:8@\"S8BitdoDevice\"16"
UpdateView_$prots __objc2_prot_list <5> ; DATA XREF: __objc_const:UpdateView_$metaData↓o
                                        ; __objc_const:UpdateView_$classData↓o
                dq offset _OBJC_PROTOCOL_$_NSTextViewDelegate
                dq offset _OBJC_PROTOCOL_$_SButtonDelegate
                dq offset _OBJC_PROTOCOL_$_SHIDBootDelegate
                dq offset _OBJC_PROTOCOL_$_SMiniImageViewDelegate
                dq offset _OBJC_PROTOCOL_$_SHIDBootHJZ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
UpdateView_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aUpdateview_1, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_UpdateView↓o
                                  offset UpdateView_$prots, 0, 0, 0> ; "UpdateView"
_OBJC_INSTANCE_METHODS_UpdateView __objc2_meth_list <18h, 70h>
                                        ; DATA XREF: __objc_const:UpdateView_$classData↓o
                __objc2_meth <offset sel_setState_, offset aV2408q16_0, \ ; -[UpdateView setState:] ...
                              offset __UpdateView_setState__>
                __objc2_meth <offset sel_setDevice_, offset aV240816_0, \ ; -[UpdateView setDevice:] ...
                              offset __UpdateView_setDevice__>
                __objc2_meth <offset sel_setminiImageposition_, offset aV2008i16, \ ; -[UpdateView setminiImageposition:] ...
                              offset __UpdateView_setminiImageposition__>
                __objc2_meth <offset sel_setNewFirmwaer_, offset aV240816_0, \ ; -[UpdateView setNewFirmwaer:] ...
                              offset __UpdateView_setNewFirmwaer__>
                __objc2_meth <offset sel_manualView, offset a1608, \ ; -[UpdateView manualView] ...
                              offset __UpdateView_manualView_>
                __objc2_meth <offset sel_initWithFrame_, offset a4808CgrectCgpo, \ ; -[UpdateView initWithFrame:] ...
                              offset __UpdateView_initWithFrame__>
                __objc2_meth <offset sel_handle_miniImageView, offset aV1608_0, \ ; -[UpdateView handle_miniImageView] ...
                              offset __UpdateView_handle_miniImageView_>
                __objc2_meth <offset sel_loadViews, offset aV1608_0, \ ; -[UpdateView loadViews] ...
                              offset __UpdateView_loadViews_>
                __objc2_meth <offset sel_layout, offset aV1608_0, \ ; -[UpdateView layout] ...
                              offset __UpdateView_layout_>
                __objc2_meth <offset sel_mouseDown_, offset aV240816_0, \ ; -[UpdateView mouseDown:] ...
                              offset __UpdateView_mouseDown__>
                __objc2_meth <offset sel_viewDidHide, offset aV1608_0, \ ; -[UpdateView viewDidHide] ...
                              offset __UpdateView_viewDidHide_>
                __objc2_meth <offset sel_viewDidUnhide, offset aV1608_0, \ ; -[UpdateView viewDidUnhide] ...
                              offset __UpdateView_viewDidUnhide_>
                __objc2_meth <offset sel_removeFromSuperview, offset aV1608_0, \ ; -[UpdateView removeFromSuperview] ...
                              offset __UpdateView_removeFromSuperview_>
                __objc2_meth <offset sel_initFindNewVersion, offset aV1608_0, \ ; -[UpdateView initFindNewVersion] ...
                              offset __UpdateView_initFindNewVersion_>
                __objc2_meth <offset sel_filterVersion_, offset aV2008f16, \ ; -[UpdateView filterVersion:] ...
                              offset __UpdateView_filterVersion__>
                __objc2_meth <offset sel_refreshFirmwaerList, offset aV1608_0, \ ; -[UpdateView refreshFirmwaerList] ...
                              offset __UpdateView_refreshFirmwaerList_>
                __objc2_meth <offset sel_getFirmwaerHintVersion_beta_targerVersion_, \ ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:] ...
                              offset a2808f16s20f24, \
                              offset __UpdateView_getFirmwaerHintVersion_beta_targerVersion__>
                __objc2_meth <offset sel_AllHidden_, offset aV2008c16, \ ; -[UpdateView AllHidden:] ...
                              offset __UpdateView_AllHidden__>
                __objc2_meth <offset sel_manualViewRemoveFromSuperView, \ ; -[UpdateView manualViewRemoveFromSuperView] ...
                              offset aV1608_0, \
                              offset __UpdateView_manualViewRemoveFromSuperView_>
                __objc2_meth <offset sel_changeUIWithState_, offset aV2408q16_0, \ ; -[UpdateView changeUIWithState:] ...
                              offset __UpdateView_changeUIWithState__>
                __objc2_meth <offset sel_changeBoot, offset aV1608_0, \ ; -[UpdateView changeBoot] ...
                              offset __UpdateView_changeBoot_>
                __objc2_meth <offset sel_switchBoot, offset aC1608, \ ; -[UpdateView switchBoot] ...
                              offset __UpdateView_switchBoot_>
                __objc2_meth <offset sel_macBoot, offset aC1608, \ ; -[UpdateView macBoot] ...
                              offset __UpdateView_macBoot_>
                __objc2_meth <offset sel_bootBoot, offset aC1608, \ ; -[UpdateView bootBoot] ...
                              offset __UpdateView_bootBoot_>
                __objc2_meth <offset sel_noChangeBoot, offset aV1608_0, \ ; -[UpdateView noChangeBoot] ...
                              offset __UpdateView_noChangeBoot_>
                __objc2_meth <offset sel_findBackButton_, offset aC240816, \ ; -[UpdateView findBackButton:] ...
                              offset __UpdateView_findBackButton__>
                __objc2_meth <offset sel_loadV1AndV2, offset aV1608_0, \ ; -[UpdateView loadV1AndV2] ...
                              offset __UpdateView_loadV1AndV2_>
                __objc2_meth <offset sel_noV1AndV2, offset aV1608_0, \ ; -[UpdateView noV1AndV2] ...
                              offset __UpdateView_noV1AndV2_>
                __objc2_meth <offset sel_reloadClic, offset aV1608_0, \ ; -[UpdateView reloadClic] ...
                              offset __UpdateView_reloadClic_>
                __objc2_meth <offset sel_chengeboxClick_, offset aV240816_0, \ ; -[UpdateView chengeboxClick:] ...
                              offset __UpdateView_chengeboxClick__>
                __objc2_meth <offset sel_showLogClick_, offset aV240816_0, \ ; -[UpdateView showLogClick:] ...
                              offset __UpdateView_showLogClick__>
                __objc2_meth <offset sel_loadUpdateFirmwae, offset aV1608_0, \ ; -[UpdateView loadUpdateFirmwae] ...
                              offset __UpdateView_loadUpdateFirmwae_>
                __objc2_meth <offset sel_loadUpdateFirmwae_, offset aV2008i16, \ ; -[UpdateView loadUpdateFirmwae:] ...
                              offset __UpdateView_loadUpdateFirmwae__>
                __objc2_meth <offset sel_updateStateFindNewVersionDowmFirmwaerFile, \ ; -[UpdateView updateStateFindNewVersionDowmFirmwaerFile] ...
                              offset aV1608_0, \
                              offset __UpdateView_updateStateFindNewVersionDowmFirmwaerFile_>
                __objc2_meth <offset sel_updateStateDowmFirmwaerFile, offset aV1608_0,\ ; -[UpdateView updateStateDowmFirmwaerFile] ...
                              offset __UpdateView_updateStateDowmFirmwaerFile_>
                __objc2_meth <offset sel_dowmFirmwaerFile_, offset aV240816_0, \ ; -[UpdateView dowmFirmwaerFile:] ...
                              offset __UpdateView_dowmFirmwaerFile__>
                __objc2_meth <offset sel_initTimer, offset aV1608_0, \ ; -[UpdateView initTimer] ...
                              offset __UpdateView_initTimer_>
                __objc2_meth <offset sel_timerOut, offset aV1608_0, \ ; -[UpdateView timerOut] ...
                              offset __UpdateView_timerOut_>
                __objc2_meth <offset sel_gs_getCurrentTimeToMilliSecond, \ ; -[UpdateView gs_getCurrentTimeToMilliSecond] ...
                              offset aQ1608_0, \
                              offset __UpdateView_gs_getCurrentTimeToMilliSecond_>
                __objc2_meth <offset sel_SButtonClick_, offset aV240816_0, \ ; -[UpdateView SButtonClick:] ...
                              offset __UpdateView_SButtonClick__>
                __objc2_meth <offset sel_SHIDBootAddDevice_hid_, offset aV32081624, \ ; -[UpdateView SHIDBootAddDevice:hid:] ...
                              offset __UpdateView_SHIDBootAddDevice_hid__>
                __objc2_meth <offset sel_SHIDBootGetFirmwaerType_hid_, \ ; -[UpdateView SHIDBootGetFirmwaerType:hid:] ...
                              offset aV2808i1620_0, \
                              offset __UpdateView_SHIDBootGetFirmwaerType_hid__>
                __objc2_meth <offset sel_SHIDBootRemoveDevice_hid_, offset aV32081624,\ ; -[UpdateView SHIDBootRemoveDevice:hid:] ...
                              offset __UpdateView_SHIDBootRemoveDevice_hid__>
                __objc2_meth <offset sel_SHIDBootGetVersion_hid_, offset aV32081624, \ ; -[UpdateView SHIDBootGetVersion:hid:] ...
                              offset __UpdateView_SHIDBootGetVersion_hid__>
                __objc2_meth <offset sel_SHIDBootStartUpdate_, offset aV240816_0, \ ; -[UpdateView SHIDBootStartUpdate:] ...
                              offset __UpdateView_SHIDBootStartUpdate__>
                __objc2_meth <offset sel_SHIDBootStartUpdateing_shid_, \ ; -[UpdateView SHIDBootStartUpdateing:shid:] ...
                              offset aV2808i1620, \
                              offset __UpdateView_SHIDBootStartUpdateing_shid__>
                __objc2_meth <offset sel_SHIDBootStartUpdateed_, offset aV240816_0, \ ; -[UpdateView SHIDBootStartUpdateed:] ...
                              offset __UpdateView_SHIDBootStartUpdateed__>
                __objc2_meth <offset sel_SHIDBootNotSupportFirmware_, \ ; -[UpdateView SHIDBootNotSupportFirmware:] ...
                              offset aV240816_0, \
                              offset __UpdateView_SHIDBootNotSupportFirmware__>
                __objc2_meth <offset sel_SHIDBootErrorNOEqualPID_gamepadType_pid_, \ ; -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:] ...
                              offset aV320816i24i28, \
                              offset __UpdateView_SHIDBootErrorNOEqualPID_gamepadType_pid__>
                __objc2_meth <offset sel_SHIDBootErrorString_msg_, offset aV32081624, \ ; -[UpdateView SHIDBootErrorString:msg:] ...
                              offset __UpdateView_SHIDBootErrorString_msg__>
                __objc2_meth <offset sel_updateingError, offset aV1608_0, \ ; -[UpdateView updateingError] ...
                              offset __UpdateView_updateingError_>
                __objc2_meth <offset sel_SMiniImageViewClick_, offset aV240816_0, \ ; -[UpdateView SMiniImageViewClick:] ...
                              offset __UpdateView_SMiniImageViewClick__>
                __objc2_meth <offset sel_SHIDBootHJZUpdate_device_, offset aV32081624,\ ; -[UpdateView SHIDBootHJZUpdate:device:] ...
                              offset __UpdateView_SHIDBootHJZUpdate_device__>
                __objc2_meth <offset sel_SHIDBootHJZGetVersion_, offset aV240816_0, \ ; -[UpdateView SHIDBootHJZGetVersion:] ...
                              offset __UpdateView_SHIDBootHJZGetVersion__>
                __objc2_meth <offset sel_device, offset a1608, \ ; -[UpdateView device] ...
                              offset __UpdateView_device_>
                __objc2_meth <offset sel_state, offset aQ1608, \ ; -[UpdateView state] ...
                              offset __UpdateView_state_>
                __objc2_meth <offset sel_delegate, offset a1608, \ ; -[UpdateView delegate] ...
                              offset __UpdateView_delegate_>
                __objc2_meth <offset sel_setDelegate_, offset aV240816_0, \ ; -[UpdateView setDelegate:] ...
                              offset __UpdateView_setDelegate__>
                __objc2_meth <offset sel_isSetNewFirmware, offset aC1608, \ ; -[UpdateView isSetNewFirmware] ...
                              offset __UpdateView_isSetNewFirmware_>
                __objc2_meth <offset sel_setIsSetNewFirmware_, offset aV2008c16, \ ; -[UpdateView setIsSetNewFirmware:] ...
                              offset __UpdateView_setIsSetNewFirmware__>
                __objc2_meth <offset sel_miniImageView, offset a1608, \ ; -[UpdateView miniImageView] ...
                              offset __UpdateView_miniImageView_>
                __objc2_meth <offset sel_setMiniImageView_, offset aV240816_0, \ ; -[UpdateView setMiniImageView:] ...
                              offset __UpdateView_setMiniImageView__>
                __objc2_meth <offset sel_miniRRImageView, offset a1608, \ ; -[UpdateView miniRRImageView] ...
                              offset __UpdateView_miniRRImageView_>
                __objc2_meth <offset sel_setMiniRRImageView_, offset aV240816_0, \ ; -[UpdateView setMiniRRImageView:] ...
                              offset __UpdateView_setMiniRRImageView__>
                __objc2_meth <offset sel_isShowMiniRRImage, offset aC1608, \ ; -[UpdateView isShowMiniRRImage] ...
                              offset __UpdateView_isShowMiniRRImage_>
                __objc2_meth <offset sel_setIsShowMiniRRImage_, offset aV2008c16, \ ; -[UpdateView setIsShowMiniRRImage:] ...
                              offset __UpdateView_setIsShowMiniRRImage__>
                __objc2_meth <offset sel_firmwaerListVist, offset a1608, \ ; -[UpdateView firmwaerListVist] ...
                              offset __UpdateView_firmwaerListVist_>
                __objc2_meth <offset sel_setFirmwaerListVist_, offset aV240816_0, \ ; -[UpdateView setFirmwaerListVist:] ...
                              offset __UpdateView_setFirmwaerListVist__>
                __objc2_meth <offset sel_scrollView, offset a1608, \ ; -[UpdateView scrollView] ...
                              offset __UpdateView_scrollView_>
                __objc2_meth <offset sel_setScrollView_, offset aV240816_0, \ ; -[UpdateView setScrollView:] ...
                              offset __UpdateView_setScrollView__>
                __objc2_meth <offset sel_findNewVersionListView, offset a1608, \ ; -[UpdateView findNewVersionListView] ...
                              offset __UpdateView_findNewVersionListView_>
                __objc2_meth <offset sel_setFindNewVersionListView_, \ ; -[UpdateView setFindNewVersionListView:] ...
                              offset aV240816_0, \
                              offset __UpdateView_setFindNewVersionListView__>
                __objc2_meth <offset sel_findNewVersionLabel, offset a1608, \ ; -[UpdateView findNewVersionLabel] ...
                              offset __UpdateView_findNewVersionLabel_>
                __objc2_meth <offset sel_setFindNewVersionLabel_, offset aV240816_0, \ ; -[UpdateView setFindNewVersionLabel:] ...
                              offset __UpdateView_setFindNewVersionLabel__>
                __objc2_meth <offset sel_findNewVersionLogTextView, offset a1608, \ ; -[UpdateView findNewVersionLogTextView] ...
                              offset __UpdateView_findNewVersionLogTextView_>
                __objc2_meth <offset sel_setFindNewVersionLogTextView_, \ ; -[UpdateView setFindNewVersionLogTextView:] ...
                              offset aV240816_0, \
                              offset __UpdateView_setFindNewVersionLogTextView__>
                __objc2_meth <offset sel_isloadData, offset aC1608, \ ; -[UpdateView isloadData] ...
                              offset __UpdateView_isloadData_>
                __objc2_meth <offset sel_setIsloadData_, offset aV2008c16, \ ; -[UpdateView setIsloadData:] ...
                              offset __UpdateView_setIsloadData__>
                __objc2_meth <offset sel_progress, offset a1608, \ ; -[UpdateView progress] ...
                              offset __UpdateView_progress_>
                __objc2_meth <offset sel_setProgress_, offset aV240816_0, \ ; -[UpdateView setProgress:] ...
                              offset __UpdateView_setProgress__>
                __objc2_meth <offset sel_reloadButton, offset a1608, \ ; -[UpdateView reloadButton] ...
                              offset __UpdateView_reloadButton_>
                __objc2_meth <offset sel_setReloadButton_, offset aV240816_0, \ ; -[UpdateView setReloadButton:] ...
                              offset __UpdateView_setReloadButton__>
                __objc2_meth <offset sel_notFirmware, offset a1608, \ ; -[UpdateView notFirmware] ...
                              offset __UpdateView_notFirmware_>
                __objc2_meth <offset sel_setNotFirmware_, offset aV240816_0, \ ; -[UpdateView setNotFirmware:] ...
                              offset __UpdateView_setNotFirmware__>
                __objc2_meth <offset sel_hintLabel, offset a1608, \ ; -[UpdateView hintLabel] ...
                              offset __UpdateView_hintLabel_>
                __objc2_meth <offset sel_setHintLabel_, offset aV240816_0, \ ; -[UpdateView setHintLabel:] ...
                              offset __UpdateView_setHintLabel__>
                __objc2_meth <offset sel_firmwaerHintLabel, offset a1608, \ ; -[UpdateView firmwaerHintLabel] ...
                              offset __UpdateView_firmwaerHintLabel_>
                __objc2_meth <offset sel_setFirmwaerHintLabel_, offset aV240816_0, \ ; -[UpdateView setFirmwaerHintLabel:] ...
                              offset __UpdateView_setFirmwaerHintLabel__>
                __objc2_meth <offset sel_updateButton, offset a1608, \ ; -[UpdateView updateButton] ...
                              offset __UpdateView_updateButton_>
                __objc2_meth <offset sel_setUpdateButton_, offset aV240816_0, \ ; -[UpdateView setUpdateButton:] ...
                              offset __UpdateView_setUpdateButton__>
                __objc2_meth <offset sel_leftButton, offset a1608, \ ; -[UpdateView leftButton] ...
                              offset __UpdateView_leftButton_>
                __objc2_meth <offset sel_setLeftButton_, offset aV240816_0, \ ; -[UpdateView setLeftButton:] ...
                              offset __UpdateView_setLeftButton__>
                __objc2_meth <offset sel_rightButton, offset a1608, \ ; -[UpdateView rightButton] ...
                              offset __UpdateView_rightButton_>
                __objc2_meth <offset sel_setRightButton_, offset aV240816_0, \ ; -[UpdateView setRightButton:] ...
                              offset __UpdateView_setRightButton__>
                __objc2_meth <offset sel_updateFirmwaers, offset a1608, \ ; -[UpdateView updateFirmwaers] ...
                              offset __UpdateView_updateFirmwaers_>
                __objc2_meth <offset sel_setUpdateFirmwaers_, offset aV240816_0, \ ; -[UpdateView setUpdateFirmwaers:] ...
                              offset __UpdateView_setUpdateFirmwaers__>
                __objc2_meth <offset sel_selectButton, offset a1608, \ ; -[UpdateView selectButton] ...
                              offset __UpdateView_selectButton_>
                __objc2_meth <offset sel_setSelectButton_, offset aV240816_0, \ ; -[UpdateView setSelectButton:] ...
                              offset __UpdateView_setSelectButton__>
                __objc2_meth <offset sel_savePath, offset a1608, \ ; -[UpdateView savePath] ...
                              offset __UpdateView_savePath_>
                __objc2_meth <offset sel_setSavePath_, offset aV240816_0, \ ; -[UpdateView setSavePath:] ...
                              offset __UpdateView_setSavePath__>
                __objc2_meth <offset sel_shidBoot, offset a1608, \ ; -[UpdateView shidBoot] ...
                              offset __UpdateView_shidBoot_>
                __objc2_meth <offset sel_setShidBoot_, offset aV240816_0, \ ; -[UpdateView setShidBoot:] ...
                              offset __UpdateView_setShidBoot__>
                __objc2_meth <offset sel_bootState, offset aQ1608, \ ; -[UpdateView bootState] ...
                              offset __UpdateView_bootState_>
                __objc2_meth <offset sel_setBootState_, offset aV2408q16_0, \ ; -[UpdateView setBootState:] ...
                              offset __UpdateView_setBootState__>
                __objc2_meth <offset sel_bootDeviceRef, offset aIohiddevice160, \ ; -[UpdateView bootDeviceRef] ...
                              offset __UpdateView_bootDeviceRef_>
                __objc2_meth <offset sel_setBootDeviceRef_, offset aV2408Iohiddevi, \ ; -[UpdateView setBootDeviceRef:] ...
                              offset __UpdateView_setBootDeviceRef__>
                __objc2_meth <offset sel_setManualView_, offset aV240816_0, \ ; -[UpdateView setManualView:] ...
                              offset __UpdateView_setManualView__>
                __objc2_meth <offset sel_updateTimer, offset a1608, \ ; -[UpdateView updateTimer] ...
                              offset __UpdateView_updateTimer_>
                __objc2_meth <offset sel_setUpdateTimer_, offset aV240816_0, \ ; -[UpdateView setUpdateTimer:] ...
                              offset __UpdateView_setUpdateTimer__>
                __objc2_meth <offset sel_lastTimer, offset aQ1608_0, \ ; -[UpdateView lastTimer] ...
                              offset __UpdateView_lastTimer_>
                __objc2_meth <offset sel_setLastTimer_, offset aV2408q16, \ ; -[UpdateView setLastTimer:] ...
                              offset __UpdateView_setLastTimer__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[UpdateView .cxx_destruct] ...
                              offset __UpdateView__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_UpdateView __objc2_ivar_list <20h, 24h>
                                        ; DATA XREF: __objc_const:UpdateView_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView_m_width, offset aMWidth, \ ; double m_width;
                              offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView_m_height, \ ; double m_height;
                              offset aMHeight, offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView_m_version, \ ; float m_version;
                              offset aMVersion, offset asc_100036AF9, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView_m_beta, offset aMBeta, \ ; float m_beta;
                              offset asc_100036AF9, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView_m_targerVersion, \ ; float m_targerVersion;
                              offset aMTargerversion, offset asc_100036AF9, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView_m_targetBeta, \ ; int m_targetBeta;
                              offset aMTargetbeta, offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__isSetNewFirmware, \ ; char _isSetNewFirmware;
                              offset aIssetnewfirmwa, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__isShowMiniRRImage, \ ; char _isShowMiniRRImage;
                              offset aIsshowminirrim, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__isloadData, \ ; char _isloadData;
                              offset aIsloaddata, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__device, offset aDevice, \ ; S8BitdoDevice *_device;
                              offset aS8bitdodevice_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__state, offset aState, \ ; unsigned __int64 _state;
                              offset aQ_3, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__delegate, \ ; id _delegate;
                              offset aDelegate, offset asc_10003796D, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__miniImageView, \ ; SMiniImageView *_miniImageView;
                              offset aMiniimageview, offset aSminiimageview_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__miniRRImageView, \ ; SMiniImageView *_miniRRImageView;
                              offset aMinirrimagevie_0, offset aSminiimageview_2, 3, \
                              8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__firmwaerListVist, \ ; SView *_firmwaerListVist;
                              offset aFirmwaerlistvi, offset aSview_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__scrollView, \ ; NSScrollView *_scrollView;
                              offset aScrollview, offset aNsscrollview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__findNewVersionListView, \ ; SView *_findNewVersionListView;
                              offset aFindnewversion_0, offset aSview_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__findNewVersionLabel, \ ; SLabel *_findNewVersionLabel;
                              offset aFindnewversion, offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__findNewVersionLogTextView,\ ; NSTextView *_findNewVersionLogTextView;
                              offset aFindnewversion_1, offset aNstextview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__progress, \ ; NSProgressIndicator *_progress;
                              offset aProgress, offset aNsprogressindi, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__reloadButton, \ ; NSButton *_reloadButton;
                              offset aReloadbutton, offset aNsbutton, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__notFirmware, \ ; SLabel *_notFirmware;
                              offset aNotfirmware_0, offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__hintLabel, \ ; SLabel *_hintLabel;
                              offset aHintlabel, offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__firmwaerHintLabel, \ ; SLabel *_firmwaerHintLabel;
                              offset aFirmwaerhintla, offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__updateButton, \ ; SButton *_updateButton;
                              offset aUpdatebutton, offset aSbutton_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__leftButton, \ ; SButton *_leftButton;
                              offset aLeftbutton, offset aSbutton_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__rightButton, \ ; SButton *_rightButton;
                              offset aRightbutton, offset aSbutton_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__updateFirmwaers, \ ; NSMutableArray *_updateFirmwaers;
                              offset aUpdatefirmwaer_0, offset aNsmutablearray, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__selectButton, \ ; NSButton *_selectButton;
                              offset aSelectbutton, offset aNsbutton, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__savePath, \ ; NSString *_savePath;
                              offset aSavepath, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__shidBoot, \ ; SHIDBoot *_shidBoot;
                              offset aShidboot, offset aShidboot_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__bootState, \ ; unsigned __int64 _bootState;
                              offset aBootstate, offset aQ_3, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__bootDeviceRef, \ ; __IOHIDDevice *_bootDeviceRef;
                              offset aBootdeviceref, offset aIohiddevice, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__manualView, \ ; DeviceManualView *_manualView;
                              offset aManualview, offset aDevicemanualvi_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__updateTimer, \ ; NSTimer *_updateTimer;
                              offset aUpdatetimer, offset aNstimer, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpdateView__lastTimer, \ ; signed __int64 _lastTimer;
                              offset aLasttimer, offset aQ_2, 3, 8>
UpdateView_$properties __objc2_prop_list <10h, 22h>
                                        ; DATA XREF: __objc_const:UpdateView_$classData↓o
                __objc2_prop <offset sel_isSetNewFirmware, offset aTcNVIssetnewfi> ; @property (nonatomic) char isSetNewFirmware;
                __objc2_prop <offset sel_miniImageView, offset aTSminiimagevie_1> ; @property (retain) SMiniImageView *miniImageView;
                __objc2_prop <offset sel_miniRRImageView, offset aTSminiimagevie> ; @property (retain) SMiniImageView *miniRRImageView;
                __objc2_prop <offset sel_isShowMiniRRImage, offset aTcNVIsshowmini> ; @property (nonatomic) char isShowMiniRRImage;
                __objc2_prop <offset sel_firmwaerListVist, offset aTSviewVFirmwae> ; @property (retain) SView *firmwaerListVist;
                __objc2_prop <offset sel_scrollView, offset aTNsscrollviewV> ; @property (retain) NSScrollView *scrollView;
                __objc2_prop <offset sel_findNewVersionListView, \ ; @property (retain) SView *findNewVersionListView;
                              offset aTSviewVFindnew>
                __objc2_prop <offset sel_findNewVersionLabel, offset aTSlabelVFindne> ; @property (retain) SLabel *findNewVersionLabel;
                __objc2_prop <offset sel_findNewVersionLogTextView, \ ; @property (retain) NSTextView *findNewVersionLogTextView;
                              offset aTNstextviewVFi>
                __objc2_prop <offset sel_isloadData, offset aTcVIsloaddata> ; @property char isloadData;
                __objc2_prop <offset sel_progress, offset aTNsprogressind> ; @property (retain) NSProgressIndicator *progress;
                __objc2_prop <offset sel_reloadButton, offset aTNsbuttonVRelo> ; @property (retain) NSButton *reloadButton;
                __objc2_prop <offset sel_notFirmware, offset aTSlabelVNotfir> ; @property (retain) SLabel *notFirmware;
                __objc2_prop <offset sel_hintLabel, offset aTSlabelVHintla> ; @property (retain) SLabel *hintLabel;
                __objc2_prop <offset sel_firmwaerHintLabel, offset aTSlabelVFirmwa> ; @property (retain) SLabel *firmwaerHintLabel;
                __objc2_prop <offset sel_updateButton, offset aTSbuttonVUpdat> ; @property (retain) SButton *updateButton;
                __objc2_prop <offset sel_leftButton, offset aTSbuttonVLeftb> ; @property (retain) SButton *leftButton;
                __objc2_prop <offset sel_rightButton, offset aTSbuttonVRight> ; @property (retain) SButton *rightButton;
                __objc2_prop <offset sel_updateFirmwaers, offset aTNsmutablearra_3> ; @property (retain) NSMutableArray *updateFirmwaers;
                __objc2_prop <offset sel_selectButton, offset aTNsbuttonVSele> ; @property (retain) NSButton *selectButton;
                __objc2_prop <offset sel_savePath, offset aTNsstringVSave> ; @property (retain) NSString *savePath;
                __objc2_prop <offset sel_shidBoot, offset aTShidbootVShid> ; @property (retain) SHIDBoot *shidBoot;
                __objc2_prop <offset sel_bootState, offset aTqVBootstate> ; @property unsigned __int64 bootState;
                __objc2_prop <offset sel_bootDeviceRef, offset aTIohiddeviceVB> ; @property __IOHIDDevice *bootDeviceRef;
                __objc2_prop <offset sel_manualView, offset aTDevicemanualv> ; @property (retain, nonatomic) DeviceManualView *manualView;
                __objc2_prop <offset sel_updateTimer, offset aTNstimerNVUpda> ; @property (retain, nonatomic) NSTimer *updateTimer;
                __objc2_prop <offset sel_lastTimer, offset aTqNVLasttimer> ; @property (nonatomic) signed __int64 lastTimer;
                __objc2_prop <offset sel_device, offset aTS8bitdodevice> ; @property (retain, nonatomic) S8BitdoDevice *device;
                __objc2_prop <offset sel_state, offset aTqNVState> ; @property (nonatomic) unsigned __int64 state;
                __objc2_prop <offset sel_delegate, offset aTWNVDelegate> ; @property (nonatomic, __weak) id delegate;
                __objc2_prop <offset sel_hash, offset aTqR> ; @property (readonly) unsigned __int64 hash;
                __objc2_prop <offset sel_superclass, offset aTR> ; @property (readonly) Class superclass;
                __objc2_prop <offset sel_description, offset aTNsstringRC> ; @property (readonly, copy) NSString *description;
                __objc2_prop <offset sel_debugDescription, offset aTNsstringRC_0> ; @property (readonly, copy) NSString *debugDescription;
UpdateView_$classData __objc2_class_ro <194h, 10h, 110h, 0, offset UpdateView_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_UpdateView↓o
                                  offset aUpdateview_1, \ ; "UpdateView"
                                  offset _OBJC_INSTANCE_METHODS_UpdateView, \
                                  offset UpdateView_$prots, \
                                  offset _OBJC_INSTANCE_VARIABLES_UpdateView, \
                                  offset UpdateView_$ivarWeakLayout, \
                                  offset UpdateView_$properties>
SMiniImageView_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aSminiimageview_1, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SMiniImageView↓o
                                  0, 0, 0, 0> ; "SMiniImageView"
_OBJC_INSTANCE_METHODS_SMiniImageView __objc2_meth_list <18h, 0Dh>
                                        ; DATA XREF: __objc_const:SMiniImageView_$classData↓o
                __objc2_meth <offset sel_initWithFrame_, offset a4808CgrectCgpo, \ ; -[SMiniImageView initWithFrame:] ...
                              offset __SMiniImageView_initWithFrame__>
                __objc2_meth <offset sel_setIsSelect_, offset aV2008b16, \ ; -[SMiniImageView setIsSelect:] ...
                              offset __SMiniImageView_setIsSelect__>
                __objc2_meth <offset sel_updateTrackingAreas, offset aV1608_0, \ ; -[SMiniImageView updateTrackingAreas] ...
                              offset __SMiniImageView_updateTrackingAreas_>
                __objc2_meth <offset sel_drawRect_, offset aV4808CgrectCgp, \ ; -[SMiniImageView drawRect:] ...
                              offset __SMiniImageView_drawRect__>
                __objc2_meth <offset sel_mouseDown_, offset aV240816_0, \ ; -[SMiniImageView mouseDown:] ...
                              offset __SMiniImageView_mouseDown__>
                __objc2_meth <offset sel_mouseEntered_, offset aV240816_0, \ ; -[SMiniImageView mouseEntered:] ...
                              offset __SMiniImageView_mouseEntered__>
                __objc2_meth <offset sel_mouseExited_, offset aV240816_0, \ ; -[SMiniImageView mouseExited:] ...
                              offset __SMiniImageView_mouseExited__>
                __objc2_meth <offset sel_isSelect, offset aB1608, \ ; -[SMiniImageView isSelect] ...
                              offset __SMiniImageView_isSelect_>
                __objc2_meth <offset sel_isClick, offset aB1608, \ ; -[SMiniImageView isClick] ...
                              offset __SMiniImageView_isClick_>
                __objc2_meth <offset sel_setIsClick_, offset aV2008b16, \ ; -[SMiniImageView setIsClick:] ...
                              offset __SMiniImageView_setIsClick__>
                __objc2_meth <offset sel_delegate, offset a1608, \ ; -[SMiniImageView delegate] ...
                              offset __SMiniImageView_delegate_>
                __objc2_meth <offset sel_setDelegate_, offset aV240816_0, \ ; -[SMiniImageView setDelegate:] ...
                              offset __SMiniImageView_setDelegate__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[SMiniImageView .cxx_destruct] ...
                              offset __SMiniImageView__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_SMiniImageView __objc2_ivar_list <20h, 3>
                                        ; DATA XREF: __objc_const:SMiniImageView_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SMiniImageView__isSelect, \ ; bool _isSelect;
                              offset aIsselect, offset aB_1, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_SMiniImageView__isClick, \ ; bool _isClick;
                              offset aIsclick_0, offset aB_1, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_SMiniImageView__delegate, \ ; SMiniImageViewDelegate *_delegate;
                              offset aDelegate, offset aSminiimageview_3, 3, 8>
SMiniImageView_$properties __objc2_prop_list <10h, 3>
                                        ; DATA XREF: __objc_const:SMiniImageView_$classData↓o
                __objc2_prop <offset sel_isSelect, offset aTbNVIsselect> ; @property (nonatomic) bool isSelect;
                __objc2_prop <offset sel_isClick, offset aTbNVIsclick> ; @property (nonatomic) bool isClick;
                __objc2_prop <offset sel_delegate, offset aTSminiimagevie_0> ; @property (nonatomic, __weak) SMiniImageViewDelegate *delegate;
SMiniImageView_$classData __objc2_class_ro <194h, 8, 18h, 0, 0, offset aSminiimageview_1, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SMiniImageView↓o
                                  offset _OBJC_INSTANCE_METHODS_SMiniImageView, 0, \ ; "SMiniImageView"
                                  offset _OBJC_INSTANCE_VARIABLES_SMiniImageView, \
                                  offset SHIDBootHJZ_$ivarWeakLayout, \
                                  offset SMiniImageView_$properties>
_OBJC_CLASS_METHODS_SHIDSwitchAndMac __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:SHIDSwitchAndMac_$metaData↓o
                __objc2_meth <offset sel_boot_, offset aV2408Iohiddevi, \ ; +[SHIDSwitchAndMac boot:] ...
                              offset __SHIDSwitchAndMac_boot__>
SHIDSwitchAndMac_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aShidswitchandm, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDSwitchAndMac↓o
                                  offset _OBJC_CLASS_METHODS_SHIDSwitchAndMac, 0, 0, \ ; "SHIDSwitchAndMac"
                                  0, 0>
_OBJC_INSTANCE_METHODS_SHIDSwitchAndMac __objc2_meth_list <18h, 6>
                                        ; DATA XREF: __objc_const:SHIDSwitchAndMac_$classData↓o
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDSwitchAndMac open] ...
                              offset __SHIDSwitchAndMac_open_>
                __objc2_meth <offset sel_stopChangeMode_, offset aV2408Iohiddevi, \ ; -[SHIDSwitchAndMac stopChangeMode:] ...
                              offset __SHIDSwitchAndMac_stopChangeMode__>
                __objc2_meth <offset sel_changeDinput_, offset aV2408Iohiddevi, \ ; -[SHIDSwitchAndMac changeDinput:] ...
                              offset __SHIDSwitchAndMac_changeDinput__>
                __objc2_meth <offset sel_addS8BitdoDeviceRefreshUI_, \ ; -[SHIDSwitchAndMac addS8BitdoDeviceRefreshUI:] ...
                              offset aV2408Iohiddevi, \
                              offset __SHIDSwitchAndMac_addS8BitdoDeviceRefreshUI__>
                __objc2_meth <offset sel_remove8BitdoDeviceRefreshUI_, \ ; -[SHIDSwitchAndMac remove8BitdoDeviceRefreshUI:] ...
                              offset aV2408Iohiddevi, \
                              offset __SHIDSwitchAndMac_remove8BitdoDeviceRefreshUI__>
                __objc2_meth <offset sel_getDeviceWithRef_, offset a2408Iohiddevic, \ ; -[SHIDSwitchAndMac getDeviceWithRef:] ...
                              offset __SHIDSwitchAndMac_getDeviceWithRef__>
SHIDSwitchAndMac_$classData __objc2_class_ro <90h, 68h, 68h, 0, 0, offset aShidswitchandm, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDSwitchAndMac↓o
                                  offset _OBJC_INSTANCE_METHODS_SHIDSwitchAndMac, 0, \ ; "SHIDSwitchAndMac"
                                  0, 0, 0>
_OBJC_CLASS_METHODS_UpDaterManager __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:UpDaterManager_$metaData↓o
                __objc2_meth <offset sel_shared, offset a1608, \ ; +[UpDaterManager shared] ...
                              offset __UpDaterManager_shared_>
                db  18h
                db    0
                db    0
                db    0
                db  13h
                db    0
                db    0
                db    0
                dq offset sel_isEqual_  ; "isEqual:"
                dq offset aC240816      ; "c24@0:8@16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_class     ; "class"
                dq offset a1608_0       ; "#16@0:8"
                align 10h
                dq offset sel_self      ; "self"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_ ; "performSelector:"
                dq offset a240816_0     ; "@24@0:8:16"
                align 20h
                dq offset sel_performSelector_withObject_ ; "performSelector:withObject:"
                dq offset a32081624     ; "@32@0:8:16@24"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_withObject_withObject_ ; "performSelector:withObject:withObject:"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                align 10h
                dq offset sel_isProxy   ; "isProxy"
                dq offset aC1608        ; "c16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_isKindOfClass_ ; "isKindOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                align 20h
                dq offset sel_isMemberOfClass_ ; "isMemberOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_conformsToProtocol_ ; "conformsToProtocol:"
                dq offset aC240816      ; "c24@0:8@16"
                align 10h
                dq offset sel_respondsToSelector_ ; "respondsToSelector:"
                dq offset aC240816_1    ; "c24@0:8:16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_retain    ; "retain"
                dq offset a1608         ; "@16@0:8"
                align 20h
                dq offset sel_release   ; "release"
                dq offset aVv1608       ; "Vv16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_autorelease ; "autorelease"
                dq offset a1608         ; "@16@0:8"
                align 10h
                dq offset sel_retainCount ; "retainCount"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_zone      ; "zone"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                align 20h
                dq offset sel_hash      ; "hash"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_superclass ; "superclass"
                dq offset a1608_0       ; "#16@0:8"
                align 10h
                dq offset sel_description ; "description"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dq offset sel_debugDescription ; "debugDescription"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                dq offset sel_hash      ; "hash"
                dq offset aTqR          ; "TQ,R"
                dq offset sel_superclass ; "superclass"
                dq offset aTR           ; "T#,R"
                dq offset sel_description ; "description"
                dq offset aTNsstringRC  ; "T@\"NSString\",R,C"
                dq offset sel_debugDescription ; "debugDescription"
                dq offset aTNsstringRC_0 ; "T@\"NSString\",?,R,C"
                dq offset aC240816      ; "c24@0:8@16"
                dq offset a1608_0       ; "#16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset a240816_0     ; "@24@0:8:16"
                dq offset a32081624     ; "@32@0:8:16@24"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                dq offset aC1608        ; "c16@0:8"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC2408Protocol1 ; "c24@0:8@\"Protocol\"16"
                dq offset aC240816_1    ; "c24@0:8:16"
                dq offset a1608         ; "@16@0:8"
                dq offset aVv1608       ; "Vv16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset a1608_0       ; "#16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
SPUUpdaterDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SPUUpdaterDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_SPUUpdaterDelegate __objc2_meth_list <18h, 21h>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_SPUUpdaterDelegate↓o
                __objc2_meth <offset sel_updater_mayPerformUpdateCheck_error_, \ ; "updater:mayPerformUpdateCheck:error:" ...
                              offset aC400816q2432, 0>
                __objc2_meth <offset sel_allowedChannelsForUpdater_, offset a240816, \ ; "allowedChannelsForUpdater:" ...
                              0>
                __objc2_meth <offset sel_feedURLStringForUpdater_, offset a240816, 0> ; "feedURLStringForUpdater:" ...
                __objc2_meth <offset sel_feedParametersForUpdater_sendingSystemProfile_,\ ; "feedParametersForUpdater:sendingSystemP"... ...
                              offset a280816c24, 0>
                __objc2_meth <offset sel_updaterShouldPromptForPermissionToCheckForUpdates_,\ ; "updaterShouldPromptForPermissionToCheck"... ...
                              offset aC240816, 0>
                __objc2_meth <offset sel_allowedSystemProfileKeysForUpdater_, \ ; "allowedSystemProfileKeysForUpdater:" ...
                              offset a240816, 0>
                __objc2_meth <offset sel_updater_didFinishLoadingAppcast_, \ ; "updater:didFinishLoadingAppcast:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_updater_didFindValidUpdate_, \ ; "updater:didFindValidUpdate:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_updaterDidNotFindUpdate_error_, \ ; "updaterDidNotFindUpdate:error:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_updaterDidNotFindUpdate_, offset aV240816_0, \ ; "updaterDidNotFindUpdate:" ...
                              0>
                __objc2_meth <offset sel_bestValidUpdateInAppcast_forUpdater_, \ ; "bestValidUpdateInAppcast:forUpdater:" ...
                              offset a32081624_0, 0>
                __objc2_meth <offset sel_updater_shouldProceedWithUpdate_updateCheck_error_,\ ; "updater:shouldProceedWithUpdate:updateC"... ...
                              offset aC48081624q3240, 0>
                __objc2_meth <offset sel_updater_userDidMakeChoice_forUpdate_state_, \ ; "updater:userDidMakeChoice:forUpdate:sta"... ...
                              offset aV480816q243240, 0>
                __objc2_meth <offset sel_updater_shouldDownloadReleaseNotesForUpdate_,\ ; "updater:shouldDownloadReleaseNotesForUp"... ...
                              offset aC32081624_0, 0>
                __objc2_meth <offset sel_updater_willDownloadUpdate_withRequest_, \ ; "updater:willDownloadUpdate:withRequest:" ...
                              offset aV4008162432, 0>
                __objc2_meth <offset sel_updater_didDownloadUpdate_, \ ; "updater:didDownloadUpdate:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_updater_failedToDownloadUpdate_error_, \ ; "updater:failedToDownloadUpdate:error:" ...
                              offset aV4008162432, 0>
                __objc2_meth <offset sel_userDidCancelDownload_, offset aV240816_0, 0> ; "userDidCancelDownload:" ...
                __objc2_meth <offset sel_updater_willExtractUpdate_, \ ; "updater:willExtractUpdate:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_updater_didExtractUpdate_, offset aV32081624,\ ; "updater:didExtractUpdate:" ...
                              0>
                __objc2_meth <offset sel_updater_willInstallUpdate_, \ ; "updater:willInstallUpdate:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_updater_shouldPostponeRelaunchForUpdate_untilInvokingBlock_,\ ; "updater:shouldPostponeRelaunchForUpdate"... ...
                              offset aC4008162432_0, 0>
                __objc2_meth <offset sel_updaterShouldRelaunchApplication_, \ ; "updaterShouldRelaunchApplication:" ...
                              offset aC240816, 0>
                __objc2_meth <offset sel_updaterWillRelaunchApplication_, \ ; "updaterWillRelaunchApplication:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_versionComparatorForUpdater_, offset a240816,\ ; "versionComparatorForUpdater:" ...
                              0>
                __objc2_meth <offset sel_updater_willScheduleUpdateCheckAfterDelay_, \ ; "updater:willScheduleUpdateCheckAfterDel"... ...
                              offset aV320816d24, 0>
                __objc2_meth <offset sel_updaterWillNotScheduleUpdateCheck_, \ ; "updaterWillNotScheduleUpdateCheck:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_decryptionPasswordForUpdater_, \ ; "decryptionPasswordForUpdater:" ...
                              offset a240816, 0>
                __objc2_meth <offset sel_updater_willInstallUpdateOnQuit_immediateInstallationBlock_,\ ; "updater:willInstallUpdateOnQuit:immedia"... ...
                              offset aC4008162432_0, 0>
                __objc2_meth <offset sel_updater_didAbortWithError_, \ ; "updater:didAbortWithError:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_updater_didFinishUpdateCycleForUpdateCheck_error_,\ ; "updater:didFinishUpdateCycleForUpdateCh"... ...
                              offset aV400816q2432, 0>
                __objc2_meth <offset sel_updaterMayCheckForUpdates_, offset aC240816, \ ; "updaterMayCheckForUpdates:" ...
                              0>
                __objc2_meth <offset sel_updater_userDidSkipThisVersion_, \ ; "updater:userDidSkipThisVersion:" ...
                              offset aV32081624, 0>
off_100041C28   dq offset aC4008Spuupdate
                                        ; DATA XREF: __data:000000010004A150↓o
                                        ; "c40@0:8@\"SPUUpdater\"16q24^@32"
                dq offset aNsset2408Spuup ; "@\"NSSet\"24@0:8@\"SPUUpdater\"16"
                dq offset aNsstring2408Sp ; "@\"NSString\"24@0:8@\"SPUUpdater\"16"
                dq offset aNsarray2808Spu ; "@\"NSArray\"28@0:8@\"SPUUpdater\"16c24"
                dq offset aC2408Spuupdate ; "c24@0:8@\"SPUUpdater\"16"
                dq offset aNsarray2408Spu ; "@\"NSArray\"24@0:8@\"SPUUpdater\"16"
                dq offset aV3208Spuupdate ; "v32@0:8@\"SPUUpdater\"16@\"SUAppcast\"2"...
                dq offset aV3208Spuupdate_0 ; "v32@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV3208Spuupdate_1 ; "v32@0:8@\"SPUUpdater\"16@\"NSError\"24"
                dq offset aV2408Spuupdate ; "v24@0:8@\"SPUUpdater\"16"
                dq offset aSuappcastitem3 ; "@\"SUAppcastItem\"32@0:8@\"SUAppcast\"1"...
                dq offset aC4808Spuupdate ; "c48@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV4808Spuupdate ; "v48@0:8@\"SPUUpdater\"16q24@\"SUAppcast"...
                dq offset aC3208Spuupdate ; "c32@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV4008Spuupdate ; "v40@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV3208Spuupdate_0 ; "v32@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV4008Spuupdate_0 ; "v40@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV2408Spuupdate ; "v24@0:8@\"SPUUpdater\"16"
                dq offset aV3208Spuupdate_0 ; "v32@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV3208Spuupdate_0 ; "v32@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV3208Spuupdate_0 ; "v32@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aC4008Spuupdate_0 ; "c40@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aC2408Spuupdate ; "c24@0:8@\"SPUUpdater\"16"
                dq offset aV2408Spuupdate ; "v24@0:8@\"SPUUpdater\"16"
                dq offset aSuversioncompa ; "@\"<SUVersionComparison>\"24@0:8@\"SPUU"...
                dq offset aV3208Spuupdate_2 ; "v32@0:8@\"SPUUpdater\"16d24"
                dq offset aV2408Spuupdate ; "v24@0:8@\"SPUUpdater\"16"
                dq offset aNsstring2408Sp ; "@\"NSString\"24@0:8@\"SPUUpdater\"16"
                dq offset aC4008Spuupdate_0 ; "c40@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
                dq offset aV3208Spuupdate_1 ; "v32@0:8@\"SPUUpdater\"16@\"NSError\"24"
                dq offset aV4008Spuupdate_1 ; "v40@0:8@\"SPUUpdater\"16q24@\"NSError\""...
                dq offset aC2408Spuupdate ; "c24@0:8@\"SPUUpdater\"16"
                dq offset aV3208Spuupdate_0 ; "v32@0:8@\"SPUUpdater\"16@\"SUAppcastIte"...
UpDaterManager_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __objc_const:UpDaterManager_$metaData↓o
                                        ; __objc_const:UpDaterManager_$classData↓o
                dq offset _OBJC_PROTOCOL_$_SPUUpdaterDelegate
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
UpDaterManager_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aUpdatermanager, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_UpDaterManager↓o
                                  offset _OBJC_CLASS_METHODS_UpDaterManager, \ ; "UpDaterManager"
                                  offset UpDaterManager_$prots, 0, 0, 0>
_OBJC_INSTANCE_METHODS_UpDaterManager __objc2_meth_list <18h, 0Ch>
                                        ; DATA XREF: __objc_const:UpDaterManager_$classData↓o
                __objc2_meth <offset sel_init, offset a1608, \ ; -[UpDaterManager init] ...
                              offset __UpDaterManager_init_>
                __objc2_meth <offset sel_setupUpdater, offset aV1608_0, \ ; -[UpDaterManager setupUpdater] ...
                              offset __UpDaterManager_setupUpdater_>
                __objc2_meth <offset sel_setSparkleLanguage, offset aV1608_0, \ ; -[UpDaterManager setSparkleLanguage] ...
                              offset __UpDaterManager_setSparkleLanguage_>
                __objc2_meth <offset sel_getCurrentLanguageCode, offset a1608, \ ; -[UpDaterManager getCurrentLanguageCode] ...
                              offset __UpDaterManager_getCurrentLanguageCode_>
                __objc2_meth <offset sel_updateLanguage, offset aV1608_0, \ ; -[UpDaterManager updateLanguage] ...
                              offset __UpDaterManager_updateLanguage_>
                __objc2_meth <offset sel_checkForUpdates, offset aV1608_0, \ ; -[UpDaterManager checkForUpdates] ...
                              offset __UpDaterManager_checkForUpdates_>
                __objc2_meth <offset sel_feedURLStringForUpdater_, offset a240816, \ ; -[UpDaterManager feedURLStringForUpdater:] ...
                              offset __UpDaterManager_feedURLStringForUpdater__>
                __objc2_meth <offset sel_controller, offset a1608, \ ; -[UpDaterManager controller] ...
                              offset __UpDaterManager_controller_>
                __objc2_meth <offset sel_setController_, offset aV240816_0, \ ; -[UpDaterManager setController:] ...
                              offset __UpDaterManager_setController__>
                __objc2_meth <offset sel_updater, offset a1608, \ ; -[UpDaterManager updater] ...
                              offset __UpDaterManager_updater_>
                __objc2_meth <offset sel_setUpdater_, offset aV240816_0, \ ; -[UpDaterManager setUpdater:] ...
                              offset __UpDaterManager_setUpdater__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[UpDaterManager .cxx_destruct] ...
                              offset __UpDaterManager__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_UpDaterManager __objc2_ivar_list <20h, 2>
                                        ; DATA XREF: __objc_const:UpDaterManager_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_UpDaterManager__controller, \ ; SPUStandardUpdaterController *_controller;
                              offset aController_0, offset aSpustandardupd, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_UpDaterManager__updater, \ ; SPUUpdater *_updater;
                              offset aUpdater_0, offset aSpuupdater, 3, 8>
UpDaterManager_$properties __objc2_prop_list <10h, 6>
                                        ; DATA XREF: __objc_const:UpDaterManager_$classData↓o
                __objc2_prop <offset sel_controller, offset aTSpustandardup> ; @property (retain, nonatomic) SPUStandardUpdaterController *controller;
                __objc2_prop <offset sel_updater, offset aTSpuupdaterNVU> ; @property (retain, nonatomic) SPUUpdater *updater;
                __objc2_prop <offset sel_hash, offset aTqR> ; @property (readonly) unsigned __int64 hash;
                __objc2_prop <offset sel_superclass, offset aTR> ; @property (readonly) Class superclass;
                __objc2_prop <offset sel_description, offset aTNsstringRC> ; @property (readonly, copy) NSString *description;
                __objc2_prop <offset sel_debugDescription, offset aTNsstringRC_0> ; @property (readonly, copy) NSString *debugDescription;
UpDaterManager_$classData __objc2_class_ro <194h, 8, 18h, 0, offset UpDaterManager_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_UpDaterManager↓o
                                  offset aUpdatermanager, \ ; "UpDaterManager"
                                  offset _OBJC_INSTANCE_METHODS_UpDaterManager, \
                                  offset UpDaterManager_$prots, \
                                  offset _OBJC_INSTANCE_VARIABLES_UpDaterManager, 0, \
                                  offset UpDaterManager_$properties>
MJPropertyKey_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aMjpropertykey, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_MJPropertyKey↓o
                                  0, 0, 0> ; "MJPropertyKey"
_OBJC_INSTANCE_METHODS_MJPropertyKey __objc2_meth_list <18h, 6>
                                        ; DATA XREF: __objc_const:MJPropertyKey_$classData↓o
                __objc2_meth <offset sel_valueInObject_, offset a240816, \ ; -[MJPropertyKey valueInObject:] ...
                              offset __MJPropertyKey_valueInObject__>
                __objc2_meth <offset sel_name, offset a1608, \ ; -[MJPropertyKey name] ...
                              offset __MJPropertyKey_name_>
                __objc2_meth <offset sel_setName_, offset aV240816_0, \ ; -[MJPropertyKey setName:] ...
                              offset __MJPropertyKey_setName__>
                __objc2_meth <offset sel_type, offset aI1608, \ ; -[MJPropertyKey type] ...
                              offset __MJPropertyKey_type_>
                __objc2_meth <offset sel_setType_, offset aV2008i16, \ ; -[MJPropertyKey setType:] ...
                              offset __MJPropertyKey_setType__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[MJPropertyKey .cxx_destruct] ...
                              offset __MJPropertyKey__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_MJPropertyKey __objc2_ivar_list <20h, 2>
                                        ; DATA XREF: __objc_const:MJPropertyKey_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyKey__type, offset aType_0,\ ; int _type;
                              offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyKey__name, offset aName, \ ; NSString *_name;
                              offset aNsstring, 3, 8>
MJPropertyKey_$properties __objc2_prop_list <10h, 2>
                                        ; DATA XREF: __objc_const:MJPropertyKey_$classData↓o
                __objc2_prop <offset sel_name, offset aTNsstringCNVNa> ; @property (copy, nonatomic) NSString *name;
                __objc2_prop <offset sel_type, offset aTiNVType> ; @property (nonatomic) int type;
MJPropertyKey_$classData __objc2_class_ro <194h, 8, 18h, 0, offset SHIDBootHJZ_$ivarWeakLayout,\
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJPropertyKey↓o
                                  offset aMjpropertykey, \ ; "MJPropertyKey"
                                  offset _OBJC_INSTANCE_METHODS_MJPropertyKey, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_MJPropertyKey, 0, \
                                  offset MJPropertyKey_$properties>
SHIDXinput_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aShidxinput, 0, 0, 0, 0,\
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDXinput↓o
                                  0>    ; "SHIDXinput"
_OBJC_INSTANCE_METHODS_SHIDXinput __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:SHIDXinput_$classData↓o
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDXinput open] ...
                              offset __SHIDXinput_open_>
SHIDXinput_$classData __objc2_class_ro <90h, 68h, 68h, 0, 0, offset aShidxinput, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDXinput↓o
                                  offset _OBJC_INSTANCE_METHODS_SHIDXinput, 0, 0, 0, \ ; "SHIDXinput"
                                  0>
_OBJC_CATEGORY_INSTANCE_METHODS_NSObject_$_MJKeyValue __objc2_meth_list <18h, 9>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValue↓o
                __objc2_meth <offset sel_mj_setKeyValues_, offset a240816, \ ; -[NSObject mj_setKeyValues:] ...
                              offset __NSObject_mj_setKeyValues__>
                __objc2_meth <offset sel_mj_setKeyValues_context_, offset a32081624_0,\ ; -[NSObject mj_setKeyValues:context:] ...
                              offset __NSObject_mj_setKeyValues_context__>
                __objc2_meth <offset sel_mj_keyValues, offset a1608, \ ; -[NSObject mj_keyValues] ...
                              offset __NSObject_mj_keyValues_>
                __objc2_meth <offset sel_mj_keyValuesWithKeys_, offset a240816, \ ; -[NSObject mj_keyValuesWithKeys:] ...
                              offset __NSObject_mj_keyValuesWithKeys__>
                __objc2_meth <offset sel_mj_keyValuesWithIgnoredKeys_, offset a240816,\ ; -[NSObject mj_keyValuesWithIgnoredKeys:] ...
                              offset __NSObject_mj_keyValuesWithIgnoredKeys__>
                __objc2_meth <offset sel_mj_keyValuesWithKeys_ignoredKeys_, \ ; -[NSObject mj_keyValuesWithKeys:ignoredKeys:] ...
                              offset a32081624_0, \
                              offset __NSObject_mj_keyValuesWithKeys_ignoredKeys__>
                __objc2_meth <offset sel_mj_JSONData, offset a1608, \ ; -[NSObject mj_JSONData] ...
                              offset __NSObject_mj_JSONData_>
                __objc2_meth <offset sel_mj_JSONObject, offset a1608, \ ; -[NSObject mj_JSONObject] ...
                              offset __NSObject_mj_JSONObject_>
                __objc2_meth <offset sel_mj_JSONString, offset a1608, \ ; -[NSObject mj_JSONString] ...
                              offset __NSObject_mj_JSONString_>
_OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJKeyValue __objc2_meth_list <18h, 11h>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValue↓o
                __objc2_meth <offset sel_mj_error, offset a1608, \ ; +[NSObject mj_error] ...
                              offset __NSObject_mj_error_>
                __objc2_meth <offset sel_setMj_error_, offset aV240816_0, \ ; +[NSObject setMj_error:] ...
                              offset __NSObject_setMj_error__>
                __objc2_meth <offset sel_mj_referenceReplacedKeyWhenCreatingKeyValues_,\ ; +[NSObject mj_referenceReplacedKeyWhenCreatingKeyValues:] ...
                              offset aV2008c16, \
                              offset __NSObject_mj_referenceReplacedKeyWhenCreatingKeyValues__>
                __objc2_meth <offset sel_mj_isReferenceReplacedKeyWhenCreatingKeyValues,\ ; +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues] ...
                              offset aC1608, \
                              offset __NSObject_mj_isReferenceReplacedKeyWhenCreatingKeyValues_>
                __objc2_meth <offset sel_load, offset aV1608_0, \ ; +[NSObject load] ...
                              offset __NSObject_load_>
                __objc2_meth <offset sel_mj_objectWithKeyValues_, offset a240816, \ ; +[NSObject mj_objectWithKeyValues:] ...
                              offset __NSObject_mj_objectWithKeyValues__>
                __objc2_meth <offset sel_mj_objectWithKeyValues_context_, \ ; +[NSObject mj_objectWithKeyValues:context:] ...
                              offset a32081624_0, \
                              offset __NSObject_mj_objectWithKeyValues_context__>
                __objc2_meth <offset sel_mj_objectWithFilename_, offset a240816, \ ; +[NSObject mj_objectWithFilename:] ...
                              offset __NSObject_mj_objectWithFilename__>
                __objc2_meth <offset sel_mj_objectWithFile_, offset a240816, \ ; +[NSObject mj_objectWithFile:] ...
                              offset __NSObject_mj_objectWithFile__>
                __objc2_meth <offset sel_mj_objectArrayWithKeyValuesArray_, \ ; +[NSObject mj_objectArrayWithKeyValuesArray:] ...
                              offset a240816, \
                              offset __NSObject_mj_objectArrayWithKeyValuesArray__>
                __objc2_meth <offset sel_mj_objectArrayWithKeyValuesArray_context_, \ ; +[NSObject mj_objectArrayWithKeyValuesArray:context:] ...
                              offset a32081624_0, \
                              offset __NSObject_mj_objectArrayWithKeyValuesArray_context__>
                __objc2_meth <offset sel_mj_objectArrayWithFilename_, offset a240816, \ ; +[NSObject mj_objectArrayWithFilename:] ...
                              offset __NSObject_mj_objectArrayWithFilename__>
                __objc2_meth <offset sel_mj_objectArrayWithFile_, offset a240816, \ ; +[NSObject mj_objectArrayWithFile:] ...
                              offset __NSObject_mj_objectArrayWithFile__>
                __objc2_meth <offset sel_mj_keyValuesArrayWithObjectArray_, \ ; +[NSObject mj_keyValuesArrayWithObjectArray:] ...
                              offset a240816, \
                              offset __NSObject_mj_keyValuesArrayWithObjectArray__>
                __objc2_meth <offset sel_mj_keyValuesArrayWithObjectArray_keys_, \ ; +[NSObject mj_keyValuesArrayWithObjectArray:keys:] ...
                              offset a32081624_0, \
                              offset __NSObject_mj_keyValuesArrayWithObjectArray_keys__>
                __objc2_meth <offset sel_mj_keyValuesArrayWithObjectArray_ignoredKeys_,\ ; +[NSObject mj_keyValuesArrayWithObjectArray:ignoredKeys:] ...
                              offset a32081624_0, \
                              offset __NSObject_mj_keyValuesArrayWithObjectArray_ignoredKeys__>
                __objc2_meth <offset sel_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_,\ ; +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:] ...
                              offset a4008162432_0, \
                              offset __NSObject_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys__>
                db  18h
                db    0
                db    0
                db    0
                db  13h
                db    0
                db    0
                db    0
                dq offset sel_isEqual_  ; "isEqual:"
                dq offset aC240816      ; "c24@0:8@16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_class     ; "class"
                dq offset a1608_0       ; "#16@0:8"
                align 10h
                dq offset sel_self      ; "self"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_ ; "performSelector:"
                dq offset a240816_0     ; "@24@0:8:16"
                align 20h
                dq offset sel_performSelector_withObject_ ; "performSelector:withObject:"
                dq offset a32081624     ; "@32@0:8:16@24"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_withObject_withObject_ ; "performSelector:withObject:withObject:"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                align 10h
                dq offset sel_isProxy   ; "isProxy"
                dq offset aC1608        ; "c16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_isKindOfClass_ ; "isKindOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                align 20h
                dq offset sel_isMemberOfClass_ ; "isMemberOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_conformsToProtocol_ ; "conformsToProtocol:"
                dq offset aC240816      ; "c24@0:8@16"
                align 10h
                dq offset sel_respondsToSelector_ ; "respondsToSelector:"
                dq offset aC240816_1    ; "c24@0:8:16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_retain    ; "retain"
                dq offset a1608         ; "@16@0:8"
                align 20h
                dq offset sel_release   ; "release"
                dq offset aVv1608       ; "Vv16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_autorelease ; "autorelease"
                dq offset a1608         ; "@16@0:8"
                align 10h
                dq offset sel_retainCount ; "retainCount"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_zone      ; "zone"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                align 20h
                dq offset sel_hash      ; "hash"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_superclass ; "superclass"
                dq offset a1608_0       ; "#16@0:8"
                align 10h
                dq offset sel_description ; "description"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dq offset sel_debugDescription ; "debugDescription"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                dq offset sel_hash      ; "hash"
                dq offset aTqR          ; "TQ,R"
                dq offset sel_superclass ; "superclass"
                dq offset aTR           ; "T#,R"
                dq offset sel_description ; "description"
                dq offset aTNsstringRC  ; "T@\"NSString\",R,C"
                dq offset sel_debugDescription ; "debugDescription"
                dq offset aTNsstringRC_0 ; "T@\"NSString\",?,R,C"
                dq offset aC240816      ; "c24@0:8@16"
                dq offset a1608_0       ; "#16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset a240816_0     ; "@24@0:8:16"
                dq offset a32081624     ; "@32@0:8:16@24"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                dq offset aC1608        ; "c16@0:8"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC2408Protocol1 ; "c24@0:8@\"Protocol\"16"
                dq offset aC240816_1    ; "c24@0:8:16"
                dq offset a1608         ; "@16@0:8"
                dq offset aVv1608       ; "Vv16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset a1608_0       ; "#16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
MJKeyValue_$prots __objc2_prot_list <1> ; DATA XREF: __data:_OBJC_PROTOCOL_$_MJKeyValue↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_MJKeyValue __objc2_meth_list <18h, 3>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_MJKeyValue↓o
                __objc2_meth <offset sel_mj_newValueFromOldValue_property_, \ ; "mj_newValueFromOldValue:property:" ...
                              offset a32081624_0, 0>
                __objc2_meth <offset sel_mj_keyValuesDidFinishConvertingToObject, \ ; "mj_keyValuesDidFinishConvertingToObject" ...
                              offset aV1608_0, 0>
                __objc2_meth <offset sel_mj_objectDidFinishConvertingToKeyValues, \ ; "mj_objectDidFinishConvertingToKeyValues" ...
                              offset aV1608_0, 0>
_OBJC_CLASS_METHODS_MJKeyValue __objc2_meth_list <18h, 5>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_MJKeyValue↓o
                __objc2_meth <offset sel_mj_allowedPropertyNames, offset a1608, 0> ; "mj_allowedPropertyNames" ...
                __objc2_meth <offset sel_mj_ignoredPropertyNames, offset a1608, 0> ; "mj_ignoredPropertyNames" ...
                __objc2_meth <offset sel_mj_replacedKeyFromPropertyName, offset a1608,\ ; "mj_replacedKeyFromPropertyName" ...
                              0>
                __objc2_meth <offset sel_mj_replacedKeyFromPropertyName121_, \ ; "mj_replacedKeyFromPropertyName121:" ...
                              offset a240816, 0>
                __objc2_meth <offset sel_mj_objectClassInArray, offset a1608, 0> ; "mj_objectClassInArray" ...
off_100042838   dq offset a320816Mjproper
                                        ; DATA XREF: __data:000000010004A1B0↓o
                                        ; "@32@0:8@16@\"MJProperty\"24"
                dq offset aV1608_0      ; "v16@0:8"
                dq offset aV1608_0      ; "v16@0:8"
                dq offset aNsarray1608  ; "@\"NSArray\"16@0:8"
                dq offset aNsarray1608  ; "@\"NSArray\"16@0:8"
                dq offset aNsdictionary16 ; "@\"NSDictionary\"16@0:8"
                dq offset a2408Nsstring16 ; "@24@0:8@\"NSString\"16"
                dq offset aNsdictionary16 ; "@\"NSDictionary\"16@0:8"
NSObject_$_MJKeyValue_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValue↓o
                dq offset _OBJC_PROTOCOL_$_MJKeyValue
                align 10h
NSObject_$_MJKeyValue_$properties __objc2_prop_list <10h, 4>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValue↓o
                __objc2_prop <offset sel_hash, offset aTqR> ; @property (readonly) unsigned __int64 hash;
                __objc2_prop <offset sel_superclass, offset aTR> ; @property (readonly) Class superclass;
                __objc2_prop <offset sel_description, offset aTNsstringRC> ; @property (readonly, copy) NSString *description;
                __objc2_prop <offset sel_debugDescription, offset aTNsstringRC_0> ; @property (readonly, copy) NSString *debugDescription;
_OBJC_CATEGORY_NSObject_$_MJKeyValue __objc2_category <offset aMjkeyvalue, offset _OBJC_CLASS_$_NSObject, \
                                        ; DATA XREF: __objc_catlist:000000010003D2B8↑o
                                        ; __objc_nlcatlist:000000010003D2F0↑o
                                  offset _OBJC_CATEGORY_INSTANCE_METHODS_NSObject_$_MJKeyValue,\ ; "MJKeyValue"
                                  offset _OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJKeyValue,\
                                  offset NSObject_$_MJKeyValue_$prots, \
                                  offset NSObject_$_MJKeyValue_$properties>
                align 10h
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_CATEGORY_INSTANCE_METHODS_NSObject_$_MJKeyValueDeprecated_v_2_5_16 __objc2_meth_list <18h, 0Dh>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValueDeprecated_v_2_5_16↓o
                __objc2_meth <offset sel_setKeyValues_, offset a240816, \ ; -[NSObject setKeyValues:] ...
                              offset __NSObject_setKeyValues__>
                __objc2_meth <offset sel_setKeyValues_error_, offset a32081624_1, \ ; -[NSObject setKeyValues:error:] ...
                              offset __NSObject_setKeyValues_error__>
                __objc2_meth <offset sel_setKeyValues_context_, offset a32081624_0, \ ; -[NSObject setKeyValues:context:] ...
                              offset __NSObject_setKeyValues_context__>
                __objc2_meth <offset sel_setKeyValues_context_error_, \ ; -[NSObject setKeyValues:context:error:] ...
                              offset a4008162432_1, \
                              offset __NSObject_setKeyValues_context_error__>
                __objc2_meth <offset sel_keyValues, offset a1608, \ ; -[NSObject keyValues] ...
                              offset __NSObject_keyValues_>
                __objc2_meth <offset sel_keyValuesWithError_, offset a240816_1, \ ; -[NSObject keyValuesWithError:] ...
                              offset __NSObject_keyValuesWithError__>
                __objc2_meth <offset sel_keyValuesWithKeys_, offset a240816, \ ; -[NSObject keyValuesWithKeys:] ...
                              offset __NSObject_keyValuesWithKeys__>
                __objc2_meth <offset sel_keyValuesWithKeys_error_, offset a32081624_1,\ ; -[NSObject keyValuesWithKeys:error:] ...
                              offset __NSObject_keyValuesWithKeys_error__>
                __objc2_meth <offset sel_keyValuesWithIgnoredKeys_, offset a240816, \ ; -[NSObject keyValuesWithIgnoredKeys:] ...
                              offset __NSObject_keyValuesWithIgnoredKeys__>
                __objc2_meth <offset sel_keyValuesWithIgnoredKeys_error_, \ ; -[NSObject keyValuesWithIgnoredKeys:error:] ...
                              offset a32081624_1, \
                              offset __NSObject_keyValuesWithIgnoredKeys_error__>
                __objc2_meth <offset sel_JSONData, offset a1608, \ ; -[NSObject JSONData] ...
                              offset __NSObject_JSONData_>
                __objc2_meth <offset sel_JSONObject, offset a1608, \ ; -[NSObject JSONObject] ...
                              offset __NSObject_JSONObject_>
                __objc2_meth <offset sel_JSONString, offset a1608, \ ; -[NSObject JSONString] ...
                              offset __NSObject_JSONString_>
_OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJKeyValueDeprecated_v_2_5_16 __objc2_meth_list <18h, 17h>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValueDeprecated_v_2_5_16↓o
                __objc2_meth <offset sel_referenceReplacedKeyWhenCreatingKeyValues_, \ ; +[NSObject referenceReplacedKeyWhenCreatingKeyValues:] ...
                              offset aV2008c16, \
                              offset __NSObject_referenceReplacedKeyWhenCreatingKeyValues__>
                __objc2_meth <offset sel_keyValuesArrayWithObjectArray_, \ ; +[NSObject keyValuesArrayWithObjectArray:] ...
                              offset a240816, \
                              offset __NSObject_keyValuesArrayWithObjectArray__>
                __objc2_meth <offset sel_keyValuesArrayWithObjectArray_error_, \ ; +[NSObject keyValuesArrayWithObjectArray:error:] ...
                              offset a32081624_1, \
                              offset __NSObject_keyValuesArrayWithObjectArray_error__>
                __objc2_meth <offset sel_keyValuesArrayWithObjectArray_keys_, \ ; +[NSObject keyValuesArrayWithObjectArray:keys:] ...
                              offset a32081624_0, \
                              offset __NSObject_keyValuesArrayWithObjectArray_keys__>
                __objc2_meth <offset sel_keyValuesArrayWithObjectArray_keys_error_, \ ; +[NSObject keyValuesArrayWithObjectArray:keys:error:] ...
                              offset a4008162432_1, \
                              offset __NSObject_keyValuesArrayWithObjectArray_keys_error__>
                __objc2_meth <offset sel_keyValuesArrayWithObjectArray_ignoredKeys_, \ ; +[NSObject keyValuesArrayWithObjectArray:ignoredKeys:] ...
                              offset a32081624_0, \
                              offset __NSObject_keyValuesArrayWithObjectArray_ignoredKeys__>
                __objc2_meth <offset sel_keyValuesArrayWithObjectArray_ignoredKeys_error_,\ ; +[NSObject keyValuesArrayWithObjectArray:ignoredKeys:error:] ...
                              offset a4008162432_1, \
                              offset __NSObject_keyValuesArrayWithObjectArray_ignoredKeys_error__>
                __objc2_meth <offset sel_objectWithKeyValues_, offset a240816, \ ; +[NSObject objectWithKeyValues:] ...
                              offset __NSObject_objectWithKeyValues__>
                __objc2_meth <offset sel_objectWithKeyValues_error_, \ ; +[NSObject objectWithKeyValues:error:] ...
                              offset a32081624_1, \
                              offset __NSObject_objectWithKeyValues_error__>
                __objc2_meth <offset sel_objectWithKeyValues_context_, \ ; +[NSObject objectWithKeyValues:context:] ...
                              offset a32081624_0, \
                              offset __NSObject_objectWithKeyValues_context__>
                __objc2_meth <offset sel_objectWithKeyValues_context_error_, \ ; +[NSObject objectWithKeyValues:context:error:] ...
                              offset a4008162432_1, \
                              offset __NSObject_objectWithKeyValues_context_error__>
                __objc2_meth <offset sel_objectWithFilename_, offset a240816, \ ; +[NSObject objectWithFilename:] ...
                              offset __NSObject_objectWithFilename__>
                __objc2_meth <offset sel_objectWithFilename_error_, \ ; +[NSObject objectWithFilename:error:] ...
                              offset a32081624_1, \
                              offset __NSObject_objectWithFilename_error__>
                __objc2_meth <offset sel_objectWithFile_, offset a240816, \ ; +[NSObject objectWithFile:] ...
                              offset __NSObject_objectWithFile__>
                __objc2_meth <offset sel_objectWithFile_error_, offset a32081624_1, \ ; +[NSObject objectWithFile:error:] ...
                              offset __NSObject_objectWithFile_error__>
                __objc2_meth <offset sel_objectArrayWithKeyValuesArray_, \ ; +[NSObject objectArrayWithKeyValuesArray:] ...
                              offset a240816, \
                              offset __NSObject_objectArrayWithKeyValuesArray__>
                __objc2_meth <offset sel_objectArrayWithKeyValuesArray_error_, \ ; +[NSObject objectArrayWithKeyValuesArray:error:] ...
                              offset a32081624_1, \
                              offset __NSObject_objectArrayWithKeyValuesArray_error__>
                __objc2_meth <offset sel_objectArrayWithKeyValuesArray_context_, \ ; +[NSObject objectArrayWithKeyValuesArray:context:] ...
                              offset a32081624_0, \
                              offset __NSObject_objectArrayWithKeyValuesArray_context__>
                __objc2_meth <offset sel_objectArrayWithKeyValuesArray_context_error_,\ ; +[NSObject objectArrayWithKeyValuesArray:context:error:] ...
                              offset a4008162432_1, \
                              offset __NSObject_objectArrayWithKeyValuesArray_context_error__>
                __objc2_meth <offset sel_objectArrayWithFilename_, offset a240816, \ ; +[NSObject objectArrayWithFilename:] ...
                              offset __NSObject_objectArrayWithFilename__>
                __objc2_meth <offset sel_objectArrayWithFilename_error_, \ ; +[NSObject objectArrayWithFilename:error:] ...
                              offset a32081624_1, \
                              offset __NSObject_objectArrayWithFilename_error__>
                __objc2_meth <offset sel_objectArrayWithFile_, offset a240816, \ ; +[NSObject objectArrayWithFile:] ...
                              offset __NSObject_objectArrayWithFile__>
                __objc2_meth <offset sel_objectArrayWithFile_error_, \ ; +[NSObject objectArrayWithFile:error:] ...
                              offset a32081624_1, \
                              offset __NSObject_objectArrayWithFile_error__>
_OBJC_CATEGORY_NSObject_$_MJKeyValueDeprecated_v_2_5_16 __objc2_category <offset aMjkeyvaluedepr, \
                                        ; DATA XREF: __objc_catlist:000000010003D2C0↑o
                                  offset _OBJC_CLASS_$_NSObject, \ ; "MJKeyValueDeprecated_v_2_5_16"
                                  offset _OBJC_CATEGORY_INSTANCE_METHODS_NSObject_$_MJKeyValueDeprecated_v_2_5_16,\
                                  offset _OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJKeyValueDeprecated_v_2_5_16,\
                                  0, 0>
                align 20h
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
SButton_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aSbutton, 0, 0, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SButton↓o
                                  0>    ; "SButton"
_OBJC_INSTANCE_METHODS_SButton __objc2_meth_list <18h, 19h>
                                        ; DATA XREF: __objc_const:SButton_$classData↓o
                __objc2_meth <offset sel_updateTrackingAreas, offset aV1608_0, \ ; -[SButton updateTrackingAreas] ...
                              offset __SButton_updateTrackingAreas_>
                __objc2_meth <offset sel_initWithFrame_, offset a4808CgrectCgpo, \ ; -[SButton initWithFrame:] ...
                              offset __SButton_initWithFrame__>
                __objc2_meth <offset sel_drawRect_, offset aV4808CgrectCgp, \ ; -[SButton drawRect:] ...
                              offset __SButton_drawRect__>
                __objc2_meth <offset sel_mouseEntered_, offset aV240816_0, \ ; -[SButton mouseEntered:] ...
                              offset __SButton_mouseEntered__>
                __objc2_meth <offset sel_mouseExited_, offset aV240816_0, \ ; -[SButton mouseExited:] ...
                              offset __SButton_mouseExited__>
                __objc2_meth <offset sel_setM_progress_, offset aV2008f16, \ ; -[SButton setM_progress:] ...
                              offset __SButton_setM_progress__>
                __objc2_meth <offset sel_setM_title_, offset aV240816_0, \ ; -[SButton setM_title:] ...
                              offset __SButton_setM_title__>
                __objc2_meth <offset sel_setM_backgroundColor_, offset aV240816_0, \ ; -[SButton setM_backgroundColor:] ...
                              offset __SButton_setM_backgroundColor__>
                __objc2_meth <offset sel_setM_highlightColor_, offset aV240816_0, \ ; -[SButton setM_highlightColor:] ...
                              offset __SButton_setM_highlightColor__>
                __objc2_meth <offset sel_setM_titleColor_, offset aV240816_0, \ ; -[SButton setM_titleColor:] ...
                              offset __SButton_setM_titleColor__>
                __objc2_meth <offset sel_setM_titleHighlighColor_, offset aV240816_0, \ ; -[SButton setM_titleHighlighColor:] ...
                              offset __SButton_setM_titleHighlighColor__>
                __objc2_meth <offset sel_click_, offset aV240816_0, \ ; -[SButton click:] ...
                              offset __SButton_click__>
                __objc2_meth <offset sel_m_progress, offset aF1608, \ ; -[SButton m_progress] ...
                              offset __SButton_m_progress_>
                __objc2_meth <offset sel_m_title, offset a1608, \ ; -[SButton m_title] ...
                              offset __SButton_m_title_>
                __objc2_meth <offset sel_m_backgroundColor, offset a1608, \ ; -[SButton m_backgroundColor] ...
                              offset __SButton_m_backgroundColor_>
                __objc2_meth <offset sel_m_highlightColor, offset a1608, \ ; -[SButton m_highlightColor] ...
                              offset __SButton_m_highlightColor_>
                __objc2_meth <offset sel_m_titleColor, offset a1608, \ ; -[SButton m_titleColor] ...
                              offset __SButton_m_titleColor_>
                __objc2_meth <offset sel_m_titleHighlighColor, offset a1608, \ ; -[SButton m_titleHighlighColor] ...
                              offset __SButton_m_titleHighlighColor_>
                __objc2_meth <offset sel_delegate, offset a1608, \ ; -[SButton delegate] ...
                              offset __SButton_delegate_>
                __objc2_meth <offset sel_setDelegate_, offset aV240816_0, \ ; -[SButton setDelegate:] ...
                              offset __SButton_setDelegate__>
                __objc2_meth <offset sel_m_tmpbg, offset a1608, \ ; -[SButton m_tmpbg] ...
                              offset __SButton_m_tmpbg_>
                __objc2_meth <offset sel_setM_tmpbg_, offset aV240816_0, \ ; -[SButton setM_tmpbg:] ...
                              offset __SButton_setM_tmpbg__>
                __objc2_meth <offset sel_m_tmpTitleColor, offset a1608, \ ; -[SButton m_tmpTitleColor] ...
                              offset __SButton_m_tmpTitleColor_>
                __objc2_meth <offset sel_setM_tmpTitleColor_, offset aV240816_0, \ ; -[SButton setM_tmpTitleColor:] ...
                              offset __SButton_setM_tmpTitleColor__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[SButton .cxx_destruct] ...
                              offset __SButton__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_SButton __objc2_ivar_list <20h, 9>
                                        ; DATA XREF: __objc_const:SButton_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_progress, \ ; float _m_progress;
                              offset aMProgress, offset asc_100036AF9, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_title, offset aMTitle_0, \ ; NSString *_m_title;
                              offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_backgroundColor, \ ; NSColor *_m_backgroundColor;
                              offset aMBackgroundcol, offset aNscolor, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_highlightColor, \ ; NSColor *_m_highlightColor;
                              offset aMHighlightcolo, offset aNscolor, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_titleColor, \ ; NSColor *_m_titleColor;
                              offset aMTitlecolor, offset aNscolor, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_titleHighlighColor, \ ; NSColor *_m_titleHighlighColor;
                              offset aMTitlehighligh, offset aNscolor, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__delegate, offset aDelegate,\ ; id _delegate;
                              offset asc_10003796D, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_tmpbg, offset aMTmpbg_0, \ ; NSColor *_m_tmpbg;
                              offset aNscolor, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SButton__m_tmpTitleColor, \ ; NSColor *_m_tmpTitleColor;
                              offset aMTmptitlecolor_0, offset aNscolor, 3, 8>
SButton_$properties __objc2_prop_list <10h, 9>
                                        ; DATA XREF: __objc_const:SButton_$classData↓o
                __objc2_prop <offset sel_m_tmpbg, offset aTNscolorNVMTmp> ; @property (retain, nonatomic) NSColor *m_tmpbg;
                __objc2_prop <offset sel_m_tmpTitleColor, offset aTNscolorNVMTmp_0> ; @property (retain, nonatomic) NSColor *m_tmpTitleColor;
                __objc2_prop <offset sel_m_progress, offset aTfVMProgress> ; @property float m_progress;
                __objc2_prop <offset sel_m_title, offset aTNsstringCNVMT> ; @property (copy, nonatomic) NSString *m_title;
                __objc2_prop <offset sel_m_backgroundColor, offset aTNscolorNVMBac> ; @property (retain, nonatomic) NSColor *m_backgroundColor;
                __objc2_prop <offset sel_m_highlightColor, offset aTNscolorNVMHig> ; @property (retain, nonatomic) NSColor *m_highlightColor;
                __objc2_prop <offset sel_m_titleColor, offset aTNscolorNVMTit_0> ; @property (retain, nonatomic) NSColor *m_titleColor;
                __objc2_prop <offset sel_m_titleHighlighColor, offset aTNscolorNVMTit> ; @property (retain, nonatomic) NSColor *m_titleHighlighColor;
                __objc2_prop <offset sel_delegate, offset aTNVDelegate> ; @property (retain, nonatomic) id delegate;
SButton_$classData __objc2_class_ro <194h, 8, 50h, 0, offset SButton_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SButton↓o
                                  offset aSbutton, \ ; "SButton"
                                  offset _OBJC_INSTANCE_METHODS_SButton, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_SButton, 0, \
                                  offset SButton_$properties>
_OBJC_CLASS_METHODS_SLoadXIB __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:SLoadXIB_$metaData↓o
                __objc2_meth <offset sel_loadXibName_, offset a240816, \ ; +[SLoadXIB loadXibName:] ...
                              offset __SLoadXIB_loadXibName__>
SLoadXIB_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aSloadxib, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SLoadXIB↓o
                                  offset _OBJC_CLASS_METHODS_SLoadXIB, 0, 0, 0, 0> ; "SLoadXIB"
SLoadXIB_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aSloadxib, 0, 0, 0, 0, 0>
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SLoadXIB↓o
                                        ; "SLoadXIB"
                db  18h
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dq offset sel_SButtonClick_ ; "SButtonClick:"
                dq offset aV240816_0    ; "v24@0:8@16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aV2408Sbutton16 ; "v24@0:8@\"SButton\"16"
FirmwaerUpdateLog_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __objc_const:FirmwaerUpdateLog_$metaData↓o
                                        ; __objc_const:FirmwaerUpdateLog_$classData↓o
                dq offset _OBJC_PROTOCOL_$_SButtonDelegate
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
FirmwaerUpdateLog_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aFirmwaerupdate_4, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_FirmwaerUpdateLog↓o
                                  offset FirmwaerUpdateLog_$prots, 0, 0, 0> ; "FirmwaerUpdateLog"
_OBJC_INSTANCE_METHODS_FirmwaerUpdateLog __objc2_meth_list <18h, 0Dh>
                                        ; DATA XREF: __objc_const:FirmwaerUpdateLog_$classData↓o
                __objc2_meth <offset sel_windowDidLoad, offset aV1608_0, \ ; -[FirmwaerUpdateLog windowDidLoad] ...
                              offset __FirmwaerUpdateLog_windowDidLoad_>
                __objc2_meth <offset sel_SButtonClick_, offset aV240816_0, \ ; -[FirmwaerUpdateLog SButtonClick:] ...
                              offset __FirmwaerUpdateLog_SButtonClick__>
                __objc2_meth <offset sel_setTitleString_, offset aV240816_0, \ ; -[FirmwaerUpdateLog setTitleString:] ...
                              offset __FirmwaerUpdateLog_setTitleString__>
                __objc2_meth <offset sel_setContentString_, offset aV240816_0, \ ; -[FirmwaerUpdateLog setContentString:] ...
                              offset __FirmwaerUpdateLog_setContentString__>
                __objc2_meth <offset sel_titleString, offset a1608, \ ; -[FirmwaerUpdateLog titleString] ...
                              offset __FirmwaerUpdateLog_titleString_>
                __objc2_meth <offset sel_contentString, offset a1608, \ ; -[FirmwaerUpdateLog contentString] ...
                              offset __FirmwaerUpdateLog_contentString_>
                __objc2_meth <offset sel_title, offset a1608, \ ; -[FirmwaerUpdateLog title] ...
                              offset __FirmwaerUpdateLog_title_>
                __objc2_meth <offset sel_setTitle_, offset aV240816_0, \ ; -[FirmwaerUpdateLog setTitle:] ...
                              offset __FirmwaerUpdateLog_setTitle__>
                __objc2_meth <offset sel_content, offset a1608, \ ; -[FirmwaerUpdateLog content] ...
                              offset __FirmwaerUpdateLog_content_>
                __objc2_meth <offset sel_setContent_, offset aV240816_0, \ ; -[FirmwaerUpdateLog setContent:] ...
                              offset __FirmwaerUpdateLog_setContent__>
                __objc2_meth <offset sel_okButton, offset a1608, \ ; -[FirmwaerUpdateLog okButton] ...
                              offset __FirmwaerUpdateLog_okButton_>
                __objc2_meth <offset sel_setOkButton_, offset aV240816_0, \ ; -[FirmwaerUpdateLog setOkButton:] ...
                              offset __FirmwaerUpdateLog_setOkButton__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[FirmwaerUpdateLog .cxx_destruct] ...
                              offset __FirmwaerUpdateLog__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_FirmwaerUpdateLog __objc2_ivar_list <20h, 5>
                                        ; DATA XREF: __objc_const:FirmwaerUpdateLog_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwaerUpdateLog__titleString, \ ; NSString *_titleString;
                              offset aTitlestring, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwaerUpdateLog__contentString, \ ; NSString *_contentString;
                              offset aContentstring, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwaerUpdateLog__title, \ ; NSTextField *_title;
                              offset aTitle, offset aNstextfield, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwaerUpdateLog__content, \ ; NSTextField *_content;
                              offset aContent_0, offset aNstextfield, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwaerUpdateLog__okButton, \ ; SButton *_okButton;
                              offset aOkbutton, offset aSbutton_0, 3, 8>
FirmwaerUpdateLog_$properties __objc2_prop_list <10h, 5>
                                        ; DATA XREF: __objc_const:FirmwaerUpdateLog_$classData↓o
                __objc2_prop <offset sel_title, offset aTNstextfieldWV_1> ; @property (__weak) NSTextField *title;
                __objc2_prop <offset sel_content, offset aTNstextfieldWV> ; @property (__weak) NSTextField *content;
                __objc2_prop <offset sel_okButton, offset aTSbuttonVOkbut> ; @property (retain) SButton *okButton;
                __objc2_prop <offset sel_titleString, offset aTNsstringNVTit> ; @property (retain, nonatomic) NSString *titleString;
                __objc2_prop <offset sel_contentString, offset aTNsstringNVCon> ; @property (retain, nonatomic) NSString *contentString;
FirmwaerUpdateLog_$classData __objc2_class_ro <194h, 8, 30h, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_FirmwaerUpdateLog↓o
                                  offset FirmwaerUpdateLog_$ivarLayout, \ ; "FirmwaerUpdateLog"
                                  offset aFirmwaerupdate_4, \
                                  offset _OBJC_INSTANCE_METHODS_FirmwaerUpdateLog, \
                                  offset FirmwaerUpdateLog_$prots, \
                                  offset _OBJC_INSTANCE_VARIABLES_FirmwaerUpdateLog, \
                                  offset FirmwaerUpdateLog_$ivarWeakLayout, \
                                  offset FirmwaerUpdateLog_$properties>
_OBJC_CLASS_METHODS_Language __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:Language_$metaData↓o
                __objc2_meth <offset sel_isCurrentChinaLanguage, offset aC1608, \ ; +[Language isCurrentChinaLanguage] ...
                              offset __Language_isCurrentChinaLanguage_>
Language_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aLanguage, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_Language↓o
                                  offset _OBJC_CLASS_METHODS_Language, 0, 0, 0, 0> ; "Language"
Language_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aLanguage, 0, 0, 0, 0, 0>
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_Language↓o
                                        ; "Language"
MoreView_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aMoreview_1, 0, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_MoreView↓o
                                  0, 0> ; "MoreView"
_OBJC_INSTANCE_METHODS_MoreView __objc2_meth_list <18h, 0Fh>
                                        ; DATA XREF: __objc_const:MoreView_$classData↓o
                __objc2_meth <offset sel_initWithFrame_, offset a4808CgrectCgpo, \ ; -[MoreView initWithFrame:] ...
                              offset __MoreView_initWithFrame__>
                __objc2_meth <offset sel_layout, offset aV1608_0, \ ; -[MoreView layout] ...
                              offset __MoreView_layout_>
                __objc2_meth <offset sel_addProduct, offset aV1608_0, \ ; -[MoreView addProduct] ...
                              offset __MoreView_addProduct_>
                __objc2_meth <offset sel_moreClick_, offset aV240816_0, \ ; -[MoreView moreClick:] ...
                              offset __MoreView_moreClick__>
                __objc2_meth <offset sel_delegate, offset a1608, \ ; -[MoreView delegate] ...
                              offset __MoreView_delegate_>
                __objc2_meth <offset sel_setDelegate_, offset aV240816_0, \ ; -[MoreView setDelegate:] ...
                              offset __MoreView_setDelegate__>
                __objc2_meth <offset sel_title, offset a1608, \ ; -[MoreView title] ...
                              offset __MoreView_title_>
                __objc2_meth <offset sel_setTitle_, offset aV240816_0, \ ; -[MoreView setTitle:] ...
                              offset __MoreView_setTitle__>
                __objc2_meth <offset sel_line, offset a1608, offset __MoreView_line_> ; -[MoreView line] ...
                __objc2_meth <offset sel_setLine_, offset aV240816_0, \ ; -[MoreView setLine:] ...
                              offset __MoreView_setLine__>
                __objc2_meth <offset sel_moreScrollView, offset a1608, \ ; -[MoreView moreScrollView] ...
                              offset __MoreView_moreScrollView_>
                __objc2_meth <offset sel_setMoreScrollView_, offset aV240816_0, \ ; -[MoreView setMoreScrollView:] ...
                              offset __MoreView_setMoreScrollView__>
                __objc2_meth <offset sel_moreS8BitdoDatails, offset a1608, \ ; -[MoreView moreS8BitdoDatails] ...
                              offset __MoreView_moreS8BitdoDatails_>
                __objc2_meth <offset sel_setMoreS8BitdoDatails_, offset aV240816_0, \ ; -[MoreView setMoreS8BitdoDatails:] ...
                              offset __MoreView_setMoreS8BitdoDatails__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[MoreView .cxx_destruct] ...
                              offset __MoreView__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_MoreView __objc2_ivar_list <20h, 7>
                                        ; DATA XREF: __objc_const:MoreView_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_MoreView_m_widht, offset aMWidht, \ ; double m_widht;
                              offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MoreView_m_height, offset aMHeight, \ ; double m_height;
                              offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MoreView__delegate, \ ; id _delegate;
                              offset aDelegate, offset asc_10003796D, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MoreView__title, offset aTitle, \ ; SLabel *_title;
                              offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MoreView__line, offset aLine, \ ; SView *_line;
                              offset aSview_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MoreView__moreScrollView, \ ; NSScrollView *_moreScrollView;
                              offset aMorescrollview, offset aNsscrollview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MoreView__moreS8BitdoDatails, \ ; NSMutableArray *_moreS8BitdoDatails;
                              offset aMores8bitdodat, offset aNsmutablearray, 3, 8>
MoreView_$properties __objc2_prop_list <10h, 5>
                                        ; DATA XREF: __objc_const:MoreView_$classData↓o
                __objc2_prop <offset sel_title, offset aTSlabelNVTitle> ; @property (retain, nonatomic) SLabel *title;
                __objc2_prop <offset sel_line, offset aTSviewNVLine> ; @property (retain, nonatomic) SView *line;
                __objc2_prop <offset sel_moreScrollView, offset aTNsscrollviewN> ; @property (retain, nonatomic) NSScrollView *moreScrollView;
                __objc2_prop <offset sel_moreS8BitdoDatails, offset aTNsmutablearra_2> ; @property (retain, nonatomic) NSMutableArray *moreS8BitdoDatails;
                __objc2_prop <offset sel_delegate, offset aTWNVDelegate> ; @property (nonatomic, __weak) id delegate;
MoreView_$classData __objc2_class_ro <194h, 10h, 48h, 0, offset MoreView_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MoreView↓o
                                  offset aMoreview_1, \ ; "MoreView"
                                  offset _OBJC_INSTANCE_METHODS_MoreView, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_MoreView, \
                                  offset MoreView_$ivarWeakLayout, \
                                  offset MoreView_$properties>
_OBJC_CLASS_METHODS_MJPropertyType __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:MJPropertyType_$metaData↓o
                __objc2_meth <offset sel_initialize, offset aV1608_0, \ ; +[MJPropertyType initialize] ...
                              offset __MJPropertyType_initialize_>
                __objc2_meth <offset sel_cachedTypeWithCode_, offset a240816, \ ; +[MJPropertyType cachedTypeWithCode:] ...
                              offset __MJPropertyType_cachedTypeWithCode__>
MJPropertyType_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aMjpropertytype, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_MJPropertyType↓o
                                  offset _OBJC_CLASS_METHODS_MJPropertyType, 0, 0, 0, \ ; "MJPropertyType"
                                  0>
_OBJC_INSTANCE_METHODS_MJPropertyType __objc2_meth_list <18h, 9>
                                        ; DATA XREF: __objc_const:MJPropertyType_$classData↓o
                __objc2_meth <offset sel_setCode_, offset aV240816_0, \ ; -[MJPropertyType setCode:] ...
                              offset __MJPropertyType_setCode__>
                __objc2_meth <offset sel_code, offset a1608, \ ; -[MJPropertyType code] ...
                              offset __MJPropertyType_code_>
                __objc2_meth <offset sel_isIdType, offset aC1608, \ ; -[MJPropertyType isIdType] ...
                              offset __MJPropertyType_isIdType_>
                __objc2_meth <offset sel_isNumberType, offset aC1608, \ ; -[MJPropertyType isNumberType] ...
                              offset __MJPropertyType_isNumberType_>
                __objc2_meth <offset sel_isBoolType, offset aC1608, \ ; -[MJPropertyType isBoolType] ...
                              offset __MJPropertyType_isBoolType_>
                __objc2_meth <offset sel_typeClass, offset a1608_0, \ ; -[MJPropertyType typeClass] ...
                              offset __MJPropertyType_typeClass_>
                __objc2_meth <offset sel_isFromFoundation, offset aC1608, \ ; -[MJPropertyType isFromFoundation] ...
                              offset __MJPropertyType_isFromFoundation_>
                __objc2_meth <offset sel_isKVCDisabled, offset aC1608, \ ; -[MJPropertyType isKVCDisabled] ...
                              offset __MJPropertyType_isKVCDisabled_>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[MJPropertyType .cxx_destruct] ...
                              offset __MJPropertyType__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_MJPropertyType __objc2_ivar_list <20h, 7>
                                        ; DATA XREF: __objc_const:MJPropertyType_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyType__idType, \ ; char _idType;
                              offset aIdtype, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyType__numberType, \ ; char _numberType;
                              offset aNumbertype, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyType__boolType, \ ; char _boolType;
                              offset aBooltype, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyType__fromFoundation, \ ; char _fromFoundation;
                              offset aFromfoundation, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyType__KVCDisabled, \ ; char _KVCDisabled;
                              offset aKvcdisabled_0, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyType__code, offset aCode, \ ; NSString *_code;
                              offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MJPropertyType__typeClass, \ ; Class _typeClass;
                              offset aTypeclass, offset asc_100037EC7, 3, 8>
MJPropertyType_$properties __objc2_prop_list <10h, 7>
                                        ; DATA XREF: __objc_const:MJPropertyType_$classData↓o
                __objc2_prop <offset sel_code, offset aTNsstringCNVCo> ; @property (copy, nonatomic) NSString *code;
                __objc2_prop <offset aIdtype_0, offset aTcRNGisidtypeV> ; @property (getter=isIdType, readonly, nonatomic) char idType;
                __objc2_prop <offset aNumbertype_0, offset aTcRNGisnumbert> ; @property (getter=isNumberType, readonly, nonatomic) char numberType;
                __objc2_prop <offset aBooltype_0, offset aTcRNGisbooltyp> ; @property (getter=isBoolType, readonly, nonatomic) char boolType;
                __objc2_prop <offset sel_typeClass, offset aTRNVTypeclass> ; @property (readonly, nonatomic) Class typeClass;
                __objc2_prop <offset aFromfoundation_0, offset aTcRNGisfromfou> ; @property (getter=isFromFoundation, readonly, nonatomic) char fromFoundation;
                __objc2_prop <offset aKvcdisabled, offset aTcRNGiskvcdisa> ; @property (getter=isKVCDisabled, readonly, nonatomic) char KVCDisabled;
MJPropertyType_$classData __objc2_class_ro <194h, 8, 20h, 0, offset FirmwareMessage_$ivarLayout,\
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJPropertyType↓o
                                  offset aMjpropertytype, \ ; "MJPropertyType"
                                  offset _OBJC_INSTANCE_METHODS_MJPropertyType, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_MJPropertyType, 0, \
                                  offset MJPropertyType_$properties>
HomeView_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aHomeview_2, 0, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_HomeView↓o
                                  0, 0> ; "HomeView"
_OBJC_INSTANCE_METHODS_HomeView __objc2_meth_list <18h, 22h>
                                        ; DATA XREF: __objc_const:HomeView_$classData↓o
                __objc2_meth <offset sel_setState_, offset aV2408q16_0, \ ; -[HomeView setState:] ...
                              offset __HomeView_setState__>
                __objc2_meth <offset sel_moreDevice, offset a1608, \ ; -[HomeView moreDevice] ...
                              offset __HomeView_moreDevice_>
                __objc2_meth <offset sel_awakeFromNib, offset aV1608_0, \ ; -[HomeView awakeFromNib] ...
                              offset __HomeView_awakeFromNib_>
                __objc2_meth <offset sel_usbAniamtion, offset aV1608_0, \ ; -[HomeView usbAniamtion] ...
                              offset __HomeView_usbAniamtion_>
                __objc2_meth <offset sel_findStateUI_, offset aV2008c16, \ ; -[HomeView findStateUI:] ...
                              offset __HomeView_findStateUI__>
                __objc2_meth <offset sel_addS8BitdoDevice_, offset aV240816_0, \ ; -[HomeView addS8BitdoDevice:] ...
                              offset __HomeView_addS8BitdoDevice__>
                __objc2_meth <offset sel_removeS8BitdoDevice_, offset aV240816_0, \ ; -[HomeView removeS8BitdoDevice:] ...
                              offset __HomeView_removeS8BitdoDevice__>
                __objc2_meth <offset sel_refresh, offset aV1608_0, \ ; -[HomeView refresh] ...
                              offset __HomeView_refresh_>
                __objc2_meth <offset sel_addDevicesTextFileld, offset aV1608_0, \ ; -[HomeView addDevicesTextFileld] ...
                              offset __HomeView_addDevicesTextFileld_>
                __objc2_meth <offset sel_loadNewGameVersion_version_beta_, \ ; -[HomeView loadNewGameVersion:version:beta:] ...
                              offset aV2808i16f20i24, \
                              offset __HomeView_loadNewGameVersion_version_beta__>
                __objc2_meth <offset sel_firmwaerUpdateClick_, offset aV240816_0, \ ; -[HomeView firmwaerUpdateClick:] ...
                              offset __HomeView_firmwaerUpdateClick__>
                __objc2_meth <offset sel_helpButtonClick_, offset aV240816_0, \ ; -[HomeView helpButtonClick:] ...
                              offset __HomeView_helpButtonClick__>
                __objc2_meth <offset sel_delegate, offset a1608, \ ; -[HomeView delegate] ...
                              offset __HomeView_delegate_>
                __objc2_meth <offset sel_setDelegate_, offset aV240816_0, \ ; -[HomeView setDelegate:] ...
                              offset __HomeView_setDelegate__>
                __objc2_meth <offset sel_firmwaerUpdaterButton, offset a1608, \ ; -[HomeView firmwaerUpdaterButton] ...
                              offset __HomeView_firmwaerUpdaterButton_>
                __objc2_meth <offset sel_setFirmwaerUpdaterButton_, offset aV240816_0,\ ; -[HomeView setFirmwaerUpdaterButton:] ...
                              offset __HomeView_setFirmwaerUpdaterButton__>
                __objc2_meth <offset sel_usb, offset a1608, offset __HomeView_usb_> ; -[HomeView usb] ...
                __objc2_meth <offset sel_setUsb_, offset aV240816_0, \ ; -[HomeView setUsb:] ...
                              offset __HomeView_setUsb__>
                __objc2_meth <offset sel_FindsView, offset a1608, \ ; -[HomeView FindsView] ...
                              offset __HomeView_FindsView_>
                __objc2_meth <offset sel_setFindsView_, offset aV240816_0, \ ; -[HomeView setFindsView:] ...
                              offset __HomeView_setFindsView__>
                __objc2_meth <offset sel_usbView, offset a1608, \ ; -[HomeView usbView] ...
                              offset __HomeView_usbView_>
                __objc2_meth <offset sel_setUsbView_, offset aV240816_0, \ ; -[HomeView setUsbView:] ...
                              offset __HomeView_setUsbView__>
                __objc2_meth <offset sel_arrow01, offset a1608, \ ; -[HomeView arrow01] ...
                              offset __HomeView_arrow01_>
                __objc2_meth <offset sel_setArrow01_, offset aV240816_0, \ ; -[HomeView setArrow01:] ...
                              offset __HomeView_setArrow01__>
                __objc2_meth <offset sel_arrow02, offset a1608, \ ; -[HomeView arrow02] ...
                              offset __HomeView_arrow02_>
                __objc2_meth <offset sel_setArrow02_, offset aV240816_0, \ ; -[HomeView setArrow02:] ...
                              offset __HomeView_setArrow02__>
                __objc2_meth <offset sel_arrow03, offset a1608, \ ; -[HomeView arrow03] ...
                              offset __HomeView_arrow03_>
                __objc2_meth <offset sel_setArrow03_, offset aV240816_0, \ ; -[HomeView setArrow03:] ...
                              offset __HomeView_setArrow03__>
                __objc2_meth <offset sel_helpButton, offset a1608, \ ; -[HomeView helpButton] ...
                              offset __HomeView_helpButton_>
                __objc2_meth <offset sel_setHelpButton_, offset aV240816_0, \ ; -[HomeView setHelpButton:] ...
                              offset __HomeView_setHelpButton__>
                __objc2_meth <offset sel_state, offset aQ1608, \ ; -[HomeView state] ...
                              offset __HomeView_state_>
                __objc2_meth <offset sel_devices, offset a1608, \ ; -[HomeView devices] ...
                              offset __HomeView_devices_>
                __objc2_meth <offset sel_setDevices_, offset aV240816_0, \ ; -[HomeView setDevices:] ...
                              offset __HomeView_setDevices__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[HomeView .cxx_destruct] ...
                              offset __HomeView__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_HomeView __objc2_ivar_list <20h, 0Bh>
                                        ; DATA XREF: __objc_const:HomeView_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__delegate, \ ; HomeViewDelegate *_delegate;
                              offset aDelegate, offset aHomeviewdelega_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__firmwaerUpdaterButton, \ ; NSButton *_firmwaerUpdaterButton;
                              offset aFirmwaerupdate_0, offset aNsbutton, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__usb, offset aUsb_0, \ ; NSTextField *_usb;
                              offset aNstextfield, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__FindsView, \ ; NSView *_FindsView;
                              offset aFindsview_0, offset aNsview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__usbView, \ ; NSView *_usbView;
                              offset aUsbview_0, offset aNsview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__arrow01, \ ; NSImageView *_arrow01;
                              offset aArrow01_0, offset aNsimageview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__arrow02, \ ; NSImageView *_arrow02;
                              offset aArrow02_0, offset aNsimageview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__arrow03, \ ; NSImageView *_arrow03;
                              offset aArrow03_0, offset aNsimageview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__helpButton, \ ; NSButton *_helpButton;
                              offset aHelpbutton, offset aNsbutton, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__state, offset aState, \ ; unsigned __int64 _state;
                              offset aQ_3, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_HomeView__devices, \ ; NSMutableArray *_devices;
                              offset aDevices_0, offset aNsmutablearray, 3, 8>
HomeView_$properties __objc2_prop_list <10h, 0Ch>
                                        ; DATA XREF: __objc_const:HomeView_$classData↓o
                __objc2_prop <offset sel_firmwaerUpdaterButton, \ ; @property (__weak) NSButton *firmwaerUpdaterButton;
                              offset aTNsbuttonWVFir>
                __objc2_prop <offset sel_usb, offset aTNstextfieldWV_0> ; @property (__weak) NSTextField *usb;
                __objc2_prop <offset sel_FindsView, offset aTNsviewWVFinds> ; @property (__weak) NSView *FindsView;
                __objc2_prop <offset sel_usbView, offset aTNsviewWVUsbvi> ; @property (__weak) NSView *usbView;
                __objc2_prop <offset sel_arrow01, offset aTNsimageviewWV_0> ; @property (__weak) NSImageView *arrow01;
                __objc2_prop <offset sel_arrow02, offset aTNsimageviewWV> ; @property (__weak) NSImageView *arrow02;
                __objc2_prop <offset sel_arrow03, offset aTNsimageviewWV_1> ; @property (__weak) NSImageView *arrow03;
                __objc2_prop <offset sel_helpButton, offset aTNsbuttonWVHel> ; @property (__weak) NSButton *helpButton;
                __objc2_prop <offset sel_state, offset aTqNVState> ; @property (nonatomic) unsigned __int64 state;
                __objc2_prop <offset sel_devices, offset aTNsmutablearra> ; @property (retain) NSMutableArray *devices;
                __objc2_prop <offset sel_delegate, offset aTHomeviewdeleg> ; @property (__weak) HomeViewDelegate *delegate;
                __objc2_prop <offset sel_moreDevice, offset aTS8bitdodevice_0> ; @property (readonly) S8BitdoDevice *moreDevice;
HomeView_$classData __objc2_class_ro <194h, 8, 60h, 0, offset HomeView_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_HomeView↓o
                                  offset aHomeview_2, \ ; "HomeView"
                                  offset _OBJC_INSTANCE_METHODS_HomeView, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_HomeView, \
                                  offset HomeView_$ivarWeakLayout, \
                                  offset HomeView_$properties>
                db  18h
                db    0
                db    0
                db    0
                db  13h
                db    0
                db    0
                db    0
                dq offset sel_isEqual_  ; "isEqual:"
                dq offset aC240816      ; "c24@0:8@16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_class     ; "class"
                dq offset a1608_0       ; "#16@0:8"
                align 20h
                dq offset sel_self      ; "self"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_ ; "performSelector:"
                dq offset a240816_0     ; "@24@0:8:16"
                align 10h
                dq offset sel_performSelector_withObject_ ; "performSelector:withObject:"
                dq offset a32081624     ; "@32@0:8:16@24"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_withObject_withObject_ ; "performSelector:withObject:withObject:"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                align 20h
                dq offset sel_isProxy   ; "isProxy"
                dq offset aC1608        ; "c16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_isKindOfClass_ ; "isKindOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                align 10h
                dq offset sel_isMemberOfClass_ ; "isMemberOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_conformsToProtocol_ ; "conformsToProtocol:"
                dq offset aC240816      ; "c24@0:8@16"
                align 20h
                dq offset sel_respondsToSelector_ ; "respondsToSelector:"
                dq offset aC240816_1    ; "c24@0:8:16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_retain    ; "retain"
                dq offset a1608         ; "@16@0:8"
                align 10h
                dq offset sel_release   ; "release"
                dq offset aVv1608       ; "Vv16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_autorelease ; "autorelease"
                dq offset a1608         ; "@16@0:8"
                align 20h
                dq offset sel_retainCount ; "retainCount"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_zone      ; "zone"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                align 10h
                dq offset sel_hash      ; "hash"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_superclass ; "superclass"
                dq offset a1608_0       ; "#16@0:8"
                align 20h
                dq offset sel_description ; "description"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dq offset sel_debugDescription ; "debugDescription"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                dq offset sel_hash      ; "hash"
                dq offset aTqR          ; "TQ,R"
                dq offset sel_superclass ; "superclass"
                dq offset aTR           ; "T#,R"
                dq offset sel_description ; "description"
                dq offset aTNsstringRC  ; "T@\"NSString\",R,C"
                dq offset sel_debugDescription ; "debugDescription"
                dq offset aTNsstringRC_0 ; "T@\"NSString\",?,R,C"
                dq offset aC240816      ; "c24@0:8@16"
                dq offset a1608_0       ; "#16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset a240816_0     ; "@24@0:8:16"
                dq offset a32081624     ; "@32@0:8:16@24"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                dq offset aC1608        ; "c16@0:8"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC2408Protocol1 ; "c24@0:8@\"Protocol\"16"
                dq offset aC240816_1    ; "c24@0:8:16"
                dq offset a1608         ; "@16@0:8"
                dq offset aVv1608       ; "Vv16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset a1608_0       ; "#16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
NSApplicationDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSApplicationDelegate↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_INSTANCE_METHODS_NSApplicationDelegate __objc2_meth_list <18h, 2Dh>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_NSApplicationDelegate↓o
                __objc2_meth <offset sel_applicationShouldTerminate_, offset aQ240816,\ ; "applicationShouldTerminate:" ...
                              0>
                __objc2_meth <offset sel_application_openURLs_, offset aV32081624, 0> ; "application:openURLs:" ...
                __objc2_meth <offset sel_application_openFile_, offset aC32081624_0, \ ; "application:openFile:" ...
                              0>
                __objc2_meth <offset sel_application_openFiles_, offset aV32081624, 0> ; "application:openFiles:" ...
                __objc2_meth <offset sel_application_openTempFile_, \ ; "application:openTempFile:" ...
                              offset aC32081624_0, 0>
                __objc2_meth <offset sel_applicationShouldOpenUntitledFile_, \ ; "applicationShouldOpenUntitledFile:" ...
                              offset aC240816, 0>
                __objc2_meth <offset sel_applicationOpenUntitledFile_, \ ; "applicationOpenUntitledFile:" ...
                              offset aC240816, 0>
                __objc2_meth <offset sel_application_openFileWithoutUI_, \ ; "application:openFileWithoutUI:" ...
                              offset aC32081624_0, 0>
                __objc2_meth <offset sel_application_printFile_, offset aC32081624_0, \ ; "application:printFile:" ...
                              0>
                __objc2_meth <offset sel_application_printFiles_withSettings_showPrintPanels_,\ ; "application:printFiles:withSettings:sho"... ...
                              offset aQ4408162432c40, 0>
                __objc2_meth <offset sel_applicationShouldTerminateAfterLastWindowClosed_,\ ; "applicationShouldTerminateAfterLastWind"... ...
                              offset aC240816, 0>
                __objc2_meth <offset sel_applicationShouldHandleReopen_hasVisibleWindows_,\ ; "applicationShouldHandleReopen:hasVisibl"... ...
                              offset aC280816c24, 0>
                __objc2_meth <offset sel_applicationDockMenu_, offset a240816, 0> ; "applicationDockMenu:" ...
                __objc2_meth <offset sel_application_willPresentError_, \ ; "application:willPresentError:" ...
                              offset a32081624_0, 0>
                __objc2_meth <offset sel_application_didRegisterForRemoteNotificationsWithDeviceToken_,\ ; "application:didRegisterForRemoteNotific"... ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_application_didFailToRegisterForRemoteNotificationsWithError_,\ ; "application:didFailToRegisterForRemoteN"... ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_application_didReceiveRemoteNotification_, \ ; "application:didReceiveRemoteNotificatio"... ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_applicationSupportsSecureRestorableState_, \ ; "applicationSupportsSecureRestorableStat"... ...
                              offset aC240816, 0>
                __objc2_meth <offset sel_application_handlerForIntent_, \ ; "application:handlerForIntent:" ...
                              offset a32081624_0, 0>
                __objc2_meth <offset sel_application_willEncodeRestorableState_, \ ; "application:willEncodeRestorableState:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_application_didDecodeRestorableState_, \ ; "application:didDecodeRestorableState:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_application_willContinueUserActivityWithType_,\ ; "application:willContinueUserActivityWit"... ...
                              offset aC32081624_0, 0>
                __objc2_meth <offset sel_application_continueUserActivity_restorationHandler_,\ ; "application:continueUserActivity:restor"... ...
                              offset aC4008162432_0, 0>
                __objc2_meth <offset sel_application_didFailToContinueUserActivityWithType_error_,\ ; "application:didFailToContinueUserActivi"... ...
                              offset aV4008162432, 0>
                __objc2_meth <offset sel_application_didUpdateUserActivity_, \ ; "application:didUpdateUserActivity:" ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_application_userDidAcceptCloudKitShareWithMetadata_,\ ; "application:userDidAcceptCloudKitShareW"... ...
                              offset aV32081624, 0>
                __objc2_meth <offset sel_application_delegateHandlesKey_, \ ; "application:delegateHandlesKey:" ...
                              offset aC32081624_0, 0>
                __objc2_meth <offset sel_applicationShouldAutomaticallyLocalizeKeyEquivalents_,\ ; "applicationShouldAutomaticallyLocalizeK"... ...
                              offset aC240816, 0>
                __objc2_meth <offset sel_applicationWillFinishLaunching_, \ ; "applicationWillFinishLaunching:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationDidFinishLaunching_, \ ; "applicationDidFinishLaunching:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationWillHide_, offset aV240816_0, 0> ; "applicationWillHide:" ...
                __objc2_meth <offset sel_applicationDidHide_, offset aV240816_0, 0> ; "applicationDidHide:" ...
                __objc2_meth <offset sel_applicationWillUnhide_, offset aV240816_0, 0> ; "applicationWillUnhide:" ...
                __objc2_meth <offset sel_applicationDidUnhide_, offset aV240816_0, 0> ; "applicationDidUnhide:" ...
                __objc2_meth <offset sel_applicationWillBecomeActive_, \ ; "applicationWillBecomeActive:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationDidBecomeActive_, \ ; "applicationDidBecomeActive:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationWillResignActive_, \ ; "applicationWillResignActive:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationDidResignActive_, \ ; "applicationDidResignActive:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationWillUpdate_, offset aV240816_0, 0> ; "applicationWillUpdate:" ...
                __objc2_meth <offset sel_applicationDidUpdate_, offset aV240816_0, 0> ; "applicationDidUpdate:" ...
                __objc2_meth <offset sel_applicationWillTerminate_, offset aV240816_0,\ ; "applicationWillTerminate:" ...
                              0>
                __objc2_meth <offset sel_applicationDidChangeScreenParameters_, \ ; "applicationDidChangeScreenParameters:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationDidChangeOcclusionState_, \ ; "applicationDidChangeOcclusionState:" ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationProtectedDataWillBecomeUnavailable_,\ ; "applicationProtectedDataWillBecomeUnava"... ...
                              offset aV240816_0, 0>
                __objc2_meth <offset sel_applicationProtectedDataDidBecomeAvailable_, \ ; "applicationProtectedDataDidBecomeAvaila"... ...
                              offset aV240816_0, 0>
off_100044958   dq offset aQ2408Nsapplica
                                        ; DATA XREF: __data:000000010004A210↓o
                                        ; "Q24@0:8@\"NSApplication\"16"
                dq offset aV3208Nsapplica ; "v32@0:8@\"NSApplication\"16@\"NSArray\""...
                dq offset aC3208Nsapplica ; "c32@0:8@\"NSApplication\"16@\"NSString"...
                dq offset aV3208Nsapplica ; "v32@0:8@\"NSApplication\"16@\"NSArray\""...
                dq offset aC3208Nsapplica ; "c32@0:8@\"NSApplication\"16@\"NSString"...
                dq offset aC2408Nsapplica ; "c24@0:8@\"NSApplication\"16"
                dq offset aC2408Nsapplica ; "c24@0:8@\"NSApplication\"16"
                dq offset aC320816Nsstrin ; "c32@0:8@16@\"NSString\"24"
                dq offset aC3208Nsapplica ; "c32@0:8@\"NSApplication\"16@\"NSString"...
                dq offset aQ4408Nsapplica ; "Q44@0:8@\"NSApplication\"16@\"NSArray\""...
                dq offset aC2408Nsapplica ; "c24@0:8@\"NSApplication\"16"
                dq offset aC2808Nsapplica ; "c28@0:8@\"NSApplication\"16c24"
                dq offset aNsmenu2408Nsap ; "@\"NSMenu\"24@0:8@\"NSApplication\"16"
                dq offset aNserror3208Nsa ; "@\"NSError\"32@0:8@\"NSApplication\"16@"...
                dq offset aV3208Nsapplica_0 ; "v32@0:8@\"NSApplication\"16@\"NSData\"2"...
                dq offset aV3208Nsapplica_1 ; "v32@0:8@\"NSApplication\"16@\"NSError\""...
                dq offset aV3208Nsapplica_2 ; "v32@0:8@\"NSApplication\"16@\"NSDiction"...
                dq offset aC2408Nsapplica ; "c24@0:8@\"NSApplication\"16"
                dq offset a3208Nsapplicat ; "@32@0:8@\"NSApplication\"16@\"INIntent"...
                dq offset aV3208Nsapplica_3 ; "v32@0:8@\"NSApplication\"16@\"NSCoder\""...
                dq offset aV3208Nsapplica_3 ; "v32@0:8@\"NSApplication\"16@\"NSCoder\""...
                dq offset aC3208Nsapplica ; "c32@0:8@\"NSApplication\"16@\"NSString"...
                dq offset aC4008Nsapplica ; "c40@0:8@\"NSApplication\"16@\"NSUserAct"...
                dq offset aV4008Nsapplica ; "v40@0:8@\"NSApplication\"16@\"NSString"...
                dq offset aV3208Nsapplica_4 ; "v32@0:8@\"NSApplication\"16@\"NSUserAct"...
                dq offset aV3208Nsapplica_5 ; "v32@0:8@\"NSApplication\"16@\"CKShareMe"...
                dq offset aC3208Nsapplica ; "c32@0:8@\"NSApplication\"16@\"NSString"...
                dq offset aC2408Nsapplica ; "c24@0:8@\"NSApplication\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
                dq offset aV2408Nsnotific ; "v24@0:8@\"NSNotification\"16"
AppDelegate_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __objc_const:AppDelegate_$metaData↓o
                                        ; __objc_const:AppDelegate_$classData↓o
                dq offset _OBJC_PROTOCOL_$_NSApplicationDelegate
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
AppDelegate_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aAppdelegate, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_AppDelegate↓o
                                  offset AppDelegate_$prots, 0, 0, 0> ; "AppDelegate"
_OBJC_INSTANCE_METHODS_AppDelegate __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:AppDelegate_$classData↓o
                __objc2_meth <offset sel_applicationDidFinishLaunching_, \ ; -[AppDelegate applicationDidFinishLaunching:] ...
                              offset aV240816_0, \
                              offset __AppDelegate_applicationDidFinishLaunching__>
                __objc2_meth <offset sel_applicationWillTerminate_, offset aV240816_0,\ ; -[AppDelegate applicationWillTerminate:] ...
                              offset __AppDelegate_applicationWillTerminate__>
AppDelegate_$properties __objc2_prop_list <10h, 4>
                                        ; DATA XREF: __objc_const:AppDelegate_$classData↓o
                __objc2_prop <offset sel_hash, offset aTqR> ; @property (readonly) unsigned __int64 hash;
                __objc2_prop <offset sel_superclass, offset aTR> ; @property (readonly) Class superclass;
                __objc2_prop <offset sel_description, offset aTNsstringRC> ; @property (readonly, copy) NSString *description;
                __objc2_prop <offset sel_debugDescription, offset aTNsstringRC_0> ; @property (readonly, copy) NSString *debugDescription;
AppDelegate_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aAppdelegate, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_AppDelegate↓o
                                  offset _OBJC_INSTANCE_METHODS_AppDelegate, \ ; "AppDelegate"
                                  offset AppDelegate_$prots, 0, 0, \
                                  offset AppDelegate_$properties>
_OBJC_CLASS_METHODS_SMainMenu __objc2_meth_list <18h, 8>
                                        ; DATA XREF: __objc_const:SMainMenu_$metaData↓o
                __objc2_meth <offset sel_getCheckUpdateMenuItem, offset a1608, \ ; +[SMainMenu getCheckUpdateMenuItem] ...
                              offset __SMainMenu_getCheckUpdateMenuItem_>
                __objc2_meth <offset sel_getBetaMenuItem, offset a1608, \ ; +[SMainMenu getBetaMenuItem] ...
                              offset __SMainMenu_getBetaMenuItem_>
                __objc2_meth <offset sel_getMoreMenuItem, offset a1608, \ ; +[SMainMenu getMoreMenuItem] ...
                              offset __SMainMenu_getMoreMenuItem_>
                __objc2_meth <offset sel_getMainItem, offset a1608, \ ; +[SMainMenu getMainItem] ...
                              offset __SMainMenu_getMainItem_>
                __objc2_meth <offset sel_getMoreMenuItemSelf, offset a1608, \ ; +[SMainMenu getMoreMenuItemSelf] ...
                              offset __SMainMenu_getMoreMenuItemSelf_>
                __objc2_meth <offset sel_getMoreMenuItemAction, offset a1608_1, \ ; +[SMainMenu getMoreMenuItemAction] ...
                              offset __SMainMenu_getMoreMenuItemAction_>
                __objc2_meth <offset sel_setMoreMenuItemSelf_, offset aV240816_0, \ ; +[SMainMenu setMoreMenuItemSelf:] ...
                              offset __SMainMenu_setMoreMenuItemSelf__>
                __objc2_meth <offset sel_setMoreMenuItemAction_, offset aV240816_1, \ ; +[SMainMenu setMoreMenuItemAction:] ...
                              offset __SMainMenu_setMoreMenuItemAction__>
SMainMenu_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aSmainmenu, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SMainMenu↓o
                                  offset _OBJC_CLASS_METHODS_SMainMenu, 0, 0, 0, 0> ; "SMainMenu"
SMainMenu_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aSmainmenu, 0, 0, 0, 0, 0>
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SMainMenu↓o
                                        ; "SMainMenu"
_OBJC_CLASS_METHODS_MJProperty __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:MJProperty_$metaData↓o
                __objc2_meth <offset sel_cachedPropertyWithProperty_, \ ; +[MJProperty cachedPropertyWithProperty:] ...
                              offset a2408ObjcProper, \
                              offset __MJProperty_cachedPropertyWithProperty__>
MJProperty_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aMjproperty, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_MJProperty↓o
                                  offset _OBJC_CLASS_METHODS_MJProperty, 0, 0, 0, 0> ; "MJProperty"
_OBJC_INSTANCE_METHODS_MJProperty __objc2_meth_list <18h, 14h>
                                        ; DATA XREF: __objc_const:MJProperty_$classData↓o
                __objc2_meth <offset sel_init, offset a1608, \ ; -[MJProperty init] ...
                              offset __MJProperty_init_>
                __objc2_meth <offset sel_setProperty_, offset aV2408ObjcPrope, \ ; -[MJProperty setProperty:] ...
                              offset __MJProperty_setProperty__>
                __objc2_meth <offset sel_valueForObject_, offset a240816, \ ; -[MJProperty valueForObject:] ...
                              offset __MJProperty_valueForObject__>
                __objc2_meth <offset sel_setValue_forObject_, offset aV32081624, \ ; -[MJProperty setValue:forObject:] ...
                              offset __MJProperty_setValue_forObject__>
                __objc2_meth <offset sel_propertyKeysWithStringKey_, offset a240816, \ ; -[MJProperty propertyKeysWithStringKey:] ...
                              offset __MJProperty_propertyKeysWithStringKey__>
                __objc2_meth <offset sel_setOriginKey_forClass_, offset aV32081624_0, \ ; -[MJProperty setOriginKey:forClass:] ...
                              offset __MJProperty_setOriginKey_forClass__>
                __objc2_meth <offset sel_setPorpertyKeys_forClass_, \ ; -[MJProperty setPorpertyKeys:forClass:] ...
                              offset aV32081624_0, \
                              offset __MJProperty_setPorpertyKeys_forClass__>
                __objc2_meth <offset sel_propertyKeysForClass_, offset a240816_2, \ ; -[MJProperty propertyKeysForClass:] ...
                              offset __MJProperty_propertyKeysForClass__>
                __objc2_meth <offset sel_setObjectClassInArray_forClass_, \ ; -[MJProperty setObjectClassInArray:forClass:] ...
                              offset aV32081624_1, \
                              offset __MJProperty_setObjectClassInArray_forClass__>
                __objc2_meth <offset sel_objectClassInArrayForClass_, \ ; -[MJProperty objectClassInArrayForClass:] ...
                              offset a240816_3, \
                              offset __MJProperty_objectClassInArrayForClass__>
                __objc2_meth <offset sel_property, offset aObjcProperty16, \ ; -[MJProperty property] ...
                              offset __MJProperty_property_>
                __objc2_meth <offset sel_name, offset a1608, \ ; -[MJProperty name] ...
                              offset __MJProperty_name_>
                __objc2_meth <offset sel_type, offset a1608, \ ; -[MJProperty type] ...
                              offset __MJProperty_type_>
                __objc2_meth <offset sel_srcClass, offset a1608_0, \ ; -[MJProperty srcClass] ...
                              offset __MJProperty_srcClass_>
                __objc2_meth <offset sel_setSrcClass_, offset aV240816_2, \ ; -[MJProperty setSrcClass:] ...
                              offset __MJProperty_setSrcClass__>
                __objc2_meth <offset sel_propertyKeysDict, offset a1608, \ ; -[MJProperty propertyKeysDict] ...
                              offset __MJProperty_propertyKeysDict_>
                __objc2_meth <offset sel_setPropertyKeysDict_, offset aV240816_0, \ ; -[MJProperty setPropertyKeysDict:] ...
                              offset __MJProperty_setPropertyKeysDict__>
                __objc2_meth <offset sel_objectClassInArrayDict, offset a1608, \ ; -[MJProperty objectClassInArrayDict] ...
                              offset __MJProperty_objectClassInArrayDict_>
                __objc2_meth <offset sel_setObjectClassInArrayDict_, \ ; -[MJProperty setObjectClassInArrayDict:] ...
                              offset aV240816_0, \
                              offset __MJProperty_setObjectClassInArrayDict__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[MJProperty .cxx_destruct] ...
                              offset __MJProperty__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_MJProperty __objc2_ivar_list <20h, 6>
                                        ; DATA XREF: __objc_const:MJProperty_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_MJProperty__property, \ ; objc_property *_property;
                              offset aProperty, offset aObjcProperty, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MJProperty__name, offset aName, \ ; NSString *_name;
                              offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MJProperty__type, offset aType_0, \ ; MJPropertyType *_type;
                              offset aMjpropertytype_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MJProperty__srcClass, \ ; Class _srcClass;
                              offset aSrcclass, offset asc_100037EC7, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MJProperty__propertyKeysDict, \ ; NSMutableDictionary *_propertyKeysDict;
                              offset aPropertykeysdi, offset aNsmutabledicti, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_MJProperty__objectClassInArrayDict, \ ; NSMutableDictionary *_objectClassInArrayDict;
                              offset aObjectclassina, offset aNsmutabledicti, 3, 8>
MJProperty_$properties __objc2_prop_list <10h, 6>
                                        ; DATA XREF: __objc_const:MJProperty_$classData↓o
                __objc2_prop <offset sel_propertyKeysDict, offset aTNsmutabledict> ; @property (retain, nonatomic) NSMutableDictionary *propertyKeysDict;
                __objc2_prop <offset sel_objectClassInArrayDict, \ ; @property (retain, nonatomic) NSMutableDictionary *objectClassInArrayDict;
                              offset aTNsmutabledict_0>
                __objc2_prop <offset sel_property, offset aTObjcPropertyN> ; @property (nonatomic) objc_property *property;
                __objc2_prop <offset sel_name, offset aTNsstringRNVNa> ; @property (readonly, nonatomic) NSString *name;
                __objc2_prop <offset sel_type, offset aTMjpropertytyp> ; @property (readonly, nonatomic) MJPropertyType *type;
                __objc2_prop <offset sel_srcClass, offset aTNVSrcclass> ; @property (nonatomic) Class srcClass;
MJProperty_$classData __objc2_class_ro <194h, 8, 38h, 0, offset MJProperty_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJProperty↓o
                                  offset aMjproperty, \ ; "MJProperty"
                                  offset _OBJC_INSTANCE_METHODS_MJProperty, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_MJProperty, 0, \
                                  offset MJProperty_$properties>
_OBJC_CLASS_METHODS_SHIDDinput __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:SHIDDinput_$metaData↓o
                __objc2_meth <offset sel_boot_, offset aV2408Iohiddevi, \ ; +[SHIDDinput boot:] ...
                              offset __SHIDDinput_boot__>
SHIDDinput_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aShiddinput, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDDinput↓o
                                  offset _OBJC_CLASS_METHODS_SHIDDinput, 0, 0, 0, 0> ; "SHIDDinput"
_OBJC_INSTANCE_METHODS_SHIDDinput __objc2_meth_list <18h, 6>
                                        ; DATA XREF: __objc_const:SHIDDinput_$classData↓o
                __objc2_meth <offset sel_init, offset a1608, \ ; -[SHIDDinput init] ...
                              offset __SHIDDinput_init_>
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDDinput open] ...
                              offset __SHIDDinput_open_>
                __objc2_meth <offset sel_addS8BitdoDeviceRefreshUI_, \ ; -[SHIDDinput addS8BitdoDeviceRefreshUI:] ...
                              offset aV2408Iohiddevi, \
                              offset __SHIDDinput_addS8BitdoDeviceRefreshUI__>
                __objc2_meth <offset sel_remove8BitdoDeviceRefreshUI_, \ ; -[SHIDDinput remove8BitdoDeviceRefreshUI:] ...
                              offset aV2408Iohiddevi, \
                              offset __SHIDDinput_remove8BitdoDeviceRefreshUI__>
                __objc2_meth <offset sel_getDeviceWithRef_, offset a2408Iohiddevic, \ ; -[SHIDDinput getDeviceWithRef:] ...
                              offset __SHIDDinput_getDeviceWithRef__>
                __objc2_meth <offset sel_getDeviceWithPID_, offset a2008s16, \ ; -[SHIDDinput getDeviceWithPID:] ...
                              offset __SHIDDinput_getDeviceWithPID__>
SHIDDinput_$classData __objc2_class_ro <90h, 68h, 68h, 0, 0, offset aShiddinput, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDDinput↓o
                                  offset _OBJC_INSTANCE_METHODS_SHIDDinput, 0, 0, 0, \ ; "SHIDDinput"
                                  0>
_OBJC_CATEGORY_INSTANCE_METHODS_NSObject_$_MJCoding __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJCoding↓o
                __objc2_meth <offset sel_mj_encode_, offset aV240816_0, \ ; -[NSObject mj_encode:] ...
                              offset __NSObject_mj_encode__>
                __objc2_meth <offset sel_mj_decode_, offset aV240816_0, \ ; -[NSObject mj_decode:] ...
                              offset __NSObject_mj_decode__>
                db  18h
                db    0
                db    0
                db    0
                db  13h
                db    0
                db    0
                db    0
                dq offset sel_isEqual_  ; "isEqual:"
                dq offset aC240816      ; "c24@0:8@16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_class     ; "class"
                dq offset a1608_0       ; "#16@0:8"
                align 20h
                dq offset sel_self      ; "self"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_ ; "performSelector:"
                dq offset a240816_0     ; "@24@0:8:16"
                align 10h
                dq offset sel_performSelector_withObject_ ; "performSelector:withObject:"
                dq offset a32081624     ; "@32@0:8:16@24"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_performSelector_withObject_withObject_ ; "performSelector:withObject:withObject:"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                align 20h
                dq offset sel_isProxy   ; "isProxy"
                dq offset aC1608        ; "c16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_isKindOfClass_ ; "isKindOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                align 10h
                dq offset sel_isMemberOfClass_ ; "isMemberOfClass:"
                dq offset aC240816_0    ; "c24@0:8#16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_conformsToProtocol_ ; "conformsToProtocol:"
                dq offset aC240816      ; "c24@0:8@16"
                align 20h
                dq offset sel_respondsToSelector_ ; "respondsToSelector:"
                dq offset aC240816_1    ; "c24@0:8:16"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_retain    ; "retain"
                dq offset a1608         ; "@16@0:8"
                align 10h
                dq offset sel_release   ; "release"
                dq offset aVv1608       ; "Vv16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_autorelease ; "autorelease"
                dq offset a1608         ; "@16@0:8"
                align 20h
                dq offset sel_retainCount ; "retainCount"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_zone      ; "zone"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                align 10h
                dq offset sel_hash      ; "hash"
                dq offset aQ1608        ; "Q16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset sel_superclass ; "superclass"
                dq offset a1608_0       ; "#16@0:8"
                align 20h
                dq offset sel_description ; "description"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dq offset sel_debugDescription ; "debugDescription"
                dq offset a1608         ; "@16@0:8"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                dq offset sel_hash      ; "hash"
                dq offset aTqR          ; "TQ,R"
                dq offset sel_superclass ; "superclass"
                dq offset aTR           ; "T#,R"
                dq offset sel_description ; "description"
                dq offset aTNsstringRC  ; "T@\"NSString\",R,C"
                dq offset sel_debugDescription ; "debugDescription"
                dq offset aTNsstringRC_0 ; "T@\"NSString\",?,R,C"
                dq offset aC240816      ; "c24@0:8@16"
                dq offset a1608_0       ; "#16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset a240816_0     ; "@24@0:8:16"
                dq offset a32081624     ; "@32@0:8:16@24"
                dq offset a4008162432   ; "@40@0:8:16@24@32"
                dq offset aC1608        ; "c16@0:8"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC240816_0    ; "c24@0:8#16"
                dq offset aC2408Protocol1 ; "c24@0:8@\"Protocol\"16"
                dq offset aC240816_1    ; "c24@0:8:16"
                dq offset a1608         ; "@16@0:8"
                dq offset aVv1608       ; "Vv16@0:8"
                dq offset a1608         ; "@16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset aNszone1608   ; "^{_NSZone=}16@0:8"
                dq offset aQ1608        ; "Q16@0:8"
                dq offset a1608_0       ; "#16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
                dq offset aNsstring1608 ; "@\"NSString\"16@0:8"
MJCoding_$prots __objc2_prot_list <1>   ; DATA XREF: __data:_OBJC_PROTOCOL_$_MJCoding↓o
                dq offset _OBJC_PROTOCOL_$_NSObject
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_CLASS_METHODS_MJCoding __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __data:_OBJC_PROTOCOL_$_MJCoding↓o
                __objc2_meth <offset sel_mj_allowedCodingPropertyNames, offset a1608, \ ; "mj_allowedCodingPropertyNames" ...
                              0>
                __objc2_meth <offset sel_mj_ignoredCodingPropertyNames, offset a1608, \ ; "mj_ignoredCodingPropertyNames" ...
                              0>
off_1000455B0   dq offset aNsarray1608  ; DATA XREF: __data:000000010004A270↓o
                                        ; "@\"NSArray\"16@0:8"
                dq offset aNsarray1608  ; "@\"NSArray\"16@0:8"
NSObject_$_MJCoding_$prots __objc2_prot_list <1>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJCoding↓o
                dq offset _OBJC_PROTOCOL_$_MJCoding
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
NSObject_$_MJCoding_$properties __objc2_prop_list <10h, 4>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJCoding↓o
                __objc2_prop <offset sel_hash, offset aTqR> ; @property (readonly) unsigned __int64 hash;
                __objc2_prop <offset sel_superclass, offset aTR> ; @property (readonly) Class superclass;
                __objc2_prop <offset sel_description, offset aTNsstringRC> ; @property (readonly, copy) NSString *description;
                __objc2_prop <offset sel_debugDescription, offset aTNsstringRC_0> ; @property (readonly, copy) NSString *debugDescription;
_OBJC_CATEGORY_NSObject_$_MJCoding __objc2_category <offset aMjcoding, offset _OBJC_CLASS_$_NSObject, \
                                        ; DATA XREF: __objc_catlist:000000010003D2C8↑o
                                  offset _OBJC_CATEGORY_INSTANCE_METHODS_NSObject_$_MJCoding,\ ; "MJCoding"
                                  0, offset NSObject_$_MJCoding_$prots, \
                                  offset NSObject_$_MJCoding_$properties>
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_CLASS_METHODS_SHIDBootHJZ __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:SHIDBootHJZ_$metaData↓o
                __objc2_meth <offset sel_allocWithZone_, offset a2408Nszone16, \ ; +[SHIDBootHJZ allocWithZone:] ...
                              offset __SHIDBootHJZ_allocWithZone__>
                __objc2_meth <offset sel_sharedInstance, offset a1608, \ ; +[SHIDBootHJZ sharedInstance] ...
                              offset __SHIDBootHJZ_sharedInstance_>
SHIDBootHJZ_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aShidboothjz, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDBootHJZ↓o
                                  offset _OBJC_CLASS_METHODS_SHIDBootHJZ, 0, 0, 0, 0> ; "SHIDBootHJZ"
_OBJC_INSTANCE_METHODS_SHIDBootHJZ __objc2_meth_list <18h, 18h>
                                        ; DATA XREF: __objc_const:SHIDBootHJZ_$classData↓o
                __objc2_meth <offset sel_copyWithZone_, offset a2408Nszone16, \ ; -[SHIDBootHJZ copyWithZone:] ...
                              offset __SHIDBootHJZ_copyWithZone__>
                __objc2_meth <offset sel_mutableCopyWithZone_, offset a2408Nszone16, \ ; -[SHIDBootHJZ mutableCopyWithZone:] ...
                              offset __SHIDBootHJZ_mutableCopyWithZone__>
                __objc2_meth <offset sel_blocks, offset a1608, \ ; -[SHIDBootHJZ blocks] ...
                              offset __SHIDBootHJZ_blocks_>
                __objc2_meth <offset sel_readBlock_Block_, offset aV32081624_2, \ ; -[SHIDBootHJZ readBlock:Block:] ...
                              offset __SHIDBootHJZ_readBlock_Block__>
                __objc2_meth <offset sel_addBlock_Cmd_, offset aV280816c24, \ ; -[SHIDBootHJZ addBlock:Cmd:] ...
                              offset __SHIDBootHJZ_addBlock_Cmd__>
                __objc2_meth <offset sel_writeDataCMD_block_, offset aI32081624, \ ; -[SHIDBootHJZ writeDataCMD:block:] ...
                              offset __SHIDBootHJZ_writeDataCMD_block__>
                __objc2_meth <offset sel_EraseFlashPage_, offset aV2008i16, \ ; -[SHIDBootHJZ EraseFlashPage:] ...
                              offset __SHIDBootHJZ_EraseFlashPage__>
                __objc2_meth <offset sel_send_usb_packet_cut, offset aC1608, \ ; -[SHIDBootHJZ send_usb_packet_cut] ...
                              offset __SHIDBootHJZ_send_usb_packet_cut_>
                __objc2_meth <offset sel_EraseFlash, offset aV1608_0, \ ; -[SHIDBootHJZ EraseFlash] ...
                              offset __SHIDBootHJZ_EraseFlash_>
                __objc2_meth <offset sel_startUpdate, offset aV1608_0, \ ; -[SHIDBootHJZ startUpdate] ...
                              offset __SHIDBootHJZ_startUpdate_>
                __objc2_meth <offset sel_readVersion, offset aV1608_0, \ ; -[SHIDBootHJZ readVersion] ...
                              offset __SHIDBootHJZ_readVersion_>
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDBootHJZ open] ...
                              offset __SHIDBootHJZ_open_>
                __objc2_meth <offset sel_device, offset aIohiddevice160, \ ; -[SHIDBootHJZ device] ...
                              offset __SHIDBootHJZ_device_>
                __objc2_meth <offset sel_setDevice_, offset aV2408Iohiddevi, \ ; -[SHIDBootHJZ setDevice:] ...
                              offset __SHIDBootHJZ_setDevice__>
                __objc2_meth <offset sel_cur_devId, offset aI1608_0, \ ; -[SHIDBootHJZ cur_devId] ...
                              offset __SHIDBootHJZ_cur_devId_>
                __objc2_meth <offset sel_setCur_devId_, offset aV2008i16_0, \ ; -[SHIDBootHJZ setCur_devId:] ...
                              offset __SHIDBootHJZ_setCur_devId__>
                __objc2_meth <offset sel_bootDelegate, offset a1608, \ ; -[SHIDBootHJZ bootDelegate] ...
                              offset __SHIDBootHJZ_bootDelegate_>
                __objc2_meth <offset sel_setBootDelegate_, offset aV240816_0, \ ; -[SHIDBootHJZ setBootDelegate:] ...
                              offset __SHIDBootHJZ_setBootDelegate__>
                __objc2_meth <offset sel_filePath, offset a1608, \ ; -[SHIDBootHJZ filePath] ...
                              offset __SHIDBootHJZ_filePath_>
                __objc2_meth <offset sel_setFilePath_, offset aV240816_0, \ ; -[SHIDBootHJZ setFilePath:] ...
                              offset __SHIDBootHJZ_setFilePath__>
                __objc2_meth <offset sel_pfile, offset a1608, \ ; -[SHIDBootHJZ pfile] ...
                              offset __SHIDBootHJZ_pfile_>
                __objc2_meth <offset sel_setPfile_, offset aV240816_0, \ ; -[SHIDBootHJZ setPfile:] ...
                              offset __SHIDBootHJZ_setPfile__>
                __objc2_meth <offset sel_setBlocks_, offset aV240816_0, \ ; -[SHIDBootHJZ setBlocks:] ...
                              offset __SHIDBootHJZ_setBlocks__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[SHIDBootHJZ .cxx_destruct] ...
                              offset __SHIDBootHJZ__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_SHIDBootHJZ __objc2_ivar_list <20h, 6>
                                        ; DATA XREF: __objc_const:SHIDBootHJZ_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootHJZ__cur_devId, \ ; unsigned int _cur_devId;
                              offset aCurDevid, offset aI_1, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootHJZ__device, offset aDevice,\ ; __IOHIDDevice *_device;
                              offset aIohiddevice, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootHJZ__bootDelegate, \ ; SHIDBootHJZ *_bootDelegate;
                              offset aBootdelegate, offset aShidboothjz_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootHJZ__filePath, \ ; NSString *_filePath;
                              offset aFilepath, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootHJZ__pfile, offset aPfile, \ ; NSFileHandle *_pfile;
                              offset aNsfilehandle, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDBootHJZ__blocks, offset aBlocks,\ ; NSMutableArray *_blocks;
                              offset aNsmutablearray, 3, 8>
SHIDBootHJZ_$properties __objc2_prop_list <10h, 6>
                                        ; DATA XREF: __objc_const:SHIDBootHJZ_$classData↓o
                __objc2_prop <offset sel_blocks, offset aTNsmutablearra_1> ; @property (retain, nonatomic) NSMutableArray *blocks;
                __objc2_prop <offset sel_device, offset aTIohiddeviceVD> ; @property __IOHIDDevice *device;
                __objc2_prop <offset sel_cur_devId, offset aTiNVCurDevid> ; @property (nonatomic) unsigned int cur_devId;
                __objc2_prop <offset sel_bootDelegate, offset aTShidboothjzWN> ; @property (nonatomic, __weak) SHIDBootHJZ *bootDelegate;
                __objc2_prop <offset sel_filePath, offset aTNsstringCNVFi> ; @property (copy, nonatomic) NSString *filePath;
                __objc2_prop <offset sel_pfile, offset aTNsfilehandleN> ; @property (retain, nonatomic) NSFileHandle *pfile;
SHIDBootHJZ_$classData __objc2_class_ro <194h, 68h, 94h, 0, offset SHIDBootHJZ_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDBootHJZ↓o
                                  offset aShidboothjz, \ ; "SHIDBootHJZ"
                                  offset _OBJC_INSTANCE_METHODS_SHIDBootHJZ, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_SHIDBootHJZ, \
                                  offset SHIDBootHJZ_$ivarWeakLayout, \
                                  offset SHIDBootHJZ_$properties>
_OBJC_CATEGORY_CLASS_METHODS_NSObject_$_Property __objc2_meth_list <18h, 0Bh>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_Property↓o
                __objc2_meth <offset sel_load, offset aV1608_0, \ ; +[NSObject load]_0 ...
                              offset __NSObject_load__0>
                __objc2_meth <offset sel_dictForKey_, offset a2408rV16, \ ; +[NSObject dictForKey:] ...
                              offset __NSObject_dictForKey__>
                __objc2_meth <offset sel_propertyKey_, offset a240816, \ ; +[NSObject propertyKey:] ...
                              offset __NSObject_propertyKey__>
                __objc2_meth <offset sel_propertyObjectClassInArray_, \ ; +[NSObject propertyObjectClassInArray:] ...
                              offset a240816_4, \
                              offset __NSObject_propertyObjectClassInArray__>
                __objc2_meth <offset sel_mj_enumerateProperties_, offset aV240816_3, \ ; +[NSObject mj_enumerateProperties:] ...
                              offset __NSObject_mj_enumerateProperties__>
                __objc2_meth <offset sel_properties, offset a1608, \ ; +[NSObject properties] ...
                              offset __NSObject_properties_>
                __objc2_meth <offset sel_mj_setupNewValueFromOldValue_, \ ; +[NSObject mj_setupNewValueFromOldValue:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupNewValueFromOldValue__>
                __objc2_meth <offset sel_mj_getNewValueFromObject_oldValue_property_, \ ; +[NSObject mj_getNewValueFromObject:oldValue:property:] ...
                              offset a4008162432_0, \
                              offset __NSObject_mj_getNewValueFromObject_oldValue_property__>
                __objc2_meth <offset sel_mj_setupObjectClassInArray_, \ ; +[NSObject mj_setupObjectClassInArray:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupObjectClassInArray__>
                __objc2_meth <offset sel_mj_setupReplacedKeyFromPropertyName_, \ ; +[NSObject mj_setupReplacedKeyFromPropertyName:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupReplacedKeyFromPropertyName__>
                __objc2_meth <offset sel_mj_setupReplacedKeyFromPropertyName121_, \ ; +[NSObject mj_setupReplacedKeyFromPropertyName121:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupReplacedKeyFromPropertyName121__>
_OBJC_CATEGORY_NSObject_$_Property __objc2_category <offset aProperty_1, offset _OBJC_CLASS_$_NSObject, \
                                        ; DATA XREF: __objc_catlist:000000010003D2D0↑o
                                        ; __objc_nlcatlist:000000010003D2F8↑o
                                  0, \  ; "Property"
                                  offset _OBJC_CATEGORY_CLASS_METHODS_NSObject_$_Property,\
                                  0, 0>
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJPropertyDeprecated_v_2_5_16 __objc2_meth_list <18h, 6>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJPropertyDeprecated_v_2_5_16↓o
                __objc2_meth <offset sel_enumerateProperties_, offset aV240816_3, \ ; +[NSObject enumerateProperties:] ...
                              offset __NSObject_enumerateProperties__>
                __objc2_meth <offset sel_setupNewValueFromOldValue_, \ ; +[NSObject setupNewValueFromOldValue:] ...
                              offset aV240816_3, \
                              offset __NSObject_setupNewValueFromOldValue__>
                __objc2_meth <offset sel_getNewValueFromObject_oldValue_property_, \ ; +[NSObject getNewValueFromObject:oldValue:property:] ...
                              offset a4008162432_0, \
                              offset __NSObject_getNewValueFromObject_oldValue_property__>
                __objc2_meth <offset sel_setupReplacedKeyFromPropertyName_, \ ; +[NSObject setupReplacedKeyFromPropertyName:] ...
                              offset aV240816_3, \
                              offset __NSObject_setupReplacedKeyFromPropertyName__>
                __objc2_meth <offset sel_setupReplacedKeyFromPropertyName121_, \ ; +[NSObject setupReplacedKeyFromPropertyName121:] ...
                              offset aV240816_3, \
                              offset __NSObject_setupReplacedKeyFromPropertyName121__>
                __objc2_meth <offset sel_setupObjectClassInArray_, offset aV240816_3, \ ; +[NSObject setupObjectClassInArray:] ...
                              offset __NSObject_setupObjectClassInArray__>
_OBJC_CATEGORY_NSObject_$_MJPropertyDeprecated_v_2_5_16 __objc2_category <offset aMjpropertydepr, \
                                        ; DATA XREF: __objc_catlist:000000010003D2D8↑o
                                  offset _OBJC_CLASS_$_NSObject, 0, \ ; "MJPropertyDeprecated_v_2_5_16"
                                  offset _OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJPropertyDeprecated_v_2_5_16,\
                                  0, 0>
                align 20h
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
DeviceManualView_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aDevicemanualvi, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_DeviceManualView↓o
                                  0, 0, 0> ; "DeviceManualView"
_OBJC_INSTANCE_METHODS_DeviceManualView __objc2_meth_list <18h, 17h>
                                        ; DATA XREF: __objc_const:DeviceManualView_$classData↓o
                __objc2_meth <offset sel_initWithFrame_, offset a4808CgrectCgpo, \ ; -[DeviceManualView initWithFrame:] ...
                              offset __DeviceManualView_initWithFrame__>
                __objc2_meth <offset sel_layout, offset aV1608_0, \ ; -[DeviceManualView layout] ...
                              offset __DeviceManualView_layout_>
                __objc2_meth <offset sel_setUI, offset aV1608_0, \ ; -[DeviceManualView setUI] ...
                              offset __DeviceManualView_setUI_>
                __objc2_meth <offset sel_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_,\ ; -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:] ...
                              offset aV480816243240, \
                              offset __DeviceManualView_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel__>
                __objc2_meth <offset sel_setError_, offset aV2008c16, \ ; -[DeviceManualView setError:] ...
                              offset __DeviceManualView_setError__>
                __objc2_meth <offset sel_device, offset a1608, \ ; -[DeviceManualView device] ...
                              offset __DeviceManualView_device_>
                __objc2_meth <offset sel_setDevice_, offset aV240816_0, \ ; -[DeviceManualView setDevice:] ...
                              offset __DeviceManualView_setDevice__>
                __objc2_meth <offset sel_error, offset aC1608, \ ; -[DeviceManualView error] ...
                              offset __DeviceManualView_error_>
                __objc2_meth <offset sel_mainImageView, offset a1608, \ ; -[DeviceManualView mainImageView] ...
                              offset __DeviceManualView_mainImageView_>
                __objc2_meth <offset sel_setMainImageView_, offset aV240816_0, \ ; -[DeviceManualView setMainImageView:] ...
                              offset __DeviceManualView_setMainImageView__>
                __objc2_meth <offset sel_oneHintLabel, offset a1608, \ ; -[DeviceManualView oneHintLabel] ...
                              offset __DeviceManualView_oneHintLabel_>
                __objc2_meth <offset sel_setOneHintLabel_, offset aV240816_0, \ ; -[DeviceManualView setOneHintLabel:] ...
                              offset __DeviceManualView_setOneHintLabel__>
                __objc2_meth <offset sel_twoHintLabel, offset a1608, \ ; -[DeviceManualView twoHintLabel] ...
                              offset __DeviceManualView_twoHintLabel_>
                __objc2_meth <offset sel_setTwoHintLabel_, offset aV240816_0, \ ; -[DeviceManualView setTwoHintLabel:] ...
                              offset __DeviceManualView_setTwoHintLabel__>
                __objc2_meth <offset sel_threeHintLabel, offset a1608, \ ; -[DeviceManualView threeHintLabel] ...
                              offset __DeviceManualView_threeHintLabel_>
                __objc2_meth <offset sel_setThreeHintLabel_, offset aV240816_0, \ ; -[DeviceManualView setThreeHintLabel:] ...
                              offset __DeviceManualView_setThreeHintLabel__>
                __objc2_meth <offset sel_subImageView, offset a1608, \ ; -[DeviceManualView subImageView] ...
                              offset __DeviceManualView_subImageView_>
                __objc2_meth <offset sel_setSubImageView_, offset aV240816_0, \ ; -[DeviceManualView setSubImageView:] ...
                              offset __DeviceManualView_setSubImageView__>
                __objc2_meth <offset sel_submainImageView, offset a1608, \ ; -[DeviceManualView submainImageView] ...
                              offset __DeviceManualView_submainImageView_>
                __objc2_meth <offset sel_setSubmainImageView_, offset aV240816_0, \ ; -[DeviceManualView setSubmainImageView:] ...
                              offset __DeviceManualView_setSubmainImageView__>
                __objc2_meth <offset sel_subsubImageView, offset a1608, \ ; -[DeviceManualView subsubImageView] ...
                              offset __DeviceManualView_subsubImageView_>
                __objc2_meth <offset sel_setSubsubImageView_, offset aV240816_0, \ ; -[DeviceManualView setSubsubImageView:] ...
                              offset __DeviceManualView_setSubsubImageView__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[DeviceManualView .cxx_destruct] ...
                              offset __DeviceManualView__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_DeviceManualView __objc2_ivar_list <20h, 0Bh>
                                        ; DATA XREF: __objc_const:DeviceManualView_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView_m_widht, \ ; double m_widht;
                              offset aMWidht, offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView_m_heigh, \ ; double m_heigh;
                              offset aMHeigh, offset aD_2, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__error, \ ; char _error;
                              offset aError_0, offset aC_3, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__device, \ ; S8BitdoDevice *_device;
                              offset aDevice, offset aS8bitdodevice_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__mainImageView, \ ; NSImageView *_mainImageView;
                              offset aMainimageview, offset aNsimageview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__oneHintLabel, \ ; SLabel *_oneHintLabel;
                              offset aOnehintlabel, offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__twoHintLabel, \ ; SLabel *_twoHintLabel;
                              offset aTwohintlabel, offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__threeHintLabel, \ ; SLabel *_threeHintLabel;
                              offset aThreehintlabel, offset aSlabel_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__subImageView, \ ; NSImageView *_subImageView;
                              offset aSubimageview, offset aNsimageview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__submainImageView, \ ; NSImageView *_submainImageView;
                              offset aSubmainimagevi, offset aNsimageview, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_DeviceManualView__subsubImageView, \ ; NSImageView *_subsubImageView;
                              offset aSubsubimagevie_0, offset aNsimageview, 3, 8>
DeviceManualView_$properties __objc2_prop_list <10h, 9>
                                        ; DATA XREF: __objc_const:DeviceManualView_$classData↓o
                __objc2_prop <offset sel_mainImageView, offset aTNsimageviewNV_1> ; @property (retain, nonatomic) NSImageView *mainImageView;
                __objc2_prop <offset sel_oneHintLabel, offset aTSlabelNVOnehi> ; @property (retain, nonatomic) SLabel *oneHintLabel;
                __objc2_prop <offset sel_twoHintLabel, offset aTSlabelNVTwohi> ; @property (retain, nonatomic) SLabel *twoHintLabel;
                __objc2_prop <offset sel_threeHintLabel, offset aTSlabelNVThree> ; @property (retain, nonatomic) SLabel *threeHintLabel;
                __objc2_prop <offset sel_subImageView, offset aTNsimageviewNV> ; @property (retain, nonatomic) NSImageView *subImageView;
                __objc2_prop <offset sel_submainImageView, offset aTNsimageviewNV_2> ; @property (retain, nonatomic) NSImageView *submainImageView;
                __objc2_prop <offset sel_subsubImageView, offset aTNsimageviewNV_0> ; @property (retain, nonatomic) NSImageView *subsubImageView;
                __objc2_prop <offset sel_device, offset aTS8bitdodevice> ; @property (retain, nonatomic) S8BitdoDevice *device;
                __objc2_prop <offset sel_error, offset aTcNVError> ; @property (nonatomic) char error;
DeviceManualView_$classData __objc2_class_ro <194h, 10h, 68h, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_DeviceManualView↓o
                                  offset DeviceManualView_$ivarLayout, \ ; "DeviceManualView"
                                  offset aDevicemanualvi, \
                                  offset _OBJC_INSTANCE_METHODS_DeviceManualView, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_DeviceManualView, 0,\
                                  offset DeviceManualView_$properties>
_OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJClass __objc2_meth_list <18h, 0Eh>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJClass↓o
                __objc2_meth <offset sel_load, offset aV1608_0, \ ; +[NSObject load]_1 ...
                              offset __NSObject_load__1>
                __objc2_meth <offset sel_dictForKey_, offset a2408rV16, \ ; +[NSObject dictForKey:]_0 ...
                              offset __NSObject_dictForKey___0>
                __objc2_meth <offset sel_mj_enumerateClasses_, offset aV240816_3, \ ; +[NSObject mj_enumerateClasses:] ...
                              offset __NSObject_mj_enumerateClasses__>
                __objc2_meth <offset sel_mj_enumerateAllClasses_, offset aV240816_3, \ ; +[NSObject mj_enumerateAllClasses:] ...
                              offset __NSObject_mj_enumerateAllClasses__>
                __objc2_meth <offset sel_mj_setupIgnoredPropertyNames_, \ ; +[NSObject mj_setupIgnoredPropertyNames:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupIgnoredPropertyNames__>
                __objc2_meth <offset sel_mj_totalIgnoredPropertyNames, offset a1608, \ ; +[NSObject mj_totalIgnoredPropertyNames] ...
                              offset __NSObject_mj_totalIgnoredPropertyNames_>
                __objc2_meth <offset sel_mj_setupIgnoredCodingPropertyNames_, \ ; +[NSObject mj_setupIgnoredCodingPropertyNames:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupIgnoredCodingPropertyNames__>
                __objc2_meth <offset sel_mj_totalIgnoredCodingPropertyNames, \ ; +[NSObject mj_totalIgnoredCodingPropertyNames] ...
                              offset a1608, \
                              offset __NSObject_mj_totalIgnoredCodingPropertyNames_>
                __objc2_meth <offset sel_mj_setupAllowedPropertyNames_, \ ; +[NSObject mj_setupAllowedPropertyNames:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupAllowedPropertyNames__>
                __objc2_meth <offset sel_mj_totalAllowedPropertyNames, offset a1608, \ ; +[NSObject mj_totalAllowedPropertyNames] ...
                              offset __NSObject_mj_totalAllowedPropertyNames_>
                __objc2_meth <offset sel_mj_setupAllowedCodingPropertyNames_, \ ; +[NSObject mj_setupAllowedCodingPropertyNames:] ...
                              offset aV240816_3, \
                              offset __NSObject_mj_setupAllowedCodingPropertyNames__>
                __objc2_meth <offset sel_mj_totalAllowedCodingPropertyNames, \ ; +[NSObject mj_totalAllowedCodingPropertyNames] ...
                              offset a1608, \
                              offset __NSObject_mj_totalAllowedCodingPropertyNames_>
                __objc2_meth <offset sel_mj_setupBlockReturnValue_key_, \ ; +[NSObject mj_setupBlockReturnValue:key:] ...
                              offset aV320816r24, \
                              offset __NSObject_mj_setupBlockReturnValue_key__>
                __objc2_meth <offset sel_mj_totalObjectsWithSelector_key_, \ ; +[NSObject mj_totalObjectsWithSelector:key:] ...
                              offset a320816r24, \
                              offset __NSObject_mj_totalObjectsWithSelector_key__>
_OBJC_CATEGORY_NSObject_$_MJClass __objc2_category <offset aMjclass, offset _OBJC_CLASS_$_NSObject, 0, \
                                        ; DATA XREF: __objc_catlist:000000010003D2E0↑o
                                        ; __objc_nlcatlist:000000010003D300↑o
                                  offset _OBJC_CATEGORY_CLASS_METHODS_NSObject_$_MJClass,\ ; "MJClass"
                                  0, 0>
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_CATEGORY_NSString_$_MJExtension __objc2_category <offset aMjextension, offset _OBJC_CLASS_$_NSString, \
                                        ; DATA XREF: __objc_catlist:000000010003D2E8↑o
                                  offset _OBJC_CATEGORY_INSTANCE_METHODS_NSString_$_MJExtension,\ ; "MJExtension"
                                  0, 0, 0>
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
SLabel_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aSlabel, 0, 0, 0, 0, 0>
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SLabel↓o
                                        ; "SLabel"
_OBJC_INSTANCE_METHODS_SLabel __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:SLabel_$classData↓o
                __objc2_meth <offset sel_initWithFrame_, offset a4808CgrectCgpo, \ ; -[SLabel initWithFrame:] ...
                              offset __SLabel_initWithFrame__>
                __objc2_meth <offset sel_drawRect_, offset aV4808CgrectCgp, \ ; -[SLabel drawRect:] ...
                              offset __SLabel_drawRect__>
SLabel_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aSlabel, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SLabel↓o
                                  offset _OBJC_INSTANCE_METHODS_SLabel, 0, 0, 0, 0> ; "SLabel"
_OBJC_CLASS_METHODS_FirmwareMessage __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:FirmwareMessage_$metaData↓o
                __objc2_meth <offset sel_mj_objectClassInArray, offset a1608, \ ; +[FirmwareMessage mj_objectClassInArray] ...
                              offset __FirmwareMessage_mj_objectClassInArray_>
FirmwareMessage_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aFirmwaremessag, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_FirmwareMessage↓o
                                  offset _OBJC_CLASS_METHODS_FirmwareMessage, 0, 0, 0,\ ; "FirmwareMessage"
                                  0>
_OBJC_INSTANCE_METHODS_FirmwareMessage __objc2_meth_list <18h, 8>
                                        ; DATA XREF: __objc_const:FirmwareMessage_$classData↓o
                __objc2_meth <offset sel_objectForKeyedSubscript_, offset a240816, \ ; -[FirmwareMessage objectForKeyedSubscript:] ...
                              offset __FirmwareMessage_objectForKeyedSubscript__>
                __objc2_meth <offset sel_msgState, offset aI1608, \ ; -[FirmwareMessage msgState] ...
                              offset __FirmwareMessage_msgState_>
                __objc2_meth <offset sel_setMsgState_, offset aV2008i16, \ ; -[FirmwareMessage setMsgState:] ...
                              offset __FirmwareMessage_setMsgState__>
                __objc2_meth <offset sel_error, offset a1608, \ ; -[FirmwareMessage error] ...
                              offset __FirmwareMessage_error_>
                __objc2_meth <offset sel_setError_, offset aV240816_0, \ ; -[FirmwareMessage setError:] ...
                              offset __FirmwareMessage_setError__>
                __objc2_meth <offset sel_List, offset a1608, \ ; -[FirmwareMessage List] ...
                              offset __FirmwareMessage_List_>
                __objc2_meth <offset sel_setList_, offset aV240816_0, \ ; -[FirmwareMessage setList:] ...
                              offset __FirmwareMessage_setList__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[FirmwareMessage .cxx_destruct] ...
                              offset __FirmwareMessage__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_FirmwareMessage __objc2_ivar_list <20h, 3>
                                        ; DATA XREF: __objc_const:FirmwareMessage_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwareMessage__msgState, \ ; int _msgState;
                              offset aMsgstate_0, offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwareMessage__error, \ ; NSString *_error;
                              offset aError_0, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_FirmwareMessage__List, \ ; NSArray *_List;
                              offset aList_2, offset aNsarray, 3, 8>
FirmwareMessage_$properties __objc2_prop_list <10h, 3>
                                        ; DATA XREF: __objc_const:FirmwareMessage_$classData↓o
                __objc2_prop <offset sel_msgState, offset aTiNVMsgstate> ; @property (nonatomic) int msgState;
                __objc2_prop <offset sel_error, offset aTNsstringCNVEr> ; @property (copy, nonatomic) NSString *error;
                __objc2_prop <offset sel_List, offset aTNsarrayNVList> ; @property (retain, nonatomic) NSArray *List;
FirmwareMessage_$classData __objc2_class_ro <194h, 8, 20h, 0, offset FirmwareMessage_$ivarLayout,\
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_FirmwareMessage↓o
                                  offset aFirmwaremessag, \ ; "FirmwareMessage"
                                  offset _OBJC_INSTANCE_METHODS_FirmwareMessage, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_FirmwareMessage, 0, \
                                  offset FirmwareMessage_$properties>
Firmware_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aFirmware, 0, 0, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_Firmware↓o
                                  0>    ; "Firmware"
_OBJC_INSTANCE_METHODS_Firmware __objc2_meth_list <18h, 17h>
                                        ; DATA XREF: __objc_const:Firmware_$classData↓o
                __objc2_meth <offset sel_fileName, offset a1608, \ ; -[Firmware fileName] ...
                              offset __Firmware_fileName_>
                __objc2_meth <offset sel_date, offset a1608, offset __Firmware_date_> ; -[Firmware date] ...
                __objc2_meth <offset sel_setDate_, offset aV240816_0, \ ; -[Firmware setDate:] ...
                              offset __Firmware_setDate__>
                __objc2_meth <offset sel_setFileName_, offset aV240816_0, \ ; -[Firmware setFileName:] ...
                              offset __Firmware_setFileName__>
                __objc2_meth <offset sel_fileSize, offset aI1608, \ ; -[Firmware fileSize] ...
                              offset __Firmware_fileSize_>
                __objc2_meth <offset sel_setFileSize_, offset aV2008i16, \ ; -[Firmware setFileSize:] ...
                              offset __Firmware_setFileSize__>
                __objc2_meth <offset sel_fileURL, offset a1608, \ ; -[Firmware fileURL] ...
                              offset __Firmware_fileURL_>
                __objc2_meth <offset sel_setFileURL_, offset aV240816_0, \ ; -[Firmware setFileURL:] ...
                              offset __Firmware_setFileURL__>
                __objc2_meth <offset sel_readme_en, offset a1608, \ ; -[Firmware readme_en] ...
                              offset __Firmware_readme_en_>
                __objc2_meth <offset sel_setReadme_en_, offset aV240816_0, \ ; -[Firmware setReadme_en:] ...
                              offset __Firmware_setReadme_en__>
                __objc2_meth <offset sel_id, offset aI1608, offset __Firmware_id_> ; -[Firmware id] ...
                __objc2_meth <offset sel_setId_, offset aV2008i16, \ ; -[Firmware setId:] ...
                              offset __Firmware_setId__>
                __objc2_meth <offset sel_readme, offset a1608, \ ; -[Firmware readme] ...
                              offset __Firmware_readme_>
                __objc2_meth <offset sel_setReadme_, offset aV240816_0, \ ; -[Firmware setReadme:] ...
                              offset __Firmware_setReadme__>
                __objc2_meth <offset sel_type, offset aI1608, offset __Firmware_type_> ; -[Firmware type] ...
                __objc2_meth <offset sel_setType_, offset aV2008i16, \ ; -[Firmware setType:] ...
                              offset __Firmware_setType__>
                __objc2_meth <offset sel_md5, offset a1608, offset __Firmware_md5_> ; -[Firmware md5] ...
                __objc2_meth <offset sel_setMd5_, offset aV240816_0, \ ; -[Firmware setMd5:] ...
                              offset __Firmware_setMd5__>
                __objc2_meth <offset sel_version, offset aF1608, \ ; -[Firmware version] ...
                              offset __Firmware_version_>
                __objc2_meth <offset sel_setVersion_, offset aV2008f16, \ ; -[Firmware setVersion:] ...
                              offset __Firmware_setVersion__>
                __objc2_meth <offset sel_beta, offset aI1608, offset __Firmware_beta_> ; -[Firmware beta] ...
                __objc2_meth <offset sel_setBeta_, offset aV2008i16, \ ; -[Firmware setBeta:] ...
                              offset __Firmware_setBeta__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[Firmware .cxx_destruct] ...
                              offset __Firmware__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_Firmware __objc2_ivar_list <20h, 0Bh>
                                        ; DATA XREF: __objc_const:Firmware_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__fileSize, \ ; int _fileSize;
                              offset aFilesize, offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__id, offset aId_0, \ ; int _id;
                              offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__type, offset aType_0, \ ; int _type;
                              offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__version, \ ; float _version;
                              offset aVersion_1, offset asc_100036AF9, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__beta, offset aBeta_0, \ ; int _beta;
                              offset aI_0, 2, 4>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__date, offset aDate, \ ; NSString *_date;
                              offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__fileName, \ ; NSString *_fileName;
                              offset aFilename, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__fileURL, \ ; NSString *_fileURL;
                              offset aFileurl_0, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__readme_en, \ ; NSString *_readme_en;
                              offset aReadmeEn, offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__readme, offset aReadme, \ ; NSString *_readme;
                              offset aNsstring, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_Firmware__md5, offset aMd5_0, \ ; NSString *_md5;
                              offset aNsstring, 3, 8>
Firmware_$properties __objc2_prop_list <10h, 0Bh>
                                        ; DATA XREF: __objc_const:Firmware_$classData↓o
                __objc2_prop <offset sel_date, offset aTNsstringCNVDa> ; @property (copy, nonatomic) NSString *date;
                __objc2_prop <offset sel_fileName, offset aTNsstringCNVFi_0> ; @property (copy, nonatomic) NSString *fileName;
                __objc2_prop <offset sel_fileSize, offset aTiNVFilesize> ; @property (nonatomic) int fileSize;
                __objc2_prop <offset sel_fileURL, offset aTNsstringCNVFi_1> ; @property (copy, nonatomic) NSString *fileURL;
                __objc2_prop <offset sel_readme_en, offset aTNsstringCNVRe_0> ; @property (copy, nonatomic) NSString *readme_en;
                __objc2_prop <offset sel_id, offset aTiNVId> ; @property (nonatomic) int id;
                __objc2_prop <offset sel_readme, offset aTNsstringCNVRe> ; @property (copy, nonatomic) NSString *readme;
                __objc2_prop <offset sel_type, offset aTiNVType> ; @property (nonatomic) int type;
                __objc2_prop <offset sel_md5, offset aTNsstringCNVMd> ; @property (copy, nonatomic) NSString *md5;
                __objc2_prop <offset sel_version, offset aTfNVVersion> ; @property (nonatomic) float version;
                __objc2_prop <offset sel_beta, offset aTiNVBeta> ; @property (nonatomic) int beta;
Firmware_$classData __objc2_class_ro <194h, 8, 50h, 0, offset Firmware_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_Firmware↓o
                                  offset aFirmware, \ ; "Firmware"
                                  offset _OBJC_INSTANCE_METHODS_Firmware, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_Firmware, 0, \
                                  offset Firmware_$properties>
_OBJC_CLASS_METHODS_SHIDHJZ __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:SHIDHJZ_$metaData↓o
                __objc2_meth <offset sel_allocWithZone_, offset a2408Nszone16, \ ; +[SHIDHJZ allocWithZone:] ...
                              offset __SHIDHJZ_allocWithZone__>
                __objc2_meth <offset sel_sharedInstance, offset a1608, \ ; +[SHIDHJZ sharedInstance] ...
                              offset __SHIDHJZ_sharedInstance_>
SHIDHJZ_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aShidhjz, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDHJZ↓o
                                  offset _OBJC_CLASS_METHODS_SHIDHJZ, 0, 0, 0, 0> ; "SHIDHJZ"
_OBJC_INSTANCE_METHODS_SHIDHJZ __objc2_meth_list <18h, 5>
                                        ; DATA XREF: __objc_const:SHIDHJZ_$classData↓o
                __objc2_meth <offset sel_copyWithZone_, offset a2408Nszone16, \ ; -[SHIDHJZ copyWithZone:] ...
                              offset __SHIDHJZ_copyWithZone__>
                __objc2_meth <offset sel_mutableCopyWithZone_, offset a2408Nszone16, \ ; -[SHIDHJZ mutableCopyWithZone:] ...
                              offset __SHIDHJZ_mutableCopyWithZone__>
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDHJZ open] ...
                              offset __SHIDHJZ_open_>
                __objc2_meth <offset sel_device, offset aIohiddevice160, \ ; -[SHIDHJZ device] ...
                              offset __SHIDHJZ_device_>
                __objc2_meth <offset sel_setDevice_, offset aV2408Iohiddevi, \ ; -[SHIDHJZ setDevice:] ...
                              offset __SHIDHJZ_setDevice__>
_OBJC_INSTANCE_VARIABLES_SHIDHJZ __objc2_ivar_list <20h, 1>
                                        ; DATA XREF: __objc_const:SHIDHJZ_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDHJZ__device, offset aDevice, \ ; __IOHIDDevice *_device;
                              offset aIohiddevice, 3, 8>
SHIDHJZ_$properties __objc2_prop_list <10h, 1>
                                        ; DATA XREF: __objc_const:SHIDHJZ_$classData↓o
                __objc2_prop <offset sel_device, offset aTIohiddeviceVD> ; @property __IOHIDDevice *device;
SHIDHJZ_$classData __objc2_class_ro <90h, 68h, 70h, 0, 0, offset aShidhjz, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDHJZ↓o
                                  offset _OBJC_INSTANCE_METHODS_SHIDHJZ, 0, \ ; "SHIDHJZ"
                                  offset _OBJC_INSTANCE_VARIABLES_SHIDHJZ, 0, \
                                  offset SHIDHJZ_$properties>
_OBJC_CLASS_METHODS_MJFoundation __objc2_meth_list <18h, 2>
                                        ; DATA XREF: __objc_const:MJFoundation_$metaData↓o
                __objc2_meth <offset sel_foundationClasses, offset a1608, \ ; +[MJFoundation foundationClasses] ...
                              offset __MJFoundation_foundationClasses_>
                __objc2_meth <offset sel_isClassFromFoundation_, offset aC240816_0, \ ; +[MJFoundation isClassFromFoundation:] ...
                              offset __MJFoundation_isClassFromFoundation__>
MJFoundation_$metaData __objc2_class_ro <91h, 28h, 28h, 0, 0, offset aMjfoundation, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_MJFoundation↓o
                                  offset _OBJC_CLASS_METHODS_MJFoundation, 0, 0, 0, 0> ; "MJFoundation"
MJFoundation_$classData __objc2_class_ro <90h, 8, 8, 0, 0, offset aMjfoundation, 0, 0, 0, 0, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJFoundation↓o
                                  0>    ; "MJFoundation"
_OBJC_CLASS_METHODS_SHIDManager __objc2_meth_list <18h, 1>
                                        ; DATA XREF: __objc_const:SHIDManager_$metaData↓o
                __objc2_meth <offset sel_boot_, offset aV2408Iohiddevi, \ ; +[SHIDManager boot:] ...
                              offset __SHIDManager_boot__>
SHIDManager_$metaData __objc2_class_ro <195h, 28h, 28h, 0, 0, offset aShidmanager, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDManager↓o
                                  offset _OBJC_CLASS_METHODS_SHIDManager, 0, 0, 0, 0> ; "SHIDManager"
_OBJC_INSTANCE_METHODS_SHIDManager __objc2_meth_list <18h, 9>
                                        ; DATA XREF: __objc_const:SHIDManager_$classData↓o
                __objc2_meth <offset sel_init, offset a1608, \ ; -[SHIDManager init] ...
                              offset __SHIDManager_init_>
                __objc2_meth <offset sel_open, offset aV1608_0, \ ; -[SHIDManager open] ...
                              offset __SHIDManager_open_>
                __objc2_meth <offset sel_hidManager, offset aIohidmanager16, \ ; -[SHIDManager hidManager] ...
                              offset __SHIDManager_hidManager_>
                __objc2_meth <offset sel_setHidManager_, offset aV2408Iohidmana, \ ; -[SHIDManager setHidManager:] ...
                              offset __SHIDManager_setHidManager__>
                __objc2_meth <offset sel_delegate, offset a1608, \ ; -[SHIDManager delegate] ...
                              offset __SHIDManager_delegate_>
                __objc2_meth <offset sel_setDelegate_, offset aV240816_0, \ ; -[SHIDManager setDelegate:] ...
                              offset __SHIDManager_setDelegate__>
                __objc2_meth <offset sel_devices, offset a1608, \ ; -[SHIDManager devices] ...
                              offset __SHIDManager_devices_>
                __objc2_meth <offset sel_setDevices_, offset aV240816_0, \ ; -[SHIDManager setDevices:] ...
                              offset __SHIDManager_setDevices__>
                __objc2_meth <offset sel__cxx_destruct, offset aV1608_0, \ ; -[SHIDManager .cxx_destruct] ...
                              offset __SHIDManager__cxx_destruct_>
_OBJC_INSTANCE_VARIABLES_SHIDManager __objc2_ivar_list <20h, 5>
                                        ; DATA XREF: __objc_const:SHIDManager_$classData↓o
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDManager_gpReportBufB, \ ; unsigned __int8 gpReportBufB[64];
                              offset aGpreportbufb, offset a64c, 0, 40h>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDManager_reportSizeIn, \ ; unsigned __int8 reportSizeIn;
                              offset aReportsizein, offset aC_4, 0, 1>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDManager__hidManager, \ ; __IOHIDManager *_hidManager;
                              offset aHidmanager, offset aIohidmanager, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDManager__delegate, \ ; DeviceDelegate *_delegate;
                              offset aDelegate, offset aDevicedelegate_0, 3, 8>
                __objc2_ivar <offset _OBJC_IVAR_$_SHIDManager__devices, \ ; NSMutableArray *_devices;
                              offset aDevices_0, offset aNsmutablearray, 3, 8>
SHIDManager_$properties __objc2_prop_list <10h, 3>
                                        ; DATA XREF: __objc_const:SHIDManager_$classData↓o
                __objc2_prop <offset sel_hidManager, offset aTIohidmanagerN> ; @property (nonatomic) __IOHIDManager *hidManager;
                __objc2_prop <offset sel_delegate, offset aTDevicedelegat> ; @property (__weak) DeviceDelegate *delegate;
                __objc2_prop <offset sel_devices, offset aTNsmutablearra> ; @property (retain) NSMutableArray *devices;
SHIDManager_$classData __objc2_class_ro <194h, 8, 68h, 0, offset SHIDManager_$ivarLayout, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDManager↓o
                                  offset aShidmanager, \ ; "SHIDManager"
                                  offset _OBJC_INSTANCE_METHODS_SHIDManager, 0, \
                                  offset _OBJC_INSTANCE_VARIABLES_SHIDManager, \
                                  offset HomeView_$ivarLayout, \
                                  offset SHIDManager_$properties>
__objc_const    ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__la_symbol_ptr segment para public 'DATA' use64
                assume cs:__la_symbol_ptr
                ;org 100046FE0h
_CC_MD5_ptr     dq offset __imp__CC_MD5 ; DATA XREF: _CC_MD5↑r
_CFBundleGetVersionNumber_ptr dq offset __imp__CFBundleGetVersionNumber
                                        ; DATA XREF: _CFBundleGetVersionNumber↑r
_CFGetTypeID_ptr dq offset __imp__CFGetTypeID
                                        ; DATA XREF: _CFGetTypeID↑r
_CFNumberGetTypeID_ptr dq offset __imp__CFNumberGetTypeID
                                        ; DATA XREF: _CFNumberGetTypeID↑r
_CFNumberGetValue_ptr dq offset __imp__CFNumberGetValue
                                        ; DATA XREF: _CFNumberGetValue↑r
_CFRunLoopGetCurrent_ptr dq offset __imp__CFRunLoopGetCurrent
                                        ; DATA XREF: _CFRunLoopGetCurrent↑r
_CFURLCreateStringByAddingPercentEscapes_ptr dq offset __imp__CFURLCreateStringByAddingPercentEscapes
                                        ; DATA XREF: _CFURLCreateStringByAddingPercentEscapes↑r
_CGRectGetMaxX_ptr dq offset __imp__CGRectGetMaxX
                                        ; DATA XREF: _CGRectGetMaxX↑r
_CGRectGetMaxY_ptr dq offset __imp__CGRectGetMaxY
                                        ; DATA XREF: _CGRectGetMaxY↑r
_IOHIDDeviceGetProperty_ptr dq offset __imp__IOHIDDeviceGetProperty
                                        ; DATA XREF: _IOHIDDeviceGetProperty↑r
_IOHIDDeviceOpen_ptr dq offset __imp__IOHIDDeviceOpen
                                        ; DATA XREF: _IOHIDDeviceOpen↑r
_IOHIDDeviceRegisterInputReportCallback_ptr dq offset __imp__IOHIDDeviceRegisterInputReportCallback
                                        ; DATA XREF: _IOHIDDeviceRegisterInputReportCallback↑r
_IOHIDDeviceSetReport_ptr dq offset __imp__IOHIDDeviceSetReport
                                        ; DATA XREF: _IOHIDDeviceSetReport↑r
_IOHIDManagerCreate_ptr dq offset __imp__IOHIDManagerCreate
                                        ; DATA XREF: _IOHIDManagerCreate↑r
_IOHIDManagerOpen_ptr dq offset __imp__IOHIDManagerOpen
                                        ; DATA XREF: _IOHIDManagerOpen↑r
_IOHIDManagerRegisterDeviceMatchingCallback_ptr dq offset __imp__IOHIDManagerRegisterDeviceMatchingCallback
                                        ; DATA XREF: _IOHIDManagerRegisterDeviceMatchingCallback↑r
_IOHIDManagerRegisterDeviceRemovalCallback_ptr dq offset __imp__IOHIDManagerRegisterDeviceRemovalCallback
                                        ; DATA XREF: _IOHIDManagerRegisterDeviceRemovalCallback↑r
_IOHIDManagerScheduleWithRunLoop_ptr dq offset __imp__IOHIDManagerScheduleWithRunLoop
                                        ; DATA XREF: _IOHIDManagerScheduleWithRunLoop↑r
_IOHIDManagerSetDeviceMatchingMultiple_ptr dq offset __imp__IOHIDManagerSetDeviceMatchingMultiple
                                        ; DATA XREF: _IOHIDManagerSetDeviceMatchingMultiple↑r
_NSApplicationMain_ptr dq offset __imp__NSApplicationMain
                                        ; DATA XREF: _NSApplicationMain↑r
_NSClassFromString_ptr dq offset __imp__NSClassFromString
                                        ; DATA XREF: _NSClassFromString↑r
_NSLog_ptr      dq offset __imp__NSLog  ; DATA XREF: _NSLog↑r
_NSRectFill_ptr dq offset __imp__NSRectFill
                                        ; DATA XREF: _NSRectFill↑r
_NSSearchPathForDirectoriesInDomains_ptr dq offset __imp__NSSearchPathForDirectoriesInDomains
                                        ; DATA XREF: _NSSearchPathForDirectoriesInDomains↑r
_NSStringFromClass_ptr dq offset __imp__NSStringFromClass
                                        ; DATA XREF: _NSStringFromClass↑r
_NSStringFromRect_ptr dq offset __imp__NSStringFromRect
                                        ; DATA XREF: _NSStringFromRect↑r
; void (__cdecl *_Block_object_assign_ptr)(void *, const void *, const int)
__Block_object_assign_ptr dq offset __imp___Block_object_assign
                                        ; DATA XREF: __Block_object_assign↑r
; void (__cdecl *_Block_object_dispose_ptr)(const void *, const int)
__Block_object_dispose_ptr dq offset __imp___Block_object_dispose
                                        ; DATA XREF: __Block_object_dispose↑r
__Unwind_Resume_ptr dq offset __imp___Unwind_Resume
                                        ; DATA XREF: __Unwind_Resume↑r
; void (__cdecl __noreturn *__assert_rtn_ptr)(const char *, const char *, int, const char *)
___assert_rtn_ptr dq offset __imp____assert_rtn
                                        ; DATA XREF: ___assert_rtn↑r
___memcpy_chk_ptr dq offset __imp____memcpy_chk
                                        ; DATA XREF: ___memcpy_chk↑r
___stack_chk_fail_ptr dq offset __imp____stack_chk_fail
                                        ; DATA XREF: ___stack_chk_fail↑r
__availability_version_check_ptr dq offset __imp___availability_version_check
                                        ; DATA XREF: __availability_version_check↑r
_class_copyPropertyList_ptr dq offset __imp__class_copyPropertyList
                                        ; DATA XREF: _class_copyPropertyList↑r
_class_getSuperclass_ptr dq offset __imp__class_getSuperclass
                                        ; DATA XREF: _class_getSuperclass↑r
_dispatch_after_ptr dq offset __imp__dispatch_after
                                        ; DATA XREF: _dispatch_after↑r
_dispatch_async_ptr dq offset __imp__dispatch_async
                                        ; DATA XREF: _dispatch_async↑r
_dispatch_once_ptr dq offset __imp__dispatch_once
                                        ; DATA XREF: _dispatch_once↑r
; void (__cdecl *dispatch_once_f_ptr)(dispatch_once_t *predicate, void *context, dispatch_function_t function)
_dispatch_once_f_ptr dq offset __imp__dispatch_once_f
                                        ; DATA XREF: _dispatch_once_f↑r
_dispatch_sync_ptr dq offset __imp__dispatch_sync
                                        ; DATA XREF: _dispatch_sync↑r
; dispatch_time_t (__cdecl *dispatch_time_ptr)(dispatch_time_t when, int64_t delta)
_dispatch_time_ptr dq offset __imp__dispatch_time
                                        ; DATA XREF: _dispatch_time↑r
; void *(__cdecl *dlsym_ptr)(void *handle, const char *symbol)
_dlsym_ptr      dq offset __imp__dlsym  ; DATA XREF: _dlsym↑r
; void (__cdecl __noreturn *exit_ptr)(int)
_exit_ptr       dq offset __imp__exit   ; DATA XREF: _exit↑r
; int (__cdecl *fclose_ptr)(FILE *)
_fclose_ptr     dq offset __imp__fclose ; DATA XREF: _fclose↑r
; FILE *(__cdecl *fopen_ptr)(const char *, const char *)
_fopen_ptr      dq offset __imp__fopen  ; DATA XREF: _fopen↑r
; size_t (__cdecl *fread_ptr)(void *, size_t, size_t, FILE *)
_fread_ptr      dq offset __imp__fread  ; DATA XREF: _fread↑r
; void (__cdecl *free_ptr)(void *)
_free_ptr       dq offset __imp__free   ; DATA XREF: _free↑r
; int (__cdecl *fseek_ptr)(FILE *, __int64, int)
_fseek_ptr      dq offset __imp__fseek  ; DATA XREF: _fseek↑r
; __int64 (__cdecl *ftell_ptr)(FILE *)
_ftell_ptr      dq offset __imp__ftell  ; DATA XREF: _ftell↑r
; void *(__cdecl *malloc_ptr)(size_t)
_malloc_ptr     dq offset __imp__malloc ; DATA XREF: _malloc↑r
; void *(__cdecl *memcpy_ptr)(void *, const void *, size_t)
_memcpy_ptr     dq offset __imp__memcpy ; DATA XREF: _memcpy↑r
_objc_alloc_ptr dq offset __imp__objc_alloc
                                        ; DATA XREF: _objc_alloc↑r
_objc_autorelease_ptr dq offset __imp__objc_autorelease
                                        ; DATA XREF: _objc_autorelease↑r
_objc_autoreleaseReturnValue_ptr dq offset __imp__objc_autoreleaseReturnValue
                                        ; DATA XREF: _objc_autoreleaseReturnValue↑r
_objc_begin_catch_ptr dq offset __imp__objc_begin_catch
                                        ; DATA XREF: _objc_begin_catch↑r
_objc_destroyWeak_ptr dq offset __imp__objc_destroyWeak
                                        ; DATA XREF: _objc_destroyWeak↑r
_objc_end_catch_ptr dq offset __imp__objc_end_catch
                                        ; DATA XREF: _objc_end_catch↑r
_objc_enumerationMutation_ptr dq offset __imp__objc_enumerationMutation
                                        ; DATA XREF: _objc_enumerationMutation↑r
_objc_getAssociatedObject_ptr dq offset __imp__objc_getAssociatedObject
                                        ; DATA XREF: _objc_getAssociatedObject↑r
_objc_getProperty_ptr dq offset __imp__objc_getProperty
                                        ; DATA XREF: _objc_getProperty↑r
_objc_loadWeak_ptr dq offset __imp__objc_loadWeak
                                        ; DATA XREF: _objc_loadWeak↑r
_objc_loadWeakRetained_ptr dq offset __imp__objc_loadWeakRetained
                                        ; DATA XREF: _objc_loadWeakRetained↑r
_objc_msgSendSuper2_ptr dq offset __imp__objc_msgSendSuper2
                                        ; DATA XREF: _objc_msgSendSuper2↑r
_objc_msgSend_stret_ptr dq offset __imp__objc_msgSend_stret
                                        ; DATA XREF: _objc_msgSend_stret↑r
_objc_retainAutorelease_ptr dq offset __imp__objc_retainAutorelease
                                        ; DATA XREF: _objc_retainAutorelease↑r
_objc_retainAutoreleaseReturnValue_ptr dq offset __imp__objc_retainAutoreleaseReturnValue
                                        ; DATA XREF: _objc_retainAutoreleaseReturnValue↑r
_objc_retainAutoreleasedReturnValue_ptr dq offset __imp__objc_retainAutoreleasedReturnValue
                                        ; DATA XREF: _objc_retainAutoreleasedReturnValue↑r
_objc_retainBlock_ptr dq offset __imp__objc_retainBlock
                                        ; DATA XREF: _objc_retainBlock↑r
_objc_setAssociatedObject_ptr dq offset __imp__objc_setAssociatedObject
                                        ; DATA XREF: _objc_setAssociatedObject↑r
_objc_setProperty_atomic_ptr dq offset __imp__objc_setProperty_atomic
                                        ; DATA XREF: _objc_setProperty_atomic↑r
_objc_setProperty_nonatomic_copy_ptr dq offset __imp__objc_setProperty_nonatomic_copy
                                        ; DATA XREF: _objc_setProperty_nonatomic_copy↑r
_objc_storeStrong_ptr dq offset __imp__objc_storeStrong
                                        ; DATA XREF: _objc_storeStrong↑r
_objc_storeWeak_ptr dq offset __imp__objc_storeWeak
                                        ; DATA XREF: _objc_storeWeak↑r
_objc_sync_enter_ptr dq offset __imp__objc_sync_enter
                                        ; DATA XREF: _objc_sync_enter↑r
_objc_sync_exit_ptr dq offset __imp__objc_sync_exit
                                        ; DATA XREF: _objc_sync_exit↑r
_objc_unsafeClaimAutoreleasedReturnValue_ptr dq offset __imp__objc_unsafeClaimAutoreleasedReturnValue
                                        ; DATA XREF: _objc_unsafeClaimAutoreleasedReturnValue↑r
; int (*printf_ptr)(const char *, ...)
_printf_ptr     dq offset __imp__printf ; DATA XREF: _printf↑r
_property_getAttributes_ptr dq offset __imp__property_getAttributes
                                        ; DATA XREF: _property_getAttributes↑r
_property_getName_ptr dq offset __imp__property_getName
                                        ; DATA XREF: _property_getName↑r
; int (__cdecl *putchar_ptr)(int)
_putchar_ptr    dq offset __imp__putchar ; DATA XREF: _putchar↑r
; int (__cdecl *puts_ptr)(const char *)
_puts_ptr       dq offset __imp__puts   ; DATA XREF: _puts↑r
; void (__cdecl *rewind_ptr)(FILE *)
_rewind_ptr     dq offset __imp__rewind ; DATA XREF: _rewind↑r
; int (*sscanf_ptr)(const char *, const char *, ...)
_sscanf_ptr     dq offset __imp__sscanf ; DATA XREF: _sscanf↑r
; size_t (__cdecl *strlen_ptr)(const char *)
_strlen_ptr     dq offset __imp__strlen ; DATA XREF: _strlen↑r
__la_symbol_ptr ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_selrefs  segment para public 'DATA' use64
                assume cs:__objc_selrefs
                ;org 100047280h
; char *selRef_get8BitdoDevicePIDVIDAndNAMEs
selRef_get8BitdoDevicePIDVIDAndNAMEs dq offset sel_get8BitdoDevicePIDVIDAndNAMEs
                                        ; DATA XREF: +[S8BitdoDevice getNameWithPid:]+37↑r
                                        ; -[S8BitdoDevice details]+4B↑r ...
                                        ; "get8BitdoDevicePIDVIDAndNAMEs"
; char *selRef_countByEnumeratingWithState_objects_count_
selRef_countByEnumeratingWithState_objects_count_ dq offset sel_countByEnumeratingWithState_objects_count_
                                        ; DATA XREF: +[S8BitdoDevice getNameWithPid:]+75↑r
                                        ; +[S8BitdoDevice getNameWithPid:]+111↑r ...
                                        ; "countByEnumeratingWithState:objects:cou"...
; char *selRef_pid
selRef_pid      dq offset sel_pid       ; DATA XREF: +[S8BitdoDevice getNameWithPid:]:loc_100001099↑r
                                        ; -[S8BitdoDevice details]:loc_100001256↑r ...
                                        ; "pid"
; char *selRef_name
selRef_name     dq offset sel_name      ; DATA XREF: +[S8BitdoDevice getNameWithPid:]:loc_10000111D↑r
                                        ; -[ViewController MoreViewClick:View:]+12F↑r ...
                                        ; "name"
; char *selRef_vid
selRef_vid      dq offset sel_vid       ; DATA XREF: -[S8BitdoDevice details]+DD↑r
                                        ; -[S8BitdoDevice details]+210↑r ...
                                        ; "vid"
; char *selRef_init
selRef_init     dq offset sel_init      ; DATA XREF: -[S8BitdoDevice details]+236↑r
                                        ; -[S8BitdoDevice details]+2CD↑r ...
                                        ; "init"
; char *selRef_setName_
selRef_setName_ dq offset sel_setName_  ; DATA XREF: -[S8BitdoDevice details]+276↑r
                                        ; -[S8BitdoDevice details]+30D↑r ...
                                        ; "setName:"
; char *selRef_type
selRef_type     dq offset sel_type      ; DATA XREF: -[S8BitdoDevice details]:loc_1000014BC↑r
                                        ; -[S8BitdoDevice setVersion:]+3D↑r ...
                                        ; "type"
; char *selRef_setIsCarryRR_
selRef_setIsCarryRR_ dq offset sel_setIsCarryRR_
                                        ; DATA XREF: -[S8BitdoDevice details]:loc_10000152B↑r
                                        ; "setIsCarryRR:"
; char *selRef_details
selRef_details  dq offset sel_details   ; DATA XREF: -[S8BitdoDevice setVersion:]+1E↑r
                                        ; -[S8BitdoDevice setVersion:]+374↑r ...
                                        ; "details"
; char *selRef_setIsChangeBoot_
selRef_setIsChangeBoot_ dq offset sel_setIsChangeBoot_
                                        ; DATA XREF: -[S8BitdoDevice setVersion:]+6E↑r
                                        ; -[S8BitdoDevice setVersion:]:loc_10000185C↑r ...
                                        ; "setIsChangeBoot:"
; char *selRef_version
selRef_version  dq offset sel_version   ; DATA XREF: -[S8BitdoDevice setVersion:]+420↑r
                                        ; -[S8BitdoDevice description]+61↑r ...
                                        ; "version"
; char *selRef_deviceName
selRef_deviceName dq offset sel_deviceName
                                        ; DATA XREF: -[S8BitdoDevice description]+1F↑r
                                        ; "deviceName"
; char *selRef_beta
selRef_beta     dq offset sel_beta      ; DATA XREF: -[S8BitdoDevice description]+77↑r
                                        ; -[UpdateView setNewFirmwaer:]+11E↑r ...
                                        ; "beta"
; char *selRef_deviceRef
selRef_deviceRef dq offset sel_deviceRef
                                        ; DATA XREF: -[S8BitdoDevice description]+88↑r
                                        ; -[UpdateView changeBoot]+D3↑r ...
                                        ; "deviceRef"
; char *selRef_isChangeBoot
selRef_isChangeBoot dq offset sel_isChangeBoot
                                        ; DATA XREF: -[S8BitdoDevice description]+98↑r
                                        ; -[UpdateView changeBoot]+AA↑r
                                        ; "isChangeBoot"
; char *selRef_stringWithFormat_
selRef_stringWithFormat_ dq offset sel_stringWithFormat_
                                        ; DATA XREF: -[S8BitdoDevice description]+A9↑r
                                        ; +[SHttp getUpdateFirmwaerWithType:success:failure:]+BB↑r ...
                                        ; "stringWithFormat:"
; char *selRef_isCurrentChinaLanguage
selRef_isCurrentChinaLanguage dq offset sel_isCurrentChinaLanguage
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+39↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+9E↑r ...
                                        ; "isCurrentChinaLanguage"
; char *selRef_standardUserDefaults
selRef_standardUserDefaults dq offset sel_standardUserDefaults
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+67↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+F4↑r ...
                                        ; "standardUserDefaults"
; char *selRef_boolForKey_
selRef_boolForKey_ dq offset sel_boolForKey_
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+7B↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+109↑r ...
                                        ; "boolForKey:"
; char *selRef_URLWithString_
selRef_URLWithString_ dq offset sel_URLWithString_
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+D9↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+291↑r ...
                                        ; "URLWithString:"
; char *selRef_requestWithURL_
selRef_requestWithURL_ dq offset sel_requestWithURL_
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+108↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+2AE↑r ...
                                        ; "requestWithURL:"
; char *selRef_setHTTPMethod_
selRef_setHTTPMethod_ dq offset sel_setHTTPMethod_
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+120↑r
                                        ; +[SHttp getNewVersion:version:beta:success:failure:]+116↑r ...
                                        ; "setHTTPMethod:"
; char *selRef_setValue_forHTTPHeaderField_
selRef_setValue_forHTTPHeaderField_ dq offset sel_setValue_forHTTPHeaderField_
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+15C↑r
                                        ; +[SHttp getNewVersion:version:beta:success:failure:]+151↑r ...
                                        ; "setValue:forHTTPHeaderField:"
; char *selRef_sharedSession
selRef_sharedSession dq offset sel_sharedSession
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+19A↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+2DA↑r ...
                                        ; "sharedSession"
; char *selRef_JSONObjectWithData_options_error_
selRef_JSONObjectWithData_options_error_ dq offset sel_JSONObjectWithData_options_error_
                                        ; DATA XREF: sub_100002039+B9↑r
                                        ; sub_100002D97+24↑r ...
                                        ; "JSONObjectWithData:options:error:"
; char *selRef_objectForKeyedSubscript_
selRef_objectForKeyedSubscript_ dq offset sel_objectForKeyedSubscript_
                                        ; DATA XREF: sub_100002039+E3↑r
                                        ; sub_100002039+134↑r ...
                                        ; "objectForKeyedSubscript:"
; char *selRef_integerValue
selRef_integerValue dq offset sel_integerValue
                                        ; DATA XREF: sub_100002039+101↑r
                                        ; sub_100002D97+67↑r
                                        ; "integerValue"
; char *selRef_mj_objectArrayWithKeyValuesArray_
selRef_mj_objectArrayWithKeyValuesArray_ dq offset sel_mj_objectArrayWithKeyValuesArray_
                                        ; DATA XREF: sub_100002039+153↑r
                                        ; +[NSObject mj_objectArrayWithFile:]+64↑r ...
                                        ; "mj_objectArrayWithKeyValuesArray:"
; char *selRef_dataTaskWithRequest_completionHandler_
selRef_dataTaskWithRequest_completionHandler_ dq offset sel_dataTaskWithRequest_completionHandler_
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+20A↑r
                                        ; +[SHttp getNewVersion:version:beta:success:failure:]+295↑r ...
                                        ; "dataTaskWithRequest:completionHandler:"
; char *selRef_resume
selRef_resume   dq offset sel_resume    ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+22C↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+387↑r ...
                                        ; "resume"
; char *selRef_lastPathComponent
selRef_lastPathComponent dq offset sel_lastPathComponent
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+3D↑r
                                        ; "lastPathComponent"
; char *selRef_lastObject
selRef_lastObject dq offset sel_lastObject
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+198↑r
                                        ; -[ViewController back]+7A↑r ...
                                        ; "lastObject"
; char *selRef_defaultManager
selRef_defaultManager dq offset sel_defaultManager
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+1F6↑r
                                        ; sub_100002720+142↑r ...
                                        ; "defaultManager"
; char *selRef_createDirectoryAtPath_withIntermediateDirectories_attributes_error_
selRef_createDirectoryAtPath_withIntermediateDirectories_attributes_error_ dq offset sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+20B↑r
                                        ; "createDirectoryAtPath:withIntermediateD"...
; char *selRef_fileExistsAtPath_
selRef_fileExistsAtPath_ dq offset sel_fileExistsAtPath_
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+251↑r
                                        ; sub_10000AAF4+F2↑r ...
                                        ; "fileExistsAtPath:"
; char *selRef_expectedContentLength
selRef_expectedContentLength dq offset sel_expectedContentLength
                                        ; DATA XREF: sub_100002720+46↑r
                                        ; "expectedContentLength"
; char *selRef_errorWithDomain_code_userInfo_
selRef_errorWithDomain_code_userInfo_ dq offset sel_errorWithDomain_code_userInfo_
                                        ; DATA XREF: sub_100002720+222↑r
                                        ; -[NSObject mj_setKeyValues:context:]+1B4↑r ...
                                        ; "errorWithDomain:code:userInfo:"
; char *selRef_fileURLWithPath_
selRef_fileURLWithPath_ dq offset sel_fileURLWithPath_
                                        ; DATA XREF: sub_100002720+11F↑r
                                        ; "fileURLWithPath:"
; char *selRef_moveItemAtURL_toURL_error_
selRef_moveItemAtURL_toURL_error_ dq offset sel_moveItemAtURL_toURL_error_
                                        ; DATA XREF: sub_100002720+154↑r
                                        ; "moveItemAtURL:toURL:error:"
; char *selRef_StatistcsFirmware_ID_
selRef_StatistcsFirmware_ID_ dq offset sel_StatistcsFirmware_ID_
                                        ; DATA XREF: sub_100002720+183↑r
                                        ; "StatistcsFirmware:ID:"
; char *selRef_downloadTaskWithRequest_completionHandler_
selRef_downloadTaskWithRequest_completionHandler_ dq offset sel_downloadTaskWithRequest_completionHandler_
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+35C↑r
                                        ; "downloadTaskWithRequest:completionHandl"...
; char *selRef_count
selRef_count    dq offset sel_count     ; DATA XREF: sub_100002D97+A9↑r
                                        ; -[ViewController showAndHideBackButton]+2D↑r ...
                                        ; "count"
; char *selRef_objectAtIndexedSubscript_
selRef_objectAtIndexedSubscript_ dq offset sel_objectAtIndexedSubscript_
                                        ; DATA XREF: sub_100002D97+BF↑r
                                        ; +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+77↑r ...
                                        ; "objectAtIndexedSubscript:"
; char *selRef_mj_objectWithKeyValues_
selRef_mj_objectWithKeyValues_ dq offset sel_mj_objectWithKeyValues_
                                        ; DATA XREF: sub_100002D97+E1↑r
                                        ; +[NSObject mj_objectWithFile:]+64↑r ...
                                        ; "mj_objectWithKeyValues:"
; char *selRef_date
selRef_date     dq offset sel_date      ; DATA XREF: +[SHttp recordActivity:]+1E↑r
                                        ; +[SHttp sendRecordActivity:IP:]+1E↑r ...
                                        ; "date"
; char *selRef_timeIntervalSince1970
selRef_timeIntervalSince1970 dq offset sel_timeIntervalSince1970
                                        ; DATA XREF: +[SHttp recordActivity:]+3A↑r
                                        ; +[SHttp sendRecordActivity:IP:]+4D↑r ...
                                        ; "timeIntervalSince1970"
; char *selRef_doubleForKey_
selRef_doubleForKey_ dq offset sel_doubleForKey_
                                        ; DATA XREF: +[SHttp recordActivity:]+78↑r
                                        ; "doubleForKey:"
; char *selRef_stringForKey_
selRef_stringForKey_ dq offset sel_stringForKey_
                                        ; DATA XREF: +[SHttp recordActivity:]+BE↑r
                                        ; sub_100003831+A0↑r
                                        ; "stringForKey:"
; char *selRef_containsString_
selRef_containsString_ dq offset sel_containsString_
                                        ; DATA XREF: +[SHttp recordActivity:]+119↑r
                                        ; +[SHttp getID]+1D6↑r ...
                                        ; "containsString:"
; char *selRef_sendRecordActivity_
selRef_sendRecordActivity_ dq offset sel_sendRecordActivity_
                                        ; DATA XREF: +[SHttp recordActivity:]:loc_10000330B↑r
                                        ; "sendRecordActivity:"
; char *selRef_isEqualToString_
selRef_isEqualToString_ dq offset sel_isEqualToString_
                                        ; DATA XREF: sub_10000339F+1C↑r
                                        ; -[UpDaterManager getCurrentLanguageCode]+9B↑r ...
                                        ; "isEqualToString:"
; char *selRef_sendRecordActivity_IP_
selRef_sendRecordActivity_IP_ dq offset sel_sendRecordActivity_IP_
                                        ; DATA XREF: sub_10000339F+D0↑r
                                        ; sub_100003481+E↑r
                                        ; "sendRecordActivity:IP:"
; char *selRef_HttpGetPageHtml_URL_encoding_
selRef_HttpGetPageHtml_URL_encoding_ dq offset sel_HttpGetPageHtml_URL_encoding_
                                        ; DATA XREF: +[SHttp sendRecordActivity:]+3C↑r
                                        ; sub_10000339F+76↑r
                                        ; "HttpGetPageHtml:URL:encoding:"
; char *selRef_getID
selRef_getID    dq offset sel_getID     ; DATA XREF: +[SHttp sendRecordActivity:IP:]+68↑r
                                        ; "getID"
; char *selRef_getComputerName
selRef_getComputerName dq offset sel_getComputerName
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+84↑r
                                        ; "getComputerName"
; char *selRef_setDouble_forKey_
selRef_setDouble_forKey_ dq offset sel_setDouble_forKey_
                                        ; DATA XREF: sub_100003831+6B↑r
                                        ; "setDouble:forKey:"
; char *selRef_setObject_forKey_
selRef_setObject_forKey_ dq offset sel_setObject_forKey_
                                        ; DATA XREF: sub_100003831+11F↑r
                                        ; -[SHIDBoot open]+8B↑r ...
                                        ; "setObject:forKey:"
; char *selRef_synchronize
selRef_synchronize dq offset sel_synchronize
                                        ; DATA XREF: sub_100003831+153↑r
                                        ; -[ViewController chengBeta:]+90↑r ...
                                        ; "synchronize"
; char *selRef_arrayWithObjects_
selRef_arrayWithObjects_ dq offset sel_arrayWithObjects_
                                        ; DATA XREF: +[SHttp getID]+18↑r
                                        ; +[SHttp getID]+EC↑r ...
                                        ; "arrayWithObjects:"
; char *selRef_new
selRef_new      dq offset sel_new       ; DATA XREF: +[SHttp getID]+75↑r
                                        ; -[ViewController betaClick]+81↑r ...
                                        ; "new"
; char *selRef_setLaunchPath_
selRef_setLaunchPath_ dq offset sel_setLaunchPath_
                                        ; DATA XREF: +[SHttp getID]+85↑r
                                        ; +[SHttp getID]+11F↑r
                                        ; "setLaunchPath:"
; char *selRef_setArguments_
selRef_setArguments_ dq offset sel_setArguments_
                                        ; DATA XREF: +[SHttp getID]+99↑r
                                        ; +[SHttp getID]+12C↑r
                                        ; "setArguments:"
; char *selRef_setStandardOutput_
selRef_setStandardOutput_ dq offset sel_setStandardOutput_
                                        ; DATA XREF: +[SHttp getID]+BD↑r
                                        ; +[SHttp getID]+164↑r
                                        ; "setStandardOutput:"
; char *selRef_launch
selRef_launch   dq offset sel_launch    ; DATA XREF: +[SHttp getID]+CD↑r
                                        ; +[SHttp getID]+18C↑r
                                        ; "launch"
; char *selRef_setStandardInput_
selRef_setStandardInput_ dq offset sel_setStandardInput_
                                        ; DATA XREF: +[SHttp getID]+14D↑r
                                        ; "setStandardInput:"
; char *selRef_fileHandleForReading
selRef_fileHandleForReading dq offset sel_fileHandleForReading
                                        ; DATA XREF: +[SHttp getID]+171↑r
                                        ; "fileHandleForReading"
; char *selRef_readDataToEndOfFile
selRef_readDataToEndOfFile dq offset sel_readDataToEndOfFile
                                        ; DATA XREF: +[SHttp getID]+196↑r
                                        ; "readDataToEndOfFile"
; char *selRef_initWithData_encoding_
selRef_initWithData_encoding_ dq offset sel_initWithData_encoding_
                                        ; DATA XREF: +[SHttp getID]+1BE↑r
                                        ; -[NSObject mj_JSONString]+7B↑r ...
                                        ; "initWithData:encoding:"
; char *selRef_stringByReplacingOccurrencesOfString_withString_
selRef_stringByReplacingOccurrencesOfString_withString_ dq offset sel_stringByReplacingOccurrencesOfString_withString_
                                        ; DATA XREF: +[SHttp getID]+1EE↑r
                                        ; -[ViewController chengBeta:]+165↑r ...
                                        ; "stringByReplacingOccurrencesOfString:wi"...
; char *selRef_dictionaryWithContentsOfFile_
selRef_dictionaryWithContentsOfFile_ dq offset sel_dictionaryWithContentsOfFile_
                                        ; DATA XREF: +[SHttp getComputerName]+19↑r
                                        ; +[NSObject mj_objectWithFile:]+4C↑r
                                        ; "dictionaryWithContentsOfFile:"
; char *selRef_objectForKey_
selRef_objectForKey_ dq offset sel_objectForKey_
                                        ; DATA XREF: +[SHttp getComputerName]+3B↑r
                                        ; +[Language isCurrentChinaLanguage]+31↑r
                                        ; "objectForKey:"
; char *selRef_utf8ToUnicode_
selRef_utf8ToUnicode_ dq offset sel_utf8ToUnicode_
                                        ; DATA XREF: +[SHttp getComputerName]+A3↑r
                                        ; +[SHttp getIPFormHtml:]+1FC↑r
                                        ; "utf8ToUnicode:"
; char *selRef_length
selRef_length   dq offset sel_length    ; DATA XREF: +[SHttp utf8ToUnicode:]+1A↑r
                                        ; +[SHttp utf8ToUnicode:]+199↑r ...
                                        ; "length"
; char *selRef_stringWithCapacity_
selRef_stringWithCapacity_ dq offset sel_stringWithCapacity_
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+3B↑r
                                        ; +[SHttp utf8ToUnicode:]+95↑r ...
                                        ; "stringWithCapacity:"
; char *selRef_characterAtIndex_
selRef_characterAtIndex_ dq offset sel_characterAtIndex_
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+5F↑r
                                        ; -[NSString mj_underlineFromCamel]+98↑r ...
                                        ; "characterAtIndex:"
; char *selRef_substringWithRange_
selRef_substringWithRange_ dq offset sel_substringWithRange_
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+80↑r
                                        ; +[SHttp getIPFormHtml:]+107↑r ...
                                        ; "substringWithRange:"
; char *selRef_appendFormat_
selRef_appendFormat_ dq offset sel_appendFormat_
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+6A↑r
                                        ; +[SHttp md5HexDigest:]+75↑r
                                        ; "appendFormat:"
selRef_insertString_atIndex_ dq offset sel_insertString_atIndex_
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+75↑r
                                        ; "insertString:atIndex:"
; char *selRef_setTimeoutInterval_
selRef_setTimeoutInterval_ dq offset sel_setTimeoutInterval_
                                        ; DATA XREF: +[SHttp HttpGetPageHtml:URL:encoding:]+83↑r
                                        ; "setTimeoutInterval:"
; char *selRef_bytes
selRef_bytes    dq offset sel_bytes     ; DATA XREF: sub_1000040C2+5C↑r
                                        ; sub_1000095F5+11E↑r ...
                                        ; "bytes"
; char *selRef_stringWithCString_encoding_
selRef_stringWithCString_encoding_ dq offset sel_stringWithCString_encoding_
                                        ; DATA XREF: sub_1000040C2+75↑r
                                        ; "stringWithCString:encoding:"
; char *selRef_getIPFormHtml_
selRef_getIPFormHtml_ dq offset sel_getIPFormHtml_
                                        ; DATA XREF: sub_1000040C2+92↑r
                                        ; "getIPFormHtml:"
; char *selRef_initWithPattern_options_error_
selRef_initWithPattern_options_error_ dq offset sel_initWithPattern_options_error_
                                        ; DATA XREF: +[SHttp getIPFormHtml:]+46↑r
                                        ; "initWithPattern:options:error:"
; char *selRef_matchesInString_options_range_
selRef_matchesInString_options_range_ dq offset sel_matchesInString_options_range_
                                        ; DATA XREF: +[SHttp getIPFormHtml:]+79↑r
                                        ; "matchesInString:options:range:"
; char *selRef_range
selRef_range    dq offset sel_range     ; DATA XREF: +[SHttp getIPFormHtml:]+F4↑r
                                        ; "range"
; char *selRef_rangeOfString_
selRef_rangeOfString_ dq offset sel_rangeOfString_
                                        ; DATA XREF: +[SHttp getIPFormHtml:]+1AD↑r
                                        ; -[UpdateView refreshFirmwaerList]+5D6↑r ...
                                        ; "rangeOfString:"
; char *selRef_UTF8String
selRef_UTF8String dq offset sel_UTF8String
                                        ; DATA XREF: +[SHttp md5HexDigest:]+27↑r
                                        ; "UTF8String"
; char *selRef_setFrame_
selRef_setFrame_ dq offset sel_setFrame_
                                        ; DATA XREF: -[ViewController updateView]+83↑r
                                        ; -[ViewController moreView]+97↑r ...
                                        ; "setFrame:"
; char *selRef_setDelegate_
selRef_setDelegate_ dq offset sel_setDelegate_
                                        ; DATA XREF: -[ViewController updateView]+A2↑r
                                        ; -[ViewController moreView]+5D↑r ...
                                        ; "setDelegate:"
; char *selRef_setWantsLayer_
selRef_setWantsLayer_ dq offset sel_setWantsLayer_
                                        ; DATA XREF: -[ViewController updateView]+B3↑r
                                        ; -[ViewController moreView]+B6↑r ...
                                        ; "setWantsLayer:"
; char *selRef_colorWithRed_green_blue_alpha_
selRef_colorWithRed_green_blue_alpha_ dq offset sel_colorWithRed_green_blue_alpha_
                                        ; DATA XREF: -[ViewController updateView]+CC↑r
                                        ; -[ViewController moreView]+CC↑r ...
                                        ; "colorWithRed:green:blue:alpha:"
; char *selRef_CGColor
selRef_CGColor  dq offset sel_CGColor   ; DATA XREF: -[ViewController updateView]+FF↑r
                                        ; -[ViewController moreView]+FF↑r ...
                                        ; "CGColor"
; char *selRef_layer
selRef_layer    dq offset sel_layer     ; DATA XREF: -[ViewController updateView]+113↑r
                                        ; -[ViewController moreView]+113↑r ...
                                        ; "layer"
; char *selRef_setBackgroundColor_
selRef_setBackgroundColor_ dq offset sel_setBackgroundColor_
                                        ; DATA XREF: -[ViewController updateView]+12B↑r
                                        ; -[ViewController moreView]+12B↑r ...
                                        ; "setBackgroundColor:"
selRef_viewDidLoad dq offset sel_viewDidLoad
                                        ; DATA XREF: -[ViewController viewDidLoad]+2C↑r
                                        ; "viewDidLoad"
; char *selRef_setViews_
selRef_setViews_ dq offset sel_setViews_
                                        ; DATA XREF: -[ViewController viewDidLoad]+5E↑r
                                        ; "setViews:"
; char *selRef_view
selRef_view     dq offset sel_view      ; DATA XREF: -[ViewController viewDidLoad]+77↑r
                                        ; -[ViewController viewDidLoad]+31E↑r ...
                                        ; "view"
selRef_frame    dq offset sel_frame     ; DATA XREF: -[ViewController viewDidLoad]+97↑r
                                        ; -[ViewController viewDidLoad]+FD↑r ...
                                        ; "frame"
; char *selRef_setDinput_
selRef_setDinput_ dq offset sel_setDinput_
                                        ; DATA XREF: -[ViewController viewDidLoad]+161↑r
                                        ; "setDinput:"
; char *selRef_dinput
selRef_dinput   dq offset sel_dinput    ; DATA XREF: -[ViewController viewDidLoad]+17A↑r
                                        ; "dinput"
; char *selRef_open
selRef_open     dq offset sel_open      ; DATA XREF: -[ViewController viewDidLoad]+1BF↑r
                                        ; -[ViewController viewDidLoad]+277↑r ...
                                        ; "open"
; char *selRef_setSwitchAndMac_
selRef_setSwitchAndMac_ dq offset sel_setSwitchAndMac_
                                        ; DATA XREF: -[ViewController viewDidLoad]+219↑r
                                        ; "setSwitchAndMac:"
; char *selRef_switchAndMac
selRef_switchAndMac dq offset sel_switchAndMac
                                        ; DATA XREF: -[ViewController viewDidLoad]+22F↑r
                                        ; "switchAndMac"
selRef_setBackButton_ dq offset sel_setBackButton_
                                        ; DATA XREF: -[ViewController viewDidLoad]+2A6↑r
                                        ; "setBackButton:"
; char *selRef_backButton
selRef_backButton dq offset sel_backButton
                                        ; DATA XREF: -[ViewController viewDidLoad]+2BC↑r
                                        ; -[ViewController S_AddView:]+6D↑r ...
                                        ; "backButton"
; char *selRef_setTarget_
selRef_setTarget_ dq offset sel_setTarget_
                                        ; DATA XREF: -[ViewController viewDidLoad]+2D7↑r
                                        ; -[ViewController S_AddView:]+109↑r ...
                                        ; "setTarget:"
selRef_back     dq offset sel_back      ; DATA XREF: -[ViewController viewDidLoad]+301↑r
                                        ; -[ViewController viewDidLoad]+531↑r ...
                                        ; "back"
; char *selRef_setAction_
selRef_setAction_ dq offset sel_setAction_
                                        ; DATA XREF: -[ViewController viewDidLoad]+308↑r
                                        ; -[ViewController S_AddView:]+148↑r ...
                                        ; "setAction:"
; char *selRef_addSubview_
selRef_addSubview_ dq offset sel_addSubview_
                                        ; DATA XREF: -[ViewController viewDidLoad]+34A↑r
                                        ; -[UpdateView initWithFrame:]+AE4↑r ...
                                        ; "addSubview:"
; char *selRef_setFrameOrigin_
selRef_setFrameOrigin_ dq offset sel_setFrameOrigin_
                                        ; DATA XREF: -[ViewController viewDidLoad]+3EC↑r
                                        ; -[UpdateView changeUIWithState:]:loc_10001371E↑r ...
                                        ; "setFrameOrigin:"
; char *selRef_initView
selRef_initView dq offset sel_initView  ; DATA XREF: -[ViewController viewDidLoad]+41B↑r
                                        ; "initView"
; char *selRef_addCheckUpdat
selRef_addCheckUpdat dq offset sel_addCheckUpdat
                                        ; DATA XREF: -[ViewController viewDidLoad]+428↑r
                                        ; "addCheckUpdat"
; char *selRef_addMoreAction
selRef_addMoreAction dq offset sel_addMoreAction
                                        ; DATA XREF: -[ViewController viewDidLoad]+435↑r
                                        ; -[ViewController S_RemoveView:]+9F↑r
                                        ; "addMoreAction"
; char *selRef_addBetaAction
selRef_addBetaAction dq offset sel_addBetaAction
                                        ; DATA XREF: -[ViewController viewDidLoad]+442↑r
                                        ; "addBetaAction"
; char *selRef_defaultCenter
selRef_defaultCenter dq offset sel_defaultCenter
                                        ; DATA XREF: -[ViewController viewDidLoad]+4FE↑r
                                        ; -[ViewController S_AddView:]+1CC↑r ...
                                        ; "defaultCenter"
; char *selRef_addObserver_selector_name_object_
selRef_addObserver_selector_name_object_ dq offset sel_addObserver_selector_name_object_
                                        ; DATA XREF: -[ViewController viewDidLoad]+51D↑r
                                        ; -[ViewController viewDidLoad]+59C↑r ...
                                        ; "addObserver:selector:name:object:"
selRef_closeWindow_ dq offset sel_closeWindow_
                                        ; DATA XREF: -[ViewController viewDidLoad]+5A6↑r
                                        ; "closeWindow:"
; char *selRef_window
selRef_window   dq offset sel_window    ; DATA XREF: -[ViewController viewDidLoad]+57E↑r
                                        ; -[ViewController betaClick]+256↑r ...
                                        ; "window"
; char *selRef_loadXibName_
selRef_loadXibName_ dq offset sel_loadXibName_
                                        ; DATA XREF: -[ViewController initView]+18↑r
                                        ; "loadXibName:"
; char *selRef_setHomeView_
selRef_setHomeView_ dq offset sel_setHomeView_
                                        ; DATA XREF: -[ViewController initView]+3B↑r
                                        ; "setHomeView:"
; char *selRef_homeView
selRef_homeView dq offset sel_homeView  ; DATA XREF: -[ViewController initView]+54↑r
                                        ; -[ViewController initView]+118↑r ...
                                        ; "homeView"
; char *selRef_redColor
selRef_redColor dq offset sel_redColor  ; DATA XREF: -[ViewController initView]+8F↑r
                                        ; -[UpdateView initWithFrame:]+5A0↑r ...
                                        ; "redColor"
; char *selRef_S_AddView_
selRef_S_AddView_ dq offset sel_S_AddView_
                                        ; DATA XREF: -[ViewController initView]+12D↑r
                                        ; -[ViewController moreClick]+9A↑r ...
                                        ; "S_AddView:"
; char *selRef_views
selRef_views    dq offset sel_views     ; DATA XREF: -[ViewController S_AddView:]+1D↑r
                                        ; -[ViewController S_RemoveView:]+11↑r ...
                                        ; "views"
; char *selRef_addObject_
selRef_addObject_ dq offset sel_addObject_
                                        ; DATA XREF: -[ViewController S_AddView:]+3C↑r
                                        ; sub_100007A60+BE↑r ...
                                        ; "addObject:"
; char *selRef_addSubview_positioned_relativeTo_
selRef_addSubview_positioned_relativeTo_ dq offset sel_addSubview_positioned_relativeTo_
                                        ; DATA XREF: -[ViewController S_AddView:]+85↑r
                                        ; "addSubview:positioned:relativeTo:"
; char *selRef_showAndHideBackButton
selRef_showAndHideBackButton dq offset sel_showAndHideBackButton
                                        ; DATA XREF: -[ViewController S_AddView:]+B2↑r
                                        ; -[ViewController S_RemoveView:]+69↑r
                                        ; "showAndHideBackButton"
; char *selRef_getMoreMenuItem
selRef_getMoreMenuItem dq offset sel_getMoreMenuItem
                                        ; DATA XREF: -[ViewController S_AddView:]+F1↑r
                                        ; -[ViewController addMoreAction]+18↑r
                                        ; "getMoreMenuItem"
; char *selRef_setEnabled_
selRef_setEnabled_ dq offset sel_setEnabled_
                                        ; DATA XREF: -[ViewController S_AddView:]+17E↑r
                                        ; "setEnabled:"
; char *selRef_updateView
selRef_updateView dq offset sel_updateView
                                        ; DATA XREF: -[ViewController S_AddView:]:loc_10000510E↑r
                                        ; -[ViewController back]+92↑r ...
                                        ; "updateView"
selRef_updateingError dq offset sel_updateingError
                                        ; DATA XREF: -[ViewController S_AddView:]+1FC↑r
                                        ; -[UpdateView timerOut]:loc_100016945↑r ...
                                        ; "updateingError"
; char *selRef_removeObject_
selRef_removeObject_ dq offset sel_removeObject_
                                        ; DATA XREF: -[ViewController S_RemoveView:]+3F↑r
                                        ; -[HomeView removeS8BitdoDevice:]+7B↑r ...
                                        ; "removeObject:"
; char *selRef_removeFromSuperview
selRef_removeFromSuperview dq offset sel_removeFromSuperview
                                        ; DATA XREF: -[ViewController S_RemoveView:]+5C↑r
                                        ; -[UpdateView removeFromSuperview]+AF↑r ...
                                        ; "removeFromSuperview"
; char *selRef_setHidden_
selRef_setHidden_ dq offset sel_setHidden_
                                        ; DATA XREF: -[ViewController showAndHideBackButton]+6A↑r
                                        ; -[UpdateView initWithFrame:]+60A↑r ...
                                        ; "setHidden:"
; char *selRef_getCheckUpdateMenuItem
selRef_getCheckUpdateMenuItem dq offset sel_getCheckUpdateMenuItem
                                        ; DATA XREF: -[ViewController addCheckUpdat]+19↑r
                                        ; "getCheckUpdateMenuItem"
; char *selRef_mainBundle
selRef_mainBundle dq offset sel_mainBundle
                                        ; DATA XREF: -[ViewController addCheckUpdat]+3C↑r
                                        ; -[ViewController addMoreAction]+3B↑r ...
                                        ; "mainBundle"
; char *selRef_localizedStringForKey_value_table_
selRef_localizedStringForKey_value_table_ dq offset sel_localizedStringForKey_value_table_
                                        ; DATA XREF: -[ViewController addCheckUpdat]+51↑r
                                        ; -[ViewController addMoreAction]+50↑r ...
                                        ; "localizedStringForKey:value:table:"
; char *selRef_setTitle_
selRef_setTitle_ dq offset sel_setTitle_
                                        ; DATA XREF: -[ViewController addCheckUpdat]+7A↑r
                                        ; -[ViewController addMoreAction]+79↑r ...
                                        ; "setTitle:"
selRef_updateClick dq offset sel_updateClick
                                        ; DATA XREF: -[ViewController addCheckUpdat]+AE↑r
                                        ; "updateClick"
; char *selRef_shared
selRef_shared   dq offset sel_shared    ; DATA XREF: -[ViewController updateClick]+E↑r
                                        ; "shared"
; char *selRef_checkForUpdates
selRef_checkForUpdates dq offset sel_checkForUpdates
                                        ; DATA XREF: -[ViewController updateClick]+2A↑r
                                        ; sub_10001A4D8+27↑r
                                        ; "checkForUpdates"
selRef_moreClick dq offset sel_moreClick
                                        ; DATA XREF: -[ViewController addMoreAction]+AB↑r
                                        ; -[ViewController addBootDevice:]+4↑r
                                        ; "moreClick"
; char *selRef_setMoreMenuItemSelf_
selRef_setMoreMenuItemSelf_ dq offset sel_setMoreMenuItemSelf_
                                        ; DATA XREF: -[ViewController addMoreAction]+C9↑r
                                        ; "setMoreMenuItemSelf:"
; char *selRef_setMoreMenuItemAction_
selRef_setMoreMenuItemAction_ dq offset sel_setMoreMenuItemAction_
                                        ; DATA XREF: -[ViewController addMoreAction]+DD↑r
                                        ; "setMoreMenuItemAction:"
; char *selRef_chengBeta_
selRef_chengBeta_ dq offset sel_chengBeta_
                                        ; DATA XREF: -[ViewController addBetaAction]+5B↑r
                                        ; -[ViewController betaClick]+5A↑r ...
                                        ; "chengBeta:"
; char *selRef_getBetaMenuItem
selRef_getBetaMenuItem dq offset sel_getBetaMenuItem
                                        ; DATA XREF: -[ViewController addBetaAction]+76↑r
                                        ; -[ViewController chengBeta:]+AD↑r ...
                                        ; "getBetaMenuItem"
; char *selRef_title
selRef_title    dq offset sel_title     ; DATA XREF: -[ViewController addBetaAction]+F4↑r
                                        ; -[ViewController chengBeta:]+C3↑r ...
                                        ; "title"
; char *selRef_stringByAppendingFormat_
selRef_stringByAppendingFormat_ dq offset sel_stringByAppendingFormat_
                                        ; DATA XREF: -[ViewController addBetaAction]+164↑r
                                        ; -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+56↑r ...
                                        ; "stringByAppendingFormat:"
selRef_betaClick dq offset sel_betaClick
                                        ; DATA XREF: -[ViewController addBetaAction]+1D1↑r
                                        ; "betaClick"
; char *selRef_removeObserver_
selRef_removeObserver_ dq offset sel_removeObserver_
                                        ; DATA XREF: -[ViewController dealloc]+33↑r
                                        ; "removeObserver:"
selRef_dealloc  dq offset sel_dealloc   ; DATA XREF: -[ViewController dealloc]+5E↑r
                                        ; "dealloc"
; char *selRef_state
selRef_state    dq offset sel_state     ; DATA XREF: -[ViewController back]+153↑r
                                        ; -[UpdateView loadViews]+141E↑r ...
                                        ; "state"
; char *selRef_moreView
selRef_moreView dq offset sel_moreView  ; DATA XREF: -[ViewController back]+1D2↑r
                                        ; -[ViewController moreClick]+7B↑r
                                        ; "moreView"
; char *selRef_containsObject_
selRef_containsObject_ dq offset sel_containsObject_
                                        ; DATA XREF: -[ViewController back]+1ED↑r
                                        ; sub_10001AD4A+7F↑r ...
                                        ; "containsObject:"
; char *selRef_S_RemoveView_
selRef_S_RemoveView_ dq offset sel_S_RemoveView_
                                        ; DATA XREF: -[ViewController back]+FF↑r
                                        ; -[ViewController back]+237↑r
                                        ; "S_RemoveView:"
; char *selRef_addButtonWithTitle_
selRef_addButtonWithTitle_ dq offset sel_addButtonWithTitle_
                                        ; DATA XREF: -[ViewController betaClick]+D4↑r
                                        ; -[ViewController betaClick]+144↑r ...
                                        ; "addButtonWithTitle:"
; char *selRef_setMessageText_
selRef_setMessageText_ dq offset sel_setMessageText_
                                        ; DATA XREF: -[ViewController betaClick]+1AA↑r
                                        ; sub_1000166BA+8B↑r ...
                                        ; "setMessageText:"
; char *selRef_setInformativeText_
selRef_setInformativeText_ dq offset sel_setInformativeText_
                                        ; DATA XREF: -[ViewController betaClick]+20B↑r
                                        ; -[HomeView helpButtonClick:]+14D↑r
                                        ; "setInformativeText:"
; char *selRef_setAlertStyle_
selRef_setAlertStyle_ dq offset sel_setAlertStyle_
                                        ; DATA XREF: -[ViewController betaClick]+22D↑r
                                        ; sub_1000166BA+A4↑r ...
                                        ; "setAlertStyle:"
; char *selRef_beginSheetModalForWindow_completionHandler_
selRef_beginSheetModalForWindow_completionHandler_ dq offset sel_beginSheetModalForWindow_completionHandler_
                                        ; DATA XREF: -[ViewController betaClick]+29E↑r
                                        ; sub_1000166BA+CC↑r ...
                                        ; "beginSheetModalForWindow:completionHand"...
; char *selRef_setBool_forKey_
selRef_setBool_forKey_ dq offset sel_setBool_forKey_
                                        ; DATA XREF: -[ViewController chengBeta:]+42↑r
                                        ; "setBool:forKey:"
; char *selRef_sharedApplication
selRef_sharedApplication dq offset sel_sharedApplication
                                        ; DATA XREF: -[ViewController closeWindow:]+27↑r
                                        ; +[SMainMenu getCheckUpdateMenuItem]+29↑r ...
                                        ; "sharedApplication"
; char *selRef_mainWindow
selRef_mainWindow dq offset sel_mainWindow
                                        ; DATA XREF: -[ViewController closeWindow:]+40↑r
                                        ; "mainWindow"
; char *selRef_object
selRef_object   dq offset sel_object    ; DATA XREF: -[ViewController closeWindow:]:loc_10000609C↑r
                                        ; "object"
; char *selRef_className
selRef_className dq offset sel_className
                                        ; DATA XREF: -[ViewController closeWindow:]+DB↑r
                                        ; -[UpdateView findBackButton:]:loc_1000144D1↑r
                                        ; "className"
; char *selRef_terminate_
selRef_terminate_ dq offset sel_terminate_
                                        ; DATA XREF: -[ViewController closeWindow:]+147↑r
                                        ; "terminate:"
; char *selRef_addS8BitdoDevice_
selRef_addS8BitdoDevice_ dq offset sel_addS8BitdoDevice_
                                        ; DATA XREF: -[ViewController addS8BitdoDevice:]+3C↑r
                                        ; -[SHIDSwitchAndMac addS8BitdoDeviceRefreshUI:]+30↑r ...
                                        ; "addS8BitdoDevice:"
; char *selRef_removeS8BitdoDevice_
selRef_removeS8BitdoDevice_ dq offset sel_removeS8BitdoDevice_
                                        ; DATA XREF: -[ViewController removeS8BitdoDevice:]+3C↑r
                                        ; -[SHIDSwitchAndMac remove8BitdoDeviceRefreshUI:]+30↑r ...
                                        ; "removeS8BitdoDevice:"
; char *selRef_setDevice_
selRef_setDevice_ dq offset sel_setDevice_
                                        ; DATA XREF: -[ViewController firmwaerUpdateClick:from:]+42↑r
                                        ; -[ViewController hasNewFirmwaerVersion:firmwaer:]+1E8↑r ...
                                        ; "setDevice:"
; char *selRef_setminiImageposition_
selRef_setminiImageposition_ dq offset sel_setminiImageposition_
                                        ; DATA XREF: -[ViewController firmwaerUpdateClick:from:]+7F↑r
                                        ; -[ViewController hasNewFirmwaerVersion:firmwaer:]+21C↑r
                                        ; "setminiImageposition:"
; char *selRef_setState_
selRef_setState_ dq offset sel_setState_
                                        ; DATA XREF: -[ViewController firmwaerUpdateClick:from:]+AC↑r
                                        ; -[ViewController hasNewFirmwaerVersion:firmwaer:]+24C↑r ...
                                        ; "setState:"
; char *selRef_loadViews
selRef_loadViews dq offset sel_loadViews
                                        ; DATA XREF: -[ViewController firmwaerUpdateClick:from:]+105↑r
                                        ; -[UpdateView layout]+2A↑r
                                        ; "loadViews"
; char *selRef_subviews
selRef_subviews dq offset sel_subviews  ; DATA XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+82↑r
                                        ; -[UpdateView manualViewRemoveFromSuperView]+3F↑r ...
                                        ; "subviews"
; char *selRef_class
selRef_class    dq offset sel_class     ; DATA XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]:loc_100006441↑r
                                        ; -[UpdateView manualViewRemoveFromSuperView]:loc_100012DA1↑r ...
                                        ; "class"
selRef_setNewFirmwaer_ dq offset sel_setNewFirmwaer_
                                        ; DATA XREF: -[ViewController hasNewFirmwaerVersion:firmwaer:]+2B0↑r
                                        ; "setNewFirmwaer:"
; char *selRef_moreDevice
selRef_moreDevice dq offset sel_moreDevice
                                        ; DATA XREF: -[ViewController MoreViewClick:View:]+40↑r
                                        ; -[ViewController MoreViewClick:View:]+8B↑r
                                        ; "moreDevice"
; char *selRef_firmwaerUpdateClick_from_
selRef_firmwaerUpdateClick_from_ dq offset sel_firmwaerUpdateClick_from_
                                        ; DATA XREF: -[ViewController MoreViewClick:View:]+A0↑r
                                        ; -[ViewController MoreViewClick:View:]:loc_10000671F↑r ...
                                        ; "firmwaerUpdateClick:from:"
selRef_noV1AndV2 dq offset sel_noV1AndV2
                                        ; DATA XREF: -[ViewController MoreViewClick:View:]+20E↑r
                                        ; "noV1AndV2"
; char *selRef_bootDelegate
selRef_bootDelegate dq offset sel_bootDelegate
                                        ; DATA XREF: sub_100006BBC+4C↑r
                                        ; sub_100006CCA+13A↑r ...
                                        ; "bootDelegate"
; char *selRef_SHIDBootGetFirmwaerType_hid_
selRef_SHIDBootGetFirmwaerType_hid_ dq offset sel_SHIDBootGetFirmwaerType_hid_
                                        ; DATA XREF: sub_100006BBC+60↑r
                                        ; "SHIDBootGetFirmwaerType:hid:"
; char *selRef_respondsToSelector_
selRef_respondsToSelector_ dq offset sel_respondsToSelector_
                                        ; DATA XREF: sub_100006BBC+67↑r
                                        ; sub_100006CCA+14E↑r ...
                                        ; "respondsToSelector:"
; char *selRef_filePath
selRef_filePath dq offset sel_filePath  ; DATA XREF: sub_100006CCA+19↑r
                                        ; sub_100006F09+7D↑r ...
                                        ; "filePath"
; char *selRef_initWithFileAtPath_
selRef_initWithFileAtPath_ dq offset sel_initWithFileAtPath_
                                        ; DATA XREF: sub_100006CCA+55↑r
                                        ; sub_100006F09+8E↑r ...
                                        ; "initWithFileAtPath:"
; char *selRef_read_maxLength_
selRef_read_maxLength_ dq offset sel_read_maxLength_
                                        ; DATA XREF: sub_100006CCA+7E↑r
                                        ; sub_100006F09+D3↑r ...
                                        ; "read:maxLength:"
; char *selRef_SHIDBootNotSupportFirmware_
selRef_SHIDBootNotSupportFirmware_ dq offset sel_SHIDBootNotSupportFirmware_
                                        ; DATA XREF: sub_100006CCA+147↑r
                                        ; sub_10000C5C1+672↑r ...
                                        ; "SHIDBootNotSupportFirmware:"
; char *selRef_close
selRef_close    dq offset sel_close     ; DATA XREF: sub_100006CCA:loc_100006DBD↑r
                                        ; sub_100006CCA:loc_100006E49↑r ...
                                        ; "close"
; char *selRef_SHIDBootStartUpdate_
selRef_SHIDBootStartUpdate_ dq offset sel_SHIDBootStartUpdate_
                                        ; DATA XREF: sub_100006F09+14D↑r
                                        ; -[SHIDBootPro2 writeFirmwareJL]+50↑r ...
                                        ; "SHIDBootStartUpdate:"
; char *selRef_lastProgress
selRef_lastProgress dq offset sel_lastProgress
                                        ; DATA XREF: sub_100006F09+37E↑r
                                        ; "lastProgress"
; char *selRef_SHIDBootStartUpdateing_shid_
selRef_SHIDBootStartUpdateing_shid_ dq offset sel_SHIDBootStartUpdateing_shid_
                                        ; DATA XREF: sub_100006F09+3A1↑r
                                        ; sub_100006F09+3D0↑r ...
                                        ; "SHIDBootStartUpdateing:shid:"
; char *selRef_setLastProgress_
selRef_setLastProgress_ dq offset sel_setLastProgress_
                                        ; DATA XREF: sub_100006F09+3E4↑r
                                        ; "setLastProgress:"
; char *selRef_isUSBRR_PS_classic
selRef_isUSBRR_PS_classic dq offset sel_isUSBRR_PS_classic
                                        ; DATA XREF: sub_100006F09+453↑r
                                        ; "isUSBRR_PS_classic"
; char *selRef_SHIDBootStartUpdateed_
selRef_SHIDBootStartUpdateed_ dq offset sel_SHIDBootStartUpdateed_
                                        ; DATA XREF: sub_100006F09+585↑r
                                        ; sub_1000075A5+5B↑r ...
                                        ; "SHIDBootStartUpdateed:"
; char *selRef_setDeviceRef_
selRef_setDeviceRef_ dq offset sel_setDeviceRef_
                                        ; DATA XREF: sub_100006F09+214↑r
                                        ; sub_100007A60+A1↑r ...
                                        ; "setDeviceRef:"
; char *selRef_setVersion_
selRef_setVersion_ dq offset sel_setVersion_
                                        ; DATA XREF: sub_100006F09:loc_100007146↑r
                                        ; sub_10000AF5A+B0↑r ...
                                        ; "setVersion:"
; char *selRef_setBeta_
selRef_setBeta_ dq offset sel_setBeta_  ; DATA XREF: sub_100006F09+254↑r
                                        ; sub_10000AF5A+C4↑r ...
                                        ; "setBeta:"
; char *selRef_SHIDBootGetVersion_hid_
selRef_SHIDBootGetVersion_hid_ dq offset sel_SHIDBootGetVersion_hid_
                                        ; DATA XREF: sub_100006F09+27B↑r
                                        ; sub_10000AF5A+55↑r ...
                                        ; "SHIDBootGetVersion:hid:"
; char *selRef_setPid_
selRef_setPid_  dq offset sel_setPid_   ; DATA XREF: sub_100007A60+50↑r
                                        ; sub_100008C49+E6↑r ...
                                        ; "setPid:"
; char *selRef_setVid_
selRef_setVid_  dq offset sel_setVid_   ; DATA XREF: sub_100007A60+6A↑r
                                        ; sub_100008C49+100↑r ...
                                        ; "setVid:"
; char *selRef_setDeviceName_
selRef_setDeviceName_ dq offset sel_setDeviceName_
                                        ; DATA XREF: sub_100007A60+91↑r
                                        ; sub_100008C49+123↑r ...
                                        ; "setDeviceName:"
; char *selRef_devices
selRef_devices  dq offset sel_devices   ; DATA XREF: sub_100007A60+B1↑r
                                        ; sub_100019669+CC↑r ...
                                        ; "devices"
; char *selRef_SHIDBootAddDevice_hid_
selRef_SHIDBootAddDevice_hid_ dq offset sel_SHIDBootAddDevice_hid_
                                        ; DATA XREF: sub_100007A60+11E↑r
                                        ; sub_100008C49+A1↑r ...
                                        ; "SHIDBootAddDevice:hid:"
; char *selRef_SHIDBootRemoveDevice_hid_
selRef_SHIDBootRemoveDevice_hid_ dq offset sel_SHIDBootRemoveDevice_hid_
                                        ; DATA XREF: sub_100007BD2+25↑r
                                        ; sub_100008DE0+48↑r ...
                                        ; "SHIDBootRemoveDevice:hid:"
; char *selRef_setHidManager_
selRef_setHidManager_ dq offset sel_setHidManager_
                                        ; DATA XREF: -[SHIDBoot open]+30↑r
                                        ; -[SHIDBootPro2 open]+29↑r ...
                                        ; "setHidManager:"
; char *selRef_dictionary
selRef_dictionary dq offset sel_dictionary
                                        ; DATA XREF: -[SHIDBoot open]+4D↑r
                                        ; -[SHIDBoot open]+E4↑r ...
                                        ; "dictionary"
; char *selRef_numberWithLong_
selRef_numberWithLong_ dq offset sel_numberWithLong_
                                        ; DATA XREF: -[SHIDBoot open]+60↑r
                                        ; -[SHIDBoot open]+B0↑r ...
                                        ; "numberWithLong:"
; char *selRef_stringWithUTF8String_
selRef_stringWithUTF8String_ dq offset sel_stringWithUTF8String_
                                        ; DATA XREF: -[SHIDBoot open]+78↑r
                                        ; -[SHIDBoot open]+112↑r ...
                                        ; "stringWithUTF8String:"
; char *selRef_hidManager
selRef_hidManager dq offset sel_hidManager
                                        ; DATA XREF: -[SHIDBoot open]+2BA↑r
                                        ; -[SHIDBootPro2 open]+23D↑r ...
                                        ; "hidManager"
selRef_drawRect_ dq offset sel_drawRect_
                                        ; DATA XREF: -[SView drawRect:]+1A↑r
                                        ; -[SMiniImageView drawRect:]+1A↑r ...
                                        ; "drawRect:"
; char *selRef_initWithFrame_
selRef_initWithFrame_ dq offset sel_initWithFrame_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+21↑r
                                        ; -[UpdateView initWithFrame:]+23↑r ...
                                        ; "initWithFrame:"
; char *selRef_imageNamed_
selRef_imageNamed_ dq offset sel_imageNamed_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+54↑r
                                        ; -[UpdateView setDevice:]+60↑r ...
                                        ; "imageNamed:"
; char *selRef_setImage_
selRef_setImage_ dq offset sel_setImage_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+77↑r
                                        ; -[UpdateView setDevice:]+93↑r ...
                                        ; "setImage:"
; char *selRef_setBezelStyle_
selRef_setBezelStyle_ dq offset sel_setBezelStyle_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+94↑r
                                        ; -[UpdateView initWithFrame:]+442↑r ...
                                        ; "setBezelStyle:"
; char *selRef_setAlignment_
selRef_setAlignment_ dq offset sel_setAlignment_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+A6↑r
                                        ; -[UpdateView initWithFrame:]+46E↑r ...
                                        ; "setAlignment:"
; char *selRef_setFrameSize_
selRef_setFrameSize_ dq offset sel_setFrameSize_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+B8↑r
                                        ; "setFrameSize:"
; char *selRef_setBordered_
selRef_setBordered_ dq offset sel_setBordered_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+D0↑r
                                        ; -[UpdateView refreshFirmwaerList]+6D2↑r ...
                                        ; "setBordered:"
; char *selRef_setBorderWidth_
selRef_setBorderWidth_ dq offset sel_setBorderWidth_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+F7↑r
                                        ; -[UpdateView refreshFirmwaerList]+590↑r ...
                                        ; "setBorderWidth:"
; char *selRef_setImageScaling_
selRef_setImageScaling_ dq offset sel_setImageScaling_
                                        ; DATA XREF: -[SBackButton initWithFrame:]+10D↑r
                                        ; -[UpdateView refreshFirmwaerList]+6E0↑r ...
                                        ; "setImageScaling:"
; char *selRef_order
selRef_order    dq offset sel_order     ; DATA XREF: -[S8BitdoDataDetails description]+6F↑r
                                        ; +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+A2↑r
                                        ; "order"
; char *selRef_getNameWith_pid_name_
selRef_getNameWith_pid_name_ dq offset sel_getNameWith_pid_name_
                                        ; DATA XREF: -[S8BitdoDataDetails name]+33↑r
                                        ; -[Firmware fileName]+12↑r
                                        ; "getNameWith:pid:name:"
; char *selRef_mj_objectArrayWithFilename_
selRef_mj_objectArrayWithFilename_ dq offset sel_mj_objectArrayWithFilename_
                                        ; DATA XREF: +[S8BitdoDeviceDetailsTools load]+B↑r
                                        ; +[NSObject objectArrayWithFilename:]+4↑r ...
                                        ; "mj_objectArrayWithFilename:"
selRef_allocWithZone_ dq offset sel_allocWithZone_
                                        ; DATA XREF: sub_1000089B0+22↑r
                                        ; sub_100025E17+22↑r ...
                                        ; "allocWithZone:"
; char *selRef_sharedInstance
selRef_sharedInstance dq offset sel_sharedInstance
                                        ; DATA XREF: sub_100008B19+19↑r
                                        ; sub_100008B19+DD↑r ...
                                        ; "sharedInstance"
; char *selRef_blocks
selRef_blocks   dq offset sel_blocks    ; DATA XREF: sub_100008B19+34↑r
                                        ; -[SHIDBootPro2 addBlock:Cmd:]+14↑r ...
                                        ; "blocks"
; char *selRef_intValue
selRef_intValue dq offset sel_intValue  ; DATA XREF: sub_100008B19+9F↑r
                                        ; -[MJPropertyKey valueInObject:]+C1↑r ...
                                        ; "intValue"
; char *selRef_readReadFlash_Cmd_Block_
selRef_readReadFlash_Cmd_Block_ dq offset sel_readReadFlash_Cmd_Block_
                                        ; DATA XREF: sub_100008B19+F1↑r
                                        ; "readReadFlash:Cmd:Block:"
; char *selRef_bootType
selRef_bootType dq offset sel_bootType  ; DATA XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]:loc_10000925A↑r
                                        ; -[SHIDBootPro2 readBoot_Serial]+23↑r ...
                                        ; "bootType"
; char *selRef_bootType_PID
selRef_bootType_PID dq offset sel_bootType_PID
                                        ; DATA XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]:loc_1000092D6↑r
                                        ; sub_10000A19F+1D2↑r ...
                                        ; "bootType_PID"
; char *selRef_device
selRef_device   dq offset sel_device    ; DATA XREF: -[SHIDBootPro2 Generate_bootCmdPacket:Len:Offset:Total_Len:Boot_CMD_e:CMD_params:]:loc_100009297↑r
                                        ; -[UpdateView setminiImageposition:]+89↑r ...
                                        ; "device"
; char *selRef_removeAllObjects
selRef_removeAllObjects dq offset sel_removeAllObjects
                                        ; DATA XREF: -[SHIDBootPro2 addBlock:Cmd:]+42↑r
                                        ; -[SHIDBootHJZ addBlock:Cmd:]+42↑r ...
                                        ; "removeAllObjects"
; char *selRef_setObject_forKeyedSubscript_
selRef_setObject_forKeyedSubscript_ dq offset sel_setObject_forKeyedSubscript_
                                        ; DATA XREF: -[SHIDBootPro2 addBlock:Cmd:]+88↑r
                                        ; sub_10001C73D+3E6↑r ...
                                        ; "setObject:forKeyedSubscript:"
; char *selRef_numberWithUnsignedChar_
selRef_numberWithUnsignedChar_ dq offset sel_numberWithUnsignedChar_
                                        ; DATA XREF: -[SHIDBootPro2 addBlock:Cmd:]+B2↑r
                                        ; -[SHIDBootHJZ addBlock:Cmd:]+B2↑r
                                        ; "numberWithUnsignedChar:"
; char *selRef_addBlock_Cmd_
selRef_addBlock_Cmd_ dq offset sel_addBlock_Cmd_
                                        ; DATA XREF: -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]+25↑r
                                        ; -[SHIDBootHJZ writeDataCMD:block:]+14↑r
                                        ; "addBlock:Cmd:"
; char *selRef_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params_
selRef_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params_ dq offset sel_Generate_bootCmdPacket_Len_Offset_Total_Len_Boot_CMD_e_CMD_params_
                                        ; DATA XREF: -[SHIDBootPro2 BootReadFlash:Len:Address:Total_Len:Cmd:Block:]+38↑r
                                        ; "Generate_bootCmdPacket:Len:Offset:Total"...
; char *selRef_pfile
selRef_pfile    dq offset sel_pfile     ; DATA XREF: sub_1000095F5+3F↑r
                                        ; -[SHIDBootPro2 writeFirmwareJL]+1EA↑r ...
                                        ; "pfile"
; char *selRef_fileHandleForReadingAtPath_
selRef_fileHandleForReadingAtPath_ dq offset sel_fileHandleForReadingAtPath_
                                        ; DATA XREF: sub_1000095F5+AE↑r
                                        ; sub_10000AAF4+56↑r ...
                                        ; "fileHandleForReadingAtPath:"
; char *selRef_appZoneAddr
selRef_appZoneAddr dq offset sel_appZoneAddr
                                        ; DATA XREF: sub_1000095F5+DE↑r
                                        ; sub_100009DB9+60↑r ...
                                        ; "appZoneAddr"
; char *selRef_seekToFileOffset_
selRef_seekToFileOffset_ dq offset sel_seekToFileOffset_
                                        ; DATA XREF: sub_1000095F5+EB↑r
                                        ; sub_10000A93F+126↑r ...
                                        ; "seekToFileOffset:"
; char *selRef_readDataOfLength_
selRef_readDataOfLength_ dq offset sel_readDataOfLength_
                                        ; DATA XREF: sub_1000095F5+FD↑r
                                        ; sub_10000AAF4+1B8↑r ...
                                        ; "readDataOfLength:"
; char *selRef_SHIDBootErrorString_msg_
selRef_SHIDBootErrorString_msg_ dq offset sel_SHIDBootErrorString_msg_
                                        ; DATA XREF: sub_1000095F5:loc_100009825↑r
                                        ; sub_100009F55+CD↑r ...
                                        ; "SHIDBootErrorString:msg:"
; char *selRef_resetGamepad
selRef_resetGamepad dq offset sel_resetGamepad
                                        ; DATA XREF: sub_1000095F5+21E↑r
                                        ; sub_10000BE6B+12D↑r ...
                                        ; "resetGamepad"
; char *selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_
selRef_BootReadFlash_Len_Address_Total_Len_Cmd_Block_ dq offset sel_BootReadFlash_Len_Address_Total_Len_Cmd_Block_
                                        ; DATA XREF: -[SHIDBootPro2 flashCRC]+5B↑r
                                        ; -[SHIDBootPro2 writeSave_Head_4K]+39↑r ...
                                        ; "BootReadFlash:Len:Address:Total_Len:Cmd"...
selRef_flashCRC dq offset sel_flashCRC  ; DATA XREF: sub_100009979+8↑r
                                        ; "flashCRC"
; char *selRef_offset
selRef_offset   dq offset sel_offset    ; DATA XREF: -[SHIDBootPro2 writeFirmwareJL]:loc_100009B36↑r
                                        ; -[SHIDBootPro2 writeFirmwareJL]+21A↑r ...
                                        ; "offset"
; char *selRef_setOffset_
selRef_setOffset_ dq offset sel_setOffset_
                                        ; DATA XREF: sub_100009CEC+2D↑r
                                        ; sub_10000AE33+E↑r ...
                                        ; "setOffset:"
; char *selRef_writeFirmwareJL
selRef_writeFirmwareJL dq offset sel_writeFirmwareJL
                                        ; DATA XREF: sub_100009CEC+51↑r
                                        ; sub_100009DB9+F3↑r
                                        ; "writeFirmwareJL"
selRef_writeSave_Head_4K dq offset sel_writeSave_Head_4K
                                        ; DATA XREF: -[SHIDBootPro2 writeFirmwareJL]:loc_100009CCE↑r
                                        ; -[SHIDBootPro2 writeFirmware]:loc_10000B57E↑r
                                        ; "writeSave_Head_4K"
selRef_eraseFlashJL_len_TotalEraseLen_ dq offset sel_eraseFlashJL_len_TotalEraseLen_
                                        ; DATA XREF: sub_100009DB9+41↑r
                                        ; -[SHIDBootPro2 eraseFlashJL:eraseUnitSize:blockCount:]+8↑r
                                        ; "eraseFlashJL:len:TotalEraseLen:"
; char *selRef_setAppZoneAddr_
selRef_setAppZoneAddr_ dq offset sel_setAppZoneAddr_
                                        ; DATA XREF: sub_100009F55+2A↑r
                                        ; "setAppZoneAddr:"
selRef_eraseFlashJL_eraseUnitSize_blockCount_ dq offset sel_eraseFlashJL_eraseUnitSize_blockCount_
                                        ; DATA XREF: sub_100009F55+72↑r
                                        ; "eraseFlashJL:eraseUnitSize:blockCount:"
; char *selRef_setBootType_PID_
selRef_setBootType_PID_ dq offset sel_setBootType_PID_
                                        ; DATA XREF: -[SHIDBootPro2 readPID]+26↑r
                                        ; sub_10000A19F+1C1↑r ...
                                        ; "setBootType_PID:"
; char *selRef_setBootType_
selRef_setBootType_ dq offset sel_setBootType_
                                        ; DATA XREF: sub_10000A19F+1AC↑r
                                        ; sub_10000A19F+245↑r
                                        ; "setBootType:"
selRef_updateJL_ dq offset sel_updateJL_
                                        ; DATA XREF: sub_10000A19F+1F5↑r
                                        ; "updateJL:"
; char *selRef_isUltmateWired_
selRef_isUltmateWired_ dq offset sel_isUltmateWired_
                                        ; DATA XREF: sub_10000A19F+215↑r
                                        ; sub_10000AF5A+126↑r
                                        ; "isUltmateWired:"
; char *selRef_getPro2Version
selRef_getPro2Version dq offset sel_getPro2Version
                                        ; DATA XREF: sub_10000A19F+258↑r
                                        ; "getPro2Version"
selRef_readBoot_Serial dq offset sel_readBoot_Serial
                                        ; DATA XREF: sub_10000A538+8↑r
                                        ; sub_10000AF5A+150↑r
                                        ; "readBoot_Serial"
; char *selRef_Get_key_data
selRef_Get_key_data dq offset sel_Get_key_data
                                        ; DATA XREF: -[SHIDBootPro2 readBoot_Serial]+12↑r
                                        ; "Get_key_data"
selRef_readGamepadInfo_ dq offset sel_readGamepadInfo_
                                        ; DATA XREF: -[SHIDBootPro2 readBoot_Serial]:loc_10000A692↑r
                                        ; "readGamepadInfo:"
selRef_readDevice_serial dq offset sel_readDevice_serial
                                        ; DATA XREF: sub_10000A6B3+1C↑r
                                        ; "readDevice_serial"
selRef_earseFlash dq offset sel_earseFlash
                                        ; DATA XREF: -[SHIDBootPro2 readDevice_serial]+D7↑r
                                        ; sub_10000A836+2A↑r
                                        ; "earseFlash"
selRef_earseFlashPro2Version dq offset sel_earseFlashPro2Version
                                        ; DATA XREF: sub_10000A93F+27↑o
                                        ; "earseFlashPro2Version"
selRef_writeFirmware dq offset sel_writeFirmware
                                        ; DATA XREF: sub_10000A93F:loc_10000AA72↑o
                                        ; sub_10000A93F:loc_10000AA7B↑o ...
                                        ; "writeFirmware"
selRef_writeFirmwareBLE dq offset sel_writeFirmwareBLE
                                        ; DATA XREF: sub_10000AE33+25↑r
                                        ; sub_10000B852+51↑r
                                        ; "writeFirmwareBLE"
selRef_earseFlashBLE dq offset sel_earseFlashBLE
                                        ; DATA XREF: -[SHIDBootPro2 writeFirmware]+47F↑r
                                        ; "earseFlashBLE"
selRef_setPro2ApplicationEncodeId dq offset sel_setPro2ApplicationEncodeId
                                        ; DATA XREF: -[SHIDBootPro2 writeFirmware]:loc_10000B587↑r
                                        ; sub_10000C050+8↑r
                                        ; "setPro2ApplicationEncodeId"
selRef_setBLEApplicationEncodeId dq offset sel_setBLEApplicationEncodeId
                                        ; DATA XREF: -[SHIDBootPro2 writeFirmwareBLE]:loc_10000B834↑r
                                        ; "setBLEApplicationEncodeId"
; char *selRef_Flash_CRC_crcIndex_
selRef_Flash_CRC_crcIndex_ dq offset sel_Flash_CRC_crcIndex_
                                        ; DATA XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]:loc_10000B9C4↑r
                                        ; sub_10000CF19+1C8↑r ...
                                        ; "Flash_CRC:crcIndex:"
; char *selRef_setPro2Version
selRef_setPro2Version dq offset sel_setPro2Version
                                        ; DATA XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]:loc_10000BA91↑r
                                        ; sub_10000BAAB+8↑r ...
                                        ; "setPro2Version"
selRef_setBleVersion dq offset sel_setBleVersion
                                        ; DATA XREF: sub_10000BB2B+8↑r
                                        ; "setBleVersion"
; char *selRef_attributesOfItemAtPath_error_
selRef_attributesOfItemAtPath_error_ dq offset sel_attributesOfItemAtPath_error_
                                        ; DATA XREF: sub_10000AAF4+15D↑r
                                        ; sub_10000C0C6+104↑r ...
                                        ; "attributesOfItemAtPath:error:"
; char *selRef_fileSize
selRef_fileSize dq offset sel_fileSize  ; DATA XREF: sub_10000AAF4+181↑r
                                        ; sub_10000C0C6+12E↑r ...
                                        ; "fileSize"
; char *selRef_setPfile_
selRef_setPfile_ dq offset sel_setPfile_
                                        ; DATA XREF: sub_10000C3F9+188↑r
                                        ; sub_10000C5C1+3BC↑r ...
                                        ; "setPfile:"
; char *selRef_SHIDBootErrorNOEqualPID_gamepadType_pid_
selRef_SHIDBootErrorNOEqualPID_gamepadType_pid_ dq offset sel_SHIDBootErrorNOEqualPID_gamepadType_pid_
                                        ; DATA XREF: sub_10000C5C1+3F8↑r
                                        ; sub_10000C5C1+4B9↑r
                                        ; "SHIDBootErrorNOEqualPID:gamepadType:pid"...
selRef_readFlash_ dq offset sel_readFlash_
                                        ; DATA XREF: -[SHIDBootPro2 readFlash]+4↑r
                                        ; sub_10000CD6C+B8↑r
                                        ; "readFlash:"
selRef_changeUIWithState_ dq offset sel_changeUIWithState_
                                        ; DATA XREF: -[UpdateView setState:]+F↑r
                                        ; "changeUIWithState:"
; char *selRef_miniImageName
selRef_miniImageName dq offset sel_miniImageName
                                        ; DATA XREF: -[UpdateView setDevice:]+48↑r
                                        ; "miniImageName"
; char *selRef_miniImageView
selRef_miniImageView dq offset sel_miniImageView
                                        ; DATA XREF: -[UpdateView setDevice:]+7B↑r
                                        ; -[UpdateView setminiImageposition:]+14↑r ...
                                        ; "miniImageView"
; char *selRef_setIsSelect_
selRef_setIsSelect_ dq offset sel_setIsSelect_
                                        ; DATA XREF: -[UpdateView setminiImageposition:]+30↑r
                                        ; -[UpdateView setminiImageposition:]+ED↑r ...
                                        ; "setIsSelect:"
; char *selRef_miniRRImageView
selRef_miniRRImageView dq offset sel_miniRRImageView
                                        ; DATA XREF: -[UpdateView setminiImageposition:]+4F↑r
                                        ; -[UpdateView setminiImageposition:]+13B↑r ...
                                        ; "miniRRImageView"
; char *selRef_isCarryRR
selRef_isCarryRR dq offset sel_isCarryRR
                                        ; DATA XREF: -[UpdateView setminiImageposition:]+A1↑r
                                        ; "isCarryRR"
; char *selRef_setIsShowMiniRRImage_
selRef_setIsShowMiniRRImage_ dq offset sel_setIsShowMiniRRImage_
                                        ; DATA XREF: -[UpdateView setminiImageposition:]+BA↑r
                                        ; -[UpdateView setminiImageposition:]:loc_10000D717↑r
                                        ; "setIsShowMiniRRImage:"
; char *selRef_setIsClick_
selRef_setIsClick_ dq offset sel_setIsClick_
                                        ; DATA XREF: -[UpdateView setminiImageposition:]+11D↑r
                                        ; -[UpdateView setminiImageposition:]+1BD↑r
                                        ; "setIsClick:"
; char *selRef_findNewVersionLabel
selRef_findNewVersionLabel dq offset sel_findNewVersionLabel
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+D4↑r
                                        ; -[UpdateView setNewFirmwaer:]+1D1↑r ...
                                        ; "findNewVersionLabel"
; char *selRef_setStringValue_
selRef_setStringValue_ dq offset sel_setStringValue_
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+EF↑r
                                        ; -[UpdateView setNewFirmwaer:]+1E8↑r ...
                                        ; "setStringValue:"
; char *selRef_readme
selRef_readme   dq offset sel_readme    ; DATA XREF: -[UpdateView setNewFirmwaer:]+22D↑o
                                        ; -[UpdateView showLogClick:]+967↑r
                                        ; "readme"
; char *selRef_readme_en
selRef_readme_en dq offset sel_readme_en
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+226↑o
                                        ; -[UpdateView showLogClick:]:loc_10001596F↑r
                                        ; "readme_en"
; char *selRef_findNewVersionLogTextView
selRef_findNewVersionLogTextView dq offset sel_findNewVersionLogTextView
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+24B↑r
                                        ; -[UpdateView setNewFirmwaer:]+29D↑r ...
                                        ; "findNewVersionLogTextView"
; char *selRef_setString_
selRef_setString_ dq offset sel_setString_
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+266↑r
                                        ; "setString:"
; char *selRef_setUpdateFirmwaers_
selRef_setUpdateFirmwaers_ dq offset sel_setUpdateFirmwaers_
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+287↑r
                                        ; -[UpdateView removeFromSuperview]+14↑r ...
                                        ; "setUpdateFirmwaers:"
; char *selRef_sizeToFit
selRef_sizeToFit dq offset sel_sizeToFit
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+2B1↑r
                                        ; -[UpdateView loadViews]+6B1↑r ...
                                        ; "sizeToFit"
; char *selRef_setIsSetNewFirmware_
selRef_setIsSetNewFirmware_ dq offset sel_setIsSetNewFirmware_
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+2F6↑r
                                        ; -[UpdateView removeFromSuperview]+79↑r
                                        ; "setIsSetNewFirmware:"
; char *selRef_setMiniImageView_
selRef_setMiniImageView_ dq offset sel_setMiniImageView_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+72↑r
                                        ; "setMiniImageView:"
; char *selRef_setMiniRRImageView_
selRef_setMiniRRImageView_ dq offset sel_setMiniRRImageView_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+10B↑r
                                        ; "setMiniRRImageView:"
; char *selRef_setLineBreakMode_
selRef_setLineBreakMode_ dq offset sel_setLineBreakMode_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+13C↑r
                                        ; "setLineBreakMode:"
selRef_setFirmwaerListVist_ dq offset sel_setFirmwaerListVist_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+257↑r
                                        ; "setFirmwaerListVist:"
selRef_setScrollView_ dq offset sel_setScrollView_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+285↑r
                                        ; "setScrollView:"
; char *selRef_scrollView
selRef_scrollView dq offset sel_scrollView
                                        ; DATA XREF: -[UpdateView initWithFrame:]+2CD↑r
                                        ; -[UpdateView initWithFrame:]+B72↑r ...
                                        ; "scrollView"
selRef_setFindNewVersionListView_ dq offset sel_setFindNewVersionListView_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+323↑r
                                        ; "setFindNewVersionListView:"
selRef_setProgress_ dq offset sel_setProgress_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+351↑r
                                        ; "setProgress:"
; char *selRef_progress
selRef_progress dq offset sel_progress  ; DATA XREF: -[UpdateView initWithFrame:]+36A↑r
                                        ; -[UpdateView initWithFrame:]+BDA↑r ...
                                        ; "progress"
selRef_setControlSize_ dq offset sel_setControlSize_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+385↑r
                                        ; "setControlSize:"
selRef_setStyle_ dq offset sel_setStyle_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+3B1↑r
                                        ; "setStyle:"
selRef_setIndeterminate_ dq offset sel_setIndeterminate_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+3DD↑r
                                        ; "setIndeterminate:"
selRef_setReloadButton_ dq offset sel_setReloadButton_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+411↑r
                                        ; "setReloadButton:"
; char *selRef_reloadButton
selRef_reloadButton dq offset sel_reloadButton
                                        ; DATA XREF: -[UpdateView initWithFrame:]+427↑r
                                        ; -[UpdateView initWithFrame:]+50B↑r ...
                                        ; "reloadButton"
selRef_reloadClic dq offset sel_reloadClic
                                        ; DATA XREF: -[UpdateView initWithFrame:]+54D↑r
                                        ; "reloadClic"
selRef_setHintLabel_ dq offset sel_setHintLabel_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+583↑r
                                        ; "setHintLabel:"
; char *selRef_hintLabel
selRef_hintLabel dq offset sel_hintLabel
                                        ; DATA XREF: -[UpdateView initWithFrame:]+5B5↑r
                                        ; -[UpdateView initWithFrame:]+C2E↑r ...
                                        ; "hintLabel"
; char *selRef_setTextColor_
selRef_setTextColor_ dq offset sel_setTextColor_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+5D3↑r
                                        ; -[UpdateView initWithFrame:]+68E↑r ...
                                        ; "setTextColor:"
selRef_setNotFirmware_ dq offset sel_setNotFirmware_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+63E↑r
                                        ; "setNotFirmware:"
; char *selRef_notFirmware
selRef_notFirmware dq offset sel_notFirmware
                                        ; DATA XREF: -[UpdateView initWithFrame:]+670↑r
                                        ; -[UpdateView initWithFrame:]+C58↑r ...
                                        ; "notFirmware"
selRef_setFirmwaerHintLabel_ dq offset sel_setFirmwaerHintLabel_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+6FC↑r
                                        ; "setFirmwaerHintLabel:"
selRef_setUpdateButton_ dq offset sel_setUpdateButton_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+72A↑r
                                        ; "setUpdateButton:"
; char *selRef_updateButton
selRef_updateButton dq offset sel_updateButton
                                        ; DATA XREF: -[UpdateView initWithFrame:]+785↑r
                                        ; -[UpdateView initWithFrame:]+7E5↑r ...
                                        ; "updateButton"
; char *selRef_setM_title_
selRef_setM_title_ dq offset sel_setM_title_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+79D↑r
                                        ; -[UpdateView initWithFrame:]+8DF↑r ...
                                        ; "setM_title:"
; char *selRef_whiteColor
selRef_whiteColor dq offset sel_whiteColor
                                        ; DATA XREF: -[UpdateView initWithFrame:]+7CD↑r
                                        ; -[UpdateView initWithFrame:]+90C↑r ...
                                        ; "whiteColor"
; char *selRef_setM_titleHighlighColor_
selRef_setM_titleHighlighColor_ dq offset sel_setM_titleHighlighColor_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+7FD↑r
                                        ; -[SButton initWithFrame:]+259↑r ...
                                        ; "setM_titleHighlighColor:"
selRef_setLeftButton_ dq offset sel_setLeftButton_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+866↑r
                                        ; "setLeftButton:"
; char *selRef_leftButton
selRef_leftButton dq offset sel_leftButton
                                        ; DATA XREF: -[UpdateView initWithFrame:]+8C4↑r
                                        ; -[UpdateView initWithFrame:]+927↑r ...
                                        ; "leftButton"
; char *selRef_setM_highlightColor_
selRef_setM_highlightColor_ dq offset sel_setM_highlightColor_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+93F↑r
                                        ; -[UpdateView changeUIWithState:]+1E7↑r ...
                                        ; "setM_highlightColor:"
selRef_grayColor dq offset sel_grayColor
                                        ; DATA XREF: -[UpdateView initWithFrame:]+969↑r
                                        ; "grayColor"
; char *selRef_setM_backgroundColor_
selRef_setM_backgroundColor_ dq offset sel_setM_backgroundColor_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+992↑r
                                        ; -[UpdateView changeUIWithState:]+254↑r ...
                                        ; "setM_backgroundColor:"
selRef_setRightButton_ dq offset sel_setRightButton_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+A02↑r
                                        ; "setRightButton:"
; char *selRef_rightButton
selRef_rightButton dq offset sel_rightButton
                                        ; DATA XREF: -[UpdateView initWithFrame:]+A5D↑r
                                        ; -[UpdateView initWithFrame:]+AA1↑r ...
                                        ; "rightButton"
; char *selRef_firmwaerListVist
selRef_firmwaerListVist dq offset sel_firmwaerListVist
                                        ; DATA XREF: -[UpdateView initWithFrame:]+B2A↑r
                                        ; -[UpdateView loadViews]+4F6↑r ...
                                        ; "firmwaerListVist"
; char *selRef_findNewVersionListView
selRef_findNewVersionListView dq offset sel_findNewVersionListView
                                        ; DATA XREF: -[UpdateView initWithFrame:]+BA6↑r
                                        ; -[UpdateView loadViews]:loc_10000F075↑r ...
                                        ; "findNewVersionListView"
; char *selRef_firmwaerHintLabel
selRef_firmwaerHintLabel dq offset sel_firmwaerHintLabel
                                        ; DATA XREF: -[UpdateView initWithFrame:]+C7F↑r
                                        ; -[UpdateView loadViews]+1016↑r ...
                                        ; "firmwaerHintLabel"
selRef_initFindNewVersion dq offset sel_initFindNewVersion
                                        ; DATA XREF: -[UpdateView initWithFrame:]+D27↑r
                                        ; "initFindNewVersion"
selRef_setShidBoot_ dq offset sel_setShidBoot_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+D50↑r
                                        ; "setShidBoot:"
; char *selRef_shidBoot
selRef_shidBoot dq offset sel_shidBoot  ; DATA XREF: -[UpdateView initWithFrame:]+D69↑r
                                        ; -[UpdateView removeFromSuperview]+36↑r ...
                                        ; "shidBoot"
selRef_setBootDelegate_ dq offset sel_setBootDelegate_
                                        ; DATA XREF: -[UpdateView initWithFrame:]+D87↑r
                                        ; -[UpdateView initWithFrame:]+DE9↑r ...
                                        ; "setBootDelegate:"
; char *selRef_isloadData
selRef_isloadData dq offset sel_isloadData
                                        ; DATA XREF: -[UpdateView loadViews]+17↑r
                                        ; "isloadData"
; char *selRef_setIsloadData_
selRef_setIsloadData_ dq offset sel_setIsloadData_
                                        ; DATA XREF: -[UpdateView loadViews]+2C↑r
                                        ; -[UpdateView removeFromSuperview]+88↑r
                                        ; "setIsloadData:"
; char *selRef_isShowMiniRRImage
selRef_isShowMiniRRImage dq offset sel_isShowMiniRRImage
                                        ; DATA XREF: -[UpdateView loadViews]+DF↑r
                                        ; "isShowMiniRRImage"
; char *selRef_setNeedsDisplay_
selRef_setNeedsDisplay_ dq offset sel_setNeedsDisplay_
                                        ; DATA XREF: -[UpdateView loadViews]+59B↑r
                                        ; "setNeedsDisplay:"
; char *selRef_getFirmwaerHintVersion_beta_targerVersion_
selRef_getFirmwaerHintVersion_beta_targerVersion_ dq offset sel_getFirmwaerHintVersion_beta_targerVersion_
                                        ; DATA XREF: -[UpdateView loadViews]+FF0↑r
                                        ; -[UpdateView chengeboxClick:]+1D8↑r ...
                                        ; "getFirmwaerHintVersion:beta:targerVersi"...
; char *selRef_loadUpdateFirmwae
selRef_loadUpdateFirmwae dq offset sel_loadUpdateFirmwae
                                        ; DATA XREF: -[UpdateView loadViews]+1430↑r
                                        ; -[UpdateView loadV1AndV2]+4E0↑r ...
                                        ; "loadUpdateFirmwae"
; char *selRef_isSetNewFirmware
selRef_isSetNewFirmware dq offset sel_isSetNewFirmware
                                        ; DATA XREF: -[UpdateView loadViews]:loc_10000FE6C↑r
                                        ; -[UpdateView updateStateDowmFirmwaerFile]:loc_100016297↑r
                                        ; "isSetNewFirmware"
selRef_layout   dq offset sel_layout    ; DATA XREF: -[UpdateView layout]+1E↑r
                                        ; -[MoreView layout]+2C↑r ...
                                        ; "layout"
selRef_viewDidHide dq offset sel_viewDidHide
                                        ; DATA XREF: -[UpdateView viewDidHide]+1A↑r
                                        ; "viewDidHide"
selRef_viewDidUnhide dq offset sel_viewDidUnhide
                                        ; DATA XREF: -[UpdateView viewDidUnhide]+1A↑r
                                        ; "viewDidUnhide"
; char *selRef_setFilePath_
selRef_setFilePath_ dq offset sel_setFilePath_
                                        ; DATA XREF: -[UpdateView removeFromSuperview]+4E↑r
                                        ; sub_10001652B+B4↑r
                                        ; "setFilePath:"
; char *selRef_setSelectButton_
selRef_setSelectButton_ dq offset sel_setSelectButton_
                                        ; DATA XREF: -[UpdateView removeFromSuperview]+6A↑r
                                        ; -[UpdateView chengeboxClick:]+C9↑r
                                        ; "setSelectButton:"
; char *selRef_manualView
selRef_manualView dq offset sel_manualView
                                        ; DATA XREF: -[UpdateView removeFromSuperview]+97↑r
                                        ; -[UpdateView noChangeBoot]+27↑r ...
                                        ; "manualView"
; char *selRef_setFindNewVersionLabel_
selRef_setFindNewVersionLabel_ dq offset sel_setFindNewVersionLabel_
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+34↑r
                                        ; "setFindNewVersionLabel:"
; char *selRef_systemFontOfSize_
selRef_systemFontOfSize_ dq offset sel_systemFontOfSize_
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+54↑r
                                        ; -[UpdateView initFindNewVersion]+143↑r ...
                                        ; "systemFontOfSize:"
; char *selRef_setFont_
selRef_setFont_ dq offset sel_setFont_  ; DATA XREF: -[UpdateView initFindNewVersion]+8F↑r
                                        ; -[UpdateView initFindNewVersion]+173↑r ...
                                        ; "setFont:"
selRef_setFindNewVersionLogTextView_ dq offset sel_setFindNewVersionLogTextView_
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+11B↑r
                                        ; "setFindNewVersionLogTextView:"
; char *selRef_setEditable_
selRef_setEditable_ dq offset sel_setEditable_
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+1DC↑r
                                        ; -[SLabel initWithFrame:]+B6↑r
                                        ; "setEditable:"
selRef_setSelectable_ dq offset sel_setSelectable_
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+208↑r
                                        ; "setSelectable:"
selRef_setDrawsBackground_ dq offset sel_setDrawsBackground_
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+234↑r
                                        ; "setDrawsBackground:"
selRef_controlColor dq offset sel_controlColor
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+267↑r
                                        ; "controlColor"
; char *selRef_blackColor
selRef_blackColor dq offset sel_blackColor
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+307↑r
                                        ; -[UpdateView refreshFirmwaerList]+742↑r ...
                                        ; "blackColor"
; char *selRef_updateFirmwaers
selRef_updateFirmwaers dq offset sel_updateFirmwaers
                                        ; DATA XREF: -[UpdateView filterVersion:]+3D↑r
                                        ; -[UpdateView filterVersion:]+13D↑r ...
                                        ; "updateFirmwaers"
; char *selRef_fileName
selRef_fileName dq offset sel_fileName  ; DATA XREF: -[UpdateView refreshFirmwaerList]+5AC↑r
                                        ; sub_1000125F7+E4↑r ...
                                        ; "fileName"
; char *selRef_compare_
selRef_compare_ dq offset sel_compare_  ; DATA XREF: sub_1000125F7+117↑r
                                        ; "compare:"
; char *selRef_sortUsingComparator_
selRef_sortUsingComparator_ dq offset sel_sortUsingComparator_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+45↑r
                                        ; "sortUsingComparator:"
; char *selRef_bootVersion
selRef_bootVersion dq offset sel_bootVersion
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+81↑r
                                        ; "bootVersion"
; char *selRef_filterVersion_
selRef_filterVersion_ dq offset sel_filterVersion_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+FF↑r
                                        ; -[UpdateView refreshFirmwaerList]:loc_100010738↑r ...
                                        ; "filterVersion:"
; char *selRef_setHasVerticalScroller_
selRef_setHasVerticalScroller_ dq offset sel_setHasVerticalScroller_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+34D↑r
                                        ; -[UpdateView refreshFirmwaerList]+38A↑r ...
                                        ; "setHasVerticalScroller:"
selRef_setMasksToBounds_ dq offset sel_setMasksToBounds_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+59E↑r
                                        ; "setMasksToBounds:"
; char *selRef_substringFromIndex_
selRef_substringFromIndex_ dq offset sel_substringFromIndex_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+5E4↑r
                                        ; -[MoreView addProduct]+2FA↑r ...
                                        ; "substringFromIndex:"
; char *selRef_stringValue
selRef_stringValue dq offset sel_stringValue
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+60E↑r
                                        ; -[DeviceManualView layout]+1BD↑r
                                        ; "stringValue"
; char *selRef_componentsSeparatedByString_
selRef_componentsSeparatedByString_ dq offset sel_componentsSeparatedByString_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+61C↑r
                                        ; -[UpdateView showLogClick:]:loc_1000156CE↑r ...
                                        ; "componentsSeparatedByString:"
; char *selRef_firstObject
selRef_firstObject dq offset sel_firstObject
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+638↑r
                                        ; -[UpdateView showLogClick:]+87C↑r ...
                                        ; "firstObject"
; char *selRef_setAlternateImage_
selRef_setAlternateImage_ dq offset sel_setAlternateImage_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+6C4↑r
                                        ; -[MoreView addProduct]+278↑r ...
                                        ; "setAlternateImage:"
selRef_setButtonType_ dq offset sel_setButtonType_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+6EE↑r
                                        ; -[MoreView addProduct]+232↑r
                                        ; "setButtonType:"
selRef_setTag_  dq offset sel_setTag_   ; DATA XREF: -[UpdateView refreshFirmwaerList]+70A↑r
                                        ; -[MoreView addProduct]+286↑r
                                        ; "setTag:"
selRef_chengeboxClick_ dq offset sel_chengeboxClick_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+718↑r
                                        ; "chengeboxClick:"
; char *selRef_dictionaryWithObjects_forKeys_count_
selRef_dictionaryWithObjects_forKeys_count_ dq offset sel_dictionaryWithObjects_forKeys_count_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+750↑r
                                        ; +[FirmwareMessage mj_objectClassInArray]+4D↑r
                                        ; "dictionaryWithObjects:forKeys:count:"
selRef_initWithString_attributes_ dq offset sel_initWithString_attributes_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+77A↑r
                                        ; "initWithString:attributes:"
selRef_setAttributedTitle_ dq offset sel_setAttributedTitle_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+788↑r
                                        ; "setAttributedTitle:"
selRef_showLogClick_ dq offset sel_showLogClick_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+7CE↑r
                                        ; "showLogClick:"
; char *selRef_setDocumentView_
selRef_setDocumentView_ dq offset sel_setDocumentView_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+1FB6↑r
                                        ; -[UpdateView SMiniImageViewClick:]+CC↑r ...
                                        ; "setDocumentView:"
; char *selRef_documentView
selRef_documentView dq offset sel_documentView
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+1FEA↑r
                                        ; "documentView"
; char *selRef_scrollPoint_
selRef_scrollPoint_ dq offset sel_scrollPoint_
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+2049↑r
                                        ; -[MoreView addProduct]+9DB↑r
                                        ; "scrollPoint:"
; char *selRef_AllHidden_
selRef_AllHidden_ dq offset sel_AllHidden_
                                        ; DATA XREF: -[UpdateView changeUIWithState:]:loc_100012EC1↑r
                                        ; -[UpdateView changeUIWithState:]:loc_100013201↑r
                                        ; "AllHidden:"
; char *selRef_setM_progress_
selRef_setM_progress_ dq offset sel_setM_progress_
                                        ; DATA XREF: -[UpdateView changeUIWithState:]+17B↑r
                                        ; -[UpdateView changeUIWithState:]+7D8↑r ...
                                        ; "setM_progress:"
; char *selRef_m_highlightColor
selRef_m_highlightColor dq offset sel_m_highlightColor
                                        ; DATA XREF: -[UpdateView changeBoot]+30↑r
                                        ; -[SButton mouseEntered:]+D5↑r
                                        ; "m_highlightColor"
; char *selRef_readPID
selRef_readPID  dq offset sel_readPID   ; DATA XREF: -[UpdateView changeBoot]+15C↑r
                                        ; -[UpdateView bootBoot]+C3↑o ...
                                        ; "readPID"
; char *selRef_readVersion
selRef_readVersion dq offset sel_readVersion
                                        ; DATA XREF: -[UpdateView changeBoot]+203↑r
                                        ; -[UpdateView bootBoot]+88↑o ...
                                        ; "readVersion"
; char *selRef_bootBoot
selRef_bootBoot dq offset sel_bootBoot  ; DATA XREF: -[UpdateView changeBoot]:loc_100013BC1↑r
                                        ; -[UpdateView changeBoot]:loc_100013C77↑r
                                        ; "bootBoot"
; char *selRef_switchBoot
selRef_switchBoot dq offset sel_switchBoot
                                        ; DATA XREF: -[UpdateView changeBoot]+23F↑r
                                        ; "switchBoot"
; char *selRef_macBoot
selRef_macBoot  dq offset sel_macBoot   ; DATA XREF: -[UpdateView changeBoot]+257↑r
                                        ; "macBoot"
; char *selRef_boot_
selRef_boot_    dq offset sel_boot_     ; DATA XREF: -[UpdateView changeBoot]+29B↑r
                                        ; "boot:"
selRef_noChangeBoot dq offset sel_noChangeBoot
                                        ; DATA XREF: -[UpdateView changeBoot]:loc_100013BE4↑r
                                        ; "noChangeBoot"
; char *selRef_selectButton
selRef_selectButton dq offset sel_selectButton
                                        ; DATA XREF: -[UpdateView macBoot]+AF↑r
                                        ; -[UpdateView chengeboxClick:]+21↑r ...
                                        ; "selectButton"
; char *selRef_tag
selRef_tag      dq offset sel_tag       ; DATA XREF: -[UpdateView macBoot]+C7↑r
                                        ; -[UpdateView chengeboxClick:]+111↑r ...
                                        ; "tag"
; char *selRef_bootState
selRef_bootState dq offset sel_bootState
                                        ; DATA XREF: -[UpdateView bootBoot]+11↑r
                                        ; "bootState"
; char *selRef_bootDeviceRef
selRef_bootDeviceRef dq offset sel_bootDeviceRef
                                        ; DATA XREF: -[UpdateView bootBoot]:loc_1000142CF↑r
                                        ; -[UpdateView SHIDBootAddDevice:hid:]+C3↑r ...
                                        ; "bootDeviceRef"
; char *selRef_setError_
selRef_setError_ dq offset sel_setError_
                                        ; DATA XREF: -[UpdateView noChangeBoot]+42↑r
                                        ; -[UpdateView noV1AndV2]+42↑r ...
                                        ; "setError:"
; char *selRef_isEqual_
selRef_isEqual_ dq offset sel_isEqual_  ; DATA XREF: -[UpdateView findBackButton:]+A9↑r
                                        ; +[NSObject propertyKey:]:loc_10002723A↑r ...
                                        ; "isEqual:"
; char *selRef_setType_
selRef_setType_ dq offset sel_setType_  ; DATA XREF: -[UpdateView loadV1AndV2]+26A↑r
                                        ; -[UpdateView loadV1AndV2]+373↑r ...
                                        ; "setType:"
; char *selRef_manualViewRemoveFromSuperView
selRef_manualViewRemoveFromSuperView dq offset sel_manualViewRemoveFromSuperView
                                        ; DATA XREF: -[UpdateView loadV1AndV2]:loc_100014A85↑r
                                        ; -[UpdateView SHIDBootAddDevice:hid:]+134↑r ...
                                        ; "manualViewRemoveFromSuperView"
selRef_loadV1AndV2 dq offset sel_loadV1AndV2
                                        ; DATA XREF: -[UpdateView noV1AndV2]+D7↑r
                                        ; -[UpdateView SHIDBootGetFirmwaerType:hid:]+4↑r
                                        ; "loadV1AndV2"
; char *selRef_initWithWindowNibName_
selRef_initWithWindowNibName_ dq offset sel_initWithWindowNibName_
                                        ; DATA XREF: -[UpdateView showLogClick:]+41↑r
                                        ; "initWithWindowNibName:"
; char *selRef_setFrame_display_
selRef_setFrame_display_ dq offset sel_setFrame_display_
                                        ; DATA XREF: -[UpdateView showLogClick:]+43F↑r
                                        ; "setFrame:display:"
; char *selRef_setTitleString_
selRef_setTitleString_ dq offset sel_setTitleString_
                                        ; DATA XREF: -[UpdateView showLogClick:]+910↑r
                                        ; "setTitleString:"
; char *selRef_appendString_
selRef_appendString_ dq offset sel_appendString_
                                        ; DATA XREF: -[UpdateView showLogClick:]+A1D↑r
                                        ; -[UpdateView showLogClick:]+BAD↑r ...
                                        ; "appendString:"
; char *selRef_setContentString_
selRef_setContentString_ dq offset sel_setContentString_
                                        ; DATA XREF: -[UpdateView showLogClick:]+CA8↑r
                                        ; "setContentString:"
; char *selRef_orderFront_
selRef_orderFront_ dq offset sel_orderFront_
                                        ; DATA XREF: -[UpdateView showLogClick:]+CDA↑r
                                        ; "orderFront:"
; char *selRef_makeKeyWindow
selRef_makeKeyWindow dq offset sel_makeKeyWindow
                                        ; DATA XREF: -[UpdateView showLogClick:]+D07↑r
                                        ; "makeKeyWindow"
; char *selRef_setLastTimer_
selRef_setLastTimer_ dq offset sel_setLastTimer_
                                        ; DATA XREF: -[UpdateView loadUpdateFirmwae]+14↑r
                                        ; -[UpdateView loadUpdateFirmwae:]+16↑r ...
                                        ; "setLastTimer:"
; char *selRef_startAnimation_
selRef_startAnimation_ dq offset sel_startAnimation_
                                        ; DATA XREF: -[UpdateView loadUpdateFirmwae]+6C↑r
                                        ; -[UpdateView loadUpdateFirmwae:]+6E↑r
                                        ; "startAnimation:"
selRef_refreshFirmwaerList dq offset sel_refreshFirmwaerList
                                        ; DATA XREF: sub_100015DA1+AB↑r
                                        ; sub_100016051+AB↑r
                                        ; "refreshFirmwaerList"
; char *selRef_getUpdateFirmwaerWithType_success_failure_
selRef_getUpdateFirmwaerWithType_success_failure_ dq offset sel_getUpdateFirmwaerWithType_success_failure_
                                        ; DATA XREF: -[UpdateView loadUpdateFirmwae]+17B↑r
                                        ; -[UpdateView loadUpdateFirmwae:]+140↑r
                                        ; "getUpdateFirmwaerWithType:success:failu"...
; char *selRef_dowmFirmwaerFile_
selRef_dowmFirmwaerFile_ dq offset sel_dowmFirmwaerFile_
                                        ; DATA XREF: -[UpdateView updateStateFindNewVersionDowmFirmwaerFile]+7A↑r
                                        ; -[UpdateView updateStateDowmFirmwaerFile]+BF↑r
                                        ; "dowmFirmwaerFile:"
; char *selRef_initTimer
selRef_initTimer dq offset sel_initTimer
                                        ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+21↑r
                                        ; "initTimer"
; char *selRef_fileURL
selRef_fileURL  dq offset sel_fileURL   ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+DD↑r
                                        ; "fileURL"
; char *selRef_setIsUSBRR_PS_classic_
selRef_setIsUSBRR_PS_classic_ dq offset sel_setIsUSBRR_PS_classic_
                                        ; DATA XREF: sub_10001652B+5D↑r
                                        ; "setIsUSBRR_PS_classic:"
; char *selRef_setSavePath_
selRef_setSavePath_ dq offset sel_setSavePath_
                                        ; DATA XREF: sub_10001652B+85↑r
                                        ; "setSavePath:"
selRef_changeBoot dq offset sel_changeBoot
                                        ; DATA XREF: sub_10001652B+14B↑r
                                        ; "changeBoot"
; char *selRef_description
selRef_description dq offset sel_description
                                        ; DATA XREF: sub_1000166BA+6A↑r
                                        ; sub_10001AD4A+B24↑r
                                        ; "description"
; char *selRef_id
selRef_id       dq offset sel_id        ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+162↑r
                                        ; "id"
; char *selRef_dowmFirmwaerFile_success_failure_downLoadID_maxSize_
selRef_dowmFirmwaerFile_success_failure_downLoadID_maxSize_ dq offset sel_dowmFirmwaerFile_success_failure_downLoadID_maxSize_
                                        ; DATA XREF: -[UpdateView dowmFirmwaerFile:]+18B↑r
                                        ; "dowmFirmwaerFile:success:failure:downLo"...
; char *selRef_updateTimer
selRef_updateTimer dq offset sel_updateTimer
                                        ; DATA XREF: -[UpdateView initTimer]+11↑r
                                        ; -[UpdateView SHIDBootStartUpdateed:]+19A↑r ...
                                        ; "updateTimer"
selRef_timerOut dq offset sel_timerOut  ; DATA XREF: -[UpdateView initTimer]+50↑r
                                        ; "timerOut"
; char *selRef_timerWithTimeInterval_target_selector_userInfo_repeats_
selRef_timerWithTimeInterval_target_selector_userInfo_repeats_ dq offset sel_timerWithTimeInterval_target_selector_userInfo_repeats_
                                        ; DATA XREF: -[UpdateView initTimer]+57↑r
                                        ; "timerWithTimeInterval:target:selector:u"...
; char *selRef_setUpdateTimer_
selRef_setUpdateTimer_ dq offset sel_setUpdateTimer_
                                        ; DATA XREF: -[UpdateView initTimer]+87↑r
                                        ; -[UpdateView SHIDBootStartUpdateed:]+1F1↑r ...
                                        ; "setUpdateTimer:"
; char *selRef_mainRunLoop
selRef_mainRunLoop dq offset sel_mainRunLoop
                                        ; DATA XREF: -[UpdateView initTimer]+AB↑r
                                        ; -[HomeView awakeFromNib]+8F↑r
                                        ; "mainRunLoop"
; char *selRef_addTimer_forMode_
selRef_addTimer_forMode_ dq offset sel_addTimer_forMode_
                                        ; DATA XREF: -[UpdateView initTimer]+DE↑r
                                        ; -[HomeView awakeFromNib]+AD↑r
                                        ; "addTimer:forMode:"
; char *selRef_gs_getCurrentTimeToMilliSecond
selRef_gs_getCurrentTimeToMilliSecond dq offset sel_gs_getCurrentTimeToMilliSecond
                                        ; DATA XREF: -[UpdateView initTimer]+FA↑r
                                        ; -[UpdateView timerOut]+23↑r ...
                                        ; "gs_getCurrentTimeToMilliSecond"
; char *selRef_lastTimer
selRef_lastTimer dq offset sel_lastTimer
                                        ; DATA XREF: -[UpdateView timerOut]+E↑r
                                        ; "lastTimer"
; char *selRef_delegate
selRef_delegate dq offset sel_delegate  ; DATA XREF: -[UpdateView SButtonClick:]+279↑r
                                        ; -[UpdateView SButtonClick:]+2C0↑r ...
                                        ; "delegate"
; char *selRef_goHome_
selRef_goHome_  dq offset sel_goHome_   ; DATA XREF: -[UpdateView SButtonClick:]+298↑r
                                        ; -[UpdateView SButtonClick:]+2D8↑r
                                        ; "goHome:"
; char *selRef_updateStateDowmFirmwaerFile
selRef_updateStateDowmFirmwaerFile dq offset sel_updateStateDowmFirmwaerFile
                                        ; DATA XREF: -[UpdateView SButtonClick:]:loc_100016CA7↑r
                                        ; "updateStateDowmFirmwaerFile"
selRef_updateStateFindNewVersionDowmFirmwaerFile dq offset sel_updateStateFindNewVersionDowmFirmwaerFile
                                        ; DATA XREF: -[UpdateView SButtonClick:]+1C2↑r
                                        ; "updateStateFindNewVersionDowmFirmwaerFi"...
; char *selRef_postNotificationName_object_
selRef_postNotificationName_object_ dq offset sel_postNotificationName_object_
                                        ; DATA XREF: -[UpdateView SButtonClick:]+204↑r
                                        ; flashfirmware+26D↑r
                                        ; "postNotificationName:object:"
; char *selRef_addBootDevice_
selRef_addBootDevice_ dq offset sel_addBootDevice_
                                        ; DATA XREF: -[UpdateView SHIDBootAddDevice:hid:]+40↑r
                                        ; -[UpdateView SHIDBootHJZUpdate:device:]+30↑r ...
                                        ; "addBootDevice:"
; char *selRef_setBootDeviceRef_
selRef_setBootDeviceRef_ dq offset sel_setBootDeviceRef_
                                        ; DATA XREF: -[UpdateView SHIDBootAddDevice:hid:]+A1↑r
                                        ; -[UpdateView SHIDBootRemoveDevice:hid:]+A↑r
                                        ; "setBootDeviceRef:"
; char *selRef_setBootState_
selRef_setBootState_ dq offset sel_setBootState_
                                        ; DATA XREF: -[UpdateView SHIDBootAddDevice:hid:]+B1↑r
                                        ; -[UpdateView SHIDBootRemoveDevice:hid:]+1D↑r ...
                                        ; "setBootState:"
; char *selRef_invalidate
selRef_invalidate dq offset sel_invalidate
                                        ; DATA XREF: -[UpdateView SHIDBootStartUpdateed:]+1DB↑r
                                        ; -[UpdateView SHIDBootNotSupportFirmware:]+1C5↑r ...
                                        ; "invalidate"
; char *selRef_getNameWithPid_
selRef_getNameWithPid_ dq offset sel_getNameWithPid_
                                        ; DATA XREF: -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+8F↑r
                                        ; -[UpdateView SHIDBootErrorNOEqualPID:gamepadType:pid:]+10B↑r
                                        ; "getNameWithPid:"
; char *selRef_setIsManuanlViewRR_
selRef_setIsManuanlViewRR_ dq offset sel_setIsManuanlViewRR_
                                        ; DATA XREF: -[UpdateView SMiniImageViewClick:]+147↑r
                                        ; -[UpdateView SMiniImageViewClick:]+256↑r
                                        ; "setIsManuanlViewRR:"
; char *selRef_loadUpdateFirmwae_
selRef_loadUpdateFirmwae_ dq offset sel_loadUpdateFirmwae_
                                        ; DATA XREF: -[UpdateView SMiniImageViewClick:]+1E1↑r
                                        ; -[UpdateView SMiniImageViewClick:]+2EF↑r
                                        ; "loadUpdateFirmwae:"
; char *selRef_updateTrackingAreas
selRef_updateTrackingAreas dq offset sel_updateTrackingAreas
                                        ; DATA XREF: -[SMiniImageView initWithFrame:]+43↑r
                                        ; "updateTrackingAreas"
; char *selRef_colorWithSRGBRed_green_blue_alpha_
selRef_colorWithSRGBRed_green_blue_alpha_ dq offset sel_colorWithSRGBRed_green_blue_alpha_
                                        ; DATA XREF: -[SMiniImageView setIsSelect:]+6F↑r
                                        ; -[SMiniImageView mouseEntered:]+86↑r
                                        ; "colorWithSRGBRed:green:blue:alpha:"
; char *selRef_setBorderColor_
selRef_setBorderColor_ dq offset sel_setBorderColor_
                                        ; DATA XREF: -[SMiniImageView setIsSelect:]+D0↑r
                                        ; -[SMiniImageView mouseEntered:]+E6↑r ...
                                        ; "setBorderColor:"
; char *selRef_trackingAreas
selRef_trackingAreas dq offset sel_trackingAreas
                                        ; DATA XREF: -[SMiniImageView updateTrackingAreas]+25↑r
                                        ; "trackingAreas"
; char *selRef_removeTrackingArea_
selRef_removeTrackingArea_ dq offset sel_removeTrackingArea_
                                        ; DATA XREF: -[SMiniImageView updateTrackingAreas]:loc_100018C3A↑r
                                        ; "removeTrackingArea:"
selRef_bounds   dq offset sel_bounds    ; DATA XREF: -[SMiniImageView updateTrackingAreas]+10F↑r
                                        ; -[SButton updateTrackingAreas]+1F↑r
                                        ; "bounds"
; char *selRef_initWithRect_options_owner_userInfo_
selRef_initWithRect_options_owner_userInfo_ dq offset sel_initWithRect_options_owner_userInfo_
                                        ; DATA XREF: -[SMiniImageView updateTrackingAreas]+128↑r
                                        ; -[SButton updateTrackingAreas]+35↑r
                                        ; "initWithRect:options:owner:userInfo:"
; char *selRef_addTrackingArea_
selRef_addTrackingArea_ dq offset sel_addTrackingArea_
                                        ; DATA XREF: -[SMiniImageView updateTrackingAreas]+15D↑r
                                        ; -[SButton updateTrackingAreas]+69↑r
                                        ; "addTrackingArea:"
; char *selRef_isClick
selRef_isClick  dq offset sel_isClick   ; DATA XREF: -[SMiniImageView mouseDown:]+11↑r
                                        ; -[SMiniImageView mouseEntered:]+11↑r ...
                                        ; "isClick"
; char *selRef_isSelect
selRef_isSelect dq offset sel_isSelect  ; DATA XREF: -[SMiniImageView mouseDown:]+26↑r
                                        ; -[SMiniImageView mouseEntered:]+26↑r ...
                                        ; "isSelect"
; char *selRef_SMiniImageViewClick_
selRef_SMiniImageViewClick_ dq offset sel_SMiniImageViewClick_
                                        ; DATA XREF: -[SMiniImageView mouseDown:]+60↑r
                                        ; -[SMiniImageView mouseDown:]+9C↑r
                                        ; "SMiniImageViewClick:"
; char *selRef_getDeviceWithRef_
selRef_getDeviceWithRef_ dq offset sel_getDeviceWithRef_
                                        ; DATA XREF: sub_100019072+1FF↑r
                                        ; sub_100019855+38↑r ...
                                        ; "getDeviceWithRef:"
; char *selRef_setDetails_
selRef_setDetails_ dq offset sel_setDetails_
                                        ; DATA XREF: sub_100019072+23F↑r
                                        ; -[MoreView moreClick:]+BC↑r
                                        ; "setDetails:"
; char *selRef_changeDinput_
selRef_changeDinput_ dq offset sel_changeDinput_
                                        ; DATA XREF: sub_100019072+395↑r
                                        ; "changeDinput:"
; char *selRef_setBootVersion_
selRef_setBootVersion_ dq offset sel_setBootVersion_
                                        ; DATA XREF: sub_100019072+54B↑r
                                        ; sub_100024341+13D↑r ...
                                        ; "setBootVersion:"
; char *selRef_addS8BitdoDeviceRefreshUI_
selRef_addS8BitdoDeviceRefreshUI_ dq offset sel_addS8BitdoDeviceRefreshUI_
                                        ; DATA XREF: sub_100019072+576↑r
                                        ; sub_100024341:loc_1000244BF↑r ...
                                        ; "addS8BitdoDeviceRefreshUI:"
; char *selRef_stopChangeMode_
selRef_stopChangeMode_ dq offset sel_stopChangeMode_
                                        ; DATA XREF: sub_100019669+17D↑r
                                        ; "stopChangeMode:"
; char *selRef_remove8BitdoDeviceRefreshUI_
selRef_remove8BitdoDeviceRefreshUI_ dq offset sel_remove8BitdoDeviceRefreshUI_
                                        ; DATA XREF: sub_100019855+15↑r
                                        ; sub_100024B77+2E↑r
                                        ; "remove8BitdoDeviceRefreshUI:"
; char *selRef_setupUpdater
selRef_setupUpdater dq offset sel_setupUpdater
                                        ; DATA XREF: -[UpDaterManager init]+32↑r
                                        ; sub_10001A44D+23↑r
                                        ; "setupUpdater"
; char *selRef_setSparkleLanguage
selRef_setSparkleLanguage dq offset sel_setSparkleLanguage
                                        ; DATA XREF: -[UpDaterManager setupUpdater]+11↑r
                                        ; sub_10001A44D+E↑r
                                        ; "setSparkleLanguage"
; char *selRef_initWithStartingUpdater_updaterDelegate_userDriverDelegate_
selRef_initWithStartingUpdater_updaterDelegate_userDriverDelegate_ dq offset sel_initWithStartingUpdater_updaterDelegate_userDriverDelegate_
                                        ; DATA XREF: -[UpDaterManager setupUpdater]+2E↑r
                                        ; "initWithStartingUpdater:updaterDelegate"...
; char *selRef_setController_
selRef_setController_ dq offset sel_setController_
                                        ; DATA XREF: -[UpDaterManager setupUpdater]+49↑r
                                        ; "setController:"
; char *selRef_controller
selRef_controller dq offset sel_controller
                                        ; DATA XREF: -[UpDaterManager setupUpdater]+66↑r
                                        ; "controller"
; char *selRef_updater
selRef_updater  dq offset sel_updater   ; DATA XREF: -[UpDaterManager setupUpdater]+7E↑r
                                        ; sub_10001A4D8+B↑r
                                        ; "updater"
; char *selRef_setUpdater_
selRef_setUpdater_ dq offset sel_setUpdater_
                                        ; DATA XREF: -[UpDaterManager setupUpdater]+96↑r
                                        ; "setUpdater:"
; char *selRef_getCurrentLanguageCode
selRef_getCurrentLanguageCode dq offset sel_getCurrentLanguageCode
                                        ; DATA XREF: -[UpDaterManager setSparkleLanguage]+1F↑r
                                        ; -[UpDaterManager feedURLStringForUpdater:]+7↑r
                                        ; "getCurrentLanguageCode"
; char *selRef_arrayWithObjects_count_
selRef_arrayWithObjects_count_ dq offset sel_arrayWithObjects_count_
                                        ; DATA XREF: -[UpDaterManager setSparkleLanguage]+76↑r
                                        ; -[MJPropertyType setCode:]+12E↑r ...
                                        ; "arrayWithObjects:count:"
; char *selRef_preferredLanguages
selRef_preferredLanguages dq offset sel_preferredLanguages
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+15↑r
                                        ; "preferredLanguages"
; char *selRef_initWithLocaleIdentifier_
selRef_initWithLocaleIdentifier_ dq offset sel_initWithLocaleIdentifier_
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+67↑r
                                        ; "initWithLocaleIdentifier:"
; char *selRef_languageCode
selRef_languageCode dq offset sel_languageCode
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+7A↑r
                                        ; "languageCode"
; char *selRef_scriptCode
selRef_scriptCode dq offset sel_scriptCode
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+BD↑r
                                        ; "scriptCode"
; char *selRef_isKindOfClass_
selRef_isKindOfClass_ dq offset sel_isKindOfClass_
                                        ; DATA XREF: -[MJPropertyKey valueInObject:]+38↑r
                                        ; -[NSObject mj_setKeyValues:context:]+6E↑r ...
                                        ; "isKindOfClass:"
; char *selRef_numberWithBool_
selRef_numberWithBool_ dq offset sel_numberWithBool_
                                        ; DATA XREF: +[NSObject mj_referenceReplacedKeyWhenCreatingKeyValues:]+11↑r
                                        ; sub_10001AD4A+904↑r
                                        ; "numberWithBool:"
; char *selRef_mj_enumerateAllClasses_
selRef_mj_enumerateAllClasses_ dq offset sel_mj_enumerateAllClasses_
                                        ; DATA XREF: +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]+97↑r
                                        ; +[NSObject propertyKey:]+14C↑r ...
                                        ; "mj_enumerateAllClasses:"
; char *selRef_boolValue
selRef_boolValue dq offset sel_boolValue
                                        ; DATA XREF: +[NSObject mj_isReferenceReplacedKeyWhenCreatingKeyValues]:loc_10001A9CA↑r
                                        ; "boolValue"
selRef_mj_referenceReplacedKeyWhenCreatingKeyValues_ dq offset sel_mj_referenceReplacedKeyWhenCreatingKeyValues_
                                        ; DATA XREF: +[NSObject load]+3E↑r
                                        ; +[NSObject referenceReplacedKeyWhenCreatingKeyValues:]+4↑r
                                        ; "mj_referenceReplacedKeyWhenCreatingKeyV"...
; char *selRef_mj_setKeyValues_context_
selRef_mj_setKeyValues_context_ dq offset sel_mj_setKeyValues_context_
                                        ; DATA XREF: -[NSObject mj_setKeyValues:]+4↑r
                                        ; +[NSObject mj_objectWithKeyValues:context:]+13F↑r ...
                                        ; "mj_setKeyValues:context:"
; char *selRef_mj_JSONObject
selRef_mj_JSONObject dq offset sel_mj_JSONObject
                                        ; DATA XREF: -[NSObject mj_setKeyValues:context:]+24↑r
                                        ; +[NSObject mj_objectWithKeyValues:context:]+23↑r ...
                                        ; "mj_JSONObject"
; char *selRef_setMj_error_
selRef_setMj_error_ dq offset sel_setMj_error_
                                        ; DATA XREF: -[NSObject mj_setKeyValues:context:]+51↑r
                                        ; __text:000000010001BA04↑r ...
                                        ; "setMj_error:"
; char *selRef_mj_totalAllowedPropertyNames
selRef_mj_totalAllowedPropertyNames dq offset sel_mj_totalAllowedPropertyNames
                                        ; DATA XREF: -[NSObject mj_setKeyValues:context:]+94↑r
                                        ; -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+105↑r
                                        ; "mj_totalAllowedPropertyNames"
; char *selRef_mj_totalIgnoredPropertyNames
selRef_mj_totalIgnoredPropertyNames dq offset sel_mj_totalIgnoredPropertyNames
                                        ; DATA XREF: -[NSObject mj_setKeyValues:context:]+AC↑r
                                        ; -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+11D↑r
                                        ; "mj_totalIgnoredPropertyNames"
; char *selRef_propertyKeysForClass_
selRef_propertyKeysForClass_ dq offset sel_propertyKeysForClass_
                                        ; DATA XREF: sub_10001AD4A+100↑r
                                        ; sub_10001C73D+277↑r
                                        ; "propertyKeysForClass:"
; char *selRef_valueInObject_
selRef_valueInObject_ dq offset sel_valueInObject_
                                        ; DATA XREF: sub_10001AD4A:loc_10001AF8F↑r
                                        ; sub_10001CC7B+71↑r
                                        ; "valueInObject:"
; char *selRef_mj_getNewValueFromObject_oldValue_property_
selRef_mj_getNewValueFromObject_oldValue_property_ dq offset sel_mj_getNewValueFromObject_oldValue_property_
                                        ; DATA XREF: sub_10001AD4A+35C↑r
                                        ; +[NSObject getNewValueFromObject:oldValue:property:]+4↑r
                                        ; "mj_getNewValueFromObject:oldValue:prope"...
; char *selRef_setValue_forObject_
selRef_setValue_forObject_ dq offset sel_setValue_forObject_
                                        ; DATA XREF: sub_10001AD4A+391↑r
                                        ; sub_10001AD4A+6FE↑r ...
                                        ; "setValue:forObject:"
; char *selRef_null
selRef_null     dq offset sel_null      ; DATA XREF: sub_10001AD4A+406↑r
                                        ; sub_10001CC7B+2E4↑r ...
                                        ; "null"
; char *selRef_typeClass
selRef_typeClass dq offset sel_typeClass
                                        ; DATA XREF: sub_10001AD4A+45C↑r
                                        ; sub_10001C73D+1A6↑r
                                        ; "typeClass"
; char *selRef_objectClassInArrayForClass_
selRef_objectClassInArrayForClass_ dq offset sel_objectClassInArrayForClass_
                                        ; DATA XREF: sub_10001AD4A+491↑r
                                        ; "objectClassInArrayForClass:"
; char *selRef_arrayWithArray_
selRef_arrayWithArray_ dq offset sel_arrayWithArray_
                                        ; DATA XREF: sub_10001AD4A+590↑o
                                        ; +[NSObject mj_objectArrayWithKeyValuesArray:context:]+BC↑r
                                        ; "arrayWithArray:"
selRef_dictionaryWithDictionary_ dq offset sel_dictionaryWithDictionary_
                                        ; DATA XREF: sub_10001AD4A+5CF↑o
                                        ; "dictionaryWithDictionary:"
selRef_stringWithString_ dq offset sel_stringWithString_
                                        ; DATA XREF: sub_10001AD4A+60E↑o
                                        ; "stringWithString:"
selRef_dataWithData_ dq offset sel_dataWithData_
                                        ; DATA XREF: sub_10001AD4A+54E↑o
                                        ; "dataWithData:"
; char *selRef_isFromFoundation
selRef_isFromFoundation dq offset sel_isFromFoundation
                                        ; DATA XREF: sub_10001AD4A+649↑r
                                        ; sub_10001C73D+1BD↑r
                                        ; "isFromFoundation"
; char *selRef_mj_objectWithKeyValues_context_
selRef_mj_objectWithKeyValues_context_ dq offset sel_mj_objectWithKeyValues_context_
                                        ; DATA XREF: sub_10001AD4A+676↑r
                                        ; +[NSObject mj_objectWithKeyValues:]+4↑r ...
                                        ; "mj_objectWithKeyValues:context:"
; char *selRef_array
selRef_array    dq offset sel_array     ; DATA XREF: sub_10001AD4A+977↑r
                                        ; +[NSObject mj_objectArrayWithKeyValuesArray:context:]+140↑r ...
                                        ; "array"
; char *selRef_mj_url
selRef_mj_url   dq offset sel_mj_url    ; DATA XREF: sub_10001AD4A:loc_10001B747↑r
                                        ; sub_10001AD4A:loc_10001B88F↑r ...
                                        ; "mj_url"
; char *selRef_mj_objectArrayWithKeyValuesArray_context_
selRef_mj_objectArrayWithKeyValuesArray_context_ dq offset sel_mj_objectArrayWithKeyValuesArray_context_
                                        ; DATA XREF: sub_10001AD4A+6C8↑r
                                        ; +[NSObject mj_objectArrayWithKeyValuesArray:]+4↑r ...
                                        ; "mj_objectArrayWithKeyValuesArray:contex"...
; char *selRef_absoluteString
selRef_absoluteString dq offset sel_absoluteString
                                        ; DATA XREF: sub_10001AD4A+B91↑r
                                        ; sub_10001C73D+44D↑o
                                        ; "absoluteString"
; char *selRef_isNumberType
selRef_isNumberType dq offset sel_isNumberType
                                        ; DATA XREF: sub_10001AD4A+7C2↑r
                                        ; "isNumberType"
selRef_decimalNumberWithString_ dq offset sel_decimalNumberWithString_
                                        ; DATA XREF: sub_10001AD4A+829↑o
                                        ; "decimalNumberWithString:"
selRef_numberFromString_ dq offset sel_numberFromString_
                                        ; DATA XREF: sub_10001AD4A+830↑o
                                        ; "numberFromString:"
; char *selRef_isBoolType
selRef_isBoolType dq offset sel_isBoolType
                                        ; DATA XREF: sub_10001AD4A+85F↑r
                                        ; "isBoolType"
; char *selRef_lowercaseString
selRef_lowercaseString dq offset sel_lowercaseString
                                        ; DATA XREF: sub_10001AD4A+87B↑r
                                        ; -[MJPropertyType setCode:]+8B↑r ...
                                        ; "lowercaseString"
selRef_reason   dq offset sel_reason    ; DATA XREF: __text:000000010001B9A2↑r
                                        ; __text:000000010001CBE0↑r
                                        ; "reason"
; char *selRef_mj_enumerateProperties_
selRef_mj_enumerateProperties_ dq offset sel_mj_enumerateProperties_
                                        ; DATA XREF: -[NSObject mj_setKeyValues:context:]+13E↑r
                                        ; -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+1C1↑r ...
                                        ; "mj_enumerateProperties:"
; char *selRef_mj_keyValuesDidFinishConvertingToObject
selRef_mj_keyValuesDidFinishConvertingToObject dq offset sel_mj_keyValuesDidFinishConvertingToObject
                                        ; DATA XREF: -[NSObject mj_setKeyValues:context:]+151↑r
                                        ; "mj_keyValuesDidFinishConvertingToObject"
; char *selRef_isSubclassOfClass_
selRef_isSubclassOfClass_ dq offset sel_isSubclassOfClass_
                                        ; DATA XREF: +[NSObject mj_objectWithKeyValues:context:]+97↑r
                                        ; -[MJPropertyType setCode:]+2BE↑r ...
                                        ; "isSubclassOfClass:"
; char *selRef_insertNewObjectForEntityForName_inManagedObjectContext_
selRef_insertNewObjectForEntityForName_inManagedObjectContext_ dq offset sel_insertNewObjectForEntityForName_inManagedObjectContext_
                                        ; DATA XREF: +[NSObject mj_objectWithKeyValues:context:]+120↑r
                                        ; "insertNewObjectForEntityForName:inManag"...
; char *selRef_mj_setKeyValues_
selRef_mj_setKeyValues_ dq offset sel_mj_setKeyValues_
                                        ; DATA XREF: +[NSObject mj_objectWithKeyValues:context:]+1D7↑r
                                        ; -[NSObject setKeyValues:]+4↑r ...
                                        ; "mj_setKeyValues:"
; char *selRef_pathForResource_ofType_
selRef_pathForResource_ofType_ dq offset sel_pathForResource_ofType_
                                        ; DATA XREF: +[NSObject mj_objectWithFilename:]+67↑r
                                        ; +[NSObject mj_objectArrayWithFilename:]+67↑r
                                        ; "pathForResource:ofType:"
; char *selRef_mj_objectWithFile_
selRef_mj_objectWithFile_ dq offset sel_mj_objectWithFile_
                                        ; DATA XREF: +[NSObject mj_objectWithFilename:]+84↑r
                                        ; +[NSObject objectWithFile:]+4↑r ...
                                        ; "mj_objectWithFile:"
; char *selRef_isClassFromFoundation_
selRef_isClassFromFoundation_ dq offset sel_isClassFromFoundation_
                                        ; DATA XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+A1↑r
                                        ; -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+6E↑r ...
                                        ; "isClassFromFoundation:"
; char *selRef_mj_objectArrayWithFile_
selRef_mj_objectArrayWithFile_ dq offset sel_mj_objectArrayWithFile_
                                        ; DATA XREF: +[NSObject mj_objectArrayWithFilename:]+84↑r
                                        ; +[NSObject objectArrayWithFile:]+4↑r ...
                                        ; "mj_objectArrayWithFile:"
; char *selRef_arrayWithContentsOfFile_
selRef_arrayWithContentsOfFile_ dq offset sel_arrayWithContentsOfFile_
                                        ; DATA XREF: +[NSObject mj_objectArrayWithFile:]+4C↑r
                                        ; "arrayWithContentsOfFile:"
selRef_mj_keyValuesWithKeys_ignoredKeys_ dq offset sel_mj_keyValuesWithKeys_ignoredKeys_
                                        ; DATA XREF: -[NSObject mj_keyValues]+4↑r
                                        ; -[NSObject mj_keyValuesWithKeys:]+4↑r ...
                                        ; "mj_keyValuesWithKeys:ignoredKeys:"
; char *selRef_valueForObject_
selRef_valueForObject_ dq offset sel_valueForObject_
                                        ; DATA XREF: sub_10001C73D+16A↑r
                                        ; sub_1000258E9+F5↑r
                                        ; "valueForObject:"
; char *selRef_mj_keyValues
selRef_mj_keyValues dq offset sel_mj_keyValues
                                        ; DATA XREF: sub_10001C73D+1DD↑o
                                        ; -[NSObject mj_JSONObject]:loc_10001D5A1↑r ...
                                        ; "mj_keyValues"
; char *selRef_mj_keyValuesArrayWithObjectArray_
selRef_mj_keyValuesArrayWithObjectArray_ dq offset sel_mj_keyValuesArrayWithObjectArray_
                                        ; DATA XREF: sub_10001C73D+233↑r
                                        ; +[NSObject keyValuesArrayWithObjectArray:]+4↑r ...
                                        ; "mj_keyValuesArrayWithObjectArray:"
; char *selRef_mj_isReferenceReplacedKeyWhenCreatingKeyValues
selRef_mj_isReferenceReplacedKeyWhenCreatingKeyValues dq offset sel_mj_isReferenceReplacedKeyWhenCreatingKeyValues
                                        ; DATA XREF: sub_10001C73D+25E↑r
                                        ; "mj_isReferenceReplacedKeyWhenCreatingKe"...
; char *selRef_setObject_atIndexedSubscript_
selRef_setObject_atIndexedSubscript_ dq offset sel_setObject_atIndexedSubscript_
                                        ; DATA XREF: sub_10001CC7B+179↑r
                                        ; sub_10001CC7B+1E8↑r
                                        ; "setObject:atIndexedSubscript:"
; char *selRef_enumerateObjectsUsingBlock_
selRef_enumerateObjectsUsingBlock_ dq offset sel_enumerateObjectsUsingBlock_
                                        ; DATA XREF: sub_10001C73D+375↑r
                                        ; +[MJFoundation isClassFromFoundation:]+C3↑r
                                        ; "enumerateObjectsUsingBlock:"
; char *selRef_mj_objectDidFinishConvertingToKeyValues
selRef_mj_objectDidFinishConvertingToKeyValues dq offset sel_mj_objectDidFinishConvertingToKeyValues
                                        ; DATA XREF: -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+1D1↑r
                                        ; "mj_objectDidFinishConvertingToKeyValues"
selRef_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_ dq offset sel_mj_keyValuesArrayWithObjectArray_keys_ignoredKeys_
                                        ; DATA XREF: +[NSObject mj_keyValuesArrayWithObjectArray:]+4↑r
                                        ; +[NSObject mj_keyValuesArrayWithObjectArray:keys:]+4↑r ...
                                        ; "mj_keyValuesArrayWithObjectArray:keys:i"...
; char *selRef_mj_keyValuesWithKeys_
selRef_mj_keyValuesWithKeys_ dq offset sel_mj_keyValuesWithKeys_
                                        ; DATA XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+131↑r
                                        ; -[NSObject keyValuesWithKeys:]+4↑r ...
                                        ; "mj_keyValuesWithKeys:"
; char *selRef_mj_keyValuesWithIgnoredKeys_
selRef_mj_keyValuesWithIgnoredKeys_ dq offset sel_mj_keyValuesWithIgnoredKeys_
                                        ; DATA XREF: +[NSObject mj_keyValuesArrayWithObjectArray:keys:ignoredKeys:]+146↑r
                                        ; -[NSObject keyValuesWithIgnoredKeys:]+4↑r ...
                                        ; "mj_keyValuesWithIgnoredKeys:"
; char *selRef_dataUsingEncoding_
selRef_dataUsingEncoding_ dq offset sel_dataUsingEncoding_
                                        ; DATA XREF: -[NSObject mj_JSONData]+40↑r
                                        ; -[NSObject mj_JSONObject]+47↑r
                                        ; "dataUsingEncoding:"
; char *selRef_dataWithJSONObject_options_error_
selRef_dataWithJSONObject_options_error_ dq offset sel_dataWithJSONObject_options_error_
                                        ; DATA XREF: -[NSObject mj_JSONData]+B7↑r
                                        ; "dataWithJSONObject:options:error:"
; char *selRef_mj_JSONData
selRef_mj_JSONData dq offset sel_mj_JSONData
                                        ; DATA XREF: -[NSObject mj_JSONString]:loc_10001D672↑r
                                        ; -[NSObject JSONData]+4↑r
                                        ; "mj_JSONData"
; char *selRef_mj_error
selRef_mj_error dq offset sel_mj_error  ; DATA XREF: -[NSObject setKeyValues:error:]+42↑r
                                        ; -[NSObject setKeyValues:context:error:]+42↑r ...
                                        ; "mj_error"
; char *selRef_mj_keyValuesArrayWithObjectArray_keys_
selRef_mj_keyValuesArrayWithObjectArray_keys_ dq offset sel_mj_keyValuesArrayWithObjectArray_keys_
                                        ; DATA XREF: +[NSObject keyValuesArrayWithObjectArray:keys:]+4↑r
                                        ; +[NSObject keyValuesArrayWithObjectArray:keys:error:]+10↑r
                                        ; "mj_keyValuesArrayWithObjectArray:keys:"
; char *selRef_mj_keyValuesArrayWithObjectArray_ignoredKeys_
selRef_mj_keyValuesArrayWithObjectArray_ignoredKeys_ dq offset sel_mj_keyValuesArrayWithObjectArray_ignoredKeys_
                                        ; DATA XREF: +[NSObject keyValuesArrayWithObjectArray:ignoredKeys:]+4↑r
                                        ; +[NSObject keyValuesArrayWithObjectArray:ignoredKeys:error:]+10↑r
                                        ; "mj_keyValuesArrayWithObjectArray:ignore"...
; char *selRef_mj_objectWithFilename_
selRef_mj_objectWithFilename_ dq offset sel_mj_objectWithFilename_
                                        ; DATA XREF: +[NSObject objectWithFilename:]+4↑r
                                        ; +[NSObject objectWithFilename:error:]+10↑r
                                        ; "mj_objectWithFilename:"
selRef_mj_JSONString dq offset sel_mj_JSONString
                                        ; DATA XREF: -[NSObject JSONString]+4↑r
                                        ; "mj_JSONString"
; char *selRef_setCornerRadius_
selRef_setCornerRadius_ dq offset sel_setCornerRadius_
                                        ; DATA XREF: -[SButton initWithFrame:]+83↑r
                                        ; "setCornerRadius:"
; char *selRef_m_backgroundColor
selRef_m_backgroundColor dq offset sel_m_backgroundColor
                                        ; DATA XREF: -[SButton initWithFrame:]+170↑r
                                        ; -[SButton mouseExited:]+10B↑r
                                        ; "m_backgroundColor"
; char *selRef_setM_tmpbg_
selRef_setM_tmpbg_ dq offset sel_setM_tmpbg_
                                        ; DATA XREF: -[SButton initWithFrame:]+18B↑r
                                        ; -[SButton mouseEntered:]+F7↑r ...
                                        ; "setM_tmpbg:"
; char *selRef_setM_tmpTitleColor_
selRef_setM_tmpTitleColor_ dq offset sel_setM_tmpTitleColor_
                                        ; DATA XREF: -[SButton initWithFrame:]+227↑r
                                        ; -[SButton mouseEntered:]+18C↑r ...
                                        ; "setM_tmpTitleColor:"
; char *selRef_setM_titleColor_
selRef_setM_titleColor_ dq offset sel_setM_titleColor_
                                        ; DATA XREF: -[SButton initWithFrame:]+287↑r
                                        ; "setM_titleColor:"
selRef_click_   dq offset sel_click_    ; DATA XREF: -[SButton initWithFrame:]+323↑r
                                        ; "click:"
; char *selRef_m_tmpbg
selRef_m_tmpbg  dq offset sel_m_tmpbg   ; DATA XREF: -[SButton drawRect:]+14↑r
                                        ; "m_tmpbg"
; char *selRef_setFill
selRef_setFill  dq offset sel_setFill   ; DATA XREF: -[SButton drawRect:]+30↑r
                                        ; "setFill"
; char *selRef_m_progress
selRef_m_progress dq offset sel_m_progress
                                        ; DATA XREF: -[SButton drawRect:]+50↑r
                                        ; "m_progress"
; char *selRef_m_title
selRef_m_title  dq offset sel_m_title   ; DATA XREF: -[SButton drawRect:]+A0↑r
                                        ; -[SButton mouseEntered:]+26↑r ...
                                        ; "m_title"
; char *selRef_fontWithName_size_
selRef_fontWithName_size_ dq offset sel_fontWithName_size_
                                        ; DATA XREF: -[SButton drawRect:]+DB↑r
                                        ; "fontWithName:size:"
; char *selRef_m_tmpTitleColor
selRef_m_tmpTitleColor dq offset sel_m_tmpTitleColor
                                        ; DATA XREF: -[SButton drawRect:]+122↑r
                                        ; "m_tmpTitleColor"
; char *selRef_sizeWithAttributes_
selRef_sizeWithAttributes_ dq offset sel_sizeWithAttributes_
                                        ; DATA XREF: -[SButton drawRect:]+15D↑r
                                        ; "sizeWithAttributes:"
; char *selRef_drawAtPoint_withAttributes_
selRef_drawAtPoint_withAttributes_ dq offset sel_drawAtPoint_withAttributes_
                                        ; DATA XREF: -[SButton drawRect:]+193↑r
                                        ; "drawAtPoint:withAttributes:"
; char *selRef_isEnabled
selRef_isEnabled dq offset sel_isEnabled
                                        ; DATA XREF: -[SButton mouseEntered:]+11↑r
                                        ; -[SButton mouseExited:]+11↑r
                                        ; "isEnabled"
; char *selRef_m_titleHighlighColor
selRef_m_titleHighlighColor dq offset sel_m_titleHighlighColor
                                        ; DATA XREF: -[SButton mouseEntered:]+174↑r
                                        ; "m_titleHighlighColor"
; char *selRef_setNeedsDisplay
selRef_setNeedsDisplay dq offset sel_setNeedsDisplay
                                        ; DATA XREF: -[SButton mouseEntered:]+1A2↑r
                                        ; -[SButton mouseExited:]+19D↑r ...
                                        ; "setNeedsDisplay"
; char *selRef_m_titleColor
selRef_m_titleColor dq offset sel_m_titleColor
                                        ; DATA XREF: -[SButton mouseExited:]:loc_10001E6B9↑r
                                        ; "m_titleColor"
; char *selRef_SButtonClick_
selRef_SButtonClick_ dq offset sel_SButtonClick_
                                        ; DATA XREF: -[SButton click:]+30↑r
                                        ; -[SButton click:]+6C↑r
                                        ; "SButtonClick:"
; char *selRef_loadNibNamed_owner_topLevelObjects_
selRef_loadNibNamed_owner_topLevelObjects_ dq offset sel_loadNibNamed_owner_topLevelObjects_
                                        ; DATA XREF: +[SLoadXIB loadXibName:]+78↑r
                                        ; "loadNibNamed:owner:topLevelObjects:"
selRef_windowDidLoad dq offset sel_windowDidLoad
                                        ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+2C↑r
                                        ; "windowDidLoad"
; char *selRef_setOkButton_
selRef_setOkButton_ dq offset sel_setOkButton_
                                        ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+5B↑r
                                        ; "setOkButton:"
; char *selRef_okButton
selRef_okButton dq offset sel_okButton  ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+7B↑r
                                        ; -[FirmwaerUpdateLog windowDidLoad]+15C↑r ...
                                        ; "okButton"
; char *selRef_contentView
selRef_contentView dq offset sel_contentView
                                        ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+230↑r
                                        ; -[FirmwaerUpdateLog windowDidLoad]+2A0↑r ...
                                        ; "contentView"
; char *selRef_content
selRef_content  dq offset sel_content   ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+510↑r
                                        ; -[FirmwaerUpdateLog setContentString:]+1A↑r
                                        ; "content"
; char *selRef_orderOut_
selRef_orderOut_ dq offset sel_orderOut_
                                        ; DATA XREF: -[FirmwaerUpdateLog SButtonClick:]+29↑r
                                        ; "orderOut:"
; char *selRef_objectAtIndex_
selRef_objectAtIndex_ dq offset sel_objectAtIndex_
                                        ; DATA XREF: +[Language isCurrentChinaLanguage]+50↑r
                                        ; "objectAtIndex:"
; char *selRef_setLine_
selRef_setLine_ dq offset sel_setLine_  ; DATA XREF: -[MoreView initWithFrame:]+17A↑r
                                        ; "setLine:"
; char *selRef_line
selRef_line     dq offset sel_line      ; DATA XREF: -[MoreView initWithFrame:]+190↑r
                                        ; -[MoreView initWithFrame:]+52F↑r ...
                                        ; "line"
; char *selRef_setMoreScrollView_
selRef_setMoreScrollView_ dq offset sel_setMoreScrollView_
                                        ; DATA XREF: -[MoreView initWithFrame:]+265↑r
                                        ; "setMoreScrollView:"
; char *selRef_moreScrollView
selRef_moreScrollView dq offset sel_moreScrollView
                                        ; DATA XREF: -[MoreView initWithFrame:]+2AC↑r
                                        ; -[MoreView initWithFrame:]+38F↑r ...
                                        ; "moreScrollView"
; char *selRef_verticalScroller
selRef_verticalScroller dq offset sel_verticalScroller
                                        ; DATA XREF: -[MoreView initWithFrame:]+324↑r
                                        ; -[MoreView initWithFrame:]+3A6↑r
                                        ; "verticalScroller"
; char *selRef_horizontalScroller
selRef_horizontalScroller dq offset sel_horizontalScroller
                                        ; DATA XREF: -[MoreView initWithFrame:]+41E↑r
                                        ; -[MoreView initWithFrame:]+49C↑r
                                        ; "horizontalScroller"
; char *selRef_addProduct
selRef_addProduct dq offset sel_addProduct
                                        ; DATA XREF: -[MoreView layout]+3C7↑r
                                        ; "addProduct"
; char *selRef_getMore8BitdoDevicePIDVIDAndNAMEs
selRef_getMore8BitdoDevicePIDVIDAndNAMEs dq offset sel_getMore8BitdoDevicePIDVIDAndNAMEs
                                        ; DATA XREF: -[MoreView addProduct]+1E↑r
                                        ; "getMore8BitdoDevicePIDVIDAndNAMEs"
; char *selRef_setMoreS8BitdoDatails_
selRef_setMoreS8BitdoDatails_ dq offset sel_setMoreS8BitdoDatails_
                                        ; DATA XREF: -[MoreView addProduct]+3A↑r
                                        ; "setMoreS8BitdoDatails:"
; char *selRef_moreS8BitdoDatails
selRef_moreS8BitdoDatails dq offset sel_moreS8BitdoDatails
                                        ; DATA XREF: -[MoreView addProduct]+187↑r
                                        ; -[MoreView addProduct]+1BF↑r ...
                                        ; "moreS8BitdoDatails"
selRef_moreImage dq offset sel_moreImage
                                        ; DATA XREF: -[MoreView addProduct]+240↑r
                                        ; "moreImage"
selRef_moreImagehighlight dq offset sel_moreImagehighlight
                                        ; DATA XREF: -[MoreView addProduct]+26A↑r
                                        ; "moreImagehighlight"
selRef_moreClick_ dq offset sel_moreClick_
                                        ; DATA XREF: -[MoreView addProduct]+2A2↑r
                                        ; "moreClick:"
; char *selRef_MoreViewClick_View_
selRef_MoreViewClick_View_ dq offset sel_MoreViewClick_View_
                                        ; DATA XREF: -[MoreView moreClick:]+E8↑r
                                        ; -[MoreView moreClick:]+131↑r
                                        ; "MoreViewClick:View:"
; char *selRef_setCode_
selRef_setCode_ dq offset sel_setCode_  ; DATA XREF: +[MJPropertyType cachedTypeWithCode:]+78↑r
                                        ; "setCode:"
; char *selRef_hasPrefix_
selRef_hasPrefix_ dq offset sel_hasPrefix_
                                        ; DATA XREF: -[MJPropertyType setCode:]+213↑r
                                        ; "hasPrefix:"
selRef_findStateUI_ dq offset sel_findStateUI_
                                        ; DATA XREF: -[HomeView setState:]:loc_100021235↑r
                                        ; "findStateUI:"
; char *selRef_setDevices_
selRef_setDevices_ dq offset sel_setDevices_
                                        ; DATA XREF: -[HomeView awakeFromNib]+33↑r
                                        ; "setDevices:"
selRef_usbAniamtion dq offset sel_usbAniamtion
                                        ; DATA XREF: -[HomeView awakeFromNib]+59↑r
                                        ; "usbAniamtion"
; char *selRef_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_
selRef_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_ dq offset sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_
                                        ; DATA XREF: -[HomeView awakeFromNib]+60↑r
                                        ; "scheduledTimerWithTimeInterval:target:s"...
; char *selRef_fire
selRef_fire     dq offset sel_fire      ; DATA XREF: -[HomeView awakeFromNib]+C5↑r
                                        ; "fire"
; char *selRef_firmwaerUpdaterButton
selRef_firmwaerUpdaterButton dq offset sel_firmwaerUpdaterButton
                                        ; DATA XREF: -[HomeView awakeFromNib]+D5↑r
                                        ; -[HomeView awakeFromNib]+12F↑r ...
                                        ; "firmwaerUpdaterButton"
selRef_setImagePosition_ dq offset sel_setImagePosition_
                                        ; DATA XREF: -[HomeView awakeFromNib]+229↑r
                                        ; "setImagePosition:"
selRef_setContentTintColor_ dq offset sel_setContentTintColor_
                                        ; DATA XREF: -[HomeView awakeFromNib]+328↑r
                                        ; "setContentTintColor:"
selRef_usb      dq offset sel_usb       ; DATA XREF: -[HomeView awakeFromNib]+360↑r
                                        ; -[HomeView findStateUI:]+45↑o
                                        ; "usb"
; char *selRef_arrow03
selRef_arrow03  dq offset sel_arrow03   ; DATA XREF: -[HomeView usbAniamtion]+10↑r
                                        ; sub_100021871+84↑r
                                        ; "arrow03"
; char *selRef_arrow02
selRef_arrow02  dq offset sel_arrow02   ; DATA XREF: sub_10002172B+14↑r
                                        ; sub_100021871+57↑r
                                        ; "arrow02"
; char *selRef_arrow01
selRef_arrow01  dq offset sel_arrow01   ; DATA XREF: sub_1000217CE+14↑r
                                        ; sub_100021871+15↑r
                                        ; "arrow01"
selRef_usbView  dq offset sel_usbView   ; DATA XREF: -[HomeView findStateUI:]+29↑o
                                        ; "usbView"
selRef_helpButton dq offset sel_helpButton
                                        ; DATA XREF: -[HomeView findStateUI:]+22↑o
                                        ; "helpButton"
; char *selRef_FindsView
selRef_FindsView dq offset sel_FindsView
                                        ; DATA XREF: -[HomeView findStateUI:]+DC↑r
                                        ; -[HomeView refresh]+11↑r ...
                                        ; "FindsView"
; char *selRef_recordActivity_
selRef_recordActivity_ dq offset sel_recordActivity_
                                        ; DATA XREF: -[HomeView addS8BitdoDevice:]+50↑r
                                        ; "recordActivity:"
; char *selRef_refresh
selRef_refresh  dq offset sel_refresh   ; DATA XREF: -[HomeView addS8BitdoDevice:]+A4↑r
                                        ; -[HomeView addS8BitdoDevice:]+14C↑r ...
                                        ; "refresh"
; char *selRef_loadNewGameVersion_version_beta_
selRef_loadNewGameVersion_version_beta_ dq offset sel_loadNewGameVersion_version_beta_
                                        ; DATA XREF: -[HomeView addS8BitdoDevice:]+FB↑r
                                        ; "loadNewGameVersion:version:beta:"
; char *selRef_makeObjectsPerformSelector_
selRef_makeObjectsPerformSelector_ dq offset sel_makeObjectsPerformSelector_
                                        ; DATA XREF: -[HomeView refresh]+4C↑r
                                        ; "makeObjectsPerformSelector:"
selRef_addDevicesTextFileld dq offset sel_addDevicesTextFileld
                                        ; DATA XREF: -[HomeView refresh]+B8↑r
                                        ; "addDevicesTextFileld"
; char *selRef_floatValue
selRef_floatValue dq offset sel_floatValue
                                        ; DATA XREF: -[HomeView loadNewGameVersion:version:beta:]+54↑r
                                        ; "floatValue"
; char *selRef_hasNewFirmwaerVersion_firmwaer_
selRef_hasNewFirmwaerVersion_firmwaer_ dq offset sel_hasNewFirmwaerVersion_firmwaer_
                                        ; DATA XREF: sub_1000224AC+3C↑r
                                        ; sub_1000224AC+AD↑r
                                        ; "hasNewFirmwaerVersion:firmwaer:"
; char *selRef_getNewVersion_version_beta_success_failure_
selRef_getNewVersion_version_beta_success_failure_ dq offset sel_getNewVersion_version_beta_success_failure_
                                        ; DATA XREF: -[HomeView loadNewGameVersion:version:beta:]+99↑r
                                        ; "getNewVersion:version:beta:success:fail"...
; char *selRef_superview
selRef_superview dq offset sel_superview
                                        ; DATA XREF: -[HomeView helpButtonClick:]+16C↑r
                                        ; "superview"
; char *selRef_mainMenu
selRef_mainMenu dq offset sel_mainMenu  ; DATA XREF: +[SMainMenu getCheckUpdateMenuItem]+45↑r
                                        ; +[SMainMenu getBetaMenuItem]+45↑r ...
                                        ; "mainMenu"
; char *selRef_itemArray
selRef_itemArray dq offset sel_itemArray
                                        ; DATA XREF: +[SMainMenu getCheckUpdateMenuItem]+66↑r
                                        ; +[SMainMenu getBetaMenuItem]+66↑r ...
                                        ; "itemArray"
; char *selRef_submenu
selRef_submenu  dq offset sel_submenu   ; DATA XREF: +[SMainMenu getCheckUpdateMenuItem]+AC↑r
                                        ; +[SMainMenu getBetaMenuItem]+AC↑r ...
                                        ; "submenu"
; char *selRef_setProperty_
selRef_setProperty_ dq offset sel_setProperty_
                                        ; DATA XREF: +[MJProperty cachedPropertyWithProperty:]+48↑r
                                        ; "setProperty:"
; char *selRef_cachedTypeWithCode_
selRef_cachedTypeWithCode_ dq offset sel_cachedTypeWithCode_
                                        ; DATA XREF: -[MJProperty setProperty:]+F6↑r
                                        ; "cachedTypeWithCode:"
; char *selRef_isKVCDisabled
selRef_isKVCDisabled dq offset sel_isKVCDisabled
                                        ; DATA XREF: -[MJProperty valueForObject:]+3C↑r
                                        ; -[MJProperty setValue:forObject:]+4C↑r
                                        ; "isKVCDisabled"
; char *selRef_valueForKey_
selRef_valueForKey_ dq offset sel_valueForKey_
                                        ; DATA XREF: -[MJProperty valueForObject:]+93↑r
                                        ; "valueForKey:"
; char *selRef_setValue_forKey_
selRef_setValue_forKey_ dq offset sel_setValue_forKey_
                                        ; DATA XREF: -[MJProperty setValue:forObject:]+8E↑r
                                        ; "setValue:forKey:"
selRef_substringToIndex_ dq offset sel_substringToIndex_
                                        ; DATA XREF: -[MJProperty propertyKeysWithStringKey:]+FA↑r
                                        ; "substringToIndex:"
; char *selRef_propertyKeysWithStringKey_
selRef_propertyKeysWithStringKey_ dq offset sel_propertyKeysWithStringKey_
                                        ; DATA XREF: -[MJProperty setOriginKey:forClass:]+6A↑r
                                        ; -[MJProperty setOriginKey:forClass:]:loc_100023F24↑r
                                        ; "propertyKeysWithStringKey:"
; char *selRef_setPorpertyKeys_forClass_
selRef_setPorpertyKeys_forClass_ dq offset sel_setPorpertyKeys_forClass_
                                        ; DATA XREF: -[MJProperty setOriginKey:forClass:]+C3↑r
                                        ; -[MJProperty setOriginKey:forClass:]+2B1↑r
                                        ; "setPorpertyKeys:forClass:"
; char *selRef_propertyKeysDict
selRef_propertyKeysDict dq offset sel_propertyKeysDict
                                        ; DATA XREF: -[MJProperty setPorpertyKeys:forClass:]+32↑r
                                        ; -[MJProperty propertyKeysForClass:]+E↑r
                                        ; "propertyKeysDict"
; char *selRef_objectClassInArrayDict
selRef_objectClassInArrayDict dq offset sel_objectClassInArrayDict
                                        ; DATA XREF: -[MJProperty setObjectClassInArray:forClass:]+16↑r
                                        ; -[MJProperty objectClassInArrayForClass:]+E↑r
                                        ; "objectClassInArrayDict"
; char *selRef_mj_totalAllowedCodingPropertyNames
selRef_mj_totalAllowedCodingPropertyNames dq offset sel_mj_totalAllowedCodingPropertyNames
                                        ; DATA XREF: -[NSObject mj_encode:]+3B↑r
                                        ; -[NSObject mj_decode:]+3B↑r
                                        ; "mj_totalAllowedCodingPropertyNames"
; char *selRef_mj_totalIgnoredCodingPropertyNames
selRef_mj_totalIgnoredCodingPropertyNames dq offset sel_mj_totalIgnoredCodingPropertyNames
                                        ; DATA XREF: -[NSObject mj_encode:]+53↑r
                                        ; -[NSObject mj_decode:]+53↑r
                                        ; "mj_totalIgnoredCodingPropertyNames"
selRef_encodeObject_forKey_ dq offset sel_encodeObject_forKey_
                                        ; DATA XREF: sub_1000258E9+130↑r
                                        ; "encodeObject:forKey:"
selRef_decodeObjectForKey_ dq offset sel_decodeObjectForKey_
                                        ; DATA XREF: sub_100025BD6+107↑r
                                        ; "decodeObjectForKey:"
selRef_stringByAppendingString_ dq offset sel_stringByAppendingString_
                                        ; DATA XREF: sub_100025BD6+152↑r
                                        ; "stringByAppendingString:"
; char *selRef_readBlock_Block_
selRef_readBlock_Block_ dq offset sel_readBlock_Block_
                                        ; DATA XREF: sub_100025F25+150↑r
                                        ; "readBlock:Block:"
; char *selRef_SHIDBootHJZUpdate_device_
selRef_SHIDBootHJZUpdate_device_ dq offset sel_SHIDBootHJZUpdate_device_
                                        ; DATA XREF: sub_100026251+A1↑r
                                        ; sub_100026251+15E↑r
                                        ; "SHIDBootHJZUpdate:device:"
; char *selRef_EraseFlashPage_
selRef_EraseFlashPage_ dq offset sel_EraseFlashPage_
                                        ; DATA XREF: -[SHIDBootHJZ EraseFlashPage:]+47↑r
                                        ; sub_100026677+D8↑r ...
                                        ; "EraseFlashPage:"
; char *selRef_send_usb_packet_cut
selRef_send_usb_packet_cut dq offset sel_send_usb_packet_cut
                                        ; DATA XREF: sub_10002650E+1E↑r
                                        ; sub_1000269C1+1A↑r
                                        ; "send_usb_packet_cut"
; char *selRef_writeDataCMD_block_
selRef_writeDataCMD_block_ dq offset sel_writeDataCMD_block_
                                        ; DATA XREF: -[SHIDBootHJZ EraseFlashPage:]+DC↑r
                                        ; sub_10002650E+80↑r ...
                                        ; "writeDataCMD:block:"
; char *selRef_cur_devId
selRef_cur_devId dq offset sel_cur_devId
                                        ; DATA XREF: -[SHIDBootHJZ startUpdate]+140↑r
                                        ; "cur_devId"
; char *selRef_EraseFlash
selRef_EraseFlash dq offset sel_EraseFlash
                                        ; DATA XREF: -[SHIDBootHJZ startUpdate]:loc_100026BDD↑r
                                        ; "EraseFlash"
; char *selRef_mj_replacedKeyFromPropertyName121_
selRef_mj_replacedKeyFromPropertyName121_ dq offset sel_mj_replacedKeyFromPropertyName121_
                                        ; DATA XREF: +[NSObject propertyKey:]+68↑r
                                        ; "mj_replacedKeyFromPropertyName121:"
selRef_replacedKeyFromPropertyName121_ dq offset sel_replacedKeyFromPropertyName121_
                                        ; DATA XREF: +[NSObject propertyKey:]:loc_100027173↑r
                                        ; "replacedKeyFromPropertyName121:"
selRef_replacedKeyFromPropertyName121 dq offset sel_replacedKeyFromPropertyName121
                                        ; DATA XREF: +[NSObject propertyKey:]+C9↑r
                                        ; "replacedKeyFromPropertyName121"
; char *selRef_performSelector_withObject_
selRef_performSelector_withObject_ dq offset sel_performSelector_withObject_
                                        ; DATA XREF: +[NSObject propertyKey:]+D0↑r
                                        ; "performSelector:withObject:"
; char *selRef_mj_replacedKeyFromPropertyName
selRef_mj_replacedKeyFromPropertyName dq offset sel_mj_replacedKeyFromPropertyName
                                        ; DATA XREF: +[NSObject propertyKey:]:loc_10002724E↑r
                                        ; "mj_replacedKeyFromPropertyName"
selRef_replacedKeyFromPropertyName dq offset sel_replacedKeyFromPropertyName
                                        ; DATA XREF: +[NSObject propertyKey:]:loc_1000272E1↑r
                                        ; "replacedKeyFromPropertyName"
; char *selRef_performSelector_
selRef_performSelector_ dq offset sel_performSelector_
                                        ; DATA XREF: +[NSObject propertyKey:]+23A↑r
                                        ; +[NSObject propertyObjectClassInArray:]+E6↑r ...
                                        ; "performSelector:"
; char *selRef_mj_objectClassInArray
selRef_mj_objectClassInArray dq offset sel_mj_objectClassInArray
                                        ; DATA XREF: +[NSObject propertyObjectClassInArray:]+56↑r
                                        ; "mj_objectClassInArray"
selRef_objectClassInArray dq offset sel_objectClassInArray
                                        ; DATA XREF: +[NSObject propertyObjectClassInArray:]:loc_1000276B3↑r
                                        ; "objectClassInArray"
; char *selRef_properties
selRef_properties dq offset sel_properties
                                        ; DATA XREF: +[NSObject mj_enumerateProperties:]+35↑r
                                        ; "properties"
; char *selRef_dictForKey_
selRef_dictForKey_ dq offset sel_dictForKey_
                                        ; DATA XREF: +[NSObject properties]+14↑r
                                        ; +[NSObject properties]+102↑r ...
                                        ; "dictForKey:"
; char *selRef_cachedPropertyWithProperty_
selRef_cachedPropertyWithProperty_ dq offset sel_cachedPropertyWithProperty_
                                        ; DATA XREF: sub_100027B8D+B4↑r
                                        ; "cachedPropertyWithProperty:"
selRef_srcClass dq offset sel_srcClass  ; DATA XREF: sub_100027B8D+3A↑r
                                        ; "srcClass"
selRef_setSrcClass_ dq offset sel_setSrcClass_
                                        ; DATA XREF: sub_100027B8D+56↑r
                                        ; "setSrcClass:"
selRef_propertyKey_ dq offset sel_propertyKey_
                                        ; DATA XREF: sub_100027B8D+6C↑r
                                        ; "propertyKey:"
selRef_setOriginKey_forClass_ dq offset sel_setOriginKey_forClass_
                                        ; DATA XREF: sub_100027B8D+77↑r
                                        ; "setOriginKey:forClass:"
selRef_propertyObjectClassInArray_ dq offset sel_propertyObjectClassInArray_
                                        ; DATA XREF: sub_100027B8D+82↑r
                                        ; "propertyObjectClassInArray:"
selRef_setObjectClassInArray_forClass_ dq offset sel_setObjectClassInArray_forClass_
                                        ; DATA XREF: sub_100027B8D+8D↑r
                                        ; "setObjectClassInArray:forClass:"
; char *selRef_mj_enumerateClasses_
selRef_mj_enumerateClasses_ dq offset sel_mj_enumerateClasses_
                                        ; DATA XREF: +[NSObject properties]+E8↑r
                                        ; "mj_enumerateClasses:"
; char *selRef_mj_newValueFromOldValue_property_
selRef_mj_newValueFromOldValue_property_ dq offset sel_mj_newValueFromOldValue_property_
                                        ; DATA XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+1E↑r
                                        ; "mj_newValueFromOldValue:property:"
selRef_newValueFromOldValue_property_ dq offset sel_newValueFromOldValue_property_
                                        ; DATA XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]:loc_100027E28↑r
                                        ; "newValueFromOldValue:property:"
; char *selRef_performSelector_withObject_withObject_
selRef_performSelector_withObject_withObject_ dq offset sel_performSelector_withObject_withObject_
                                        ; DATA XREF: +[NSObject mj_getNewValueFromObject:oldValue:property:]+76↑r
                                        ; "performSelector:withObject:withObject:"
; char *selRef_mj_setupBlockReturnValue_key_
selRef_mj_setupBlockReturnValue_key_ dq offset sel_mj_setupBlockReturnValue_key_
                                        ; DATA XREF: +[NSObject mj_setupObjectClassInArray:]+A↑r
                                        ; +[NSObject mj_setupReplacedKeyFromPropertyName:]+A↑r ...
                                        ; "mj_setupBlockReturnValue:key:"
selRef_mj_setupNewValueFromOldValue_ dq offset sel_mj_setupNewValueFromOldValue_
                                        ; DATA XREF: +[NSObject setupNewValueFromOldValue:]+4↑r
                                        ; "mj_setupNewValueFromOldValue:"
selRef_mj_setupReplacedKeyFromPropertyName_ dq offset sel_mj_setupReplacedKeyFromPropertyName_
                                        ; DATA XREF: +[NSObject setupReplacedKeyFromPropertyName:]+4↑r
                                        ; "mj_setupReplacedKeyFromPropertyName:"
selRef_mj_setupReplacedKeyFromPropertyName121_ dq offset sel_mj_setupReplacedKeyFromPropertyName121_
                                        ; DATA XREF: +[NSObject setupReplacedKeyFromPropertyName121:]+4↑r
                                        ; "mj_setupReplacedKeyFromPropertyName121:"
selRef_mj_setupObjectClassInArray_ dq offset sel_mj_setupObjectClassInArray_
                                        ; DATA XREF: +[NSObject setupObjectClassInArray:]+4↑r
                                        ; "mj_setupObjectClassInArray:"
; char *selRef_setMainImageView_
selRef_setMainImageView_ dq offset sel_setMainImageView_
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+75↑r
                                        ; "setMainImageView:"
selRef_setOneHintLabel_ dq offset sel_setOneHintLabel_
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+AD↑r
                                        ; "setOneHintLabel:"
selRef_setTwoHintLabel_ dq offset sel_setTwoHintLabel_
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+DB↑r
                                        ; "setTwoHintLabel:"
selRef_setThreeHintLabel_ dq offset sel_setThreeHintLabel_
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+109↑r
                                        ; "setThreeHintLabel:"
; char *selRef_mainImageView
selRef_mainImageView dq offset sel_mainImageView
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+11F↑r
                                        ; -[DeviceManualView initWithFrame:]+17F↑r ...
                                        ; "mainImageView"
selRef_setSubImageView_ dq offset sel_setSubImageView_
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+1F7↑r
                                        ; "setSubImageView:"
selRef_subImageView dq offset sel_subImageView
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+20D↑r
                                        ; -[DeviceManualView initWithFrame:]+26A↑r ...
                                        ; "subImageView"
selRef_setSubmainImageView_ dq offset sel_setSubmainImageView_
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+2DF↑r
                                        ; "setSubmainImageView:"
; char *selRef_submainImageView
selRef_submainImageView dq offset sel_submainImageView
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+2F5↑r
                                        ; -[DeviceManualView initWithFrame:]+352↑r ...
                                        ; "submainImageView"
selRef_setSubsubImageView_ dq offset sel_setSubsubImageView_
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+3CA↑r
                                        ; "setSubsubImageView:"
selRef_subsubImageView dq offset sel_subsubImageView
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+3E3↑r
                                        ; -[DeviceManualView initWithFrame:]+43D↑r ...
                                        ; "subsubImageView"
; char *selRef_oneHintLabel
selRef_oneHintLabel dq offset sel_oneHintLabel
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+4C7↑r
                                        ; -[DeviceManualView layout]+1A1↑r ...
                                        ; "oneHintLabel"
; char *selRef_twoHintLabel
selRef_twoHintLabel dq offset sel_twoHintLabel
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+4F1↑r
                                        ; -[DeviceManualView layout]+2BF↑r ...
                                        ; "twoHintLabel"
; char *selRef_threeHintLabel
selRef_threeHintLabel dq offset sel_threeHintLabel
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+51B↑r
                                        ; -[DeviceManualView layout]+315↑r ...
                                        ; "threeHintLabel"
; char *selRef_setUI
selRef_setUI    dq offset sel_setUI     ; DATA XREF: -[DeviceManualView layout]+17F↑r
                                        ; "setUI"
; char *selRef_error
selRef_error    dq offset sel_error     ; DATA XREF: -[DeviceManualView layout]+18C↑r
                                        ; "error"
; char *selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
selRef_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_ dq offset sel_setMainImageView_oneHintLabel_twoHintLabel_threeHintLabel_
                                        ; DATA XREF: -[DeviceManualView setUI]+2EA↑r
                                        ; -[DeviceManualView setUI]+48B↑r ...
                                        ; "setMainImageView:oneHintLabel:twoHintLa"...
selRef_isManuanlViewRR dq offset sel_isManuanlViewRR
                                        ; DATA XREF: -[DeviceManualView setUI]+A61↑r
                                        ; "isManuanlViewRR"
selRef_mj_ignoredPropertyNames dq offset sel_mj_ignoredPropertyNames
                                        ; DATA XREF: +[NSObject mj_totalIgnoredPropertyNames]+4↑r
                                        ; "mj_ignoredPropertyNames"
selRef_mj_totalObjectsWithSelector_key_ dq offset sel_mj_totalObjectsWithSelector_key_
                                        ; DATA XREF: +[NSObject mj_totalIgnoredPropertyNames]+B↑r
                                        ; +[NSObject mj_totalIgnoredCodingPropertyNames]+B↑r ...
                                        ; "mj_totalObjectsWithSelector:key:"
selRef_mj_ignoredCodingPropertyNames dq offset sel_mj_ignoredCodingPropertyNames
                                        ; DATA XREF: +[NSObject mj_totalIgnoredCodingPropertyNames]+4↑r
                                        ; "mj_ignoredCodingPropertyNames"
selRef_mj_allowedPropertyNames dq offset sel_mj_allowedPropertyNames
                                        ; DATA XREF: +[NSObject mj_totalAllowedPropertyNames]+4↑r
                                        ; "mj_allowedPropertyNames"
selRef_mj_allowedCodingPropertyNames dq offset sel_mj_allowedCodingPropertyNames
                                        ; DATA XREF: +[NSObject mj_totalAllowedCodingPropertyNames]+4↑r
                                        ; "mj_allowedCodingPropertyNames"
; char *selRef_addObjectsFromArray_
selRef_addObjectsFromArray_ dq offset sel_addObjectsFromArray_
                                        ; DATA XREF: +[NSObject mj_totalObjectsWithSelector:key:]+144↑r
                                        ; sub_10002C952+28↑r
                                        ; "addObjectsFromArray:"
; char *selRef_string
selRef_string   dq offset sel_string    ; DATA XREF: -[NSString mj_underlineFromCamel]+34↑r
                                        ; -[NSString mj_camelFromUnderline]+31↑r ...
                                        ; "string"
; char *selRef_uppercaseString
selRef_uppercaseString dq offset sel_uppercaseString
                                        ; DATA XREF: -[NSString mj_camelFromUnderline]+9A↑r
                                        ; -[NSString mj_firstCharUpper]+81↑r
                                        ; "uppercaseString"
; char *selRef_scannerWithString_
selRef_scannerWithString_ dq offset sel_scannerWithString_
                                        ; DATA XREF: -[NSString mj_isPureInt]+15↑r
                                        ; "scannerWithString:"
; char *selRef_scanInt_
selRef_scanInt_ dq offset sel_scanInt_  ; DATA XREF: -[NSString mj_isPureInt]+31↑r
                                        ; "scanInt:"
; char *selRef_isAtEnd
selRef_isAtEnd  dq offset sel_isAtEnd   ; DATA XREF: -[NSString mj_isPureInt]+46↑r
                                        ; "isAtEnd"
selRef_mj_underlineFromCamel dq offset sel_mj_underlineFromCamel
                                        ; DATA XREF: -[NSString underlineFromCamel]+4↑r
                                        ; "mj_underlineFromCamel"
selRef_mj_camelFromUnderline dq offset sel_mj_camelFromUnderline
                                        ; DATA XREF: -[NSString camelFromUnderline]+4↑r
                                        ; "mj_camelFromUnderline"
selRef_mj_firstCharLower dq offset sel_mj_firstCharLower
                                        ; DATA XREF: -[NSString firstCharLower]+4↑r
                                        ; "mj_firstCharLower"
selRef_mj_firstCharUpper dq offset sel_mj_firstCharUpper
                                        ; DATA XREF: -[NSString firstCharUpper]+4↑r
                                        ; "mj_firstCharUpper"
selRef_mj_isPureInt dq offset sel_mj_isPureInt
                                        ; DATA XREF: -[NSString isPureInt]+4↑r
                                        ; "mj_isPureInt"
; char *selRef_clearColor
selRef_clearColor dq offset sel_clearColor
                                        ; DATA XREF: -[SLabel initWithFrame:]+CC↑r
                                        ; "clearColor"
; char *selRef_setWithObjects_
selRef_setWithObjects_ dq offset sel_setWithObjects_
                                        ; DATA XREF: +[MJFoundation foundationClasses]+CF↑r
                                        ; "setWithObjects:"
; char *selRef_foundationClasses
selRef_foundationClasses dq offset sel_foundationClasses
                                        ; DATA XREF: +[MJFoundation isClassFromFoundation:]+73↑r
__objc_selrefs  ends                    ; "foundationClasses"

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_classrefs segment para public 'DATA' use64
                assume cs:__objc_classrefs
                ;org 1000487E0h
; void *classRef_S8BitdoDeviceDetailsTools
classRef_S8BitdoDeviceDetailsTools dq offset _OBJC_CLASS_$_S8BitdoDeviceDetailsTools
                                        ; DATA XREF: +[S8BitdoDevice getNameWithPid:]+30↑r
                                        ; -[S8BitdoDevice details]+44↑r ...
; void *classRef_S8BitdoDataDetails
classRef_S8BitdoDataDetails dq offset _OBJC_CLASS_$_S8BitdoDataDetails
                                        ; DATA XREF: -[S8BitdoDevice details]+22A↑r
                                        ; -[S8BitdoDevice details]+2C1↑r ...
; void *classRef_NSString
classRef_NSString dq offset _OBJC_CLASS_$_NSString
                                        ; DATA XREF: -[S8BitdoDevice description]+14↑r
                                        ; +[SHttp getUpdateFirmwaerWithType:success:failure:]+B4↑r ...
; void *classRef_Language
classRef_Language dq offset _OBJC_CLASS_$_Language
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+32↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+97↑r ...
; void *classRef_NSUserDefaults
classRef_NSUserDefaults dq offset _OBJC_CLASS_$_NSUserDefaults
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+60↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]:loc_100002409↑r ...
; void *classRef_NSURL
classRef_NSURL  dq offset _OBJC_CLASS_$_NSURL
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+AD↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+28A↑r ...
; void *classRef_NSMutableURLRequest
classRef_NSMutableURLRequest dq offset _OBJC_CLASS_$_NSMutableURLRequest
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+101↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]:loc_10000259F↑r ...
; void *classRef_NSURLSession
classRef_NSURLSession dq offset _OBJC_CLASS_$_NSURLSession
                                        ; DATA XREF: +[SHttp getUpdateFirmwaerWithType:success:failure:]+193↑r
                                        ; +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+2D3↑r ...
; void *classRef_NSJSONSerialization
classRef_NSJSONSerialization dq offset _OBJC_CLASS_$_NSJSONSerialization
                                        ; DATA XREF: sub_100002039:loc_1000020EB↑r
                                        ; sub_100002D97+1D↑r ...
; void *classRef_Firmware
classRef_Firmware dq offset _OBJC_CLASS_$_Firmware
                                        ; DATA XREF: sub_100002039+123↑r
                                        ; sub_100002D97+DA↑r ...
; void *classRef_NSFileManager
classRef_NSFileManager dq offset _OBJC_CLASS_$_NSFileManager
                                        ; DATA XREF: +[SHttp dowmFirmwaerFile:success:failure:downLoadID:maxSize:]+1EF↑r
                                        ; sub_100002720+13B↑r ...
; void *classRef_NSError
classRef_NSError dq offset _OBJC_CLASS_$_NSError
                                        ; DATA XREF: sub_100002720:loc_10000293B↑r
                                        ; -[NSObject mj_setKeyValues:context:]:loc_10001ACCF↑r ...
; void *classRef_NSDate
classRef_NSDate dq offset _OBJC_CLASS_$_NSDate
                                        ; DATA XREF: +[SHttp recordActivity:]+17↑r
                                        ; +[SHttp sendRecordActivity:IP:]+17↑r ...
; void *classRef_NSArray
classRef_NSArray dq offset _OBJC_CLASS_$_NSArray
                                        ; DATA XREF: +[SHttp getID]+11↑r
                                        ; +[SHttp getID]+DE↑r ...
; void *classRef_NSTask
classRef_NSTask dq offset _OBJC_CLASS_$_NSTask
                                        ; DATA XREF: +[SHttp getID]+6E↑r
                                        ; +[SHttp getID]+105↑r
; void *classRef_NSPipe
classRef_NSPipe dq offset _OBJC_CLASS_$_NSPipe
                                        ; DATA XREF: +[SHttp getID]+AD↑r
                                        ; +[SHttp getID]+13D↑r
; void *classRef_NSDictionary
classRef_NSDictionary dq offset _OBJC_CLASS_$_NSDictionary
                                        ; DATA XREF: +[SHttp getComputerName]+12↑r
                                        ; -[UpdateView refreshFirmwaerList]+14FE↑r ...
; void *classRef_NSMutableString
classRef_NSMutableString dq offset _OBJC_CLASS_$_NSMutableString
                                        ; DATA XREF: +[SHttp utf8ToUnicode:]+34↑r
                                        ; +[SHttp utf8ToUnicode:]:loc_100003DA1↑r ...
classRef_NSRegularExpression dq offset _OBJC_CLASS_$_NSRegularExpression
                                        ; DATA XREF: +[SHttp getIPFormHtml:]+3A↑r
classRef_UpdateView dq offset _OBJC_CLASS_$_UpdateView
                                        ; DATA XREF: -[ViewController updateView]+28↑r
                                        ; -[ViewController hasNewFirmwaerVersion:firmwaer:]+158↑r
; void *classRef_NSColor
classRef_NSColor dq offset _OBJC_CLASS_$_NSColor
                                        ; DATA XREF: -[ViewController updateView]+C5↑r
                                        ; -[ViewController moreView]+C5↑r ...
classRef_MoreView dq offset _OBJC_CLASS_$_MoreView
                                        ; DATA XREF: -[ViewController moreView]+28↑r
                                        ; -[ViewController hasNewFirmwaerVersion:firmwaer:]+136↑r
; void *classRef_NSMutableArray
classRef_NSMutableArray dq offset _OBJC_CLASS_$_NSMutableArray
                                        ; DATA XREF: -[ViewController viewDidLoad]+38↑r
                                        ; +[S8BitdoDeviceDetailsTools getMore8BitdoDevicePIDVIDAndNAMEs]+2D↑r ...
; void *classRef_SHIDDinput
classRef_SHIDDinput dq offset _OBJC_CLASS_$_SHIDDinput
                                        ; DATA XREF: -[ViewController viewDidLoad]+142↑r
                                        ; -[UpdateView changeBoot]+26F↑r
classRef_SHIDXinput dq offset _OBJC_CLASS_$_SHIDXinput
                                        ; DATA XREF: -[ViewController viewDidLoad]+1D5↑r
classRef_SHIDSwitchAndMac dq offset _OBJC_CLASS_$_SHIDSwitchAndMac
                                        ; DATA XREF: -[ViewController viewDidLoad]+201↑r
classRef_SBackButton dq offset _OBJC_CLASS_$_SBackButton
                                        ; DATA XREF: -[ViewController viewDidLoad]+28A↑r
; void *classRef_NSNotificationCenter
classRef_NSNotificationCenter dq offset _OBJC_CLASS_$_NSNotificationCenter
                                        ; DATA XREF: -[ViewController viewDidLoad]+4F7↑r
                                        ; -[ViewController viewDidLoad]+544↑r ...
; void *classRef_SLoadXIB
classRef_SLoadXIB dq offset _OBJC_CLASS_$_SLoadXIB
                                        ; DATA XREF: -[ViewController initView]+11↑r
; void *classRef_SMainMenu
classRef_SMainMenu dq offset _OBJC_CLASS_$_SMainMenu
                                        ; DATA XREF: -[ViewController S_AddView:]+EA↑r
                                        ; -[ViewController S_AddView:]+12A↑r ...
; void *classRef_NSBundle
classRef_NSBundle dq offset _OBJC_CLASS_$_NSBundle
                                        ; DATA XREF: -[ViewController addCheckUpdat]+35↑r
                                        ; -[ViewController addMoreAction]+34↑r ...
; void *classRef_UpDaterManager
classRef_UpDaterManager dq offset _OBJC_CLASS_$_UpDaterManager
                                        ; DATA XREF: -[ViewController updateClick]+7↑r
                                        ; sub_10001A023+4↑r
; void *classRef_NSAlert
classRef_NSAlert dq offset _OBJC_CLASS_$_NSAlert
                                        ; DATA XREF: -[ViewController betaClick]:loc_100005B4F↑r
                                        ; sub_1000166BA+3A↑r ...
; void *classRef_NSApplication
classRef_NSApplication dq offset _OBJC_CLASS_$_NSApplication
                                        ; DATA XREF: -[ViewController closeWindow:]+20↑r
                                        ; +[SMainMenu getCheckUpdateMenuItem]+22↑r ...
classRef_NSInputStream dq offset _OBJC_CLASS_$_NSInputStream
                                        ; DATA XREF: sub_100006CCA+32↑r
                                        ; sub_100006F09+67↑r ...
; void *classRef_S8BitdoDevice
classRef_S8BitdoDevice dq offset _OBJC_CLASS_$_S8BitdoDevice
                                        ; DATA XREF: sub_100006F09+1F1↑r
                                        ; sub_100007A60+2A↑r ...
; void *classRef_NSMutableDictionary
classRef_NSMutableDictionary dq offset _OBJC_CLASS_$_NSMutableDictionary
                                        ; DATA XREF: -[SHIDBoot open]+46↑r
                                        ; -[SHIDBoot open]+DD↑r ...
; void *classRef_NSNumber
classRef_NSNumber dq offset _OBJC_CLASS_$_NSNumber
                                        ; DATA XREF: -[SHIDBoot open]+59↑r
                                        ; -[SHIDBoot open]+A4↑r ...
; void *classRef_NSImage
classRef_NSImage dq offset _OBJC_CLASS_$_NSImage
                                        ; DATA XREF: -[SBackButton initWithFrame:]+4D↑r
                                        ; -[UpdateView setDevice:]+21↑r ...
; void *classRef_SHIDBootPro2
classRef_SHIDBootPro2 dq offset _OBJC_CLASS_$_SHIDBootPro2
                                        ; DATA XREF: +[SHIDBootPro2 sharedInstance]+14↑r
                                        ; sub_100008B19+12↑r ...
; void *classRef_NSFileHandle
classRef_NSFileHandle dq offset _OBJC_CLASS_$_NSFileHandle
                                        ; DATA XREF: sub_1000095F5+77↑r
                                        ; sub_10000AAF4+14↑r ...
; void *classRef_DeviceManualView
classRef_DeviceManualView dq offset _OBJC_CLASS_$_DeviceManualView
                                        ; DATA XREF: -[UpdateView manualView]+22↑r
                                        ; -[UpdateView manualViewRemoveFromSuperView]+F4↑r ...
classRef_SMiniImageView dq offset _OBJC_CLASS_$_SMiniImageView
                                        ; DATA XREF: -[UpdateView initWithFrame:]+4F↑r
                                        ; -[UpdateView initWithFrame:]+EF↑r
classRef_SView  dq offset _OBJC_CLASS_$_SView
                                        ; DATA XREF: -[UpdateView initWithFrame:]+238↑r
                                        ; -[UpdateView initWithFrame:]+304↑r ...
classRef_NSScrollView dq offset _OBJC_CLASS_$_NSScrollView
                                        ; DATA XREF: -[UpdateView initWithFrame:]+26D↑r
                                        ; -[MoreView initWithFrame:]+24A↑r
classRef_NSProgressIndicator dq offset _OBJC_CLASS_$_NSProgressIndicator
                                        ; DATA XREF: -[UpdateView initWithFrame:]+339↑r
classRef_NSButton dq offset _OBJC_CLASS_$_NSButton
                                        ; DATA XREF: -[UpdateView initWithFrame:]+3F5↑r
                                        ; -[UpdateView refreshFirmwaerList]+1281↑r ...
classRef_SLabel dq offset _OBJC_CLASS_$_SLabel
                                        ; DATA XREF: -[UpdateView initWithFrame:]+567↑r
                                        ; -[UpdateView initWithFrame:]+622↑r ...
classRef_SButton dq offset _OBJC_CLASS_$_SButton
                                        ; DATA XREF: -[UpdateView initWithFrame:]+712↑r
                                        ; -[UpdateView initWithFrame:]+84A↑r ...
classRef_SHIDBoot dq offset _OBJC_CLASS_$_SHIDBoot
                                        ; DATA XREF: -[UpdateView initWithFrame:]+D34↑r
classRef_SHIDHJZ dq offset _OBJC_CLASS_$_SHIDHJZ
                                        ; DATA XREF: -[UpdateView initWithFrame:]+E2A↑r
                                        ; +[SHIDHJZ sharedInstance]+14↑r
; void *classRef_SHIDBootHJZ
classRef_SHIDBootHJZ dq offset _OBJC_CLASS_$_SHIDBootHJZ
                                        ; DATA XREF: -[UpdateView initWithFrame:]+E55↑r
                                        ; -[UpdateView initWithFrame:]+E80↑r ...
; void *classRef_NSFont
classRef_NSFont dq offset _OBJC_CLASS_$_NSFont
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+4D↑r
                                        ; -[UpdateView initFindNewVersion]+134↑r ...
classRef_NSTextView dq offset _OBJC_CLASS_$_NSTextView
                                        ; DATA XREF: -[UpdateView initFindNewVersion]+FF↑r
classRef_NSView dq offset _OBJC_CLASS_$_NSView
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+3B9↑r
                                        ; -[UpdateView refreshFirmwaerList]+48C↑r ...
classRef_NSMutableParagraphStyle dq offset _OBJC_CLASS_$_NSMutableParagraphStyle
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+1491↑r
; void *classRef_NSAttributedString
classRef_NSAttributedString dq offset _OBJC_CLASS_$_NSAttributedString
                                        ; DATA XREF: -[UpdateView refreshFirmwaerList]+152E↑r
                                        ; +[MJFoundation foundationClasses]+BF↑r
classRef_FirmwaerUpdateLog dq offset _OBJC_CLASS_$_FirmwaerUpdateLog
                                        ; DATA XREF: -[UpdateView showLogClick:]+35↑r
; void *classRef_SHttp
classRef_SHttp  dq offset _OBJC_CLASS_$_SHttp
                                        ; DATA XREF: -[UpdateView loadUpdateFirmwae]+E1↑r
                                        ; -[UpdateView loadUpdateFirmwae:]+E3↑r ...
; void *classRef_NSTimer
classRef_NSTimer dq offset _OBJC_CLASS_$_NSTimer
                                        ; DATA XREF: -[UpdateView initTimer]:loc_10001680F↑r
                                        ; -[HomeView awakeFromNib]+52↑r
; void *classRef_NSRunLoop
classRef_NSRunLoop dq offset _OBJC_CLASS_$_NSRunLoop
                                        ; DATA XREF: -[UpdateView initTimer]+A4↑r
                                        ; -[HomeView awakeFromNib]+88↑r
classRef_NSTrackingArea dq offset _OBJC_CLASS_$_NSTrackingArea
                                        ; DATA XREF: -[SMiniImageView updateTrackingAreas]:loc_100018CAA↑r
                                        ; -[SButton updateTrackingAreas]+10↑r
classRef_SPUStandardUpdaterController dq offset _OBJC_CLASS_$_SPUStandardUpdaterController
                                        ; DATA XREF: -[UpDaterManager setupUpdater]+22↑r
; void *classRef_NSLocale
classRef_NSLocale dq offset _OBJC_CLASS_$_NSLocale
                                        ; DATA XREF: -[UpDaterManager getCurrentLanguageCode]+E↑r
                                        ; -[UpDaterManager getCurrentLanguageCode]+5B↑r
classRef_NSNumberFormatter dq offset _OBJC_CLASS_$_NSNumberFormatter
                                        ; DATA XREF: +[NSObject load]+A↑r
; void *classRef_NSNull
classRef_NSNull dq offset _OBJC_CLASS_$_NSNull
                                        ; DATA XREF: sub_10001AD4A+3FF↑r
                                        ; sub_10001CC7B+99↑r ...
; void *classRef_NSMutableData
classRef_NSMutableData dq offset _OBJC_CLASS_$_NSMutableData
                                        ; DATA XREF: sub_10001AD4A:loc_10001B24C↑r
                                        ; sub_10001AD4A+555↑o
; void *classRef_NSData
classRef_NSData dq offset _OBJC_CLASS_$_NSData
                                        ; DATA XREF: sub_10001AD4A+51F↑r
                                        ; -[NSObject mj_JSONData]:loc_10001D44C↑r ...
; void *classRef_NSDecimalNumber
classRef_NSDecimalNumber dq offset _OBJC_CLASS_$_NSDecimalNumber
                                        ; DATA XREF: sub_10001AD4A+7FD↑r
                                        ; sub_10001AD4A+814↑o
; void *classRef_NSManagedObject
classRef_NSManagedObject dq offset _OBJC_CLASS_$_NSManagedObject
                                        ; DATA XREF: +[NSObject mj_objectWithKeyValues:context:]+8A↑r
                                        ; +[MJFoundation isClassFromFoundation:]+38↑r
; void *classRef_NSEntityDescription
classRef_NSEntityDescription dq offset _OBJC_CLASS_$_NSEntityDescription
                                        ; DATA XREF: +[NSObject mj_objectWithKeyValues:context:]+119↑r
; void *classRef_MJFoundation
classRef_MJFoundation dq offset _OBJC_CLASS_$_MJFoundation
                                        ; DATA XREF: +[NSObject mj_objectArrayWithKeyValuesArray:context:]+9A↑r
                                        ; -[NSObject mj_keyValuesWithKeys:ignoredKeys:]+5E↑r ...
; void *classRef_NSObject
classRef_NSObject dq offset _OBJC_CLASS_$_NSObject
                                        ; DATA XREF: sub_10001C73D+22C↑r
                                        ; +[MJFoundation isClassFromFoundation:]+15↑r
; void *classRef_MJPropertyType
classRef_MJPropertyType dq offset _OBJC_CLASS_$_MJPropertyType
                                        ; DATA XREF: -[MJProperty setProperty:]+EF↑r
classRef_MJPropertyKey dq offset _OBJC_CLASS_$_MJPropertyKey
                                        ; DATA XREF: -[MJProperty propertyKeysWithStringKey:]+1A3↑r
                                        ; -[MJProperty propertyKeysWithStringKey:]+23D↑r ...
; void *classRef_MJProperty
classRef_MJProperty dq offset _OBJC_CLASS_$_MJProperty
                                        ; DATA XREF: sub_100027B8D:loc_100027C36↑r
classRef_NSImageView dq offset _OBJC_CLASS_$_NSImageView
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+4F↑r
                                        ; -[DeviceManualView initWithFrame:]+1DB↑r ...
; void *classRef_NSScanner
classRef_NSScanner dq offset _OBJC_CLASS_$_NSScanner
                                        ; DATA XREF: -[NSString mj_isPureInt]+E↑r
classRef_NSSet  dq offset _OBJC_CLASS_$_NSSet
                                        ; DATA XREF: +[MJFoundation foundationClasses]+21↑r
; void *classRef_NSValue
classRef_NSValue dq offset _OBJC_CLASS_$_NSValue
                                        ; DATA XREF: +[MJFoundation foundationClasses]+5C↑r
__objc_classrefs ends

; ===========================================================================

; Segment type: Pure data
; Segment alignment 'qword' can not be represented in assembly
__objc_superrefs segment para public 'DATA' use64
                assume cs:__objc_superrefs
                ;org 100048A60h
classRef_ViewController dq offset _OBJC_CLASS_$_ViewController
                                        ; DATA XREF: -[ViewController viewDidLoad]+21↑r
                                        ; -[ViewController dealloc]+53↑r
classRef_SView_0 dq offset _OBJC_CLASS_$_SView
                                        ; DATA XREF: -[SView init]+18↑r
                                        ; -[SView drawRect:]+F↑r
classRef_SBackButton_0 dq offset _OBJC_CLASS_$_SBackButton
                                        ; DATA XREF: -[SBackButton initWithFrame:]+16↑r
classRef_SHIDBootPro2_0 dq offset _OBJC_METACLASS_$_SHIDBootPro2
                                        ; DATA XREF: sub_1000089B0+17↑r
classRef_UpdateView_0 dq offset _OBJC_CLASS_$_UpdateView
                                        ; DATA XREF: -[UpdateView initWithFrame:]+18↑r
                                        ; -[UpdateView layout]+13↑r ...
classRef_SMiniImageView_0 dq offset _OBJC_CLASS_$_SMiniImageView
                                        ; DATA XREF: -[SMiniImageView initWithFrame:]+10↑r
                                        ; -[SMiniImageView drawRect:]+F↑r
classRef_UpDaterManager_0 dq offset _OBJC_CLASS_$_UpDaterManager
                                        ; DATA XREF: -[UpDaterManager init]+10↑r
classRef_SButton_0 dq offset _OBJC_CLASS_$_SButton
                                        ; DATA XREF: -[SButton initWithFrame:]+18↑r
classRef_FirmwaerUpdateLog_0 dq offset _OBJC_CLASS_$_FirmwaerUpdateLog
                                        ; DATA XREF: -[FirmwaerUpdateLog windowDidLoad]+21↑r
classRef_MoreView_0 dq offset _OBJC_CLASS_$_MoreView
                                        ; DATA XREF: -[MoreView initWithFrame:]+18↑r
                                        ; -[MoreView layout]+21↑r
classRef_MJProperty_0 dq offset _OBJC_CLASS_$_MJProperty
                                        ; DATA XREF: -[MJProperty init]+16↑r
classRef_SHIDDinput_0 dq offset _OBJC_CLASS_$_SHIDDinput
                                        ; DATA XREF: -[SHIDDinput init]+10↑r
classRef_SHIDBootHJZ_0 dq offset _OBJC_METACLASS_$_SHIDBootHJZ
                                        ; DATA XREF: sub_100025E17+17↑r
classRef_DeviceManualView_0 dq offset _OBJC_CLASS_$_DeviceManualView
                                        ; DATA XREF: -[DeviceManualView initWithFrame:]+18↑r
                                        ; -[DeviceManualView layout]+1E↑r
classRef_SLabel_0 dq offset _OBJC_CLASS_$_SLabel
                                        ; DATA XREF: -[SLabel initWithFrame:]+16↑r
                                        ; -[SLabel drawRect:]+F↑r
classRef_SHIDHJZ_0 dq offset _OBJC_METACLASS_$_SHIDHJZ
                                        ; DATA XREF: sub_10002D500+17↑r
classRef_SHIDManager dq offset _OBJC_CLASS_$_SHIDManager
                                        ; DATA XREF: -[SHIDManager init]+12↑r
__objc_superrefs ends

; ===========================================================================

; Segment type: Regular
; Segment alignment 'qword' can not be represented in assembly
__objc_ivar     segment para public '' use64
                assume cs:__objc_ivar
                ;org 100048AE8h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
_OBJC_IVAR_$_S8BitdoDevice__isChangeBoot dq 8
                                        ; DATA XREF: __objc_const:000000010003D648↑o
                                        ; char _isChangeBoot;
_OBJC_IVAR_$_S8BitdoDevice__pid dq 0Ah  ; DATA XREF: __objc_const:000000010003D668↑o
                                        ; unsigned __int16 _pid;
_OBJC_IVAR_$_S8BitdoDevice__vid dq 0Ch  ; DATA XREF: __objc_const:000000010003D688↑o
                                        ; unsigned __int16 _vid;
_OBJC_IVAR_$_S8BitdoDevice__beta dq 0Eh ; DATA XREF: __objc_const:000000010003D6A8↑o
                                        ; unsigned __int16 _beta;
_OBJC_IVAR_$_S8BitdoDevice__bootVersion dq 10h
                                        ; DATA XREF: __objc_const:000000010003D6C8↑o
                                        ; unsigned __int16 _bootVersion;
_OBJC_IVAR_$_S8BitdoDevice__isCarryRR dq 12h
                                        ; DATA XREF: __objc_const:000000010003D6E8↑o
                                        ; unsigned __int16 _isCarryRR;
_OBJC_IVAR_$_S8BitdoDevice__isManuanlViewRR dq 14h
                                        ; DATA XREF: __objc_const:000000010003D708↑o
                                        ; unsigned __int16 _isManuanlViewRR;
_OBJC_IVAR_$_S8BitdoDevice__version dq 18h
                                        ; DATA XREF: __objc_const:000000010003D728↑o
                                        ; float _version;
_OBJC_IVAR_$_S8BitdoDevice__deviceName dq 20h
                                        ; DATA XREF: __objc_const:000000010003D748↑o
                                        ; NSString *_deviceName;
_OBJC_IVAR_$_S8BitdoDevice__deviceRef dq 28h
                                        ; DATA XREF: __objc_const:000000010003D768↑o
                                        ; __IOHIDDevice *_deviceRef;
_OBJC_IVAR_$_S8BitdoDevice__details dq 30h
                                        ; DATA XREF: __objc_const:000000010003D788↑o
                                        ; S8BitdoDataDetails *_details;
_OBJC_IVAR_$_ViewController__updateView dq 30h
                                        ; DATA XREF: -[ViewController updateView]+14↑r
                                        ; -[ViewController setUpdateView:]+4↑r ...
                                        ; UpdateView *_updateView;
_OBJC_IVAR_$_ViewController_m_widht dq 8
                                        ; DATA XREF: -[ViewController updateView]+56↑r
                                        ; -[ViewController moreView]+6A↑r ...
                                        ; double m_widht;
_OBJC_IVAR_$_ViewController_m_height dq 10h
                                        ; DATA XREF: -[ViewController updateView]+62↑r
                                        ; -[ViewController moreView]+76↑r ...
                                        ; double m_height;
_OBJC_IVAR_$_ViewController__moreView dq 40h
                                        ; DATA XREF: -[ViewController moreView]+14↑r
                                        ; -[ViewController setMoreView:]+4↑r ...
                                        ; MoreView *_moreView;
_OBJC_IVAR_$_ViewController__dinput dq 18h
                                        ; DATA XREF: -[ViewController dinput]+4↑r
                                        ; -[ViewController setDinput:]+4↑r ...
                                        ; SHIDDinput *_dinput;
_OBJC_IVAR_$_ViewController__switchAndMac dq 20h
                                        ; DATA XREF: -[ViewController switchAndMac]+4↑r
                                        ; -[ViewController setSwitchAndMac:]+4↑r ...
                                        ; SHIDSwitchAndMac *_switchAndMac;
_OBJC_IVAR_$_ViewController__homeView dq 28h
                                        ; DATA XREF: -[ViewController homeView]+4↑r
                                        ; -[ViewController setHomeView:]+4↑r ...
                                        ; HomeView *_homeView;
_OBJC_IVAR_$_ViewController__backButton dq 38h
                                        ; DATA XREF: -[ViewController backButton]+4↑r
                                        ; -[ViewController setBackButton:]+4↑r ...
                                        ; SBackButton *_backButton;
_OBJC_IVAR_$_ViewController__views dq 48h
                                        ; DATA XREF: -[ViewController views]+4↑r
                                        ; -[ViewController setViews:]+4↑r ...
                                        ; NSMutableArray *_views;
_OBJC_IVAR_$_SHIDBoot__bootDelegate dq 6Fh
                                        ; DATA XREF: -[SHIDBoot bootDelegate]+4↑r
                                        ; -[SHIDBoot setBootDelegate:]+4↑r ...
                                        ; SHIDBootDelegate *_bootDelegate;
_OBJC_IVAR_$_SHIDBoot__addDelegate dq 77h
                                        ; DATA XREF: -[SHIDBoot addDelegate]+4↑r
                                        ; -[SHIDBoot setAddDelegate:]+4↑r ...
                                        ; SHIDBootDelegate *_addDelegate;
_OBJC_IVAR_$_SHIDBoot__filePath dq 7Fh  ; DATA XREF: -[SHIDBoot filePath]+4↑r
                                        ; -[SHIDBoot setFilePath:]+4↑r ...
                                        ; NSString *_filePath;
_OBJC_IVAR_$_SHIDBoot__isUSBRR_PS_classic dq 68h
                                        ; DATA XREF: -[SHIDBoot isUSBRR_PS_classic]+4↑r
                                        ; -[SHIDBoot setIsUSBRR_PS_classic:]+4↑r ...
                                        ; char _isUSBRR_PS_classic;
_OBJC_IVAR_$_SHIDBoot__lastProgress dq 6Bh
                                        ; DATA XREF: -[SHIDBoot lastProgress]+4↑r
                                        ; -[SHIDBoot setLastProgress:]+4↑r ...
                                        ; int _lastProgress;
_OBJC_IVAR_$_SView__sBackgroundColor dq 8
                                        ; DATA XREF: -[SView sBackgroundColor]+4↑r
                                        ; -[SView setSBackgroundColor:]+4↑r ...
                                        ; NSColor *_sBackgroundColor;
_OBJC_IVAR_$_S8BitdoDataDetails__pid dq 8
                                        ; DATA XREF: __objc_const:000000010003EBC8↑o
                                        ; unsigned __int16 _pid;
_OBJC_IVAR_$_S8BitdoDataDetails__vid dq 0Ah
                                        ; DATA XREF: __objc_const:000000010003EBE8↑o
                                        ; unsigned __int16 _vid;
_OBJC_IVAR_$_S8BitdoDataDetails__type dq 0Ch
                                        ; DATA XREF: __objc_const:000000010003EC08↑o
                                        ; int _type;
_OBJC_IVAR_$_S8BitdoDataDetails__name dq 10h
                                        ; DATA XREF: __objc_const:000000010003EC28↑o
                                        ; NSString *_name;
_OBJC_IVAR_$_S8BitdoDataDetails__miniImageName dq 18h
                                        ; DATA XREF: __objc_const:000000010003EC48↑o
                                        ; NSString *_miniImageName;
_OBJC_IVAR_$_S8BitdoDataDetails__moreImagehighlight dq 20h
                                        ; DATA XREF: __objc_const:000000010003EC68↑o
                                        ; NSString *_moreImagehighlight;
_OBJC_IVAR_$_S8BitdoDataDetails__moreImage dq 28h
                                        ; DATA XREF: __objc_const:000000010003EC88↑o
                                        ; NSString *_moreImage;
_OBJC_IVAR_$_S8BitdoDataDetails__order dq 30h
                                        ; DATA XREF: __objc_const:000000010003ECA8↑o
                                        ; signed __int64 _order;
_OBJC_IVAR_$_SHIDBootPro2__blocks dq 9Ch
                                        ; DATA XREF: -[SHIDBootPro2 blocks]+A↑r
                                        ; -[SHIDBootPro2 setBlocks:]+4↑r ...
                                        ; NSMutableArray *_blocks;
_OBJC_IVAR_$_SHIDBootPro2__device dq 7Ch
                                        ; DATA XREF: -[SHIDBootPro2 device]+4↑r
                                        ; -[SHIDBootPro2 setDevice:]+4↑r ...
                                        ; __IOHIDDevice *_device;
_OBJC_IVAR_$_SHIDBootPro2__bootDelegate dq 84h
                                        ; DATA XREF: -[SHIDBootPro2 bootDelegate]+4↑r
                                        ; -[SHIDBootPro2 setBootDelegate:]+4↑r ...
                                        ; SHIDBootDelegate *_bootDelegate;
_OBJC_IVAR_$_SHIDBootPro2__filePath dq 8Ch
                                        ; DATA XREF: -[SHIDBootPro2 filePath]+4↑r
                                        ; -[SHIDBootPro2 setFilePath:]+4↑r ...
                                        ; NSString *_filePath;
_OBJC_IVAR_$_SHIDBootPro2__pfile dq 94h ; DATA XREF: -[SHIDBootPro2 pfile]+4↑r
                                        ; -[SHIDBootPro2 setPfile:]+4↑r ...
                                        ; NSInputStream *_pfile;
_OBJC_IVAR_$_SHIDBootPro2__bootType dq 68h
                                        ; DATA XREF: -[SHIDBootPro2 bootType]+4↑r
                                        ; -[SHIDBootPro2 setBootType:]+4↑r ...
                                        ; int _bootType;
_OBJC_IVAR_$_SHIDBootPro2__bootType_PID dq 6Ch
                                        ; DATA XREF: -[SHIDBootPro2 bootType_PID]+4↑r
                                        ; -[SHIDBootPro2 setBootType_PID:]+4↑r ...
                                        ; unsigned int _bootType_PID;
_OBJC_IVAR_$_SHIDBootPro2__appZoneAddr dq 70h
                                        ; DATA XREF: -[SHIDBootPro2 appZoneAddr]+4↑r
                                        ; -[SHIDBootPro2 setAppZoneAddr:]+4↑r ...
                                        ; unsigned int _appZoneAddr;
_OBJC_IVAR_$_SHIDBootPro2__offset dq 74h
                                        ; DATA XREF: -[SHIDBootPro2 offset]+4↑r
                                        ; -[SHIDBootPro2 setOffset:]+4↑r ...
                                        ; unsigned int _offset;
_OBJC_IVAR_$_UpdateView__state dq 40h   ; DATA XREF: -[UpdateView setState:]+4↑r
                                        ; -[UpdateView state]+4↑r ...
                                        ; unsigned __int64 _state;
_OBJC_IVAR_$_UpdateView__device dq 38h  ; DATA XREF: -[UpdateView setDevice:]+C3↑r
                                        ; -[UpdateView device]+4↑r ...
                                        ; S8BitdoDevice *_device;
_OBJC_IVAR_$_UpdateView_m_targerVersion dq 28h
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+2D2↑r
                                        ; -[UpdateView loadViews]+FE4↑r ...
                                        ; float m_targerVersion;
_OBJC_IVAR_$_UpdateView_m_targetBeta dq 2Ch
                                        ; DATA XREF: -[UpdateView setNewFirmwaer:]+2EB↑r
                                        ; -[UpdateView getFirmwaerHintVersion:beta:targerVersion:]+2EC↑r ...
                                        ; int m_targetBeta;
_OBJC_IVAR_$_UpdateView__manualView dq 0F8h
                                        ; DATA XREF: -[UpdateView manualView]+12↑r
                                        ; -[UpdateView setManualView:]+4↑r ...
                                        ; DeviceManualView *_manualView;
_OBJC_IVAR_$_UpdateView_m_width dq 10h  ; DATA XREF: -[UpdateView loadViews]+67↑r
                                        ; -[UpdateView loadViews]+4FD↑r ...
                                        ; double m_width;
_OBJC_IVAR_$_UpdateView_m_height dq 18h ; DATA XREF: -[UpdateView loadViews]+8F↑r
                                        ; -[UpdateView loadViews]+98D↑r ...
                                        ; double m_height;
_OBJC_IVAR_$_UpdateView_m_version dq 20h
                                        ; DATA XREF: -[UpdateView loadViews]+F31↑r
                                        ; sub_100016EE7+4↑r ...
                                        ; float m_version;
_OBJC_IVAR_$_UpdateView_m_beta dq 24h   ; DATA XREF: -[UpdateView loadViews]+F7D↑r
                                        ; -[UpdateView SHIDBootGetVersion:hid:]+72↑r ...
                                        ; float m_beta;
_OBJC_IVAR_$_UpdateView__delegate dq 48h
                                        ; DATA XREF: -[UpdateView delegate]+4↑r
                                        ; -[UpdateView setDelegate:]+4↑r ...
                                        ; id _delegate;
_OBJC_IVAR_$_UpdateView__isSetNewFirmware dq 30h
                                        ; DATA XREF: -[UpdateView isSetNewFirmware]+4↑r
                                        ; -[UpdateView setIsSetNewFirmware:]+4↑r ...
                                        ; char _isSetNewFirmware;
_OBJC_IVAR_$_UpdateView__miniImageView dq 50h
                                        ; DATA XREF: -[UpdateView miniImageView]+4↑r
                                        ; -[UpdateView setMiniImageView:]+4↑r ...
                                        ; SMiniImageView *_miniImageView;
_OBJC_IVAR_$_UpdateView__miniRRImageView dq 58h
                                        ; DATA XREF: -[UpdateView miniRRImageView]+4↑r
                                        ; -[UpdateView setMiniRRImageView:]+4↑r ...
                                        ; SMiniImageView *_miniRRImageView;
_OBJC_IVAR_$_UpdateView__isShowMiniRRImage dq 31h
                                        ; DATA XREF: -[UpdateView isShowMiniRRImage]+4↑r
                                        ; -[UpdateView setIsShowMiniRRImage:]+4↑r ...
                                        ; char _isShowMiniRRImage;
_OBJC_IVAR_$_UpdateView__firmwaerListVist dq 60h
                                        ; DATA XREF: -[UpdateView firmwaerListVist]+4↑r
                                        ; -[UpdateView setFirmwaerListVist:]+4↑r ...
                                        ; SView *_firmwaerListVist;
_OBJC_IVAR_$_UpdateView__scrollView dq 68h
                                        ; DATA XREF: -[UpdateView scrollView]+4↑r
                                        ; -[UpdateView setScrollView:]+4↑r ...
                                        ; NSScrollView *_scrollView;
_OBJC_IVAR_$_UpdateView__findNewVersionListView dq 70h
                                        ; DATA XREF: -[UpdateView findNewVersionListView]+4↑r
                                        ; -[UpdateView setFindNewVersionListView:]+4↑r ...
                                        ; SView *_findNewVersionListView;
_OBJC_IVAR_$_UpdateView__findNewVersionLabel dq 78h
                                        ; DATA XREF: -[UpdateView findNewVersionLabel]+4↑r
                                        ; -[UpdateView setFindNewVersionLabel:]+4↑r ...
                                        ; SLabel *_findNewVersionLabel;
_OBJC_IVAR_$_UpdateView__findNewVersionLogTextView dq 80h
                                        ; DATA XREF: -[UpdateView findNewVersionLogTextView]+4↑r
                                        ; -[UpdateView setFindNewVersionLogTextView:]+4↑r ...
                                        ; NSTextView *_findNewVersionLogTextView;
_OBJC_IVAR_$_UpdateView__isloadData dq 32h
                                        ; DATA XREF: -[UpdateView isloadData]+4↑r
                                        ; -[UpdateView setIsloadData:]+4↑r ...
                                        ; char _isloadData;
_OBJC_IVAR_$_UpdateView__progress dq 88h
                                        ; DATA XREF: -[UpdateView progress]+4↑r
                                        ; -[UpdateView setProgress:]+4↑r ...
                                        ; NSProgressIndicator *_progress;
_OBJC_IVAR_$_UpdateView__reloadButton dq 90h
                                        ; DATA XREF: -[UpdateView reloadButton]+4↑r
                                        ; -[UpdateView setReloadButton:]+4↑r ...
                                        ; NSButton *_reloadButton;
_OBJC_IVAR_$_UpdateView__notFirmware dq 98h
                                        ; DATA XREF: -[UpdateView notFirmware]+4↑r
                                        ; -[UpdateView setNotFirmware:]+4↑r ...
                                        ; SLabel *_notFirmware;
_OBJC_IVAR_$_UpdateView__hintLabel dq 0A0h
                                        ; DATA XREF: -[UpdateView hintLabel]+4↑r
                                        ; -[UpdateView setHintLabel:]+4↑r ...
                                        ; SLabel *_hintLabel;
_OBJC_IVAR_$_UpdateView__firmwaerHintLabel dq 0A8h
                                        ; DATA XREF: -[UpdateView firmwaerHintLabel]+4↑r
                                        ; -[UpdateView setFirmwaerHintLabel:]+4↑r ...
                                        ; SLabel *_firmwaerHintLabel;
_OBJC_IVAR_$_UpdateView__updateButton dq 0B0h
                                        ; DATA XREF: -[UpdateView updateButton]+4↑r
                                        ; -[UpdateView setUpdateButton:]+4↑r ...
                                        ; SButton *_updateButton;
_OBJC_IVAR_$_UpdateView__leftButton dq 0B8h
                                        ; DATA XREF: -[UpdateView leftButton]+4↑r
                                        ; -[UpdateView setLeftButton:]+4↑r ...
                                        ; SButton *_leftButton;
_OBJC_IVAR_$_UpdateView__rightButton dq 0C0h
                                        ; DATA XREF: -[UpdateView rightButton]+4↑r
                                        ; -[UpdateView setRightButton:]+4↑r ...
                                        ; SButton *_rightButton;
_OBJC_IVAR_$_UpdateView__updateFirmwaers dq 0C8h
                                        ; DATA XREF: -[UpdateView updateFirmwaers]+4↑r
                                        ; -[UpdateView setUpdateFirmwaers:]+4↑r ...
                                        ; NSMutableArray *_updateFirmwaers;
_OBJC_IVAR_$_UpdateView__selectButton dq 0D0h
                                        ; DATA XREF: -[UpdateView selectButton]+4↑r
                                        ; -[UpdateView setSelectButton:]+4↑r ...
                                        ; NSButton *_selectButton;
_OBJC_IVAR_$_UpdateView__savePath dq 0D8h
                                        ; DATA XREF: -[UpdateView savePath]+4↑r
                                        ; -[UpdateView setSavePath:]+4↑r ...
                                        ; NSString *_savePath;
_OBJC_IVAR_$_UpdateView__shidBoot dq 0E0h
                                        ; DATA XREF: -[UpdateView shidBoot]+4↑r
                                        ; -[UpdateView setShidBoot:]+4↑r ...
                                        ; SHIDBoot *_shidBoot;
_OBJC_IVAR_$_UpdateView__bootState dq 0E8h
                                        ; DATA XREF: -[UpdateView bootState]+4↑r
                                        ; -[UpdateView setBootState:]+4↑r ...
                                        ; unsigned __int64 _bootState;
_OBJC_IVAR_$_UpdateView__bootDeviceRef dq 0F0h
                                        ; DATA XREF: -[UpdateView bootDeviceRef]+4↑r
                                        ; -[UpdateView setBootDeviceRef:]+4↑r ...
                                        ; __IOHIDDevice *_bootDeviceRef;
_OBJC_IVAR_$_UpdateView__updateTimer dq 100h
                                        ; DATA XREF: -[UpdateView updateTimer]+4↑r
                                        ; -[UpdateView setUpdateTimer:]+4↑r ...
                                        ; NSTimer *_updateTimer;
_OBJC_IVAR_$_UpdateView__lastTimer dq 108h
                                        ; DATA XREF: -[UpdateView lastTimer]+4↑r
                                        ; -[UpdateView setLastTimer:]+4↑r ...
                                        ; signed __int64 _lastTimer;
_OBJC_IVAR_$_SMiniImageView__isSelect dq 8
                                        ; DATA XREF: -[SMiniImageView setIsSelect:]+14↑r
                                        ; -[SMiniImageView isSelect]+4↑r ...
                                        ; bool _isSelect;
_OBJC_IVAR_$_SMiniImageView__isClick dq 9
                                        ; DATA XREF: -[SMiniImageView isClick]+4↑r
                                        ; -[SMiniImageView setIsClick:]+4↑r ...
                                        ; bool _isClick;
_OBJC_IVAR_$_SMiniImageView__delegate dq 10h
                                        ; DATA XREF: -[SMiniImageView delegate]+4↑r
                                        ; -[SMiniImageView setDelegate:]+4↑r ...
                                        ; SMiniImageViewDelegate *_delegate;
_OBJC_IVAR_$_UpDaterManager__controller dq 8
                                        ; DATA XREF: __objc_const:0000000100041EC0↑o
                                        ; SPUStandardUpdaterController *_controller;
_OBJC_IVAR_$_UpDaterManager__updater dq 10h
                                        ; DATA XREF: __objc_const:0000000100041EE0↑o
                                        ; SPUUpdater *_updater;
_OBJC_IVAR_$_MJPropertyKey__type dq 8   ; DATA XREF: __objc_const:0000000100042098↑o
                                        ; int _type;
_OBJC_IVAR_$_MJPropertyKey__name dq 10h ; DATA XREF: __objc_const:00000001000420B8↑o
                                        ; NSString *_name;
_OBJC_IVAR_$_SButton__m_progress dq 8   ; DATA XREF: -[SButton setM_progress:]+4↑r
                                        ; -[SButton m_progress]+4↑r ...
                                        ; float _m_progress;
_OBJC_IVAR_$_SButton__m_title dq 10h    ; DATA XREF: -[SButton setM_title:]+D↑r
                                        ; -[SButton m_title]+4↑r ...
                                        ; NSString *_m_title;
_OBJC_IVAR_$_SButton__m_backgroundColor dq 18h
                                        ; DATA XREF: -[SButton setM_backgroundColor:]+14↑r
                                        ; -[SButton m_backgroundColor]+4↑r ...
                                        ; NSColor *_m_backgroundColor;
_OBJC_IVAR_$_SButton__m_highlightColor dq 20h
                                        ; DATA XREF: -[SButton setM_highlightColor:]+14↑r
                                        ; -[SButton m_highlightColor]+4↑r ...
                                        ; NSColor *_m_highlightColor;
_OBJC_IVAR_$_SButton__m_titleColor dq 28h
                                        ; DATA XREF: -[SButton setM_titleColor:]+D↑r
                                        ; -[SButton m_titleColor]+4↑r ...
                                        ; NSColor *_m_titleColor;
_OBJC_IVAR_$_SButton__m_titleHighlighColor dq 30h
                                        ; DATA XREF: -[SButton setM_titleHighlighColor:]+D↑r
                                        ; -[SButton m_titleHighlighColor]+4↑r ...
                                        ; NSColor *_m_titleHighlighColor;
_OBJC_IVAR_$_SButton__delegate dq 38h   ; DATA XREF: -[SButton delegate]+4↑r
                                        ; -[SButton setDelegate:]+4↑r ...
                                        ; id _delegate;
_OBJC_IVAR_$_SButton__m_tmpbg dq 40h    ; DATA XREF: -[SButton m_tmpbg]+4↑r
                                        ; -[SButton setM_tmpbg:]+4↑r ...
                                        ; NSColor *_m_tmpbg;
_OBJC_IVAR_$_SButton__m_tmpTitleColor dq 48h
                                        ; DATA XREF: -[SButton m_tmpTitleColor]+4↑r
                                        ; -[SButton setM_tmpTitleColor:]+4↑r ...
                                        ; NSColor *_m_tmpTitleColor;
_OBJC_IVAR_$_FirmwaerUpdateLog__titleString dq 8
                                        ; DATA XREF: -[FirmwaerUpdateLog setTitleString:]+56↑r
                                        ; -[FirmwaerUpdateLog titleString]+4↑r ...
                                        ; NSString *_titleString;
_OBJC_IVAR_$_FirmwaerUpdateLog__contentString dq 10h
                                        ; DATA XREF: -[FirmwaerUpdateLog setContentString:]+56↑r
                                        ; -[FirmwaerUpdateLog contentString]+4↑r ...
                                        ; NSString *_contentString;
_OBJC_IVAR_$_FirmwaerUpdateLog__title dq 18h
                                        ; DATA XREF: -[FirmwaerUpdateLog title]+4↑r
                                        ; -[FirmwaerUpdateLog setTitle:]+4↑r ...
                                        ; NSTextField *_title;
_OBJC_IVAR_$_FirmwaerUpdateLog__content dq 20h
                                        ; DATA XREF: -[FirmwaerUpdateLog content]+4↑r
                                        ; -[FirmwaerUpdateLog setContent:]+4↑r ...
                                        ; NSTextField *_content;
_OBJC_IVAR_$_FirmwaerUpdateLog__okButton dq 28h
                                        ; DATA XREF: -[FirmwaerUpdateLog okButton]+4↑r
                                        ; -[FirmwaerUpdateLog setOkButton:]+4↑r ...
                                        ; SButton *_okButton;
_OBJC_IVAR_$_MoreView_m_widht dq 10h    ; DATA XREF: -[MoreView layout]+5A↑r
                                        ; -[MoreView layout]+22D↑r ...
                                        ; double m_widht;
_OBJC_IVAR_$_MoreView_m_height dq 18h   ; DATA XREF: -[MoreView layout]+82↑r
                                        ; -[MoreView layout]+13D↑r ...
                                        ; double m_height;
_OBJC_IVAR_$_MoreView__delegate dq 20h  ; DATA XREF: -[MoreView delegate]+4↑r
                                        ; -[MoreView setDelegate:]+4↑r ...
                                        ; id _delegate;
_OBJC_IVAR_$_MoreView__title dq 28h     ; DATA XREF: -[MoreView title]+4↑r
                                        ; -[MoreView setTitle:]+4↑r ...
                                        ; SLabel *_title;
_OBJC_IVAR_$_MoreView__line dq 30h      ; DATA XREF: -[MoreView line]+4↑r
                                        ; -[MoreView setLine:]+4↑r ...
                                        ; SView *_line;
_OBJC_IVAR_$_MoreView__moreScrollView dq 38h
                                        ; DATA XREF: -[MoreView moreScrollView]+4↑r
                                        ; -[MoreView setMoreScrollView:]+4↑r ...
                                        ; NSScrollView *_moreScrollView;
_OBJC_IVAR_$_MoreView__moreS8BitdoDatails dq 40h
                                        ; DATA XREF: -[MoreView moreS8BitdoDatails]+4↑r
                                        ; -[MoreView setMoreS8BitdoDatails:]+4↑r ...
                                        ; NSMutableArray *_moreS8BitdoDatails;
_OBJC_IVAR_$_MJPropertyType__idType dq 8
                                        ; DATA XREF: __objc_const:0000000100043A90↑o
                                        ; char _idType;
_OBJC_IVAR_$_MJPropertyType__numberType dq 9
                                        ; DATA XREF: __objc_const:0000000100043AB0↑o
                                        ; char _numberType;
_OBJC_IVAR_$_MJPropertyType__boolType dq 0Ah
                                        ; DATA XREF: __objc_const:0000000100043AD0↑o
                                        ; char _boolType;
_OBJC_IVAR_$_MJPropertyType__fromFoundation dq 0Bh
                                        ; DATA XREF: __objc_const:0000000100043AF0↑o
                                        ; char _fromFoundation;
_OBJC_IVAR_$_MJPropertyType__KVCDisabled dq 0Ch
                                        ; DATA XREF: __objc_const:0000000100043B10↑o
                                        ; char _KVCDisabled;
_OBJC_IVAR_$_MJPropertyType__code dq 10h
                                        ; DATA XREF: __objc_const:0000000100043B30↑o
                                        ; NSString *_code;
_OBJC_IVAR_$_MJPropertyType__typeClass dq 18h
                                        ; DATA XREF: __objc_const:0000000100043B50↑o
                                        ; Class _typeClass;
_OBJC_IVAR_$_HomeView__delegate dq 8    ; DATA XREF: -[HomeView delegate]+4↑r
                                        ; -[HomeView setDelegate:]+4↑r ...
                                        ; HomeViewDelegate *_delegate;
_OBJC_IVAR_$_HomeView__firmwaerUpdaterButton dq 10h
                                        ; DATA XREF: -[HomeView firmwaerUpdaterButton]+4↑r
                                        ; -[HomeView setFirmwaerUpdaterButton:]+4↑r ...
                                        ; NSButton *_firmwaerUpdaterButton;
_OBJC_IVAR_$_HomeView__usb dq 18h       ; DATA XREF: -[HomeView usb]+4↑r
                                        ; -[HomeView setUsb:]+4↑r ...
                                        ; NSTextField *_usb;
_OBJC_IVAR_$_HomeView__FindsView dq 20h ; DATA XREF: -[HomeView FindsView]+4↑r
                                        ; -[HomeView setFindsView:]+4↑r ...
                                        ; NSView *_FindsView;
_OBJC_IVAR_$_HomeView__usbView dq 28h   ; DATA XREF: -[HomeView usbView]+4↑r
                                        ; -[HomeView setUsbView:]+4↑r ...
                                        ; NSView *_usbView;
_OBJC_IVAR_$_HomeView__arrow01 dq 30h   ; DATA XREF: -[HomeView arrow01]+4↑r
                                        ; -[HomeView setArrow01:]+4↑r ...
                                        ; NSImageView *_arrow01;
_OBJC_IVAR_$_HomeView__arrow02 dq 38h   ; DATA XREF: -[HomeView arrow02]+4↑r
                                        ; -[HomeView setArrow02:]+4↑r ...
                                        ; NSImageView *_arrow02;
_OBJC_IVAR_$_HomeView__arrow03 dq 40h   ; DATA XREF: -[HomeView arrow03]+4↑r
                                        ; -[HomeView setArrow03:]+4↑r ...
                                        ; NSImageView *_arrow03;
_OBJC_IVAR_$_HomeView__helpButton dq 48h
                                        ; DATA XREF: -[HomeView helpButton]+4↑r
                                        ; -[HomeView setHelpButton:]+4↑r ...
                                        ; NSButton *_helpButton;
_OBJC_IVAR_$_HomeView__state dq 50h     ; DATA XREF: -[HomeView state]+4↑r
                                        ; __objc_const:00000001000440D8↑o
                                        ; unsigned __int64 _state;
_OBJC_IVAR_$_HomeView__devices dq 58h   ; DATA XREF: -[HomeView devices]+4↑r
                                        ; -[HomeView setDevices:]+4↑r ...
                                        ; NSMutableArray *_devices;
_OBJC_IVAR_$_MJProperty__property dq 8  ; DATA XREF: __objc_const:0000000100044F98↑o
                                        ; objc_property *_property;
_OBJC_IVAR_$_MJProperty__name dq 10h    ; DATA XREF: __objc_const:0000000100044FB8↑o
                                        ; NSString *_name;
_OBJC_IVAR_$_MJProperty__type dq 18h    ; DATA XREF: __objc_const:0000000100044FD8↑o
                                        ; MJPropertyType *_type;
_OBJC_IVAR_$_MJProperty__srcClass dq 20h
                                        ; DATA XREF: __objc_const:0000000100044FF8↑o
                                        ; Class _srcClass;
_OBJC_IVAR_$_MJProperty__propertyKeysDict dq 28h
                                        ; DATA XREF: __objc_const:0000000100045018↑o
                                        ; NSMutableDictionary *_propertyKeysDict;
_OBJC_IVAR_$_MJProperty__objectClassInArrayDict dq 30h
                                        ; DATA XREF: __objc_const:0000000100045038↑o
                                        ; NSMutableDictionary *_objectClassInArrayDict;
_OBJC_IVAR_$_SHIDBootHJZ__blocks dq 8Ch ; DATA XREF: -[SHIDBootHJZ blocks]+A↑r
                                        ; -[SHIDBootHJZ setBlocks:]+4↑r ...
                                        ; NSMutableArray *_blocks;
_OBJC_IVAR_$_SHIDBootHJZ__device dq 6Ch ; DATA XREF: -[SHIDBootHJZ device]+4↑r
                                        ; -[SHIDBootHJZ setDevice:]+4↑r ...
                                        ; __IOHIDDevice *_device;
_OBJC_IVAR_$_SHIDBootHJZ__cur_devId dq 68h
                                        ; DATA XREF: -[SHIDBootHJZ cur_devId]+4↑r
                                        ; -[SHIDBootHJZ setCur_devId:]+4↑r ...
                                        ; unsigned int _cur_devId;
_OBJC_IVAR_$_SHIDBootHJZ__bootDelegate dq 74h
                                        ; DATA XREF: -[SHIDBootHJZ bootDelegate]+4↑r
                                        ; -[SHIDBootHJZ setBootDelegate:]+4↑r ...
                                        ; SHIDBootHJZ *_bootDelegate;
_OBJC_IVAR_$_SHIDBootHJZ__filePath dq 7Ch
                                        ; DATA XREF: -[SHIDBootHJZ filePath]+4↑r
                                        ; -[SHIDBootHJZ setFilePath:]+4↑r ...
                                        ; NSString *_filePath;
_OBJC_IVAR_$_SHIDBootHJZ__pfile dq 84h  ; DATA XREF: -[SHIDBootHJZ pfile]+4↑r
                                        ; -[SHIDBootHJZ setPfile:]+4↑r ...
                                        ; NSFileHandle *_pfile;
_OBJC_IVAR_$_DeviceManualView_m_widht dq 10h
                                        ; DATA XREF: -[DeviceManualView layout]+57↑r
                                        ; -[DeviceManualView setMainImageView:oneHintLabel:twoHintLabel:threeHintLabel:]:loc_10002BB7D↑r ...
                                        ; double m_widht;
_OBJC_IVAR_$_DeviceManualView_m_heigh dq 18h
                                        ; DATA XREF: -[DeviceManualView layout]+7F↑r
                                        ; __objc_const:0000000100045F68↑o
                                        ; double m_heigh;
_OBJC_IVAR_$_DeviceManualView__error dq 20h
                                        ; DATA XREF: -[DeviceManualView setError:]+4↑r
                                        ; -[DeviceManualView error]+4↑r ...
                                        ; char _error;
_OBJC_IVAR_$_DeviceManualView__device dq 28h
                                        ; DATA XREF: -[DeviceManualView device]+4↑r
                                        ; -[DeviceManualView setDevice:]+4↑r ...
                                        ; S8BitdoDevice *_device;
_OBJC_IVAR_$_DeviceManualView__mainImageView dq 30h
                                        ; DATA XREF: -[DeviceManualView mainImageView]+4↑r
                                        ; -[DeviceManualView setMainImageView:]+4↑r ...
                                        ; NSImageView *_mainImageView;
_OBJC_IVAR_$_DeviceManualView__oneHintLabel dq 38h
                                        ; DATA XREF: -[DeviceManualView oneHintLabel]+4↑r
                                        ; -[DeviceManualView setOneHintLabel:]+4↑r ...
                                        ; SLabel *_oneHintLabel;
_OBJC_IVAR_$_DeviceManualView__twoHintLabel dq 40h
                                        ; DATA XREF: -[DeviceManualView twoHintLabel]+4↑r
                                        ; -[DeviceManualView setTwoHintLabel:]+4↑r ...
                                        ; SLabel *_twoHintLabel;
_OBJC_IVAR_$_DeviceManualView__threeHintLabel dq 48h
                                        ; DATA XREF: -[DeviceManualView threeHintLabel]+4↑r
                                        ; -[DeviceManualView setThreeHintLabel:]+4↑r ...
                                        ; SLabel *_threeHintLabel;
_OBJC_IVAR_$_DeviceManualView__subImageView dq 50h
                                        ; DATA XREF: -[DeviceManualView subImageView]+4↑r
                                        ; -[DeviceManualView setSubImageView:]+4↑r ...
                                        ; NSImageView *_subImageView;
_OBJC_IVAR_$_DeviceManualView__submainImageView dq 58h
                                        ; DATA XREF: -[DeviceManualView submainImageView]+4↑r
                                        ; -[DeviceManualView setSubmainImageView:]+4↑r ...
                                        ; NSImageView *_submainImageView;
_OBJC_IVAR_$_DeviceManualView__subsubImageView dq 60h
                                        ; DATA XREF: -[DeviceManualView subsubImageView]+4↑r
                                        ; -[DeviceManualView setSubsubImageView:]+4↑r ...
                                        ; NSImageView *_subsubImageView;
_OBJC_IVAR_$_FirmwareMessage__msgState dq 8
                                        ; DATA XREF: __objc_const:0000000100046560↑o
                                        ; int _msgState;
_OBJC_IVAR_$_FirmwareMessage__error dq 10h
                                        ; DATA XREF: __objc_const:0000000100046580↑o
                                        ; NSString *_error;
_OBJC_IVAR_$_FirmwareMessage__List dq 18h
                                        ; DATA XREF: __objc_const:00000001000465A0↑o
                                        ; NSArray *_List;
_OBJC_IVAR_$_Firmware__fileSize dq 8    ; DATA XREF: __objc_const:00000001000468C0↑o
                                        ; int _fileSize;
_OBJC_IVAR_$_Firmware__id dq 0Ch        ; DATA XREF: __objc_const:00000001000468E0↑o
                                        ; int _id;
_OBJC_IVAR_$_Firmware__type dq 10h      ; DATA XREF: __objc_const:0000000100046900↑o
                                        ; int _type;
_OBJC_IVAR_$_Firmware__version dq 14h   ; DATA XREF: __objc_const:0000000100046920↑o
                                        ; float _version;
_OBJC_IVAR_$_Firmware__beta dq 18h      ; DATA XREF: __objc_const:0000000100046940↑o
                                        ; int _beta;
_OBJC_IVAR_$_Firmware__date dq 20h      ; DATA XREF: __objc_const:0000000100046960↑o
                                        ; NSString *_date;
_OBJC_IVAR_$_Firmware__fileName dq 28h  ; DATA XREF: __objc_const:0000000100046980↑o
                                        ; NSString *_fileName;
_OBJC_IVAR_$_Firmware__fileURL dq 30h   ; DATA XREF: __objc_const:00000001000469A0↑o
                                        ; NSString *_fileURL;
_OBJC_IVAR_$_Firmware__readme_en dq 38h ; DATA XREF: __objc_const:00000001000469C0↑o
                                        ; NSString *_readme_en;
_OBJC_IVAR_$_Firmware__readme dq 40h    ; DATA XREF: __objc_const:00000001000469E0↑o
                                        ; NSString *_readme;
_OBJC_IVAR_$_Firmware__md5 dq 48h       ; DATA XREF: __objc_const:0000000100046A00↑o
                                        ; NSString *_md5;
_OBJC_IVAR_$_SHIDHJZ__device dq 68h     ; DATA XREF: -[SHIDHJZ device]+4↑r
                                        ; -[SHIDHJZ setDevice:]+4↑r ...
                                        ; __IOHIDDevice *_device;
_OBJC_IVAR_$_SHIDManager_gpReportBufB dq 8
                                        ; DATA XREF: sub_100007A60+DB↑o
                                        ; sub_100008C49+5C↑o ...
                                        ; unsigned __int8 gpReportBufB[64];
_OBJC_IVAR_$_SHIDManager_reportSizeIn dq 48h
                                        ; DATA XREF: sub_100007A60+E8↑o
                                        ; sub_100008C49+69↑o ...
                                        ; unsigned __int8 reportSizeIn;
_OBJC_IVAR_$_SHIDManager__hidManager dq 50h
                                        ; DATA XREF: __objc_const:0000000100046F00↑o
                                        ; __IOHIDManager *_hidManager;
_OBJC_IVAR_$_SHIDManager__delegate dq 58h
                                        ; DATA XREF: __objc_const:0000000100046F20↑o
                                        ; DeviceDelegate *_delegate;
_OBJC_IVAR_$_SHIDManager__devices dq 60h
                                        ; DATA XREF: __objc_const:0000000100046F40↑o
__objc_ivar     ends                    ; NSMutableArray *_devices;

; ===========================================================================

; Segment type: Regular
; Segment alignment 'qword' can not be represented in assembly
__objc_data     segment para public '' use64
                assume cs:__objc_data
                ;org 100049028h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
_OBJC_CATEGORY_INSTANCE_METHODS_NSString_$_MJExtension __objc2_meth_list <18h, 0Ch>
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSString_$_MJExtension↑o
                __objc2_meth <offset sel_underlineFromCamel, offset a1608, \ ; -[NSString underlineFromCamel] ...
                              offset __NSString_underlineFromCamel_>
                __objc2_meth <offset sel_camelFromUnderline, offset a1608, \ ; -[NSString camelFromUnderline] ...
                              offset __NSString_camelFromUnderline_>
                __objc2_meth <offset sel_firstCharLower, offset a1608, \ ; -[NSString firstCharLower] ...
                              offset __NSString_firstCharLower_>
                __objc2_meth <offset sel_firstCharUpper, offset a1608, \ ; -[NSString firstCharUpper] ...
                              offset __NSString_firstCharUpper_>
                __objc2_meth <offset sel_isPureInt, offset aC1608, \ ; -[NSString isPureInt] ...
                              offset __NSString_isPureInt_>
                __objc2_meth <offset sel_url, offset a1608, offset __NSString_url_> ; -[NSString url] ...
                __objc2_meth <offset sel_mj_underlineFromCamel, offset a1608, \ ; -[NSString mj_underlineFromCamel] ...
                              offset __NSString_mj_underlineFromCamel_>
                __objc2_meth <offset sel_mj_camelFromUnderline, offset a1608, \ ; -[NSString mj_camelFromUnderline] ...
                              offset __NSString_mj_camelFromUnderline_>
                __objc2_meth <offset sel_mj_firstCharLower, offset a1608, \ ; -[NSString mj_firstCharLower] ...
                              offset __NSString_mj_firstCharLower_>
                __objc2_meth <offset sel_mj_firstCharUpper, offset a1608, \ ; -[NSString mj_firstCharUpper] ...
                              offset __NSString_mj_firstCharUpper_>
                __objc2_meth <offset sel_mj_isPureInt, offset aC1608, \ ; -[NSString mj_isPureInt] ...
                              offset __NSString_mj_isPureInt_>
                __objc2_meth <offset sel_mj_url, offset a1608, \ ; -[NSString mj_url] ...
                              offset __NSString_mj_url_>
_OBJC_METACLASS_$_S8BitdoDevice __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_S8BitdoDevice↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset S8BitdoDevice_$metaData>
_OBJC_CLASS_$_S8BitdoDevice __objc2_class <offset _OBJC_METACLASS_$_S8BitdoDevice, \
                                        ; DATA XREF: __objc_classlist:000000010003D198↑o
                                        ; __objc_classrefs:classRef_S8BitdoDevice↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset S8BitdoDevice_$classData>
_OBJC_METACLASS_$_SHttp __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHttp↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, offset SHttp_$metaData>
_OBJC_CLASS_$_SHttp __objc2_class <offset _OBJC_METACLASS_$_SHttp, \
                                        ; DATA XREF: __objc_classlist:000000010003D1A0↑o
                                        ; __objc_classrefs:classRef_SHttp↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, offset SHttp_$classData>
_OBJC_CLASS_$_ViewController __objc2_class <offset _OBJC_METACLASS_$_ViewController, \
                                        ; DATA XREF: __objc_classlist:000000010003D1A8↑o
                                        ; __objc_superrefs:classRef_ViewController↑o
                               offset _OBJC_CLASS_$_NSViewController, \
                               offset __objc_empty_cache, 0, \
                               offset ViewController_$classData>
_OBJC_METACLASS_$_ViewController __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_ViewController↑o
                               offset _OBJC_METACLASS_$_NSViewController, \
                               offset __objc_empty_cache, 0, \
                               offset ViewController_$metaData>
_OBJC_METACLASS_$_SHIDBoot __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDBoot↓o
                               offset _OBJC_METACLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDBoot_$metaData>
_OBJC_CLASS_$_SHIDBoot __objc2_class <offset _OBJC_METACLASS_$_SHIDBoot, \
                                        ; DATA XREF: __objc_classlist:000000010003D1B0↑o
                                        ; __objc_nlclslist:000000010003D2A8↑o ...
                               offset _OBJC_CLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDBoot_$classData>
_OBJC_CLASS_$_SView __objc2_class <offset _OBJC_METACLASS_$_SView, \
                                        ; DATA XREF: __objc_classlist:000000010003D1B8↑o
                                        ; __objc_classrefs:classRef_SView↑o ...
                               offset _OBJC_CLASS_$_NSView, offset __objc_empty_cache,\
                               0, offset SView_$classData>
_OBJC_METACLASS_$_SView __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SView↑o
                                        ; __objc_data:_OBJC_METACLASS_$_UpdateView↓o ...
                               offset _OBJC_METACLASS_$_NSView, \
                               offset __objc_empty_cache, 0, offset SView_$metaData>
_OBJC_CLASS_$_SBackButton __objc2_class <offset _OBJC_METACLASS_$_SBackButton, \
                                        ; DATA XREF: __objc_classlist:000000010003D1C0↑o
                                        ; __objc_classrefs:classRef_SBackButton↑o ...
                               offset _OBJC_CLASS_$_NSButton, \
                               offset __objc_empty_cache, 0, \
                               offset SBackButton_$classData>
_OBJC_METACLASS_$_SBackButton __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SBackButton↑o
                               offset _OBJC_METACLASS_$_NSButton, \
                               offset __objc_empty_cache, 0, \
                               offset SBackButton_$metaData>
_OBJC_CLASS_$_S8BitdoDeviceDetailsTools __objc2_class <offset _OBJC_METACLASS_$_S8BitdoDeviceDetailsTools, \
                                        ; DATA XREF: __objc_classlist:000000010003D1D0↑o
                                        ; __objc_nlclslist:000000010003D2B0↑o ...
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset S8BitdoDeviceDetailsTools_$classData>
_OBJC_METACLASS_$_S8BitdoDataDetails __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_S8BitdoDataDetails↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset S8BitdoDataDetails_$metaData>
_OBJC_CLASS_$_S8BitdoDataDetails __objc2_class <offset _OBJC_METACLASS_$_S8BitdoDataDetails, \
                                        ; DATA XREF: __objc_classlist:000000010003D1C8↑o
                                        ; __objc_classrefs:classRef_S8BitdoDataDetails↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset S8BitdoDataDetails_$classData>
_OBJC_METACLASS_$_S8BitdoDeviceDetailsTools __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_S8BitdoDeviceDetailsTools↑o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset S8BitdoDeviceDetailsTools_$metaData>
_OBJC_METACLASS_$_SHIDBootPro2 __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_superrefs:classRef_SHIDBootPro2_0↑o
                                        ; __objc_data:_OBJC_CLASS_$_SHIDBootPro2↓o
                               offset _OBJC_METACLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDBootPro2_$metaData>
_OBJC_CLASS_$_SHIDBootPro2 __objc2_class <offset _OBJC_METACLASS_$_SHIDBootPro2, \
                                        ; DATA XREF: __objc_classlist:000000010003D1D8↑o
                                        ; __objc_classrefs:classRef_SHIDBootPro2↑o
                               offset _OBJC_CLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDBootPro2_$classData>
_OBJC_CLASS_$_UpdateView __objc2_class <offset _OBJC_METACLASS_$_UpdateView, \
                                        ; DATA XREF: __objc_classlist:000000010003D1E0↑o
                                        ; __objc_classrefs:classRef_UpdateView↑o ...
                               offset _OBJC_CLASS_$_SView, offset __objc_empty_cache, \
                               0, offset UpdateView_$classData>
_OBJC_METACLASS_$_UpdateView __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_UpdateView↑o
                               offset _OBJC_METACLASS_$_SView, \
                               offset __objc_empty_cache, 0, \
                               offset UpdateView_$metaData>
_OBJC_CLASS_$_SMiniImageView __objc2_class <offset _OBJC_METACLASS_$_SMiniImageView, \
                                        ; DATA XREF: __objc_classlist:000000010003D1E8↑o
                                        ; __objc_classrefs:classRef_SMiniImageView↑o ...
                               offset _OBJC_CLASS_$_NSImageView, \
                               offset __objc_empty_cache, 0, \
                               offset SMiniImageView_$classData>
_OBJC_METACLASS_$_SMiniImageView __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SMiniImageView↑o
                               offset _OBJC_METACLASS_$_NSImageView, \
                               offset __objc_empty_cache, 0, \
                               offset SMiniImageView_$metaData>
_OBJC_METACLASS_$_SHIDSwitchAndMac __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDSwitchAndMac↓o
                               offset _OBJC_METACLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDSwitchAndMac_$metaData>
_OBJC_CLASS_$_SHIDSwitchAndMac __objc2_class <offset _OBJC_METACLASS_$_SHIDSwitchAndMac, \
                                        ; DATA XREF: __objc_classlist:000000010003D1F0↑o
                                        ; __objc_classrefs:classRef_SHIDSwitchAndMac↑o
                               offset _OBJC_CLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDSwitchAndMac_$classData>
_OBJC_CLASS_$_UpDaterManager __objc2_class <offset _OBJC_METACLASS_$_UpDaterManager, \
                                        ; DATA XREF: __objc_classlist:000000010003D1F8↑o
                                        ; __objc_classrefs:classRef_UpDaterManager↑o ...
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset UpDaterManager_$classData>
_OBJC_METACLASS_$_UpDaterManager __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_UpDaterManager↑o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset UpDaterManager_$metaData>
_OBJC_METACLASS_$_MJPropertyKey __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJPropertyKey↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJPropertyKey_$metaData>
_OBJC_CLASS_$_MJPropertyKey __objc2_class <offset _OBJC_METACLASS_$_MJPropertyKey, \
                                        ; DATA XREF: __objc_classlist:000000010003D200↑o
                                        ; __objc_classrefs:classRef_MJPropertyKey↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJPropertyKey_$classData>
_OBJC_METACLASS_$_SHIDXinput __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDXinput↓o
                               offset _OBJC_METACLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDXinput_$metaData>
_OBJC_CLASS_$_SHIDXinput __objc2_class <offset _OBJC_METACLASS_$_SHIDXinput, \
                                        ; DATA XREF: __objc_classlist:000000010003D208↑o
                                        ; __objc_classrefs:classRef_SHIDXinput↑o
                               offset _OBJC_CLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDXinput_$classData>
_OBJC_CLASS_$_SButton __objc2_class <offset _OBJC_METACLASS_$_SButton, \
                                        ; DATA XREF: __objc_classlist:000000010003D210↑o
                                        ; __objc_classrefs:classRef_SButton↑o ...
                               offset _OBJC_CLASS_$_NSButton, \
                               offset __objc_empty_cache, 0, \
                               offset SButton_$classData>
_OBJC_METACLASS_$_SButton __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SButton↑o
                               offset _OBJC_METACLASS_$_NSButton, \
                               offset __objc_empty_cache, 0, offset SButton_$metaData>
_OBJC_METACLASS_$_SLoadXIB __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SLoadXIB↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset SLoadXIB_$metaData>
_OBJC_CLASS_$_SLoadXIB __objc2_class <offset _OBJC_METACLASS_$_SLoadXIB, \
                                        ; DATA XREF: __objc_classlist:000000010003D218↑o
                                        ; __objc_classrefs:classRef_SLoadXIB↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset SLoadXIB_$classData>
_OBJC_CLASS_$_FirmwaerUpdateLog __objc2_class <offset _OBJC_METACLASS_$_FirmwaerUpdateLog, \
                                        ; DATA XREF: __objc_classlist:000000010003D220↑o
                                        ; __objc_classrefs:classRef_FirmwaerUpdateLog↑o ...
                               offset _OBJC_CLASS_$_NSWindowController, \
                               offset __objc_empty_cache, 0, \
                               offset FirmwaerUpdateLog_$classData>
_OBJC_METACLASS_$_FirmwaerUpdateLog __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_FirmwaerUpdateLog↑o
                               offset _OBJC_METACLASS_$_NSWindowController, \
                               offset __objc_empty_cache, 0, \
                               offset FirmwaerUpdateLog_$metaData>
_OBJC_METACLASS_$_Language __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_Language↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset Language_$metaData>
_OBJC_CLASS_$_Language __objc2_class <offset _OBJC_METACLASS_$_Language, \
                                        ; DATA XREF: __objc_classlist:000000010003D228↑o
                                        ; __objc_classrefs:classRef_Language↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset Language_$classData>
_OBJC_CLASS_$_MoreView __objc2_class <offset _OBJC_METACLASS_$_MoreView, \
                                        ; DATA XREF: __objc_classlist:000000010003D230↑o
                                        ; __objc_classrefs:classRef_MoreView↑o ...
                               offset _OBJC_CLASS_$_SView, offset __objc_empty_cache, \
                               0, offset MoreView_$classData>
_OBJC_METACLASS_$_MoreView __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MoreView↑o
                               offset _OBJC_METACLASS_$_SView, \
                               offset __objc_empty_cache, 0, \
                               offset MoreView_$metaData>
_OBJC_METACLASS_$_MJPropertyType __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJPropertyType↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJPropertyType_$metaData>
_OBJC_CLASS_$_MJPropertyType __objc2_class <offset _OBJC_METACLASS_$_MJPropertyType, \
                                        ; DATA XREF: __objc_classlist:000000010003D238↑o
                                        ; __objc_classrefs:classRef_MJPropertyType↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJPropertyType_$classData>
_OBJC_METACLASS_$_HomeView __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_HomeView↓o
                               offset _OBJC_METACLASS_$_NSView, \
                               offset __objc_empty_cache, 0, \
                               offset HomeView_$metaData>
_OBJC_CLASS_$_HomeView __objc2_class <offset _OBJC_METACLASS_$_HomeView, \
                                        ; DATA XREF: __objc_classlist:000000010003D240↑o
                               offset _OBJC_CLASS_$_NSView, offset __objc_empty_cache,\
                               0, offset HomeView_$classData>
_OBJC_METACLASS_$_AppDelegate __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_AppDelegate↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset AppDelegate_$metaData>
_OBJC_CLASS_$_AppDelegate __objc2_class <offset _OBJC_METACLASS_$_AppDelegate, \
                                        ; DATA XREF: __objc_classlist:000000010003D248↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset AppDelegate_$classData>
_OBJC_METACLASS_$_SMainMenu __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SMainMenu↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset SMainMenu_$metaData>
_OBJC_CLASS_$_SMainMenu __objc2_class <offset _OBJC_METACLASS_$_SMainMenu, \
                                        ; DATA XREF: __objc_classlist:000000010003D250↑o
                                        ; __objc_classrefs:classRef_SMainMenu↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset SMainMenu_$classData>
_OBJC_CLASS_$_MJProperty __objc2_class <offset _OBJC_METACLASS_$_MJProperty, \
                                        ; DATA XREF: __objc_classlist:000000010003D258↑o
                                        ; __objc_classrefs:classRef_MJProperty↑o ...
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJProperty_$classData>
_OBJC_METACLASS_$_MJProperty __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJProperty↑o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJProperty_$metaData>
_OBJC_CLASS_$_SHIDDinput __objc2_class <offset _OBJC_METACLASS_$_SHIDDinput, \
                                        ; DATA XREF: __objc_classlist:000000010003D260↑o
                                        ; __objc_classrefs:classRef_SHIDDinput↑o ...
                               offset _OBJC_CLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDDinput_$classData>
_OBJC_METACLASS_$_SHIDDinput __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SHIDDinput↑o
                               offset _OBJC_METACLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDDinput_$metaData>
_OBJC_METACLASS_$_SHIDBootHJZ __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_superrefs:classRef_SHIDBootHJZ_0↑o
                                        ; __objc_data:_OBJC_CLASS_$_SHIDBootHJZ↓o
                               offset _OBJC_METACLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDBootHJZ_$metaData>
_OBJC_CLASS_$_SHIDBootHJZ __objc2_class <offset _OBJC_METACLASS_$_SHIDBootHJZ, \
                                        ; DATA XREF: __objc_classlist:000000010003D268↑o
                                        ; __objc_classrefs:classRef_SHIDBootHJZ↑o
                               offset _OBJC_CLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDBootHJZ_$classData>
_OBJC_CLASS_$_DeviceManualView __objc2_class <offset _OBJC_METACLASS_$_DeviceManualView, \
                                        ; DATA XREF: __objc_classlist:000000010003D270↑o
                                        ; __objc_classrefs:classRef_DeviceManualView↑o ...
                               offset _OBJC_CLASS_$_SView, offset __objc_empty_cache, \
                               0, offset DeviceManualView_$classData>
_OBJC_METACLASS_$_DeviceManualView __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_DeviceManualView↑o
                               offset _OBJC_METACLASS_$_SView, \
                               offset __objc_empty_cache, 0, \
                               offset DeviceManualView_$metaData>
_OBJC_CLASS_$_SLabel __objc2_class <offset _OBJC_METACLASS_$_SLabel, \
                                        ; DATA XREF: __objc_classlist:000000010003D278↑o
                                        ; __objc_classrefs:classRef_SLabel↑o ...
                               offset _OBJC_CLASS_$_NSTextField, \
                               offset __objc_empty_cache, 0, offset SLabel_$classData>
_OBJC_METACLASS_$_SLabel __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SLabel↑o
                               offset _OBJC_METACLASS_$_NSTextField, \
                               offset __objc_empty_cache, 0, offset SLabel_$metaData>
_OBJC_CLASS_$_Firmware __objc2_class <offset _OBJC_METACLASS_$_Firmware, \
                                        ; DATA XREF: __objc_classlist:000000010003D288↑o
                                        ; __objc_classrefs:classRef_Firmware↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset Firmware_$classData>
_OBJC_METACLASS_$_FirmwareMessage __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_FirmwareMessage↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset FirmwareMessage_$metaData>
_OBJC_CLASS_$_FirmwareMessage __objc2_class <offset _OBJC_METACLASS_$_FirmwareMessage, \
                                        ; DATA XREF: __objc_classlist:000000010003D280↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset FirmwareMessage_$classData>
_OBJC_METACLASS_$_Firmware __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_Firmware↑o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset Firmware_$metaData>
_OBJC_METACLASS_$_SHIDHJZ __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_superrefs:classRef_SHIDHJZ_0↑o
                                        ; __objc_data:_OBJC_CLASS_$_SHIDHJZ↓o
                               offset _OBJC_METACLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, offset SHIDHJZ_$metaData>
_OBJC_CLASS_$_SHIDHJZ __objc2_class <offset _OBJC_METACLASS_$_SHIDHJZ, \
                                        ; DATA XREF: __objc_classlist:000000010003D290↑o
                                        ; __objc_classrefs:classRef_SHIDHJZ↑o
                               offset _OBJC_CLASS_$_SHIDManager, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDHJZ_$classData>
_OBJC_METACLASS_$_MJFoundation __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_MJFoundation↓o
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJFoundation_$metaData>
_OBJC_CLASS_$_MJFoundation __objc2_class <offset _OBJC_METACLASS_$_MJFoundation, \
                                        ; DATA XREF: __objc_classlist:000000010003D298↑o
                                        ; __objc_classrefs:classRef_MJFoundation↑o
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset MJFoundation_$classData>
_OBJC_CLASS_$_SHIDManager __objc2_class <offset _OBJC_METACLASS_$_SHIDManager, \
                                        ; DATA XREF: __objc_classlist:000000010003D2A0↑o
                                        ; __objc_superrefs:classRef_SHIDManager↑o ...
                               offset _OBJC_CLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDManager_$classData>
_OBJC_METACLASS_$_SHIDManager __objc2_class <offset _OBJC_METACLASS_$_NSObject, \
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SHIDBoot↑o
                                        ; __objc_data:_OBJC_METACLASS_$_SHIDBootPro2↑o ...
                               offset _OBJC_METACLASS_$_NSObject, \
                               offset __objc_empty_cache, 0, \
                               offset SHIDManager_$metaData>
__objc_data     ends

; ===========================================================================

; Segment type: Pure data
__data          segment para public 'DATA' use64
                assume cs:__data
                ;org 100049BF0h
unk_100049BF0   db    0                 ; DATA XREF: __stub_helper:loc_10002EC6D↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_100049BF8   dq offset stru_10003A938
                                        ; DATA XREF: +[SHttp sendRecordActivity:IP:]+2B7↑r
                                        ; +[SHttp getIPFormHtml:]+217↑r ...
                                        ; "未识别地区"
_OBJC_PROTOCOL_$_NSObject __objc2_prot <0, offset aNsobject, 0, \
                                        ; DATA XREF: __objc_protolist:000000010003D308↑o
                                        ; __objc_const:000000010003DD58↑o ...
                              offset _OBJC_INSTANCE_METHODS_NSObject, 0, \ ; "NSObject"
                              offset _OBJC_INSTANCE_METHODS_NSObject_0, 0, \
                              offset NSObject_$properties, 60h, 0>
                dq offset off_10003DCB0
                align 20h
_OBJC_PROTOCOL_$_DeviceDelegate __objc2_prot <0, offset aDevicedelegate, offset DeviceDelegate_$prots,\
                                        ; DATA XREF: __objc_protolist:000000010003D310↑o
                                        ; __objc_const:000000010003DEC8↑o
                              offset _OBJC_INSTANCE_METHODS_DeviceDelegate, 0, 0, 0, \ ; "DeviceDelegate"
                              0, 60h, 0>
                dq offset off_10003DDA0
                align 20h
_OBJC_PROTOCOL_$_HomeViewDelegate __objc2_prot <0, offset aHomeviewdelega, \
                                        ; DATA XREF: __objc_protolist:000000010003D318↑o
                                        ; __objc_const:000000010003DED0↑o
                              offset HomeViewDelegate_$prots, \ ; "HomeViewDelegate"
                              offset _OBJC_INSTANCE_METHODS_HomeViewDelegate, 0, 0, 0,\
                              0, 60h, 0>
                dq offset off_10003DE00
                align 20h
_OBJC_PROTOCOL_$_MoreViewDelegate __objc2_prot <0, offset aMoreviewdelega, 0, \
                                        ; DATA XREF: __objc_protolist:000000010003D320↑o
                                        ; __objc_const:000000010003DED8↑o
                              offset _OBJC_INSTANCE_METHODS_MoreViewDelegate, 0, 0, 0,\ ; "MoreViewDelegate"
                              0, 60h, 0>
                dq offset off_10003DE30
                align 20h
_OBJC_PROTOCOL_$_NSAlertDelegate __objc2_prot <0, offset aNsalertdelegat, \
                                        ; DATA XREF: __objc_protolist:000000010003D328↑o
                                        ; __objc_const:000000010003DEE0↑o
                              offset NSAlertDelegate_$prots, 0, 0, \ ; "NSAlertDelegate"
                              offset _OBJC_INSTANCE_METHODS_NSAlertDelegate, 0, 0, \
                              60h, 0>
                dq offset off_10003DE70
                align 20h
_OBJC_PROTOCOL_$_UpdateViewDelegat __objc2_prot <0, offset aUpdateviewdele, 0, \
                                        ; DATA XREF: __objc_protolist:000000010003D330↑o
                                        ; __objc_const:000000010003DEE8↑o
                              offset _OBJC_INSTANCE_METHODS_UpdateViewDelegat, 0, 0, \ ; "UpdateViewDelegat"
                              0, 0, 60h, 0>
                dq offset off_10003DEB0
                align 20h
; _DWORD dword_100049E40[4]
dword_100049E40 dd 186976E5h, 0CAC67ACDh, 38F27FEEh, 0A4948F1h
                                        ; DATA XREF: +[SHIDBoot load]+87↑o
                                        ; sub_100006B20+21↑o ...
xmmword_100049E50 xmmword 0B61DDFA9217C1783E5457A30D0859AE1h
                                        ; DATA XREF: +[SHIDBoot load]+B4↑w
                db 0F0h
                db    3
                db 0BDh
                db  92h
                db 0EDh
                db 0C6h
                db  73h ; s
                db  55h ; U
                db  5Bh ; [
                db  84h
                db 0D8h
                db  57h ; W
                db 0ACh
                db  97h
                db  71h ; q
                db  82h
                db 0C9h
                db    1
                db  19h
                db 0B9h
                db 0FEh
                db 0EDh
                db  17h
                db  39h ; 9
                db  4Fh ; O
                db  34h ; 4
                db 0D6h
                db 0BCh
                db 0B5h
                db  23h ; #
                db  9Eh
                db 0CFh
xmmword_100049E80 xmmword 0A4948F138F27FEECAC67ACD186976E5h
                                        ; DATA XREF: +[SHIDBoot load]+79↑o
                                        ; +[SHIDBoot load]+A6↑w
                db 0E1h
                db  9Ah
                db  85h
                db 0D0h
                db  30h ; 0
                db  7Ah ; z
                db  45h ; E
                db 0E5h
                db  83h
                db  17h
                db  7Ch ; |
                db  21h ; !
                db 0A9h
                db 0DFh
                db  1Dh
                db 0B6h
                db  0Dh
                db 0D0h
                db  5Ah ; Z
                db 0E6h
                db 0A3h
                db 0B8h
                db  20h
                db  66h ; f
                db  92h
                db  6Fh ; o
                db  17h
                db  52h ; R
                db  5Bh ; [
                db 0DDh
                db 0A2h
                db  80h
                db  60h ; `
                db  15h
                db  86h
                db  8Fh
                db  0Fh
                db  8Bh
                db  72h ; r
                db  0Bh
                db  4Dh ; M
                db  9Bh
                db 0CCh
                db 0AEh
                db  53h ; S
                db 0A3h
                db  9Bh
                db  3Ch ; <
dword_100049EC0 dd 1020000h             ; DATA XREF: -[SHIDBootPro2 readFlash:]+8↑r
                                        ; sub_10000CD6C:loc_10000CE19↑w
dword_100049EC4 dd 2B800h               ; DATA XREF: sub_10000CD6C+3E↑r
_OBJC_PROTOCOL_$_NSTextDelegate __objc2_prot <0, offset aNstextdelegate, offset NSTextDelegate_$prots,\
                                        ; DATA XREF: __objc_protolist:000000010003D338↑o
                                        ; __objc_const:000000010003F9B8↑o
                              0, 0, offset _OBJC_INSTANCE_METHODS_NSTextDelegate, 0, \ ; "NSTextDelegate"
                              0, 60h, 0>
                dq offset off_10003F988
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_NSTextViewDelegate __objc2_prot <0, offset aNstextviewdele, \
                                        ; DATA XREF: __objc_protolist:000000010003D340↑o
                                        ; __objc_const:0000000100040048↑o
                              offset NSTextViewDelegate_$prots, 0, 0, \ ; "NSTextViewDelegate"
                              offset _OBJC_INSTANCE_METHODS_NSTextViewDelegate, 0, 0, \
                              60h, 0>
                dq offset off_10003FD00
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_SButtonDelegate __objc2_prot <0, offset aSbuttondelegat, 0, 0, 0, \
                                        ; DATA XREF: __objc_protolist:000000010003D348↑o
                                        ; __objc_const:0000000100040050↑o ...
                              offset _OBJC_INSTANCE_METHODS_SButtonDelegate, 0, 0, \ ; "SButtonDelegate"
                              60h, 0>
                dq offset off_10003FE30
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_SHIDBootDelegate __objc2_prot <0, offset aShidbootdelega, \
                                        ; DATA XREF: __objc_protolist:000000010003D350↑o
                                        ; __objc_const:0000000100040058↑o
                              offset SHIDBootDelegate_$prots, \ ; "SHIDBootDelegate"
                              offset _OBJC_INSTANCE_METHODS_SHIDBootDelegate, 0, \
                              offset _OBJC_INSTANCE_METHODS_SHIDBootDelegate_0, 0, 0, \
                              60h, 0>
                dq offset off_10003FF50
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_SMiniImageViewDelegate __objc2_prot <0, offset aSminiimageview_0, \
                                        ; DATA XREF: __objc_protolist:000000010003D358↑o
                                        ; __objc_const:0000000100040060↑o
                              offset SMiniImageViewDelegate_$prots, \ ; "SMiniImageViewDelegate"
                              offset _OBJC_INSTANCE_METHODS_SMiniImageViewDelegate, 0,\
                              0, 0, 0, 60h, 0>
                dq offset off_10003FFD8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_SHIDBootHJZ __objc2_prot <0, offset aShidboothjz, offset SHIDBootHJZ_$prots, \
                                        ; DATA XREF: __objc_protolist:000000010003D360↑o
                                        ; __objc_const:0000000100040068↑o
                              offset _OBJC_INSTANCE_METHODS_SHIDBootHJZ_0, 0, 0, 0, 0,\ ; "SHIDBootHJZ"
                              60h, 0>
                dq offset off_100040030
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_SPUUpdaterDelegate __objc2_prot <0, offset aSpuupdaterdele, \
                                        ; DATA XREF: __objc_protolist:000000010003D368↑o
                                        ; __objc_const:0000000100041D38↑o
                              offset SPUUpdaterDelegate_$prots, 0, 0, \ ; "SPUUpdaterDelegate"
                              offset _OBJC_INSTANCE_METHODS_SPUUpdaterDelegate, 0, 0, \
                              60h, 0>
                dq offset off_100041C28
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_MJKeyValue __objc2_prot <0, offset aMjkeyvalue, offset MJKeyValue_$prots, 0, 0, \
                                        ; DATA XREF: __objc_protolist:000000010003D370↑o
                                        ; __objc_const:0000000100042880↑o
                              offset _OBJC_INSTANCE_METHODS_MJKeyValue, \ ; "MJKeyValue"
                              offset _OBJC_CLASS_METHODS_MJKeyValue, 0, 60h, 0>
                dq offset off_100042838
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_NSApplicationDelegate __objc2_prot <0, offset aNsapplicationd, \
                                        ; DATA XREF: __objc_protolist:000000010003D378↑o
                                        ; __objc_const:0000000100044AC8↑o
                              offset NSApplicationDelegate_$prots, 0, 0, \ ; "NSApplicationDelegate"
                              offset _OBJC_INSTANCE_METHODS_NSApplicationDelegate, 0, \
                              0, 60h, 0>
                dq offset off_100044958
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_OBJC_PROTOCOL_$_MJCoding __objc2_prot <0, offset aMjcoding, offset MJCoding_$prots, 0, 0, 0, \
                                        ; DATA XREF: __objc_protolist:000000010003D380↑o
                                        ; __objc_const:00000001000455C8↑o
                              offset _OBJC_CLASS_METHODS_MJCoding, 0, 60h, 0> ; "MJCoding"
                dq offset off_1000455B0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
dword_10004A288 dd 10h                  ; DATA XREF: -[SHIDBootHJZ EraseFlashPage:]+7A↑w
                                        ; sub_1000265B7+3B↑r ...
dword_10004A28C dd 1                    ; DATA XREF: -[SHIDBootHJZ EraseFlashPage:]+39↑r
                                        ; -[SHIDBootHJZ EraseFlashPage:]+59↑r ...
dword_10004A290 dd 10h                  ; DATA XREF: -[SHIDBootHJZ send_usb_packet_cut]+26↑r
                                        ; -[SHIDBootHJZ send_usb_packet_cut]+167↑r ...
dword_10004A294 dd 8003400h             ; DATA XREF: -[SHIDBootHJZ EraseFlashPage:]+9F↑r
                                        ; sub_1000265B7+42↑r ...
__data          ends

; ===========================================================================

; Segment type: Uninitialized
__common        segment para public 'BSS' use64
                assume cs:__common
                ;org 10004A2A0h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
word_10004A2A0  dw ?                    ; DATA XREF: sub_100006F09+488↑w
                                        ; sub_1000074F5+36↑w ...
                align 4
dword_10004A2A4 dd ?                    ; DATA XREF: sub_100006BBC+25↑w
                                        ; sub_100006CCA+C8↑r
dword_10004A2A8 dd ?                    ; DATA XREF: sub_100006BBC+37↑w
                                        ; sub_100006CCA+DB↑r
byte_10004A2AC  db ?                    ; DATA XREF: +[SHIDBoot load]+72↑w
                                        ; sub_100006AEA+4↑w ...
                align 10h
; void *xmmword_10004A2B0
xmmword_10004A2B0 xmmword ?             ; DATA XREF: +[SHIDBoot load]+4D↑w
                                        ; sub_100006F09+9E↑w ...
xmmword_10004A2C0 xmmword ?             ; DATA XREF: +[SHIDBoot load]+46↑w
xmmword_10004A2D0 xmmword ?             ; DATA XREF: +[SHIDBoot load]+3F↑w
xmmword_10004A2E0 xmmword ?             ; DATA XREF: +[SHIDBoot load]+38↑w
xmmword_10004A2F0 xmmword ?             ; DATA XREF: +[SHIDBoot load]+31↑w
xmmword_10004A300 xmmword ?             ; DATA XREF: +[SHIDBoot load]+2A↑w
xmmword_10004A310 xmmword ?             ; DATA XREF: +[SHIDBoot load]+23↑w
xmmword_10004A320 xmmword ?             ; DATA XREF: +[SHIDBoot load]+1C↑w
xmmword_10004A330 xmmword ?             ; DATA XREF: +[SHIDBoot load]+15↑w
                                        ; sub_100006B20+5D↑w ...
xmmword_10004A340 xmmword ?             ; DATA XREF: +[SHIDBoot load]+E↑w
                                        ; sub_100006B20+6A↑w ...
xmmword_10004A350 xmmword ?             ; DATA XREF: +[SHIDBoot load]+7↑w
                                        ; sub_100006CCA+A3↑w ...
qword_10004A360 dq ?                    ; DATA XREF: +[SHIDBoot load]+56↑w
                align 10h
xmmword_10004A370 xmmword ?             ; DATA XREF: +[SHIDBoot load]+5D↑w
                                        ; sub_100006CCA+85↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
qword_10004A390 dq ?                    ; DATA XREF: +[SHIDBoot load]+6B↑w
                                        ; sub_100006F09+12F↑w ...
qword_10004A398 dq ?                    ; DATA XREF: +[SHIDBoot load]+80↑w
                                        ; sub_100006AF7+4↑r ...
qword_10004A3A0 dq ?                    ; DATA XREF: +[SHIDBoot load]+8E↑w
                                        ; sub_100006AF7+15↑r ...
dword_10004A3A8 dd ?                    ; DATA XREF: +[SHIDBoot load]+95↑w
                                        ; sub_100006CCA+18F↑w ...
dword_10004A3AC dd ?                    ; DATA XREF: sub_100006BBC+3F↑w
                                        ; sub_100006BBC+88↑r ...
dword_10004A3B0 dd ?                    ; DATA XREF: sub_100006F09+1E3↑w
                                        ; sub_100006F09+1EA↑r
dword_10004A3B4 dd ?                    ; DATA XREF: sub_100006F09+4D6↑w
                                        ; sub_1000074F5+81↑w ...
xmmword_10004A3B8 xmmword ?             ; DATA XREF: sub_100006F09+468↑o
                                        ; sub_100006F09+492↑w ...
xmmword_10004A3C8 xmmword ?             ; DATA XREF: sub_100006F09+499↑w
                                        ; sub_1000074F5+47↑w
qword_10004A3D8 dq ?                    ; DATA XREF: sub_100006F09+4A0↑w
                                        ; sub_1000074F5+4E↑w ...
qword_10004A3E0 dq ?                    ; DATA XREF: sub_100006F09+46F↑w
                                        ; sub_1000074F5+1D↑w ...
word_10004A3E8  dw ?                    ; DATA XREF: sub_100006F09+476↑w
                                        ; sub_1000074F5+24↑w ...
word_10004A3EA  dw ?                    ; DATA XREF: sub_100006F09+481↑w
                                        ; sub_1000074F5+2F↑w ...
word_10004A3EC  dw ?                    ; DATA XREF: sub_100006F09+4AB↑w
                                        ; sub_1000074F5+59↑w ...
                align 10h
dword_10004A3F0 dd ?                    ; DATA XREF: sub_100006F09+4E0↑w
                                        ; sub_1000074F5+8B↑w
                align 8
unk_10004A3F8   db    ? ;               ; DATA XREF: sub_10000A93F+61↑o
                                        ; -[SHIDBootPro2 writeFirmwareBLE]+189↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; _DWORD dword_10004A4B0[8]
dword_10004A4B0 dd 8 dup(?)             ; DATA XREF: -[SHIDBootPro2 writeFirmwareJL]+13A↑o
                                        ; sub_10000A93F+4F↑o ...
; void *qword_10004A4D0
qword_10004A4D0 dq ?                    ; DATA XREF: sub_10000A93F+11C↑r
                                        ; sub_10000AAF4+6E↑r ...
xmmword_10004A4D8 xmmword ?             ; DATA XREF: -[SHIDBootPro2 readPID]+1F↑w
                                        ; -[SHIDBootPro2 readGamepadInfo:]+19↑w ...
xmmword_10004A4E8 xmmword ?             ; DATA XREF: -[SHIDBootPro2 readPID]+18↑w
                                        ; -[SHIDBootPro2 readGamepadInfo:]+12↑w ...
dword_10004A4F8 dd ?                    ; DATA XREF: -[SHIDBootPro2 readBoot_Serial]:loc_10000A5EA↑r
                                        ; -[SHIDBootPro2 readBoot_Serial]:loc_10000A624↑r
dword_10004A4FC dd ?                    ; DATA XREF: -[SHIDBootPro2 setPro2ApplicationEncodeId]:loc_10000B926↑r
dword_10004A500 dd ?                    ; DATA XREF: -[SHIDBootPro2 getPro2Version]:loc_10000BBF8↑r
                                        ; -[SHIDBootPro2 setPro2Version]:loc_10000BDF8↑r
qword_10004A504 dq ?                    ; DATA XREF: sub_10000A6B3+11↑w
dword_10004A50C dd ?                    ; DATA XREF: sub_10000A6B3+7↑w
qword_10004A510 dq ?                    ; DATA XREF: sub_10000A836+16↑w
                                        ; sub_10000AF5A+108↑w ...
dword_10004A518 dd ?                    ; DATA XREF: sub_10000A836+C↑w
                                        ; sub_10000AF5A+115↑w ...
dword_10004A51C dd ?                    ; DATA XREF: sub_10000CD6C+B↑r
                                        ; sub_10000CD6C+38↑w ...
; unsigned __int8 byte_10004A520[178177]
byte_10004A520  db 2B801h dup(?)        ; DATA XREF: sub_10000CD6C+12↑o
byte_100075D21  db ?                    ; DATA XREF: sub_100019855+E↑w
                align 8
dword_100075D28 dd ?                    ; DATA XREF: sub_100026677+BC↑w
dword_100075D2C dd ?                    ; DATA XREF: -[SHIDBootHJZ EraseFlashPage:]+25↑w
                                        ; sub_100026677+C6↑r ...
xmmword_100075D30 xmmword ?             ; DATA XREF: -[SHIDBootHJZ startUpdate]+124↑w
                                        ; -[SHIDBootHJZ startUpdate]:loc_100026B9D↑r ...
xmmword_100075D40 xmmword ?             ; DATA XREF: -[SHIDBootHJZ startUpdate]+12B↑w
xmmword_100075D50 xmmword ?             ; DATA XREF: -[SHIDBootHJZ startUpdate]+132↑w
xmmword_100075D60 xmmword ?             ; DATA XREF: -[SHIDBootHJZ startUpdate]+139↑w
xmmword_100075D70 xmmword ?             ; DATA XREF: setReport3206+35↑w
                                        ; setReport3206+45↑w ...
xmmword_100075D80 xmmword ?             ; DATA XREF: setReport3206+8C↑r
                                        ; flashfirmware+10C↑r ...
xmmword_100075D90 xmmword ?             ; DATA XREF: setReport3206+81↑r
                                        ; flashfirmware+FE↑r ...
xmmword_100075DA0 xmmword ?             ; DATA XREF: setReport3206+BE↑w
                                        ; flashfirmware+144↑w ...
__common        ends

; ===========================================================================

; Segment type: Uninitialized
; Segment alignment 'qword' can not be represented in assembly
__bss           segment para public 'BSS' use64
                assume cs:__bss
                ;org 100075DB0h
                assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
; void *qword_100075DB0
qword_100075DB0 dq ?                    ; DATA XREF: sub_100006BBC+45↑r
                                        ; sub_100006BBC+7B↑r ...
qword_100075DB8 dq ?                    ; DATA XREF: +[S8BitdoDeviceDetailsTools load]+27↑r
                                        ; +[S8BitdoDeviceDetailsTools load]+2E↑w ...
qword_100075DC0 dq ?                    ; DATA XREF: +[SHIDBootPro2 allocWithZone:]+3A↑r
                                        ; +[SHIDBootPro2 allocWithZone:]:loc_10000899E↑o
qword_100075DC8 dq ?                    ; DATA XREF: +[SHIDBootPro2 allocWithZone:]:loc_10000898C↑r
                                        ; sub_1000089B0+2E↑r ...
qword_100075DD0 dq ?                    ; DATA XREF: +[UpDaterManager shared]:loc_10001A00B↑r
                                        ; sub_10001A023+20↑r ...
qword_100075DD8 dq ?                    ; DATA XREF: +[UpDaterManager shared]↑r
                                        ; sub_10002E9D0+4↑o
qword_100075DE0 dq ?                    ; DATA XREF: +[NSObject load]+2A↑r
                                        ; +[NSObject load]+31↑w ...
; void *qword_100075DE8
qword_100075DE8 dq ?                    ; DATA XREF: +[MJPropertyType initialize]+20↑r
                                        ; +[MJPropertyType initialize]+27↑w ...
byte_100075DF0  db ?                    ; DATA XREF: sub_100022AF0+2C↑r
                                        ; sub_100022C95+1E↑w
                align 4
byte_100075DF4  db ?                    ; DATA XREF: sub_100022AF0+48↑r
                                        ; sub_100022C95+24↑w
                align 8
byte_100075DF8  db ?                    ; DATA XREF: sub_100022AF0+6B↑r
                                        ; sub_100022C95+30↑w
                align 4
byte_100075DFC  db ?                    ; DATA XREF: sub_100022AF0+8A↑r
                                        ; sub_100022C95+2A↑w
                align 20h
byte_100075E00  db ?                    ; DATA XREF: sub_100022AF0+97↑r
                                        ; sub_100022C95+36↑w
                align 8
qword_100075E08 dq ?                    ; DATA XREF: +[SMainMenu getMoreMenuItemSelf]+4↑r
                                        ; +[SMainMenu setMoreMenuItemSelf:]+4↑o
qword_100075E10 dq ?                    ; DATA XREF: +[SMainMenu getMoreMenuItemAction]+4↑r
                                        ; +[SMainMenu setMoreMenuItemAction:]+4↑w
unk_100075E18   db    ? ;               ; DATA XREF: -[SHIDDinput init]+32↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
qword_100075E20 dq ?                    ; DATA XREF: +[SHIDBootHJZ allocWithZone:]+3A↑r
                                        ; +[SHIDBootHJZ allocWithZone:]:loc_100025E05↑o
qword_100075E28 dq ?                    ; DATA XREF: +[SHIDBootHJZ allocWithZone:]:loc_100025DF3↑r
                                        ; sub_100025E17+2E↑r ...
qword_100075E30 dq ?                    ; DATA XREF: +[NSObject load]_0+2D↑r
                                        ; +[NSObject load]_0+34↑w ...
qword_100075E38 dq ?                    ; DATA XREF: +[NSObject load]_0+5A↑r
                                        ; +[NSObject load]_0+61↑w ...
qword_100075E40 dq ?                    ; DATA XREF: +[NSObject load]_0+80↑r
                                        ; +[NSObject load]_0+87↑w ...
qword_100075E48 dq ?                    ; DATA XREF: +[NSObject load]_0+A6↑r
                                        ; +[NSObject load]_0+AD↑w ...
qword_100075E50 dq ?                    ; DATA XREF: +[NSObject load]_0+CC↑r
                                        ; +[NSObject load]_0+D3↑w ...
qword_100075E58 dq ?                    ; DATA XREF: +[NSObject load]_1+2D↑r
                                        ; +[NSObject load]_1+34↑w ...
qword_100075E60 dq ?                    ; DATA XREF: +[NSObject load]_1+5A↑r
                                        ; +[NSObject load]_1+61↑w ...
qword_100075E68 dq ?                    ; DATA XREF: +[NSObject load]_1+80↑r
                                        ; +[NSObject load]_1+87↑w ...
qword_100075E70 dq ?                    ; DATA XREF: +[NSObject load]_1+A6↑r
                                        ; +[NSObject load]_1+AD↑w ...
qword_100075E78 dq ?                    ; DATA XREF: +[SHIDHJZ allocWithZone:]+3A↑r
                                        ; +[SHIDHJZ allocWithZone:]:loc_10002D4EE↑o
qword_100075E80 dq ?                    ; DATA XREF: +[SHIDHJZ allocWithZone:]:loc_10002D4DC↑r
                                        ; sub_10002D500+2E↑r ...
qword_100075E88 dq ?                    ; DATA XREF: +[MJFoundation foundationClasses]↑r
                                        ; +[MJFoundation foundationClasses]+107↑r ...
; dispatch_once_t predicate
predicate       dq ?                    ; DATA XREF: sub_10002E340↑r
                                        ; sub_10002E3C0+82↑r ...
dword_100075E98 dd ?                    ; DATA XREF: sub_10002E340+A↑r
                                        ; sub_10002E340+56↑r ...
dword_100075E9C dd ?                    ; DATA XREF: sub_10002E340:loc_10002E360↑r
                                        ; sub_10002E3C0:loc_10002E45C↑r ...
dword_100075EA0 dd ?                    ; DATA XREF: sub_10002E340+31↑r
                                        ; sub_10002E3C0+A8↑r ...
                align 8
; dispatch_once_t qword_100075EA8
qword_100075EA8 dq ?                    ; DATA XREF: sub_10002E3C0+19↑r
                                        ; sub_10002E4D0+1D↑r ...
qword_100075EB0 dq ?                    ; DATA XREF: sub_10002E3C0+23↑r
                                        ; sub_10002E3C0+71↑r ...
__bss           ends

;
; Imports from @rpath/Sparkle.framework/Versions/B/Sparkle
;
; ===========================================================================

; Segment type: Externs
; UNDEF
                extrn _OBJC_CLASS_$_SPUStandardUpdaterController:qword
                                        ; DATA XREF: __objc_classrefs:classRef_SPUStandardUpdaterController↑o
;
; Imports from /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
;
                extrn __imp__IOHIDDeviceGetProperty:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDDeviceGetProperty_ptr↑o
                extrn __imp__IOHIDDeviceOpen:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDDeviceOpen_ptr↑o
                extrn __imp__IOHIDDeviceRegisterInputReportCallback:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDDeviceRegisterInputReportCallback_ptr↑o
                extrn __imp__IOHIDDeviceSetReport:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDDeviceSetReport_ptr↑o
                extrn __imp__IOHIDManagerCreate:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDManagerCreate_ptr↑o
                extrn __imp__IOHIDManagerOpen:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDManagerOpen_ptr↑o
                extrn __imp__IOHIDManagerRegisterDeviceMatchingCallback:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDManagerRegisterDeviceMatchingCallback_ptr↑o
                extrn __imp__IOHIDManagerRegisterDeviceRemovalCallback:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDManagerRegisterDeviceRemovalCallback_ptr↑o
                extrn __imp__IOHIDManagerScheduleWithRunLoop:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDManagerScheduleWithRunLoop_ptr↑o
                extrn __imp__IOHIDManagerSetDeviceMatchingMultiple:qword
                                        ; DATA XREF: __la_symbol_ptr:_IOHIDManagerSetDeviceMatchingMultiple_ptr↑o
;
; Imports from /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
;
                extrn _OBJC_CLASS_$_NSAttributedString:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSAttributedString↑o
                extrn _OBJC_CLASS_$_NSBundle:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSBundle↑o
                extrn _OBJC_CLASS_$_NSDecimalNumber:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSDecimalNumber↑o
                extrn _OBJC_CLASS_$_NSError:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSError↑o
                extrn _OBJC_CLASS_$_NSFileHandle:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSFileHandle↑o
                extrn _OBJC_CLASS_$_NSFileManager:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSFileManager↑o
                extrn _OBJC_CLASS_$_NSJSONSerialization:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSJSONSerialization↑o
                extrn _OBJC_CLASS_$_NSMutableString:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSMutableString↑o
                extrn _OBJC_CLASS_$_NSMutableURLRequest:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSMutableURLRequest↑o
                extrn _OBJC_CLASS_$_NSNotificationCenter:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSNotificationCenter↑o
                extrn _OBJC_CLASS_$_NSNumber:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSNumber↑o
                extrn _OBJC_CLASS_$_NSNumberFormatter:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSNumberFormatter↑o
                extrn _OBJC_CLASS_$_NSPipe:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSPipe↑o
                extrn _OBJC_CLASS_$_NSRegularExpression:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSRegularExpression↑o
                extrn _OBJC_CLASS_$_NSScanner:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSScanner↑o
                extrn _OBJC_CLASS_$_NSString:qword
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSString_$_MJExtension↑o
                                        ; __objc_classrefs:classRef_NSString↑o
                extrn _OBJC_CLASS_$_NSTask:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSTask↑o
                extrn _OBJC_CLASS_$_NSURLSession:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSURLSession↑o
                extrn _OBJC_CLASS_$_NSValue:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSValue↑o
                extrn __imp__NSClassFromString:qword
                                        ; DATA XREF: __la_symbol_ptr:_NSClassFromString_ptr↑o
                extrn __imp__NSLog:qword
                                        ; DATA XREF: __la_symbol_ptr:_NSLog_ptr↑o
                extrn __imp__NSSearchPathForDirectoriesInDomains:qword
                                        ; DATA XREF: __la_symbol_ptr:_NSSearchPathForDirectoriesInDomains_ptr↑o
                extrn __imp__NSStringFromClass:qword
                                        ; DATA XREF: __la_symbol_ptr:_NSStringFromClass_ptr↑o
                extrn __imp__NSStringFromRect:qword
                                        ; DATA XREF: __la_symbol_ptr:_NSStringFromRect_ptr↑o
;
; Imports from /usr/lib/libobjc.A.dylib
;
                extrn _OBJC_CLASS_$_NSObject:qword
                                        ; DATA XREF: __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValue↑o
                                        ; __objc_const:_OBJC_CATEGORY_NSObject_$_MJKeyValueDeprecated_v_2_5_16↑o ...
                extrn _OBJC_METACLASS_$_NSObject:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_S8BitdoDevice↑o
                                        ; __objc_data:_OBJC_METACLASS_$_SHttp↑o ...
                extrn ___objc_personality_v0:qword
                                        ; DATA XREF: __got:___objc_personality_v0_ptr↑o
                extrn __objc_empty_cache:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_S8BitdoDevice↑o
                                        ; __objc_data:_OBJC_CLASS_$_S8BitdoDevice↑o ...
; void *objc_msgSend(void *, const char *, ...)
                extrn _objc_msgSend:qword
                                        ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+45↑p
                                        ; +[S8BitdoDevice getNameWithPid:]+96↑p ...
                extrn _objc_release:qword
                                        ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+169↑p
                                        ; +[S8BitdoDevice getNameWithPid:]+16E↑p ...
                extrn _objc_retain:qword
                                        ; CODE XREF: +[S8BitdoDevice getNameWithPid:]+6F↑p
                                        ; -[S8BitdoDevice details]+80↑p ...
                extrn __imp__class_copyPropertyList:qword
                                        ; DATA XREF: __la_symbol_ptr:_class_copyPropertyList_ptr↑o
                extrn __imp__class_getSuperclass:qword
                                        ; DATA XREF: __la_symbol_ptr:_class_getSuperclass_ptr↑o
                extrn __imp__objc_alloc:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_alloc_ptr↑o
                extrn __imp__objc_autorelease:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_autorelease_ptr↑o
                extrn __imp__objc_autoreleaseReturnValue:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_autoreleaseReturnValue_ptr↑o
                extrn __imp__objc_begin_catch:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_begin_catch_ptr↑o
                extrn __imp__objc_destroyWeak:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_destroyWeak_ptr↑o
                extrn __imp__objc_end_catch:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_end_catch_ptr↑o
                extrn __imp__objc_enumerationMutation:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_enumerationMutation_ptr↑o
                extrn __imp__objc_getAssociatedObject:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_getAssociatedObject_ptr↑o
                extrn __imp__objc_getProperty:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_getProperty_ptr↑o
                extrn __imp__objc_loadWeak:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_loadWeak_ptr↑o
                extrn __imp__objc_loadWeakRetained:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_loadWeakRetained_ptr↑o
                extrn __imp__objc_msgSendSuper2:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_msgSendSuper2_ptr↑o
                extrn __imp__objc_msgSend_stret:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_msgSend_stret_ptr↑o
                extrn __imp__objc_retainAutorelease:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_retainAutorelease_ptr↑o
                extrn __imp__objc_retainAutoreleaseReturnValue:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_retainAutoreleaseReturnValue_ptr↑o
                extrn __imp__objc_retainAutoreleasedReturnValue:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_retainAutoreleasedReturnValue_ptr↑o
                extrn __imp__objc_retainBlock:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_retainBlock_ptr↑o
                extrn __imp__objc_setAssociatedObject:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_setAssociatedObject_ptr↑o
                extrn __imp__objc_setProperty_atomic:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_setProperty_atomic_ptr↑o
                extrn __imp__objc_setProperty_nonatomic_copy:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_setProperty_nonatomic_copy_ptr↑o
                extrn __imp__objc_storeStrong:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_storeStrong_ptr↑o
                extrn __imp__objc_storeWeak:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_storeWeak_ptr↑o
                extrn __imp__objc_sync_enter:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_sync_enter_ptr↑o
                extrn __imp__objc_sync_exit:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_sync_exit_ptr↑o
                extrn __imp__objc_unsafeClaimAutoreleasedReturnValue:qword
                                        ; DATA XREF: __la_symbol_ptr:_objc_unsafeClaimAutoreleasedReturnValue_ptr↑o
                extrn __imp__property_getAttributes:qword
                                        ; DATA XREF: __la_symbol_ptr:_property_getAttributes_ptr↑o
                extrn __imp__property_getName:qword
                                        ; DATA XREF: __la_symbol_ptr:_property_getName_ptr↑o
;
; Imports from /usr/lib/libSystem.B.dylib
;
; void *_NSConcreteGlobalBlock[32]
                extrn __NSConcreteGlobalBlock:qword
                                        ; DATA XREF: __const:off_10003A178↑o
                                        ; __const:off_10003A3E8↑o ...
; void *_NSConcreteStackBlock[32]
                extrn __NSConcreteStackBlock:qword
                                        ; DATA XREF: __got:__NSConcreteStackBlock_ptr↑o
                extrn ___stack_chk_guard:qword
                                        ; DATA XREF: __got:___stack_chk_guard_ptr↑o
                extrn __imp___availability_version_check:qword ; weak
                                        ; DATA XREF: __got:__imp___availability_version_check_ptr↑o
                                        ; __la_symbol_ptr:__availability_version_check_ptr↑o
; struct dispatch_queue_s _dispatch_main_q
                extrn __dispatch_main_q:qword
                                        ; DATA XREF: __got:__dispatch_main_q_ptr↑o
                extrn dyld_stub_binder:qword
                                        ; DATA XREF: __got:dyld_stub_binder_ptr↑o
                extrn __imp__CC_MD5:qword
                                        ; DATA XREF: __la_symbol_ptr:_CC_MD5_ptr↑o
; void __cdecl __Block_object_assign(void *, const void *, const int)
                extrn __imp___Block_object_assign:qword
                                        ; DATA XREF: __la_symbol_ptr:__Block_object_assign_ptr↑o
; void __cdecl __Block_object_dispose(const void *, const int)
                extrn __imp___Block_object_dispose:qword
                                        ; DATA XREF: __la_symbol_ptr:__Block_object_dispose_ptr↑o
                extrn __imp___Unwind_Resume:qword
                                        ; DATA XREF: __la_symbol_ptr:__Unwind_Resume_ptr↑o
; void __cdecl __noreturn ___assert_rtn(const char *, const char *, int, const char *)
                extrn __imp____assert_rtn:qword
                                        ; DATA XREF: __la_symbol_ptr:___assert_rtn_ptr↑o
                extrn __imp____memcpy_chk:qword
                                        ; DATA XREF: __la_symbol_ptr:___memcpy_chk_ptr↑o
                extrn __imp____stack_chk_fail:qword
                                        ; DATA XREF: __la_symbol_ptr:___stack_chk_fail_ptr↑o
                extrn __imp__dispatch_after:qword
                                        ; DATA XREF: __la_symbol_ptr:_dispatch_after_ptr↑o
                extrn __imp__dispatch_async:qword
                                        ; DATA XREF: __la_symbol_ptr:_dispatch_async_ptr↑o
                extrn __imp__dispatch_once:qword
                                        ; DATA XREF: __la_symbol_ptr:_dispatch_once_ptr↑o
; void __cdecl _dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
                extrn __imp__dispatch_once_f:qword ; weak
                                        ; DATA XREF: __la_symbol_ptr:_dispatch_once_f_ptr↑o
                extrn __imp__dispatch_sync:qword
                                        ; DATA XREF: __la_symbol_ptr:_dispatch_sync_ptr↑o
; dispatch_time_t __cdecl _dispatch_time(dispatch_time_t when, int64_t delta)
                extrn __imp__dispatch_time:qword
                                        ; DATA XREF: __la_symbol_ptr:_dispatch_time_ptr↑o
; void *__cdecl _dlsym(void *handle, const char *symbol)
                extrn __imp__dlsym:qword
                                        ; DATA XREF: __la_symbol_ptr:_dlsym_ptr↑o
; void __cdecl __noreturn _exit(int)
                extrn __imp__exit:qword ; DATA XREF: __la_symbol_ptr:_exit_ptr↑o
; int __cdecl _fclose(FILE *)
                extrn __imp__fclose:qword
                                        ; DATA XREF: __la_symbol_ptr:_fclose_ptr↑o
; FILE *__cdecl _fopen(const char *, const char *)
                extrn __imp__fopen:qword
                                        ; DATA XREF: __la_symbol_ptr:_fopen_ptr↑o
; size_t __cdecl _fread(void *, size_t, size_t, FILE *)
                extrn __imp__fread:qword
                                        ; DATA XREF: __la_symbol_ptr:_fread_ptr↑o
; void __cdecl _free(void *)
                extrn __imp__free:qword ; DATA XREF: __la_symbol_ptr:_free_ptr↑o
; int __cdecl _fseek(FILE *, __int64, int)
                extrn __imp__fseek:qword
                                        ; DATA XREF: __la_symbol_ptr:_fseek_ptr↑o
; __int64 __cdecl _ftell(FILE *)
                extrn __imp__ftell:qword
                                        ; DATA XREF: __la_symbol_ptr:_ftell_ptr↑o
; void *__cdecl _malloc(size_t)
                extrn __imp__malloc:qword
                                        ; DATA XREF: __la_symbol_ptr:_malloc_ptr↑o
; void *__cdecl _memcpy(void *, const void *, size_t)
                extrn __imp__memcpy:qword
                                        ; DATA XREF: __la_symbol_ptr:_memcpy_ptr↑o
; int _printf(const char *, ...)
                extrn __imp__printf:qword
                                        ; DATA XREF: __la_symbol_ptr:_printf_ptr↑o
; int __cdecl _putchar(int)
                extrn __imp__putchar:qword
                                        ; DATA XREF: __la_symbol_ptr:_putchar_ptr↑o
; int __cdecl _puts(const char *)
                extrn __imp__puts:qword ; DATA XREF: __la_symbol_ptr:_puts_ptr↑o
; void __cdecl _rewind(FILE *)
                extrn __imp__rewind:qword
                                        ; DATA XREF: __la_symbol_ptr:_rewind_ptr↑o
; int _sscanf(const char *, const char *, ...)
                extrn __imp__sscanf:qword
                                        ; DATA XREF: __la_symbol_ptr:_sscanf_ptr↑o
; size_t __cdecl _strlen(const char *)
                extrn __imp__strlen:qword
                                        ; DATA XREF: __la_symbol_ptr:_strlen_ptr↑o
;
; Imports from /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
;
                extrn _NSApp:qword      ; DATA XREF: __got:_NSApp_ptr↑o
                extrn _NSFontAttributeName:qword
                                        ; DATA XREF: __got:_NSFontAttributeName_ptr↑o
                extrn _NSForegroundColorAttributeName:qword
                                        ; DATA XREF: __got:_NSForegroundColorAttributeName_ptr↑o
                extrn _NSParagraphStyleAttributeName:qword
                                        ; DATA XREF: __got:_NSParagraphStyleAttributeName_ptr↑o
                extrn _NSWindowWillCloseNotification:qword
                                        ; DATA XREF: __got:_NSWindowWillCloseNotification_ptr↑o
                extrn _OBJC_CLASS_$_NSAlert:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSAlert↑o
                extrn _OBJC_CLASS_$_NSApplication:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSApplication↑o
                extrn _OBJC_CLASS_$_NSButton:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSButton↑o
                                        ; __objc_data:_OBJC_CLASS_$_SBackButton↑o ...
                extrn _OBJC_CLASS_$_NSColor:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSColor↑o
                extrn _OBJC_CLASS_$_NSFont:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSFont↑o
                extrn _OBJC_CLASS_$_NSImage:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSImage↑o
                extrn _OBJC_CLASS_$_NSImageView:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSImageView↑o
                                        ; __objc_data:_OBJC_CLASS_$_SMiniImageView↑o
                extrn _OBJC_CLASS_$_NSMutableParagraphStyle:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSMutableParagraphStyle↑o
                extrn _OBJC_CLASS_$_NSProgressIndicator:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSProgressIndicator↑o
                extrn _OBJC_CLASS_$_NSScrollView:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSScrollView↑o
                extrn _OBJC_CLASS_$_NSTextField:qword
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_SLabel↑o
                extrn _OBJC_CLASS_$_NSTextView:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSTextView↑o
                extrn _OBJC_CLASS_$_NSTrackingArea:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSTrackingArea↑o
                extrn _OBJC_CLASS_$_NSView:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSView↑o
                                        ; __objc_data:_OBJC_CLASS_$_SView↑o ...
                extrn _OBJC_CLASS_$_NSViewController:qword
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_ViewController↑o
                extrn _OBJC_CLASS_$_NSWindowController:qword
                                        ; DATA XREF: __objc_data:_OBJC_CLASS_$_FirmwaerUpdateLog↑o
                extrn _OBJC_METACLASS_$_NSButton:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SBackButton↑o
                                        ; __objc_data:_OBJC_METACLASS_$_SButton↑o
                extrn _OBJC_METACLASS_$_NSImageView:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SMiniImageView↑o
                extrn _OBJC_METACLASS_$_NSTextField:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SLabel↑o
                extrn _OBJC_METACLASS_$_NSView:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_SView↑o
                                        ; __objc_data:_OBJC_METACLASS_$_HomeView↑o
                extrn _OBJC_METACLASS_$_NSViewController:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_ViewController↑o
                extrn _OBJC_METACLASS_$_NSWindowController:qword
                                        ; DATA XREF: __objc_data:_OBJC_METACLASS_$_FirmwaerUpdateLog↑o
                extrn __imp__NSApplicationMain:qword
                                        ; DATA XREF: __la_symbol_ptr:_NSApplicationMain_ptr↑o
                extrn __imp__NSRectFill:qword
                                        ; DATA XREF: __la_symbol_ptr:_NSRectFill_ptr↑o
;
; Imports from /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
;
                extrn _OBJC_CLASS_$_NSEntityDescription:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSEntityDescription↑o
                extrn _OBJC_CLASS_$_NSManagedObject:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSManagedObject↑o
;
; Imports from /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
;
                extrn _NSDefaultRunLoopMode:qword
                                        ; DATA XREF: __got:_NSDefaultRunLoopMode_ptr↑o
                extrn _OBJC_CLASS_$_NSArray:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSArray↑o
                extrn _OBJC_CLASS_$_NSData:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSData↑o
                extrn _OBJC_CLASS_$_NSDate:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSDate↑o
                extrn _OBJC_CLASS_$_NSDictionary:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSDictionary↑o
                extrn _OBJC_CLASS_$_NSInputStream:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSInputStream↑o
                extrn _OBJC_CLASS_$_NSLocale:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSLocale↑o
                extrn _OBJC_CLASS_$_NSMutableArray:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSMutableArray↑o
                extrn _OBJC_CLASS_$_NSMutableData:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSMutableData↑o
                extrn _OBJC_CLASS_$_NSMutableDictionary:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSMutableDictionary↑o
                extrn _OBJC_CLASS_$_NSNull:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSNull↑o
                extrn _OBJC_CLASS_$_NSRunLoop:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSRunLoop↑o
                extrn _OBJC_CLASS_$_NSSet:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSSet↑o
                extrn _OBJC_CLASS_$_NSTimer:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSTimer↑o
                extrn _OBJC_CLASS_$_NSURL:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSURL↑o
                extrn _OBJC_CLASS_$_NSUserDefaults:qword
                                        ; DATA XREF: __objc_classrefs:classRef_NSUserDefaults↑o
                extrn _OBJC_EHTYPE_$_NSException:qword
                                        ; DATA XREF: __got:_OBJC_EHTYPE_$_NSException_ptr↑o
                extrn ___CFConstantStringClassReference:qword
                                        ; DATA XREF: __cfstring:stru_10003A8B8↑o
                                        ; __cfstring:cfstr_ProController↑o ...
                extrn _kCFAllocatorDefault:qword
                                        ; DATA XREF: __got:_kCFAllocatorDefault_ptr↑o
                extrn _kCFRunLoopDefaultMode:qword
                                        ; DATA XREF: __got:_kCFRunLoopDefaultMode_ptr↑o
                extrn __imp__CFBundleGetVersionNumber:qword
                                        ; DATA XREF: __la_symbol_ptr:_CFBundleGetVersionNumber_ptr↑o
                extrn __imp__CFGetTypeID:qword
                                        ; DATA XREF: __la_symbol_ptr:_CFGetTypeID_ptr↑o
                extrn __imp__CFNumberGetTypeID:qword
                                        ; DATA XREF: __la_symbol_ptr:_CFNumberGetTypeID_ptr↑o
                extrn __imp__CFNumberGetValue:qword
                                        ; DATA XREF: __la_symbol_ptr:_CFNumberGetValue_ptr↑o
                extrn __imp__CFRunLoopGetCurrent:qword
                                        ; DATA XREF: __la_symbol_ptr:_CFRunLoopGetCurrent_ptr↑o
                extrn __imp__CFURLCreateStringByAddingPercentEscapes:qword
                                        ; DATA XREF: __la_symbol_ptr:_CFURLCreateStringByAddingPercentEscapes_ptr↑o
;
; Imports from /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
;
                extrn __imp__CGRectGetMaxX:qword
                                        ; DATA XREF: __la_symbol_ptr:_CGRectGetMaxX_ptr↑o
                extrn __imp__CGRectGetMaxY:qword
                                        ; DATA XREF: __la_symbol_ptr:_CGRectGetMaxY_ptr↑o


                end start
